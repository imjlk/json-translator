{
    "servers": [
        {
            "description": "Production Server",
            "url": "https://studio-connector-api.wrtn.ai"
        },
        {
            "description": "Develop Server",
            "url": "https://studio-connector-poc.dev.wrtn.club"
        },
        {
            "description": "Local Server",
            "url": "http://localhost:3003"
        }
    ],
    "info": {
        "description": "wrtn-ecosystem connectors and sdk",
        "license": {
            "name": "AGPL-3.0-only"
        },
        "title": "@wrtn/connector",
        "version": "0.1.284"
    },
    "paths": {
        "/_health": {
            "get": {
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "description": "health check port",
                "tags": []
            }
        },
        "/workflow/run": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IRunWorkflowInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IRunWorkflowOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "description": "Run workflow",
                "tags": []
            }
        },
        "/workflow/run/{workflowRunId}": {
            "get": {
                "parameters": [
                    {
                        "name": "workflowRunId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IWorkflowRunStatus"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "description": "Return status of one workflow run",
                "tags": []
            }
        },
        "/workflow/runs": {
            "get": {
                "parameters": [
                    {
                        "name": "workflowId",
                        "required": false,
                        "title": "Workflow id",
                        "description": "If not specified, returns all runs.",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGetWorkflowRunsOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "description": "Return all workflow run information",
                "tags": []
            }
        },
        "/connector/extract/keyword": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/keyword.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IKeywordExtraction.IExtractKeywordInput"
                            }
                        }
                    },
                    "description": "Input for keyword extraction",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IKeywordExtraction.IExtractKeywordOutput"
                                }
                            }
                        },
                        "description": "Extracted keywords"
                    }
                },
                "summary": "Keyword extraction",
                "description": "Extracts keywords highly related to the given input\n\nA connector used when generating marketing copy.",
                "tags": []
            }
        },
        "/connector/rank/rank": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Sort_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IRanker.IRankInput"
                            }
                        }
                    },
                    "description": "Candidate information to sort",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IRanker.IRankOutput"
                                }
                            }
                        },
                        "description": "Array of indices of sorted candidates"
                    }
                },
                "summary": "Sort by condition",
                "description": "Sorts the given array of items in order of highest score",
                "tags": [],
                "deprecated": true
            }
        },
        "/connector/marketing-copy/generate-copy": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Marketing_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IMarketingCopyGenerator.IGenerateMarketingCopyInput"
                            }
                        }
                    },
                    "description": "Input for generating marketing copy",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.MyPartialIMarketingCopyComponents"
                                }
                            }
                        },
                        "description": "Generated marketing copy"
                    }
                },
                "summary": "Generate marketing copy",
                "description": "Generates marketing copy from given input",
                "tags": []
            }
        },
        "/connector/marketing-copy/generate-copy-image": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Marketing_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IMarketingCopyGenerator.IGenerateMarketingCopyImageInput"
                            }
                        }
                    },
                    "description": "Input for generating a marketing copy image",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IMarketingCopyImage"
                                }
                            }
                        },
                        "description": "Generated marketing copy image"
                    }
                },
                "summary": "Generate a marketing copy image",
                "description": "Generates a marketing copy image from the given input",
                "tags": []
            }
        },
        "/connector/aws/file/upload-url": {
            "get": {
                "parameters": [
                    {
                        "name": "extension",
                        "required": true,
                        "title": "File extension",
                        "description": "File extension.",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IAws.IGetPutObjectUrlOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Generate File Upload URL",
                "description": "Generate the URL required to upload a file",
                "tags": []
            }
        },
        "/connector/student-report-generator": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/StudentRecord_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IStudentReportGeneratorRequest"
                            }
                        }
                    },
                    "description": "Information for creating a student life record",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IStudentReportGeneratorResponse"
                                }
                            }
                        },
                        "description": "The created student life record"
                    }
                },
                "summary": "Create a student life record",
                "description": "Create a student life record based on the entered information",
                "tags": []
            }
        },
        "/connector/student-report-generator/row": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/StudentRecord_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IStudentReportRowGeneratorRequest"
                            }
                        }
                    },
                    "description": "Information for creating a student life record",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IStudentReportRowGeneratorResponse"
                                }
                            }
                        },
                        "description": "The created student life record"
                    }
                },
                "summary": "Create a student life record",
                "description": "Create a student life record based on the entered information",
                "tags": []
            }
        },
        "/connector/rag/analyze": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/RAG_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IRag.IAnalyzeInput"
                            }
                        }
                    },
                    "description": "Information about the file to be analyzed",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IRag.IAnalysisOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Request RAG analysis",
                "description": "Request RAG analysis for the input file\n\nThis connector can be used when creating a chatbot that compares multiple research papers.",
                "tags": [
                    "RAG"
                ]
            }
        },
        "/connector/rag/{jobId}/status": {
            "get": {
                "parameters": [
                    {
                        "name": "jobId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IRag.IStatusOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Check RAG analysis status",
                "description": "Check the analysis progress status",
                "tags": [
                    "RAG"
                ]
            }
        },
        "/connector/rag/generate/{chatId}": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/RAG_full.svg",
                "parameters": [
                    {
                        "name": "chatId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IRag.IGenerateInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IRag.IGenerateOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Generate RAG-based results",
                "description": "Generates requested results based on RAG analysis\n\nA connector that can be used to generate answers to user questions through a chatbot that compares multiple research papers.",
                "tags": [
                    "RAG"
                ]
            }
        },
        "/connector/hwp/parse": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/HWP_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IHwp.IParseInput"
                            }
                        }
                    },
                    "description": "The hwp file to parse",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IHwp.IParseOutput"
                                }
                            }
                        },
                        "description": "The parsed hwp file text data."
                    }
                },
                "summary": "Parse the Hwp file",
                "description": "Parse the hwp file",
                "tags": [
                    "Hwp"
                ]
            }
        },
        "/connector/excel/read/headers": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/light/excel.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IExcel.IReadExcelInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Get the headers in the Excel file",
                "description": "Based on the input file information, the headers of the corresponding Excel file are retrieved",
                "tags": [
                    "Excel"
                ]
            }
        },
        "/connector/excel/read": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/light/excel.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IExcel.IReadExcelInput"
                            }
                        }
                    },
                    "description": "Information on the Excel file to get the contents",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IExcel.IReadExcelOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Get the contents of the Excel file",
                "description": "Get the contents of the corresponding Excel file based on the input file information",
                "tags": [
                    "Excel"
                ]
            }
        },
        "/connector/excel/worksheet": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/light/excel.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IExcel.IGetWorksheetListInput"
                            }
                        }
                    },
                    "description": "The url of the Excel file from which to get the list of worksheets",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IExcel.IWorksheetListOutput"
                                }
                            }
                        },
                        "description": "A list of Excel worksheets."
                    }
                },
                "summary": "Get a list of Excel worksheets",
                "description": "Get a list of Excel worksheets that exist in the input file url",
                "tags": [
                    "Excel"
                ]
            }
        },
        "/connector/excel/rows/upload": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/light/excel.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IExcel.IInsertExcelRowByUploadInput"
                            }
                        }
                    },
                    "description": "Information for adding new data to Excel files",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IExcel.IExportExcelFileOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Create Excel and add data by uploading Excel files",
                "description": "Upload an Excel file to add data to the file\n\nWhen adding data to Excel, sheet creation precedes if it is a sheet that does not exist yet.\nTherefore, this feature can also be used for sheet creation.\nIf you want to create a sheet only and create an empty file without any data,\nyou just need to specify the name of the sheet without any data.\n\nWhen adding rows to an already existing sheet,\nit is supposed to be added to the lower line, so it is recommended to check the data before adding it.\nIf you provide fileUrl, you can modify it after you work on it. After modification, the file will be issued as a new link.\n\nIt is a connector that allows users to upload files by drag and drop.",
                "tags": [
                    "Excel"
                ]
            }
        },
        "/connector/excel/rows": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/light/excel.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IExcel.IInsertExcelRowInput"
                            }
                        }
                    },
                    "description": "엑셀 파일에 새로운 데이터를 추가 하기 위한 정보",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IExcel.IExportExcelFileOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "엑셀 파일 링크를 가지고 액셀 생성 및 데이터 추가",
                "description": "Add data to the Excel file with an Excel file link\n\nWhen adding data to Excel, sheet creation precedes if it is a sheet that does not exist yet.\nTherefore, this feature can also be used for sheet creation.\nIf you want to create a sheet only and create an empty file without any data,\nyou just need to specify the name of the sheet without any data.\n\nWhen adding rows to an already existing sheet,\nit is supposed to be added to the lower line, so it is recommended to check the data before adding it.\nIf you provide fileUrl, you can modify it after you work on it. After modification, the file will be issued as a new link.\n\nA connector that allows you to update a file without uploading it if you know the link to the file in the previous utterance, or if you receive a file link in the utterance from the user.\n\nSince a link to the Excel file generated immediately after the Excel file is generated, calling this connector is more advantageous in terms of user experience than adding data through upload.",
                "tags": [
                    "Excel"
                ]
            }
        },
        "/connector/excel": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/light/excel.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IExcel.ICreateSheetInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IExcel.IExportExcelFileOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Add Excel files and sheet",
                "description": "Add Excel files and sheet\n\nCreate an Excel file and get the link back.\nYou can also forward this link to the following connector to reflect further modifications.\nWhen creating a sheet with this feature, the default name 'Sheet1' is created if the sheet name is not provided.",
                "tags": [
                    "Excel"
                ],
                "deprecated": true
            }
        },
        "/connector/google-docs": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Google+Docs_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleDocs.ICreateGoogleDocsInput"
                            }
                        }
                    },
                    "description": "Title of Google Docs to generate",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleDocs.ICreateGoogleDocsOutput"
                                }
                            }
                        },
                        "description": "Unique ID of generated Google Docs"
                    }
                },
                "summary": "Generate Google Docs",
                "description": "Generate Google Docs",
                "tags": [
                    "Google Docs"
                ]
            }
        },
        "/connector/google-docs/permission": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Google+Docs_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleDocs.IPermissionGoogleDocsInput"
                            }
                        }
                    },
                    "description": "Information for granting permission to Google Docs",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Grant permission to Google Docs",
                "description": "Grant permission to Google Docs",
                "tags": [
                    "Google Docs"
                ]
            }
        },
        "/connector/google-docs/get/{id}": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Google+Docs_full.svg",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "description": " Google Docs unique ID",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].{value: id, label: title || ''}",
                                "method": "post",
                                "path": "/connector/google-docs/get-list"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleDocs.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleDocs.IReadGoogleDocsOutput"
                                }
                            }
                        },
                        "description": "Google Docs contents"
                    }
                },
                "summary": "Read Google Docs",
                "description": "Read the contents of Google Docs",
                "tags": [
                    "Google Docs"
                ]
            }
        },
        "/connector/google-docs/template": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Google+Docs_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleDocs.ICreateDocByTemplateInput"
                            }
                        }
                    },
                    "description": "Links to Google Docs to copy and titles of Google Docs to create",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleDocs.ICreateDocByTemplateOutput"
                                }
                            }
                        },
                        "description": "Unique ID of the generated Google Docs"
                    }
                },
                "summary": "Copy Google Docs",
                "description": "Create new Google Docs by copying existing Google Docs",
                "tags": [
                    "Google Docs"
                ]
            }
        },
        "/connector/google-docs/{id}": {
            "delete": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Google+Docs_full.svg",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "description": " Unique ID of the Google Docs to delete",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].{value: id, label: title || ''}",
                                "method": "post",
                                "path": "/connector/google-docs/get-list"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleDocs.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Delete Google Docs",
                "description": "Delete Google Docs",
                "tags": [
                    "Google Docs"
                ]
            }
        },
        "/connector/google-docs/get-list": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Google+Docs_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleDocs.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleDocs.IListGoogleDocsOutput"
                                }
                            }
                        },
                        "description": "a list of Google Docs"
                    }
                },
                "summary": "Get a list of Google Docs",
                "description": "Get a list of Google Docs",
                "tags": [
                    "Google Docs"
                ]
            }
        },
        "/connector/google-docs/append": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Google+Docs_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleDocs.IAppendTextGoogleDocsInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Add text to Google Docs",
                "description": "Add text to Google Docs",
                "tags": [
                    "Google Docs"
                ]
            }
        },
        "/internal/google": {
            "get": {
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "description": "Request to reissue Google access token",
                "tags": []
            }
        },
        "/connector/google-sheet": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleSheet_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSheet.IReadGoogleSheetHeadersInput"
                            }
                        }
                    },
                    "description": "Google Sheet URL and the header index to get",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSheet.IReadGoogleSheetOutput"
                                }
                            }
                        },
                        "description": "Google Sheet header information"
                    }
                },
                "summary": "Get the header information of a Google Sheet",
                "description": "Get the header information of a Google Sheet",
                "tags": [
                    "Google Sheet"
                ]
            }
        },
        "/connector/google-sheet/append": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleSheet_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSheet.IAppendToSheetInput"
                            }
                        }
                    },
                    "description": "Information to add content",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Add content to Google Sheets",
                "description": "Add content to Google Sheets",
                "tags": [
                    "Google Sheet"
                ]
            }
        },
        "/connector/google-sheet/create": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleSheet_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSheet.ICreateGoogleSheetInput"
                            }
                        }
                    },
                    "description": "The title of the sheet to be created",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSheet.ICreateGoogleSheetOutput"
                                }
                            }
                        },
                        "description": "The created sheet id and Url"
                    }
                },
                "summary": "Create a Google Sheet",
                "description": "Create a Google Sheet\n\nThe created sheet will be created in the Google Drive root path.",
                "tags": [
                    "Google Sheet"
                ]
            }
        },
        "/connector/google-sheet/permission": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleSheet_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSheet.IPermissionInput"
                            }
                        }
                    },
                    "description": "Information for granting permissions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Grant permissions to Google Sheets",
                "description": "Grant permissions to Google Sheets",
                "tags": [
                    "Google Sheet"
                ]
            }
        },
        "/connector/google-sheet/header": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleSheet_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSheet.IWriteGoogleSheetHeadersInput"
                            }
                        }
                    },
                    "description": "The Google Sheet url and the header name to add",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Add a Google Sheet header",
                "description": "Add a header to a Google Sheet",
                "tags": [
                    "Google Sheet"
                ]
            }
        },
        "/connector/google-sheet/worksheet": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleSheet_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSheet.IGetWorkSheetInput"
                            }
                        }
                    },
                    "description": "The Google Sheets url to get the list of worksheets",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSheet.IGetWorkSheetOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Get a list of Google Sheets Worksheets",
                "description": "Get a list of Google Worksheets",
                "tags": [
                    "Google Sheet"
                ]
            }
        },
        "/connector/google-sheet/get-rows": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleSheet_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSheet.IReadGoogleSheetRowsInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSheet.IReadGoogleSheetRowsOutput"
                                }
                            }
                        },
                        "description": "Row information from Google Sheets"
                    }
                },
                "summary": "Get Row information from Google Sheets",
                "description": "Get Row information from Google Sheets",
                "tags": [
                    "Google Sheet"
                ]
            }
        },
        "/connector/google-calendar/get-list": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleCal_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.IGoogleCalendarOutput"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "A list of Google Calendars"
                    }
                },
                "summary": "Get a list of Google Calendars",
                "description": "Get a list of Google Calendars",
                "tags": [
                    "Google Calendar"
                ]
            }
        },
        "/connector/google-calendar": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleCal_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.ICreateCalendarInput"
                            }
                        }
                    },
                    "description": "The title of the calendar to be created",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.IGoogleCalendarOutput"
                                }
                            }
                        },
                        "description": "The unique ID of the calendar and the title of the calendar"
                    }
                },
                "summary": "Create a Google Calendar",
                "description": "Create a Google Calendar",
                "tags": [
                    "Google Calendar"
                ]
            }
        },
        "/connector/google-calendar/{calendarId}": {
            "delete": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleCal_full.svg",
                "parameters": [
                    {
                        "name": "calendarId",
                        "required": true,
                        "description": " The unique ID of the calendar to delete",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].{value:id, label:summary || ''}",
                                "method": "post",
                                "path": "/connector/google-calendar/get-list"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Delete a Google Calendar",
                "description": "Delete a calendar",
                "tags": [
                    "Google Calendar"
                ]
            }
        },
        "/connector/google-calendar/{calendarId}/get-events": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleCal_full.svg",
                "parameters": [
                    {
                        "name": "calendarId",
                        "required": true,
                        "description": " Unique ID of the calendar to get the list of events",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].{value:id, label:summary || ''}",
                                "method": "post",
                                "path": "/connector/google-calendar/get-list"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.IReadGoogleCalendarEventInput"
                            }
                        }
                    },
                    "description": "Condition to get the list of events",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.IReadGoogleCalendarEventOutput"
                                }
                            }
                        },
                        "description": "A list of Google Calendar events"
                    }
                },
                "summary": "Get a list of Google Calendar events",
                "description": "Get a list of events in Google Calendar",
                "tags": [
                    "Google Calendar"
                ]
            }
        },
        "/connector/google-calendar/{calendarId}/quick-event": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleCal_full.svg",
                "parameters": [
                    {
                        "name": "calendarId",
                        "required": true,
                        "description": " Unique ID of the calendar to add the event to",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].{value:id, label:summary || ''}",
                                "method": "post",
                                "path": "/connector/google-calendar/get-list"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.ICreateQuickEventInput"
                            }
                        }
                    },
                    "description": "Unique ID of the calendar to add the event to, and the event name",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Add a quick event to Google Calendar",
                "description": "Add a quick event to Google Calendar",
                "tags": [
                    "Google Calendar"
                ]
            }
        },
        "/connector/google-calendar/{calendarId}/event": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleCal_full.svg",
                "parameters": [
                    {
                        "name": "calendarId",
                        "required": true,
                        "description": " Unique ID of the calendar to add the event to",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].{value:id, label:summary || ''}",
                                "method": "post",
                                "path": "/connector/google-calendar/get-list"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.IEventRequestBodyInput"
                            }
                        }
                    },
                    "description": "Information for adding the event",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.IGoogleCalendarEvent"
                                }
                            }
                        },
                        "description": "Information about the added event"
                    }
                },
                "summary": "Add a Google Calendar event",
                "description": "Add an event to Google Calendar",
                "tags": [
                    "Google Calendar"
                ]
            }
        },
        "/connector/google-calendar/{calendarId}/event/{eventId}": {
            "put": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleCal_full.svg",
                "parameters": [
                    {
                        "name": "calendarId",
                        "required": true,
                        "description": " Unique ID of the calendar that contains the event",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].{value:id, label:summary || ''}",
                                "method": "post",
                                "path": "/connector/google-calendar/get-list"
                            },
                            "type": "string"
                        }
                    },
                    {
                        "name": "eventId",
                        "required": true,
                        "description": " Unique ID of the event to modify",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].{value: id, label: title || ''}",
                                "method": "post",
                                "path": "/connector/google-calendar/{calendarId}/get-events"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.IEventRequestBodyInput"
                            }
                        }
                    },
                    "description": "The event information to update",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.IGoogleCalendarEvent"
                                }
                            }
                        },
                        "description": "The updated event information"
                    }
                },
                "summary": "Modify a Google Calendar event",
                "description": "Modify an event",
                "tags": [
                    "Google Calendar"
                ]
            },
            "delete": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleCal_full.svg",
                "parameters": [
                    {
                        "name": "calendarId",
                        "required": true,
                        "description": " The unique ID of the calendar that contains the event",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].{value:id, label:summary || ''}",
                                "method": "post",
                                "path": "/connector/google-calendar/get-list"
                            },
                            "type": "string"
                        }
                    },
                    {
                        "name": "eventId",
                        "required": true,
                        "description": " The unique ID of the event to delete",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].{value: id, label: title || ''}",
                                "method": "post",
                                "path": "/connector/google-calendar/{calendarId}/get-events"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Delete a Google Calendar event",
                "description": "Delete an event",
                "tags": [
                    "Google Calendar"
                ]
            }
        },
        "/connector/google-calendar/{calendarId}/event/{eventId}/attendees": {
            "put": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleCal_full.svg",
                "parameters": [
                    {
                        "name": "calendarId",
                        "required": true,
                        "description": " Unique ID of the calendar where the event is",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].{value:id, label:summary || ''}",
                                "method": "post",
                                "path": "/connector/google-calendar/get-list"
                            },
                            "type": "string"
                        }
                    },
                    {
                        "name": "eventId",
                        "required": true,
                        "description": " Unique ID of the event to add attendees to",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].{value: id, label: title || ''}",
                                "method": "post",
                                "path": "/connector/google-calendar/{calendarId}/get-events"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.IAddAttendeesToEventInput"
                            }
                        }
                    },
                    "description": "List of email addresses of attendees to add",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.IGoogleCalendarEvent"
                                }
                            }
                        },
                        "description": "Event information with attendees added"
                    }
                },
                "summary": "Add attendees to a Google Calendar event",
                "description": "Add attendees to an event",
                "tags": [
                    "Google Calendar"
                ]
            }
        },
        "/connector/google-drive/get/folders": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleDrive_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleDrive.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleDrive.IFolderListGoogleDriveOutput"
                                }
                            }
                        },
                        "description": "A list of Google Drive folders"
                    }
                },
                "summary": "Get a list of Google Drive folders",
                "description": "Get a list of folders in Google Drive",
                "tags": [
                    "Google Drive"
                ]
            }
        },
        "/connector/google-drive/get/files": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleDrive_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleDrive.IFileListGoogleDriveInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleDrive.IFileListGoogleDriveOutput"
                                }
                            }
                        },
                        "description": "A list of Google Drive files"
                    }
                },
                "summary": "Get a list of Google Drive files",
                "description": "Get a list of files in Google Drive",
                "tags": [
                    "Google Drive"
                ]
            }
        },
        "/connector/google-drive/folder": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleDrive_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleDrive.ICreateFolderGoogleDriveInput"
                            }
                        }
                    },
                    "description": "The name of the folder to be created",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleDrive.ICreateFolderGoogleDriveOutput"
                                }
                            }
                        },
                        "description": "The unique ID of the created folder"
                    }
                },
                "summary": "Create a Google Drive folder",
                "description": "Create a new folder in Google Drive",
                "tags": [
                    "Google Drive"
                ]
            }
        },
        "/connector/google-drive/file": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleDrive_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleDrive.IUploadFileInput"
                            }
                        }
                    },
                    "description": "The name of the file to be created and the unique ID of the folder where the file will be created",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleDrive.ICreateFileGoogleDriveOutput"
                                }
                            }
                        },
                        "description": "The unique ID of the created file"
                    }
                },
                "summary": "Create a Google Drive file",
                "description": "Create a new file in Google Drive",
                "tags": [
                    "Google Drive"
                ]
            }
        },
        "/connector/google-drive/file/{id}": {
            "delete": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleDrive_full.svg",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "description": " The unique ID of the file to be deleted",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "data[].{value: id || '', label: name || ''}",
                                "method": "post",
                                "path": "/connector/google-drive/get/files"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleDrive.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Delete a Google Drive file",
                "description": "Delete a file in Google Drive",
                "tags": [
                    "Google Drive"
                ]
            }
        },
        "/connector/google-drive/folder/{id}": {
            "delete": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleDrive_full.svg",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "description": " The unique ID of the folder to be deleted",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "data[].{value: id || '', label: name || ''}",
                                "method": "post",
                                "path": "/connector/google-drive/get/folders"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleDrive.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Delete a Google Drive folder",
                "description": "Delete a folder in Google Drive",
                "tags": [
                    "Google Drive"
                ]
            }
        },
        "/connector/google-drive/permission": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleDrive_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleDrive.IPermissionGoogleDriveInput"
                            }
                        }
                    },
                    "description": "Information for granting permission",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Grant Google Drive permission",
                "description": "Grants permission to access a file or folder",
                "tags": [
                    "Google Drive"
                ]
            }
        },
        "/connector/google-drive/get/file/{id}": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleDrive_full.svg",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "description": " Unique ID of the file",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "data[].{value: id || '', label: name || ''}",
                                "method": "post",
                                "path": "/connector/google-drive/get/files"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleDrive.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleDrive.IGetFileOutput"
                                }
                            }
                        },
                        "description": "The text content of the file"
                    }
                },
                "summary": "Read text from a Google Drive file",
                "description": "Read text from a file",
                "tags": [
                    "Google Drive"
                ]
            }
        },
        "/connector/llm/selector-llm": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/LLM_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISelectorLlmRequest"
                            }
                        }
                    },
                    "description": "Input for candidate selection",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ISelectorLlmResponse"
                                }
                            }
                        },
                        "description": "Array of selected candidate indices"
                    }
                },
                "summary": "Select condition",
                "description": "Select a candidate that satisfies the conditions from the given candidates",
                "tags": [
                    "Llm"
                ]
            }
        },
        "/connector/gmail/send": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleMail_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGmail.ICreateMailInput"
                            }
                        }
                    },
                    "description": "Information needed to send an email.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGmail.ISendMailOutput"
                                }
                            }
                        },
                        "description": "ID of the sent email."
                    }
                },
                "summary": "GMAIL Send",
                "description": "Sending mail\n\nGmail is a free web-based email service provided by Google.\n\nThis connector is for sending emails,\nand if you send it as simple text, the sentences will be displayed as one long line, so you need to insert a line break character.\nThe current format uses `text/html; charset=utf-8` as content-type.\nIn some cases, you can use the HTML format.\n\nIf you want to attach a file, you must specify the name of the file and the address at which it is stored.\nThe saved file is read as a GET request inside the function, encoded, and processed.",
                "tags": [
                    "Gmail"
                ]
            }
        },
        "/connector/gmail/draft": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleMail_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGmail.ICreateMailInput"
                            }
                        }
                    },
                    "description": "Information for creating a mail draft.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Create GMAIL Draft",
                "description": "Create a mail draft\n\nGmail is a free web-based email service provided by Google.\n\nThis connector is for sending emails,\nand if you send it as simple text, the sentences will be displayed as one long line, so you need to insert a line break character.\nThe current format uses `text/html; charset=utf-8` as content-type.\nIn some cases, you can use the html format.\n\nIf you want to attach a file, you must specify the name of the file and the address at which it is stored.\nThe saved file is read as a GET request inside the function, encoded, and processed.",
                "tags": [
                    "Gmail"
                ]
            }
        },
        "/connector/gmail/reply/{id}": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleMail_full.svg",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "data[].{value: id, label: subject || ''}",
                                "method": "post",
                                "path": "/connector/gmail/read-list"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGmail.IReplyInput"
                            }
                        }
                    },
                    "description": "Information required for replying to emails.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "GMAIL Reply",
                "description": "Reply to received email\n\nGmail is a free web-based email service provided by Google.\n\nThis connector is for sending emails,\nand if you send it as simple text, the sentences will be displayed as one long line, so you need to insert a line break character.\nThe current format uses `text/html; charset=utf-8` as content-type.\nIn some cases, you can also use the HTML format.",
                "tags": [
                    "Gmail"
                ]
            }
        },
        "/connector/gmail/get/{id}": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleMail_full.svg",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "title": "Unique ID of the email",
                        "description": " Unique ID of the email.",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "data[].{value: id, label: subject || ''}",
                                "method": "post",
                                "path": "/connector/gmail/read-list"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGmail.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGmail.IFindGmailOutput"
                                }
                            }
                        },
                        "description": "Information about the email."
                    }
                },
                "summary": "Get GMAIL information",
                "description": "Get information about a mail\n\nGmail is a free web-based email service provided by Google.",
                "tags": [
                    "Gmail"
                ]
            }
        },
        "/connector/gmail/read-list": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleMail_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGmail.IFindEmailListInput"
                            }
                        }
                    },
                    "description": "Information for getting mailing list",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGmail.IFindGmailListOutput"
                                }
                            }
                        },
                        "description": "Mailing list"
                    }
                },
                "summary": "Get GMAIL list",
                "description": "Get mailing list\n\nGmail is a free web-based email service provided by Google.",
                "tags": [
                    "Gmail"
                ]
            }
        },
        "/connector/gmail/{id}/hardDelete": {
            "delete": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleMail_full.svg",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "data[].{value: id, label: subject || ''}",
                                "method": "post",
                                "path": "/connector/gmail/read-list"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGmail.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Delete mail",
                "description": "Delete mail\n\nGmail is a free web-based email service provided by Google.\n\nThis function requires special attention because it permanently deletes mail instead of moving it to the trash.\n\nMost users will want to delete mail that is already in the trash.\n\nTherefore, if the user wants to delete it, it is better to guide them to move the mail to the trash, but if they still want to delete it, it is right to target the trash.",
                "tags": [
                    "Gmail"
                ]
            }
        },
        "/connector/gmail/{id}": {
            "delete": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleMail_full.svg",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "description": " The unique ID of the email to be deleted",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "data[].{value: id, label: subject || ''}",
                                "method": "post",
                                "path": "/connector/gmail/read-list"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGmail.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Delete GMAIL",
                "description": "Move mail to trash\n\nGmail is a free web-based email service provided by Google.",
                "tags": [
                    "Gmail"
                ]
            }
        },
        "/connector/gmail/label": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleMail_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGmail.ILabelInput"
                            }
                        }
                    },
                    "description": "Information for creating a label",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGmail.ILabelOutput"
                                }
                            }
                        },
                        "description": "Unique ID of the created label"
                    }
                },
                "summary": "Create GMAIL label",
                "description": "Create a label\n\nGmail is a free web-based email service provided by Google.",
                "tags": [
                    "Gmail"
                ]
            }
        },
        "/connector/gmail/label/{mailId}": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleMail_full.svg",
                "parameters": [
                    {
                        "name": "mailId",
                        "required": true,
                        "description": " Unique ID of the mail to assign a label to",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "data[].{value: id, label: subject || ''}",
                                "method": "post",
                                "path": "/connector/gmail/read-list"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGmail.IMailLabelOperationInput"
                            }
                        }
                    },
                    "description": "A list of unique IDs of labels to assign",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "GMAIL Label Assignment",
                "description": "Assign a label to a mail\n\nGmail is a free web-based email service provided by Google.",
                "tags": [
                    "Gmail"
                ]
            },
            "delete": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleMail_full.svg",
                "parameters": [
                    {
                        "name": "mailId",
                        "required": true,
                        "title": "Unique ID of the mail from which to remove labels",
                        "description": " Unique ID of the mail from which to remove labels.",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "data[].{value: id, label: subject || ''}",
                                "method": "post",
                                "path": "/connector/gmail/read-list"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGmail.IMailLabelOperationInput"
                            }
                        }
                    },
                    "description": "A list of unique IDs of labels to remove.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Remove GMAIL labels",
                "description": "Remove labels assigned to mail\n\nGmail is a free web-based email service provided by Google.",
                "tags": [
                    "Gmail"
                ]
            }
        },
        "/connector/tool/{id}/generate": {
            "post": {
                "x-wrtn-icon": "htthttps://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/_Studio1.0Tool_full.svg",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ITool.IGenerateInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ITool.IGenerateOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Use tool",
                "description": "Use tool\n\nThis connector is a special purpose connector and is not used in general situations.\nThis connector is only used when using tools migrated from Studio 1.0.\nThis connector is not used when creating general workflows.",
                "tags": []
            }
        },
        "/connector/chatbot/generate/easy": {
            "post": {
                "x-wrtn-icon": "https://gh-devs-be.s3.ap-northeast-2.amazonaws.com/icon/full/_Studio1.0Chatbot_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IChatbot.IChatbotEasyGenerateInput"
                            }
                        }
                    },
                    "description": "Information for using a chatbot built with Easy difficulty",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IChatbot.IChatbotGenerateOutput"
                                }
                            }
                        },
                        "description": "The chatbot's response"
                    }
                },
                "summary": "Use Easy difficulty chatbot",
                "description": "Use a chatbot built with Easy difficulty\n\nThis connector is a special purpose connector and is not used in general situations.\nThis connector is only used when using a chatbot migrated from Studio 1.0.\nThis connector is not used when creating a chatbot from a general workflow.",
                "tags": []
            }
        },
        "/connector/chatbot/generate/hard": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/_Studio1.0Chatbot_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IChatbot.IChatBotHardGenerateInput"
                            }
                        }
                    },
                    "description": "Information for using a chatbot built with the Hard difficulty level",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IChatbot.IChatbotGenerateOutput"
                                }
                            }
                        },
                        "description": "The chatbot's response"
                    }
                },
                "summary": "Use a chatbot with the Hard difficulty level",
                "description": "Use a chatbot built with the Hard difficulty level\n\nThis connector is a special purpose connector and is not used in general situations.\nThis connector is only used when using a chatbot migrated from Studio 1.0.\nThis connector is not used when creating a chatbot from a general workflow.",
                "tags": []
            }
        },
        "/connector/figma/get-files": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Figma_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IFigma.IReadFileInput"
                            }
                        }
                    },
                    "description": "Conditional values for importing files",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IFigma.IReadFileOutput"
                                }
                            }
                        },
                        "description": "List of Figma files"
                    }
                },
                "summary": "Import Figma files",
                "description": "Import Figma files",
                "tags": [
                    "Figma"
                ]
            }
        },
        "/connector/figma/comments": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Figma_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IFigma.IAddCommentInput"
                            }
                        }
                    },
                    "description": "Condition value for writing a comment",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.Comment"
                                }
                            }
                        },
                        "description": "Information about the comment just written"
                    }
                },
                "summary": "Write a comment within the canvas",
                "description": "Write a comment",
                "tags": [
                    "Figma"
                ]
            }
        },
        "/connector/figma/get-comments": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Figma_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IFigma.IReadCommentInput"
                            }
                        }
                    },
                    "description": "Condition value to get comments",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.GetCommentsResponse"
                                }
                            }
                        },
                        "description": "List of Figma comments"
                    }
                },
                "summary": "Get Figma comments",
                "description": "Get Figma comments",
                "tags": [
                    "Figma"
                ]
            }
        },
        "/connector/figma/projects/{id}/get-canvas": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Figma_full.svg",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "description": " The ID of the project to search",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "proejcts[].{value:id, label:name}",
                                "method": "post",
                                "path": "/connector/figma/get-projects"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IFigma.Secret"
                            }
                        }
                    },
                    "description": "Search conditions for projects",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IFigma.IGetProjectFileOutput"
                                }
                            }
                        },
                        "description": "All files in the project"
                    }
                },
                "summary": "Search for canvases within a team",
                "description": "Get all canvases of a specific project\n\nCanvases are Figma files managed by a specific team.\n\nThis connector allows users to see which canvases are managed within their Figma team, along with their canvas names and thumbnail links.",
                "tags": [
                    "Figma"
                ]
            }
        },
        "/connector/figma/get-statistics": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Figma_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IFigma.IGetProjectStatisticsInput"
                            }
                        }
                    },
                    "description": "Conditions for retrieving team-level statistics",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IFigma.IGetStatisticsOutput"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Results of team-level statistics retrieval"
                    }
                },
                "summary": "Retrieve team-level Figma statistics",
                "description": "Retrieve team-level statistics",
                "tags": [
                    "Figma"
                ]
            }
        },
        "/connector/figma/get-projects": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Figma_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IFigma.IGetProjectInput"
                            }
                        }
                    },
                    "description": "Project search conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IFigma.IGetProejctOutput"
                                }
                            }
                        },
                        "description": "Project list"
                    }
                },
                "summary": "Search for projects within a team",
                "description": "Search for projects within a team\n\nAs an argument, it should receive teamId, which is the team ID, and can be found by looking at the URL path of figma.\nWhen accessing the link `https://www.figma.com/files/team`, a number is automatically added after the `team` keyword, which is the team ID.\nA user can belong to multiple teams, so if you do not want to automate the search for these projects, you need to get a different team ID.",
                "tags": [
                    "Figma"
                ]
            }
        },
        "/connector/zoom/meetings": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Zoom_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IZoom.ICreateMeetingInput"
                            }
                        }
                    },
                    "description": "DTO of the user information and conditions for creating a meeting",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.MyPartialIZoom.Meeting"
                                }
                            }
                        },
                        "description": "DTO of the created zoom meeting information."
                    }
                },
                "summary": "Create a zoom meeting",
                "description": "Create a zoom meeting",
                "tags": [
                    "Zoom"
                ]
            }
        },
        "/connector/sweet-tacker/get-companies/recommended": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/delivery_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISweetTracker.IGetRecommendedCompanyListInput"
                            }
                        }
                    },
                    "description": "Conditions for courier search",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ISweetTracker.IGetRecommendedCompanyListOutput"
                                }
                            }
                        },
                        "description": "List of couriers"
                    }
                },
                "summary": "Search for a list of couriers matching the invoice number",
                "description": "Search for a list of couriers matching the invoice number\n\nA courier code is essential to search for an invoice.\nTherefore, if a user knows the invoice number but does not know which courier will deliver his or her parcel, he or she cannot search for the invoice.\nTo solve this problem, this connector provides a function that infers the courier matching the invoice number.\nHowever, even if this function is called, multiple couriers that may be couriers may appear, so it is impossible to know which company will transport this parcel.\n\nOf course, if there is only one target in the list, the probability that it will be that courier is almost 100%.",
                "tags": [
                    "SweetTracker"
                ]
            }
        },
        "/connector/sweet-tacker/get-companies": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/delivery_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ISweetTracker.IGetCompanyListOutput"
                                }
                            }
                        },
                        "description": "List of couriers"
                    }
                },
                "summary": "Search for courier list",
                "description": "Search for the courier list\n\nSearch for all domestic and international courier companies in Korea.\nWhen searching for delivery through the invoice number later, you will need the courier code, so you must search for the courier list first.\nAfter searching for the courier list, find your courier and provide the courier code when searching for the invoice.",
                "tags": [
                    "SweetTracker"
                ]
            }
        },
        "/connector/sweet-tacker/tracking-info": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/delivery_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISweetTracker.IGetTrackingInfoInput"
                            }
                        }
                    },
                    "description": "Conditions for searching the invoice number",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ISweetTracker.IGetTrackingInfoOutput"
                                }
                            }
                        },
                        "description": "The movement path of the package"
                    }
                },
                "summary": "Invoice search",
                "description": "Search for the invoice number\n\nTo search for an invoice, you need the courier code in addition to the invoice number you want to search for.\nIf you know which courier will transport your package, you can search for the courier and get the courier code from the courier whose name matches the courier code.\nIf you know the invoice number but do not know the courier code, you can use 'Search for a list of couriers matching the invoice number' to infer the courier that will transport your package.\nWhen you search for a package, you can find out the current location and time of the package, as well as who is transporting the package.\nIn some cases, there may be a phone number, but it is not absolute.\nIn addition, in cases where the product is delivered directly by an commerce company such as Coupang, there are cases where you cannot search even if you have the invoice number.",
                "tags": [
                    "SweetTracker"
                ]
            }
        },
        "/connector/hancell/sheet": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Hancel_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IHancell.IUpsertSheetInput"
                            }
                        }
                    },
                    "description": "Hansel information to modify",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IHancell.IUpsertSheetOutput"
                                }
                            }
                        },
                        "description": "Link to the newly created file after modification"
                    }
                },
                "summary": "Modify Hansel",
                "description": "Modify a Hansel sheet\n\nIf the sheet already exists, modify it, or add it if it did not exist before.",
                "tags": [
                    "Hancel"
                ]
            }
        },
        "/connector/hancell/read": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Hancel_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IHancell.IReadHancellInput"
                            }
                        }
                    },
                    "description": "Hansel file information to read",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IHancell.IReadHancellOutput"
                                }
                            }
                        },
                        "description": "Hansel file information"
                    }
                },
                "summary": "Read a Hansel file",
                "description": "Read a Hansel file",
                "tags": [
                    "Hancel"
                ]
            }
        },
        "/connector/kakao-talk/message/text": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/kakaoTalk_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.ISendKakaoTalkToFriendsInput"
                            }
                        }
                    },
                    "description": "Conditions for sending the message",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.ISendKakaoTalkToFriendsOutput"
                                }
                            }
                        },
                        "description": "Response and failure information"
                    }
                },
                "summary": "Send a message to a KakaoTalk(카카오톡) friend",
                "description": "Sends a text type KakaoTalk(카카오톡) message to a friend\n\nKakaoTalk(카카오톡) is a mobile messenger application in South Korea, which also provides various additional services.\nIf it is not specified who the user wants to send the message, it should not be sent at will.",
                "tags": [
                    "KakaoTalk"
                ]
            }
        },
        "/connector/kakao-talk/memo/commerce": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/kakaoTalk_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.ISendKakaoTalkCommerceInput"
                            }
                        }
                    },
                    "description": "Conditions for sending the message",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IMemoOutput"
                                }
                            }
                        },
                        "description": "Response code"
                    }
                },
                "summary": "Send a message to myself on KakaoTalk(카카오톡)",
                "description": "Sends a commerce type message to myself on KakaoTalk(카카오톡)\n\nWhen sending a KakaoTalk(카카오톡) message, there are buttons. If you want to add a link to the button, you should use a URL starting with `https://studio-pro.wrtn.ai/` or a redirect link. If the link starts with `https://studio-pro.wrtn.ai/`, the page will be viewed, otherwise, it will redirect to the new link. This is because only links registered in our domain are allowed according to the KakaoTalk(카카오톡) API specifications.\n\nKakaoTalk(카카오톡) is a mobile messenger application in South Korea, which also provides various additional services.",
                "tags": [
                    "KakaoTalk"
                ]
            }
        },
        "/connector/kakao-talk/memo/location": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/kakaoTalk_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.ISendKakaoTalkLocationInput"
                            }
                        }
                    },
                    "description": "Conditions for sending the message",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IMemoOutput"
                                }
                            }
                        },
                        "description": "Response code"
                    }
                },
                "summary": "Send a message to myself on KakaoTalk(카카오톡)",
                "description": "Sends a location type message to myself on KakaoTalk(카카오톡)\n\nWhen sending a KakaoTalk(카카오톡) message, there are buttons. If you want to add a link to the button, you should use a URL starting with `https://studio-pro.wrtn.ai/` or a redirect link. If the link starts with `https://studio-pro.wrtn.ai/`, the page will be viewed, otherwise, it will redirect to the new link. This is because only links registered in our domain are allowed according to the KakaoTalk(카카오톡) API specifications.\n\nKakaoTalk(카카오톡) is a mobile messenger application in South Korea, which also provides various additional services.",
                "tags": [
                    "KakaoTalk"
                ]
            }
        },
        "/connector/kakao-talk/memo/list": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/kakaoTalk_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.ISendKakaoTalkListInput"
                            }
                        }
                    },
                    "description": "Conditions for sending the message",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IMemoOutput"
                                }
                            }
                        },
                        "description": "Response code"
                    }
                },
                "summary": "Send a message to myself on KakaoTalk(카카오톡)",
                "description": "Sends a list type message to myself on KakaoTalk(카카오톡)\n\nWhen sending a KakaoTalk(카카오톡) message, there are buttons. If you want to add a link to the button, you should use a URL starting with `https://studio-pro.wrtn.ai/` or a redirect link. If the link starts with `https://studio-pro.wrtn.ai/`, the page will be viewed, otherwise, it will redirect to the new link. This is because only links registered in our domain are allowed according to the KakaoTalk(카카오톡) API specifications.\n\nKakaoTalk(카카오톡) is a mobile messenger application in South Korea, which also provides various additional services.",
                "tags": [
                    "KakaoTalk"
                ]
            }
        },
        "/connector/kakao-talk/memo/feed": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/kakaoTalk_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.ISendKakaoTalkFeedInput"
                            }
                        }
                    },
                    "description": "Conditions for sending the message",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IMemoOutput"
                                }
                            }
                        },
                        "description": "Response code"
                    }
                },
                "summary": "Send a message to myself on KakaoTalk(카카오톡)",
                "description": "Sends a feed type message to myself on KakaoTalk(카카오톡)\n\nWhen sending a KakaoTalk(카카오톡) message, there are buttons. If you want to add a link to the button, you should use a URL starting with `https://studio-pro.wrtn.ai/` or a redirect link. If the link starts with `https://studio-pro.wrtn.ai/`, the page will be viewed, otherwise, it will redirect to the new link. This is because only links registered in our domain are allowed according to the KakaoTalk(카카오톡) API specifications.\n\nKakaoTalk(카카오톡) is a mobile messenger application in South Korea, which also provides various additional services.",
                "tags": [
                    "KakaoTalk"
                ]
            }
        },
        "/connector/kakao-talk/memo/text": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/kakaoTalk_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.ISendKakaoTalkTextInput"
                            }
                        }
                    },
                    "description": "Conditions for sending the message",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IMemoOutput"
                                }
                            }
                        },
                        "description": "Response code"
                    }
                },
                "summary": "Send a message to myself on KakaoTalk(카카오톡)",
                "description": "Sends a text type message to myself on KakaoTalk(카카오톡)\n\nWhen sending a KakaoTalk(카카오톡) message, there are buttons. If you want to add a link to the button, you should use a URL starting with `https://studio-pro.wrtn.ai/` or a redirect link. If the link starts with `https://studio-pro.wrtn.ai/`, the page will be viewed, otherwise, it will redirect to the new link. This is because only links registered in our domain are allowed according to the KakaoTalk(카카오톡) API specifications.\n\nKakaoTalk(카카오톡) is a mobile messenger application in South Korea, which also provides various additional services.",
                "tags": [
                    "KakaoTalk"
                ]
            }
        },
        "/connector/kakao-talk/calendars/events": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/kakaoTalk_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.ICreateEventInput"
                            }
                        }
                    },
                    "description": "Input conditions for creating an event",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.ICreateEventOutput"
                                }
                            }
                        },
                        "description": "Created event ID condition"
                    }
                },
                "summary": "Add an event to the KakaoTalk(카카오톡) calendar",
                "description": "Adds an event to the KakaoTalk(카카오톡) calendar\n\nKakaoTalk(카카오톡) is a mobile messenger application in South Korea, which also provides various additional services.",
                "tags": [
                    "KakaoTalk"
                ]
            }
        },
        "/connector/kakao-talk/get-friends": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/kakaoTalk_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IGetFriendsInput"
                            }
                        }
                    },
                    "description": "Conditions for retrieving the friend list",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IGetFriendsOutput"
                                }
                            }
                        },
                        "description": "Retrieved friend list"
                    }
                },
                "summary": "Retrieve the list of friends on KakaoTalk(카카오톡)",
                "description": "Retrieves the list of friends on KakaoTalk(카카오톡)\n\nKakaoTalk(카카오톡) is a mobile messenger application in South Korea, which also provides various additional services.\nWhen looking up your friends, only those who linked Kakao Talk in studio-pro will be searched, so you may not be able to check the target.\nIn this case, it might be better to send a message by email or other means.",
                "tags": [
                    "KakaoTalk"
                ]
            }
        },
        "/connector/kakao-talk/get-events": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/kakaoTalk_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/_namespace_swagger.ISecretkakaotalk_calendarcalender_id(stringDefaultprimaryPlaceholderprimaryPrerequisitemethodpostpath/connector/kakao-talk/get-calendarsjmesPathcalendars.valueidlabelnamesubscribe_calendars.valueidlabelname)undefinedpres..."
                                    },
                                    {
                                        "$ref": "#/components/schemas/_namespace_swagger.ISecretkakaotalk_calendarcalender_id(stringDefaultprimaryPlaceholderprimaryPrerequisitemethodpostpath/connector/kakao-talk/get-calendarsjmesPathcalendars.valueidlabelnamesubscribe_calendars.valueidlabelname)undefinedpres....o1"
                                    }
                                ]
                            }
                        }
                    },
                    "description": "DTO for event retrieval.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IGetEventOutput"
                                }
                            }
                        },
                        "description": "DTO containing event information."
                    }
                },
                "summary": "Retrieve KakaoTalk(카카오톡) calendar events",
                "description": "Retrieves KakaoTalk(카카오톡) calendar events.\n\nThe user needs to provide the calendar ID as an input parameter.\nIf no calendar is provided, it defaults to retrieving the user's own calendar.\nTherefore, this feature can be used even if no calendar ID is specified.\n\nThe conditions for retrieving events include specifying the period for which events are to be fetched.\nThis connector is designed to view data for either a week or a month.\n\nKakaoTalk(카카오톡) is a mobile messaging application in South Korea, and it also provides additional services.",
                "tags": [
                    "KakaoTalk"
                ]
            }
        },
        "/connector/kakao-talk/get-calendars": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/kakaoTalk_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ICommon.ISecretkakaotalk_calendar"
                            }
                        }
                    },
                    "description": "Request DTO to retrieve calendars.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IGetCalendarOutput"
                                }
                            }
                        },
                        "description": "Calendar list object."
                    }
                },
                "summary": "Retrieve KakaoTalk(카카오톡) calendar lists",
                "description": "Retrieves all KakaoTalk(카카오톡) calendar lists\n\nThere are two types of calendars: your primary calendars and calendars you are subscribed to.\nAll Kakao users have their own personal calendars, so there will be at least one calendar.\nThe primary calendar has an ID of `primary`, which is the user's own calendar.\n\nKakaoTalk(카카오톡) is a mobile messenger application from South Korea that also provides additional services.",
                "tags": [
                    "KakaoTalk"
                ]
            }
        },
        "/connector/kakao-talk/auth": {
            "get": {
                "parameters": [
                    {
                        "name": "code",
                        "required": true,
                        "title": "KakaoTalk OAuth2 authorization code",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IGetAccessTokenOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "description": "Issues a KakaoTalk(카카오톡) access token",
                "tags": []
            }
        },
        "/connector/kakao-talk/refresh": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/kakaoTalk_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IRefreshAccessTokenInput"
                            }
                        }
                    },
                    "description": "Request DTO for refresh.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IRefreshAccessTokenOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "description": "Refreshes the KakaoTalk(카카오톡) access token",
                "tags": [
                    "KakaoTalk"
                ]
            }
        },
        "/connector/kakao-map/search": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/KakaoMap_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoMap.SearchByKeywordInput"
                            }
                        }
                    },
                    "description": "Search condition",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IKakaoMap.SearchByKeywordOutput"
                                }
                            }
                        },
                        "description": "Search result"
                    }
                },
                "summary": "Kakao Map Search",
                "description": "Search with Kakao Map\n\nIn addition to the place name company, category, and phone number,\nit also provides lot number and road name addresses in the Korean address system.\nIt can be used with public data or other address-based connectors.",
                "tags": [
                    "Kakao Map"
                ]
            }
        },
        "/connector/kakao-navi/get-future-directions": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/KakaoNavi_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoNavi.IGetFutureDirectionsInput"
                            }
                        }
                    },
                    "description": "Request conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IKakaoNavi.SuccessCase"
                                }
                            }
                        },
                        "description": "Directions results"
                    }
                },
                "summary": "Kakao Navi Directions",
                "description": "Finding directions with Kakao Navi",
                "tags": [
                    "Kakao Navi"
                ]
            }
        },
        "/connector/google-slides/presentations/{id}/export/hanshow": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleSlides_full.svg",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "description": " Presentation ID to convert",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.IExportPresentationInput"
                            }
                        }
                    },
                    "description": "Authentication information",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.IExportHanshowOutput"
                                }
                            }
                        },
                        "description": "Link to download Hanshow files"
                    }
                },
                "summary": "Export presentations to Hanshow files",
                "description": "Export Google Slides presentations to Hanshow format",
                "tags": [
                    "Google Slide"
                ]
            }
        },
        "/connector/google-slides/presentations/{id}/export/power-point": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleSlides_full.svg",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "description": " Presentation ID to convert",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.IExportPresentationInput"
                            }
                        }
                    },
                    "description": "Authentication information",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.IExportPresentationOutput"
                                }
                            }
                        },
                        "description": "Link to download PowerPoint files"
                    }
                },
                "summary": "Export presentations to PPT files",
                "description": "Export Google Slides presentations to PowerPoint format\n\nA connector that can be used when creating stories or picture books.",
                "tags": [
                    "Google Slide"
                ]
            }
        },
        "/connector/google-slides/get-presentations": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleSlides_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.IGetPresentationInput"
                            }
                        }
                    },
                    "description": "Condition DTO for retrieving a presentation",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.ISimplePresentationIdOutput"
                                }
                            }
                        },
                        "description": "Retrieve presentation information DTO"
                    }
                },
                "summary": "Retrieve a Google Slides presentation",
                "description": "Retrieve a Google Slides presentation",
                "tags": [
                    "Google Slide"
                ]
            }
        },
        "/connector/google-slides/presentations/{id}/slides/quarter-divisions": {
            "put": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleSlides_full.svg",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "description": " Presentation id to add slides to",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.AppendQuarterDivisionSlideInput"
                            }
                        }
                    },
                    "description": "Template to add",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.ISimplePresentationIdOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Add \"QuarterDivision\" type image slides to a Google Slides presentation",
                "description": "Add \"QuarterDivision\" type slides to a Google Slides presentation\n\nThe \"QuarterDivision\" type slides are templates that are designed to place images and text in the upper left, upper right, lower left, and lower right, like a four-cut cartoon.\nFour images are required for this template, and the text is located right under each image.\n\nYou may need an image when the user asks you to add a slide.\nIn this case, rather than inserting any image, you should first secure the image using a search connector or an image creation connector.\nIt is safe to ask the user for consent to this process.",
                "tags": [
                    "Google Slide"
                ]
            }
        },
        "/connector/google-slides/presentations/{id}/slides/entires": {
            "put": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleSlides_full.svg",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "description": " Presentation id to add slides to",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.AppendEntireSlideInput"
                            }
                        }
                    },
                    "description": "Template to add",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.ISimplePresentationIdOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Add entire type image slides to a Google Slides presentation",
                "description": "Add \"Entire\" type slides to a Google Slides presentation\n\nThe \"Entire\" type of slide is a template that packs an image all over, and you can't put any extra text in it. Maybe it's usually suitable for putting a cover.\nBecause ordinary presentations have longer horizontal lengths, if you put a square image, gaps on the left and right can appear large.\n\nYou may need an image when the user asks you to add a slide.\nIn this case, rather than inserting any image, you should first secure the image using a search connector or an image creation connector.\nIt is safe to ask the user for consent to this process.",
                "tags": [
                    "Google Slide"
                ]
            }
        },
        "/connector/google-slides/presentations/{id}/slides/landscapes": {
            "put": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleSlides_full.svg",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "description": " Presentation id to add slides to",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.AppendLandscapeSlideInput"
                            }
                        }
                    },
                    "description": "Template to add",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.ISimplePresentationIdOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Add \"Landscape\" type image slides to a Google Slides presentation",
                "description": "Add \"Landscape\" type slides to a Google Slides presentation\n\nThe \"Landscape\" type template fits text underneath with a longer horizontal image tightly packed like a background.\nIt is suitable when the image is highlighted and the text is short.\nIt is suitable for marking images and titles as if they were on display.\n\nYou may need an image when the user asks you to add a slide.\nIn this case, rather than inserting any image, you should first secure the image using a search connector or an image creation connector.\nIt is safe to ask the user for consent to this process.",
                "tags": [
                    "Google Slide"
                ]
            }
        },
        "/connector/google-slides/presentations/{id}/slides/squares": {
            "put": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleSlides_full.svg",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "description": " Presentation id to add slides to",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.AppendSquareSlideInput"
                            }
                        }
                    },
                    "description": "Template to add",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.ISimplePresentationIdOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Add \"Square\" type image slides to a Google Slides presentation",
                "description": "Add \"Square\" type slides to a Google Slides presentation\n\nThe \"Square\" type slides put square images and text. In this case, you should put at least four to five lines of text, because there is so much space to put text.\nThe picture is on the left, and the text is on the right.\n\nYou may need an image when the user asks you to add a slide.\nIn this case, rather than inserting any image, you should first secure the image using a search connector or an image creation connector.\nIt is safe to ask the user for consent to this process.",
                "tags": [
                    "Google Slide"
                ]
            }
        },
        "/connector/google-slides/presentations/{id}/slides/verticals": {
            "put": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleSlides_full.svg",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "description": " Presentation id to add slides to",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.AppendVerticalSlideInput"
                            }
                        }
                    },
                    "description": "Template to add",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.ISimplePresentationIdOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Add \"Vertical\" type image slides to a Google Slides presentation",
                "description": "Add \"Vertical\" type slides to a Google Slides presentation\n\nThe \"Vertical\" type is like a square type slide, with an image on the left and text on the right.\nIn this case, unlike the square type, the image is filled to the height of the presentation while maintaining the proportion.\nThis also allows for enough text.\n\nYou may need an image when the user asks you to add a slide.\nIn this case, rather than inserting any image, you should first secure the image using a search connector or an image creation connector.\nIt is safe to ask the user for consent to this process.",
                "tags": [
                    "Google Slide"
                ]
            }
        },
        "/connector/google-slides/presentations/{id}/image-slide": {
            "put": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleSlides_full.svg",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "description": " Presentation id to add slides to",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.AppendSlideInput"
                            }
                        }
                    },
                    "description": "Template to add",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.ISimplePresentationIdOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Add image and text slides to a Google Slides presentation",
                "description": "Add slides to a Google Slides presentation\n\nUse this connector with connector/google-slides/presentations when creating a story or picture book.\nWhen creating a story or picture book, insert the story and pictures created using this connector into the presentation created from connector/google-slides/presentations connector.\nBe careful not to use this connector when creating a story or picture book, as it may result in an empty picture book.\nSlide type must be one of: \"Vertical\", \"Square\", \"Landscape\", \"Entire\", \"QuarterDivision\".\nIt is common to choose a \"Square\" type when there is one image.\n\nYou may need an image when the user asks you to add a slide.\nIn this case, rather than inserting any image, you should first secure the image using a search connector or an image creation connector.\nIt is safe to ask the user for consent to this process.",
                "tags": [
                    "Google Slide"
                ],
                "deprecated": true
            }
        },
        "/connector/google-slides/presentations": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleSlides_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.ICreatePresentationInput"
                            }
                        }
                    },
                    "description": "Condition DTO for creating a presentation",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.ISimplePresentationIdOutput"
                                }
                            }
                        },
                        "description": "Generated presentation information DTO"
                    }
                },
                "summary": "Create a Google Slides presentation",
                "description": "Create a Google Slides presentation\n\nThis connector can be used when creating a story or picture book.\nPlease use it with the connector/google-slides/image-slide connector when creating a story or picture book.\nWhen creating a story or picture book, create a new presentation with this connector and insert the created story and picture into the slide using other connector.\nThis creates a blank presentation file, which is basically created with the first slide with no text.",
                "tags": [
                    "Google Slide"
                ]
            }
        },
        "/connector/imweb/get-products": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Imweb_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IImweb.IGetProductInput"
                            }
                        }
                    },
                    "description": "key and secret",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IImweb.Product"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "the seller's own goods"
                    }
                },
                "summary": "Get my sales product from `Imweb`",
                "description": "Look up the sales product\n\nThe `Imweb` seller uses the seller's authentication key and secret to import his or her product.\n`Imweb` is a Korean webbuilder site that offers a similar experience to the service called Wix.\nIf a commerce site is opened using `Imweb`,\nsellers can register the items they are selling,\nwhich is only available to sellers who open `Imweb` pages and is intended to bring up their products.\nSellers must provide their API keys and secrets to import `Imweb` products.",
                "tags": [
                    "Imweb"
                ]
            }
        },
        "/connector/imweb/auth": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Imweb_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IImweb.Credential"
                            }
                        }
                    },
                    "description": "Request DTO for access token issuance.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IImweb.IGetAccessTokenOutput"
                                }
                            }
                        },
                        "description": "Response DTO containing access token."
                    }
                },
                "description": "Issue Aimweb Access Token",
                "tags": [
                    "Imweb"
                ]
            }
        },
        "/connector/open-data/getAddress": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/open_data.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IMSIT.IGetAddressInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IMSIT.IGetAddressOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Search for the address system of the Republic of Korea",
                "description": "Search for the address system of the Republic of Korea\n\n- If you enter a postal address, you can convert it to a street address and a road name address.",
                "tags": [
                    "Open Data"
                ]
            }
        },
        "/connector/open-data/getRTMSDataSvcSHRent": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/open_data.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IMOLIT.IGetRTMSDataSvcAptRentInput"
                            }
                        }
                    },
                    "description": "Query conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IMOLIT.IgetRTMSDataSvcSHRentOutput"
                                }
                            }
                        },
                        "description": "Information on leases and rents"
                    }
                },
                "summary": "Retrieve multi-family lease and rental information",
                "description": "[Ministry of Land, Infrastructure and Transport] Retrieves information on single-family homes and multi-family homes for lease or rent\n\nThis Connect is based on data obtained from public data portals in Korea.\nIf you talk about a specific organization here, it is an organization in Korea, and information or deducible facts that data or statistics point to can also be limited to Korea.\n\nYou need to look up the city, county, and district code first. (POST /connector/open-data/getStandardRegionCodeList connector)\nA connector that looks up the distirct code already exists, so call the preceding connector.\n\nSince this is Korean public data, most searches may have to be done in Korean.\nPlease be aware of this.",
                "tags": [
                    "Open Data"
                ]
            }
        },
        "/connector/open-data/getRTMSDataSvcOffiRent": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/open_data.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IMOLIT.IGetRTMSDataSvcAptRentInput"
                            }
                        }
                    },
                    "description": "Query conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IMOLIT.IGetRTMSDataSvcOffiRentOutput"
                                }
                            }
                        },
                        "description": "Information on leases and rents"
                    }
                },
                "summary": "Retrieve officetel lease and rental information",
                "description": "[Ministry of Land, Infrastructure and Transport] Retrieves officetel lease and rent information\n\nThis Connect is based on data obtained from public data portals in Korea.\nIf you talk about a specific organization here, it is an organization in Korea, and information or deducible facts that data or statistics point to can also be limited to Korea.\n\nYou need to look up the city, county, and district code first. (POST /connector/open-data/getStandardRegionCodeList connector)\nA connector that looks up the distirct code already exists, so call the preceding connector.\n\nSince this is Korean public data, most searches may have to be done in Korean.\nPlease be aware of this.",
                "tags": [
                    "Open Data"
                ]
            }
        },
        "/connector/open-data/getRTMSDataSvcAptRent": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/open_data.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IMOLIT.IGetRTMSDataSvcAptRentInput"
                            }
                        }
                    },
                    "description": "Query conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IMOLIT.IGetRTMSDataSvcAptRentOutput"
                                }
                            }
                        },
                        "description": "Information on leases and rents"
                    }
                },
                "summary": "Retrieve apartment lease and rental information",
                "description": "[Ministry of Land, Infrastructure and Transport] Retrieves apartment lease and rent information\n\nThis Connect is based on data obtained from public data portals in Korea.\nIf you talk about a specific organization here, it is an organization in Korea, and information or deducible facts that data or statistics point to can also be limited to Korea.\n\nYou need to look up the city, county, and district code first. (POST /connector/open-data/getStandardRegionCodeList connector)\nA connector that looks up the distirct code already exists, so call the preceding connector.\n\nSince this is Korean public data, most searches may have to be done in Korean.\nPlease be aware of this.",
                "tags": [
                    "Open Data"
                ]
            }
        },
        "/connector/open-data/getLHLeaseInfo": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/open_data.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ILH.IGetLHLeaseInfoInput"
                            }
                        }
                    },
                    "description": "Conditions for querying rental housing",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ILH.IGetLHLeaseInfoOutput"
                                }
                            }
                        },
                        "description": "LH rental housing information"
                    }
                },
                "summary": "Retrieve LH rental housing information",
                "description": "[Korea Land and Housing Corporation] Retrieves information on LH rental housing complexes\n\nThis Connect is based on data obtained from public data portals in Korea.\nIf you talk about a specific organization here, it is an organization in Korea, and information or deducible facts that data or statistics point to can also be limited to Korea.\n\nSince this is Korean public data, most searches may have to be done in Korean.\nThe types of houses you can choose from here are one of the following: '국민임대','공공임대','영구임대','행복주택','장기전세','매입임대','전세임대'.\nIn addition, you can inquire by city, county, and region(=시도군)\n\nIn the Korean urban system, inquiries can only be made at the level of '특별시', '광역시', '자치시', '자치도', '도', so if you want to see it in more detail, you should ask the user for pagenation.",
                "tags": [
                    "Open Data"
                ]
            }
        },
        "/connector/open-data/getParkingLot": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/open_data.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/_namespace_swagger.IPaginationInputMyPickParkingLotrdnmadr"
                                    },
                                    {
                                        "$ref": "#/components/schemas/_namespace_swagger.IPaginationInputMyPickParkingLotlnmadr"
                                    }
                                ]
                            }
                        }
                    },
                    "description": "Conditions for querying parking lots",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.INIA.IGetParkingLotOutput"
                                }
                            }
                        },
                        "description": "Parking lot information"
                    }
                },
                "summary": "Retrieve parking lot information",
                "description": "[National Information Society Agency] Retrieves parking lot information\n\nThis Connect is based on data obtained from public data portals in Korea.\nIf you talk about a specific organization here, it is an organization in Korea, and information or deducible facts that data or statistics point to can also be limited to Korea.\nIf you don't know the exact road name(도로명주소) or lot number address(지번주소), you can't search it.\nLook up other public data connectors first or use map connectors to look up the correct address. (ex. kakao-map connector)\n\nSince this is Korean public data, most searches may have to be done in Korean.\nPlease be aware of this.",
                "tags": [
                    "Open Data"
                ]
            }
        },
        "/connector/open-data/getBuildingInfo": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/open_data.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IMOLIT.GetBuildingInfoInput"
                            }
                        }
                    },
                    "description": "Conditions for querying building information",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IMOLIT.GetBuildingInfoOutput"
                                }
                            }
                        },
                        "description": "Building information"
                    }
                },
                "summary": "Retrieve building registration information",
                "description": "[Ministry of Land, Infrastructure and Transport] Retrieves building registration information\n\nThis Connect is based on data obtained from public data portals in Korea.\nIf you talk about a specific organization here, it is an organization in Korea, and information or deducible facts that data or statistics point to can also be limited to Korea.\n\nYou need to look up the city, county, and district code first. (POST /connector/open-data/getStandardRegionCodeList connector)\nA connector that looks up the distirct code already exists, so call the preceding connector.\n\nSince this is Korean public data, most searches may have to be done in Korean.\nPlease be aware of this.",
                "tags": [
                    "Open Data"
                ]
            }
        },
        "/connector/open-data/getStandardRegionCodeList": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/open_data.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IOpenData.MinistryOfTheInteriorAndSafety.IGetStandardRegionCodeListInput"
                            }
                        }
                    },
                    "description": "Conditions for querying regions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IOpenData.MinistryOfTheInteriorAndSafety.IGetStandardRegionCodeListOutput"
                                }
                            }
                        },
                        "description": "Region codes"
                    }
                },
                "summary": "Retrieve administrative standard codes",
                "description": "[Ministry of the Interior and Safety] Retrieves administrative standard codes for domestic regions\n\nThis Connect is based on data obtained from public data portals in Korea.\nIf you talk about a specific organization here, it is an organization in Korea, and information or deducible facts that data or statistics point to can also be limited to Korea.\nPublic data operating in a specific area-based class, such as building ledger information or building lease on a deposit basis information,\nmay all need to know the legal building code and the city, county, and district code (법정동 코드, 시군구 코드를 의미한다.).\nIn this case, this connector call must be preceded.\n\nSince this is Korean public data, most searches may have to be done in Korean.\nPlease be aware of this.\n\nFor the search, you should use the exact name that means the administrative district, just like the \"서울특별시\", not \"서울\".",
                "tags": [
                    "Open Data"
                ]
            }
        },
        "/connector/open-data/getStockPriceInfo": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/open_data.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/_namespace_swagger.IPaginationInputlikeItmsNm(stringMaxLength120PlaceholderSamsungElectronics)undefinedbasDt(stringPlaceholder...)undefined"
                                    },
                                    {
                                        "$ref": "#/components/schemas/_namespace_swagger.IPaginationInputlikeItmsNm(stringMaxLength120PlaceholderSamsungElectronics)undefinedbeginBasDt(stringPlaceholder...)undefinedendBasDt(stringPlaceholder...)undefined"
                                    }
                                ]
                            }
                        }
                    },
                    "description": "Conditions for querying market capitalization",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IOpenData.FinancialServicesCommission.IGetStockPriceInfoOutput"
                                }
                            }
                        },
                        "description": "Market capitalization and stock information"
                    }
                },
                "summary": "Retrieve market capitalization and stock information",
                "description": "[Financial Services Commission] Retrieves market capitalization and stock information\n\nThis Connect is based on data obtained from public data portals in Korea.\nIf you talk about a specific organization here, it is an organization in Korea, and information or deducible facts that data or statistics point to can also be limited to Korea.\n\nSince this is Korean public data, most searches may have to be done in Korean. for example \"삼성전자\".\nAlso, since this is based on the closing of the stock market, you can only look up from about two months ago (9 days ago) to yesterday from today's date.",
                "tags": [
                    "Open Data"
                ]
            }
        },
        "/connector/open-data/getShortTermForecast": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/open_data.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IKoreaMeteorologicalAdministration.IGetVillageForecastInformationInput"
                            }
                        }
                    },
                    "description": "DTO for weather query location",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "$ref": "#/components/schemas/_namespace_swagger.IKoreaMeteorologicalAdministration.IGetForecastOutput"
                                            },
                                            "type": "array"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IOpenWeather.IResponse"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Weather information for the specified region"
                    }
                },
                "summary": "Retrieve today's weather from the Korea Meteorological Administration",
                "description": "[Korea Meteorological Administration] Retrieves today's weather information\n\nLatitude and longitude coordinates are required for querying.\nWhen provided, the latitude and longitude will be used to get current weather data based on the 00 minute mark of each hour for that region.\nThe output will be converted from grid coordinates to latitude and longitude, and provide weather-related information such as current weather, wind direction, and wind speed for the region.\nThe currently provided information includes:\n\n- POP: Probability of Precipitation\n- PTY: Precipitation Type\n- PCP: Precipitation Amount in the Last Hour\n- REH: Humidity\n- SNO: Snowfall in the Last Hour\n- SKY: Sky Condition\n- TMP: Temperature in the Last Hour\n- TMN: Daily Minimum Temperature\n- TMX: Daily Maximum Temperature\n- UUU: Wind Speed (East-West Component)\n- VVV: Wind Speed (North-South Component)\n- WAV: Wave Height\n- VEC: Wind Direction\n- WSD: Wind Speed\n- T1H: Temperature\n- RN1: Precipitation Amount in the Last Hour\n- VEC: Wind Direction\n- T1H: Temperature\n\nThis Connect is based on data obtained from public data portals in Korea.\nIf you talk about a specific organization here, it is an organization in Korea, and information or deducible facts that data or statistics point to can also be limited to Korea.\n\nThere are two types in request body.\nOne is 'latitude_and_longitude' and the other is 'grid_coordinates'.\nThis function uses grid coordinate values to express Korean geographical conditions inside,\nso grid coordinates must be entered.\nHowever, grid coordinates also allow for latitude values because it is difficult for users to know their local coordinates. In this case,\nyou must deliver the values of nx and ny together with the values of 'latitude_and_longitude'.\nIf the latitude hardness value is delivered,\nit is converted to grid coordinate value from the inside and used.\n\nSince this is Korean public data, most searches may have to be done in Korean.\nPlease be aware of this.",
                "tags": [
                    "Open Data"
                ]
            }
        },
        "/connector/open-data/getCopyRight": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/open_data.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.KoreaCopyrightCommission.IGetCopyRightInput"
                            }
                        }
                    },
                    "description": "Conditions for querying copyright",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.KoreaCopyrightCommission.IGetCopyRightOutput"
                                }
                            }
                        },
                        "description": "Copyright information"
                    }
                },
                "summary": "[Copyright Registration Information Service (New)]",
                "description": "[Korea Copyright Commission] Searches for copyright information\n\nThis Connect is based on data obtained from public data portals in Korea.\nIf you talk about a specific organization here, it is an organization in Korea, and information or deducible facts that data or statistics point to can also be limited to Korea.\n\nSince this is Korean public data, most searches may have to be done in Korean.\nPlease be aware of this.\n\n- 제호(명칭) : 저작물의 명칭을 의미하는 말로, 사용자가 어려워할 수 있기 때문에 쉽게 풀어 말하는 것이 좋습니다.",
                "tags": [
                    "Open Data"
                ]
            }
        },
        "/connector/prompt/generate": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Prompt_prompt_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IPrompt.IRequest"
                            }
                        }
                    },
                    "description": "user's prompt",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IPrompt.IResponse"
                                }
                            }
                        },
                        "description": "response via prompt"
                    }
                },
                "summary": "prompt node",
                "description": "Enter the request you want to give to LLM",
                "tags": []
            }
        },
        "/connector/korea-eximbank/exchange": {
            "get": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/ExchangeRate_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "result": {
                                                "title": "Summary of query results",
                                                "oneOf": [
                                                    {
                                                        "title": "성공",
                                                        "const": 1
                                                    },
                                                    {
                                                        "title": "데이터 코드 오류",
                                                        "const": 2
                                                    },
                                                    {
                                                        "title": "인증코드 오류",
                                                        "const": 3
                                                    },
                                                    {
                                                        "title": "일일 제한 횟수 마감",
                                                        "const": 4
                                                    }
                                                ]
                                            },
                                            "cur_unit": {
                                                "title": "currency code",
                                                "oneOf": [
                                                    {
                                                        "type": "null"
                                                    },
                                                    {
                                                        "x-wrtn-placeholder": "KRW",
                                                        "type": "string"
                                                    }
                                                ]
                                            },
                                            "ttb": {
                                                "title": "When receiving a wire transfer (remittance)",
                                                "oneOf": [
                                                    {
                                                        "type": "null"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ]
                                            },
                                            "tts": {
                                                "title": "When sending a wire transfer (remittance)",
                                                "oneOf": [
                                                    {
                                                        "type": "null"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ]
                                            },
                                            "deal_bas_r": {
                                                "title": "Trading standard rate",
                                                "oneOf": [
                                                    {
                                                        "type": "null"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ]
                                            },
                                            "bkpr": {
                                                "title": "Book Price",
                                                "oneOf": [
                                                    {
                                                        "type": "null"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ]
                                            },
                                            "yy_efee_r": {
                                                "title": "Annual Conversion Rate",
                                                "oneOf": [
                                                    {
                                                        "type": "null"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ]
                                            },
                                            "ten_dd_efee_r": {
                                                "title": "10-day redemption rate",
                                                "oneOf": [
                                                    {
                                                        "type": "null"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ]
                                            },
                                            "kftc_bkpr": {
                                                "title": "Seoul Foreign Exchange Brokerage Book Price",
                                                "oneOf": [
                                                    {
                                                        "type": "null"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ]
                                            },
                                            "kftc_deal_bas_r": {
                                                "title": "Seoul Foreign Exchange Brokerage Trading Standard Rate",
                                                "oneOf": [
                                                    {
                                                        "type": "null"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ]
                                            },
                                            "cur_nm": {
                                                "title": "Country/Currency Name",
                                                "oneOf": [
                                                    {
                                                        "type": "null"
                                                    },
                                                    {
                                                        "x-wrtn-placeholder": "한국 원",
                                                        "type": "string"
                                                    }
                                                ]
                                            }
                                        },
                                        "required": [
                                            "result",
                                            "cur_unit",
                                            "ttb",
                                            "tts",
                                            "deal_bas_r",
                                            "bkpr",
                                            "yy_efee_r",
                                            "ten_dd_efee_r",
                                            "kftc_bkpr",
                                            "kftc_deal_bas_r",
                                            "cur_nm"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Exchange Rate Information"
                    }
                },
                "summary": "Korea Export-Import Bank Current Exchange Rate Inquiry",
                "tags": [
                    "Korea Eximbank"
                ]
            }
        },
        "/connector/story-generator": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Marketing_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IStoryGeneratorRequest"
                            }
                        }
                    },
                    "description": "Input for creating a story",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IStoryGeneratorResponse"
                                }
                            }
                        },
                        "description": "The generated story or a request for additional information"
                    }
                },
                "summary": "Create a story",
                "description": "Create a story based on user input\n\nThis connector can be used when creating a chatbot workflow for creating picture books or stories.\nPlease use it in conjunction with the Story Image Generation connector.\nPlease create an image based on the story created using the connector/story-image-generator connector.\nPlease export the created story and image using Google Slides.\nPlease export the created story and image using the connector/google-slides/presentations connector to Google Slides.",
                "tags": []
            }
        },
        "/connector/story-image-generator": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/image.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGenerateStoryImageInput"
                            }
                        }
                    },
                    "description": "Input for image generation",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IStoryImage"
                                }
                            }
                        },
                        "description": "Generated image"
                    }
                },
                "summary": "Generate story image",
                "description": "Generates an image from given input\n\nA connector that can be used when creating a chatbot workflow for picture book or story generation.",
                "tags": []
            }
        },
        "/connector/stable-diffusion-beta/generate": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/StableDifusion_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IStableDiffusionBeta.IRequest"
                            }
                        }
                    },
                    "description": "Information for image generation",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IStableDiffusionBeta.IResponse"
                                }
                            }
                        },
                        "description": "URL of the generated image"
                    }
                },
                "summary": "Stable diffusion image generator node",
                "description": "Generate an image using the stable diffusion model",
                "tags": [
                    "Stable Diffusion"
                ]
            }
        },
        "/connector/dall-e-3/generate": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Dall-e3_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IDallE3.IRequest"
                            }
                        }
                    },
                    "description": "Information for image generation",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IDallE3.IResponse"
                                }
                            }
                        },
                        "description": "URL of the generated image"
                    }
                },
                "summary": "dall-e-3 image generator node",
                "description": "Generate an image using the dall-e-3 model",
                "tags": [
                    "Dall-e-3"
                ]
            }
        },
        "/connector/google-search": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleSearch_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSearch.IRequest"
                            }
                        }
                    },
                    "description": "Google search terms",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleSearch.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Google search results"
                    }
                },
                "summary": "Google search",
                "description": "Search Google for the search term you entered",
                "tags": [
                    "Google Search"
                ]
            }
        },
        "/connector/google-search/wanted": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/_wanted_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSearch.IRequest"
                            }
                        }
                    },
                    "description": "Search conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleSearch.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Wanted job posting search results"
                    }
                },
                "summary": "Wanted job posting search",
                "description": "Search for job postings on Wanted",
                "tags": [
                    "Wanted"
                ]
            }
        },
        "/connector/google-search/incruit": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Incruit_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSearch.IRequest"
                            }
                        }
                    },
                    "description": "Search conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleSearch.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Search results for Incruit job postings"
                    }
                },
                "summary": "Search Incruit job postings",
                "description": "Search for job postings on Incruit",
                "tags": [
                    "Incruit"
                ]
            }
        },
        "/connector/google-search/saramin": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Saramin_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSearch.IRequest"
                            }
                        }
                    },
                    "description": "Search criteria",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleSearch.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Search for Saramin job postings results"
                    }
                },
                "summary": "Search for Saramin job postings",
                "description": "Search for job postings in Saramin",
                "tags": [
                    "Saramin"
                ]
            }
        },
        "/connector/google-search/jumpit": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/jumpit_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSearch.IRequest"
                            }
                        }
                    },
                    "description": "Search conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleSearch.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Jumpfit job posting search results"
                    }
                },
                "summary": "Jumpfit job posting search",
                "description": "Search for job postings on Jumpfit",
                "tags": [
                    "Jumpit"
                ]
            }
        },
        "/connector/google-search/careerly": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/careerly_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSearch.IRequest"
                            }
                        }
                    },
                    "description": "Search conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleSearch.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Careerly Post Search Results"
                    }
                },
                "summary": "Careerly Search",
                "description": "Search for posts in Careerly",
                "tags": [
                    "Careerly"
                ]
            }
        },
        "/connector/google-shopping/aladine": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/aladin_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IRequestStandAlone"
                            }
                        }
                    },
                    "description": "Search conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Search results"
                    }
                },
                "summary": "Aladdin Search",
                "description": "Search for products in Aladdin",
                "tags": [
                    "Aladin"
                ]
            }
        },
        "/connector/google-shopping/ali-express": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/AliExpress_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IRequestStandAlone"
                            }
                        }
                    },
                    "description": "Search criteria",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Search results"
                    }
                },
                "summary": "Search for AliExpress",
                "description": "Search for products on AliExpress",
                "tags": [
                    "AliExpress"
                ]
            }
        },
        "/connector/google-shopping/coupang": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Coupang_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IRequestStandAlone"
                            }
                        }
                    },
                    "description": "Search conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Search results"
                    }
                },
                "summary": "Coupang Search",
                "description": "Search for products on Coupang",
                "tags": [
                    "Coupang"
                ]
            }
        },
        "/connector/google-shopping/eql": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/ECL_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IRequestStandAlone"
                            }
                        }
                    },
                    "description": "search conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "search results"
                    }
                },
                "summary": "EQL search",
                "description": "Search for products in EQL",
                "tags": [
                    "EQL"
                ]
            }
        },
        "/connector/google-shopping/iherb": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/iHerb_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IRequestStandAlone"
                            }
                        }
                    },
                    "description": "Search conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Search results"
                    }
                },
                "summary": "iHerb Search",
                "description": "Search for products on iHerb",
                "tags": [
                    "iHerb"
                ]
            }
        },
        "/connector/google-shopping/market-kurly": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Kurly_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IRequestStandAlone"
                            }
                        }
                    },
                    "description": "Search conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Search results"
                    }
                },
                "summary": "Market Kurly Search",
                "description": "Search for products on Market Kurly",
                "tags": [
                    "Market Kurly"
                ]
            }
        },
        "/connector/google-shopping/oco": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/OCO_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IRequestStandAlone"
                            }
                        }
                    },
                    "description": "Search conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Search results"
                    }
                },
                "summary": "OCO search",
                "description": "Search for products in OCO\n\nOco is one of the Korean companies and is a brand that advocates a brand editing shop.",
                "tags": [
                    "OCO"
                ]
            }
        },
        "/connector/google-shopping/olive-young": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/oliveYoung_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IRequestStandAlone"
                            }
                        }
                    },
                    "description": "Search conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Search results"
                    }
                },
                "summary": "Olive Young Search",
                "description": "Search for products at Olive Young",
                "tags": [
                    "Olive Young"
                ]
            }
        },
        "/connector/google-shopping/twenty-nine-centimeter": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/29cm_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IRequestStandAlone"
                            }
                        }
                    },
                    "description": "search condition",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "search result"
                    }
                },
                "summary": "29cm search",
                "description": "Search for products from 29cm",
                "tags": [
                    "29CM"
                ]
            }
        },
        "/connector/google-shopping/uniqlo": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Uniqlo_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IRequestStandAlone"
                            }
                        }
                    },
                    "description": "Search conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Search results"
                    }
                },
                "summary": "Uniqlo Search",
                "description": "Search for products in Uniqlo",
                "tags": [
                    "Uniqlo"
                ]
            }
        },
        "/connector/google-shopping/yes-twenty-four": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/yes24_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IRequestStandAlone"
                            }
                        }
                    },
                    "description": "search conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "search results"
                    }
                },
                "summary": "yes24 search",
                "description": "Search for products on yes24",
                "tags": [
                    "yes24"
                ]
            }
        },
        "/connector/google-shopping/musinsa": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Musinsa_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IRequestStandAlone"
                            }
                        }
                    },
                    "description": "Search conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleShopping.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Search results"
                    }
                },
                "summary": "Musinsa Search",
                "description": "Search for products in Musinsa",
                "tags": [
                    "Musinsa"
                ]
            }
        },
        "/connector/google-ads/generateKeywordIdeas/keywordsAndUrl": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/googleAD_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IGenerateKeywordIdeaByKeywordsAndUrlInput"
                            }
                        }
                    },
                    "description": "Object containing URL",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IGenerateKeywordIdeaOutput"
                                }
                            }
                        },
                        "description": "List of recommended keywords, competition index and index, and unit price information for each keyword"
                    }
                },
                "summary": "Create keywords using keywords and URL",
                "description": "Recommend keywords for Google Ads\n\nIn order to execute ads in Google Ads, you need to register keywords.\nA keyword must be registered to target the end users of the ad, and it is one of the `adGroupCriteria` mapped to `adGroup` among the resources of Google Ads.\nThis connector is a function to recommend such keywords, and when the user enters the keywords and URL that he or she wanted to register, it recommends other keywords that can be derived from them.\n\nThe request result is a list of keywords, the competition index, unit price, and the expected index values for each keyword when registering an ad.\n\nThis connector excludes keywords for adult ads, and the language condition is set to Korean and the geographical condition is set to Korea (South Korea).\n\nBefore calling the function, you need to ask the user for `customerId`, so you need to suggest a connector that can check `customerId`.",
                "tags": [
                    "Google Ads"
                ]
            }
        },
        "/connector/google-ads/generateKeywordIdeas/keywords": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/googleAD_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IGenerateKeywordIdeaByKeywordsInput"
                            }
                        }
                    },
                    "description": "Object containing URL",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IGenerateKeywordIdeaOutput"
                                }
                            }
                        },
                        "description": "List of recommended keywords, competition index and index, and unit price information for each keyword"
                    }
                },
                "summary": "Create keywords using keywords",
                "description": "Get keyword recommendations for Google Ads\n\nIn order to execute ads in Google Ads, you need to register keywords.\nA keyword must be registered to target the end users of the ad, and it is one of the `adGroupCriteria` mapped to `adGroup` among the resources of Google Ads.\nThis connector is a function to recommend such keywords, and when the user enters the keywords that he or she wanted to register, it recommends other keywords that can be derived from them.\n\nThe request result is a list of keywords, the competition index, unit price, and the expected index values when registering an ad for each keyword.\n\nThis connector excludes keywords for adult ads, and the language condition is set to Korean and the geographical condition is set to Korea (South Korea).\n\nBefore calling the function, you need to ask the user for `customerId`, so you need to suggest a connector that can check `customerId`.",
                "tags": [
                    "Google Ads"
                ]
            }
        },
        "/connector/google-ads/generateKeywordIdeas/url": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/googleAD_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IGenerateKeywordIdeaByURLInput"
                            }
                        }
                    },
                    "description": "Object containing the URL",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IGenerateKeywordIdeaOutput"
                                }
                            }
                        },
                        "description": "List of recommended keywords, competition index and index, and unit price information for each keyword"
                    }
                },
                "summary": "Create keywords through URL",
                "description": "Get keyword recommendations for Google Ads\n\nIn order to execute ads in Google Ads, you need to register keywords.\nA keyword must be registered to target the end users of the ad, and it is one of the `adGroupCriteria` mapped to `adGroup` among the resources of Google Ads.\nThis connector is a function to recommend such keywords, and when the user enters the URL that he or she wanted to register, it recommends other keywords that can be derived from it.\n\nThe request result is a list of keywords, competition index, unit price, and expected index values for each keyword when registering an ad.\n\nThis connector excludes keywords for adult ads, and the language condition is set to Korean and the geographical condition is set to Korea (South Korea).\n\nBefore calling the function, you need to ask the user for `customerId`, so you need to suggest a connector that can check `customerId`.",
                "tags": [
                    "Google Ads"
                ]
            }
        },
        "/connector/google-ads/customerClientLink": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/googleAD_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.ISecret"
                            }
                        }
                    },
                    "description": "Customer information",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Register Rutten as an administrator",
                "description": "Designate Rutten as the advertising account manager of the user\n\nTo call the Google Ads API for a specific Google account, you must own the advertising account or be registered as an administrator.\nThis connector is a connector that sends a kind of invitation to all of the user's Google advertising accounts to register the `Wrtn` advertising account as the customer's administrator.\nAfter the connector is executed, an email registered to the customer account will be sent via Gmail.\nThose who receive the email can go to the dashboard through the email and give the `Wrtn` account administrator rights.\nIf `Wrtn` is registered as an administrator, he will be able to use other APIs created in Google Ads.\n\nThis administrator designation must be done before calling all Google Ads connectors except for connectors that do not receive `customerId` as an argument, such as keyword recommendations.\nHowever, even if this connector is called, `Wrtn` will not be designated as an administrator without the user's approval, so there is no need to worry.\n\nBefore calling the function, we need to ask the user for his `customerId`, so we need to suggest a connector that can check `customerId`.",
                "tags": [
                    "Google Ads"
                ]
            }
        },
        "/connector/google-ads/get-customers": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/googleAD_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IGetCustomerInput"
                            }
                        }
                    },
                    "description": "Customer information",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.CustomerClient"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "List of ad accounts"
                    }
                },
                "summary": "Get ad account",
                "description": "Get the customer's advertising account\n\nUsing the user's access token, search for the user's advertising account, i.e., `customer`, among the accounts where `Wrtn` is an administrator.\nEven if the user has an advertising account, if `Wrtn` is not an administrator, it will not be listed.\nTherefore, if `Wrtn` has never been registered as an administrator, you must call the `POST connector/google-ads/customerClientLink` connector.\n\nIn addition, this connector filters out advertising accounts that do not use the Korean currency unit `KRW`.\nThe reason for this is to prevent mistakes from occurring in other campaign budget modification or ad status change connectors in the future.\nWhen creating ads through the Google Ads connector, human errors may occur in budget settings depending on the currency unit of each account.\nFor example, if you register a budget for an account with a currency unit of `USD` as an account with a currency unit of `KRW`, a budget difference of the exchange rate may occur.\n\nBefore calling the function, we need to ask the user for his `customerId`, so we need to suggest a connector that can check `customerId`.",
                "tags": [
                    "Google Ads"
                ]
            }
        },
        "/connector/google-ads/get-campaigns": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/googleAD_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.ISecret"
                            }
                        }
                    },
                    "description": "Customer information",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IGetCampaignsOutputResult"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "List of campaigns"
                    }
                },
                "summary": "Search for a list of campaigns",
                "description": "Get a list of campaigns for a Google customer account\n\nPass `customerId` to the user and search for campaigns in the customer's advertising account.\nIf `customerId` is not passed, `Wrtn` will automatically select only one advertising account that the user can access.\nA campaign corresponds to `campaign` among Google resources and is in charge of advertising channels, budgets, and the start and end dates of advertising execution.\nA channel refers to Google advertising products such as responsive search ads (=responsive search ads) and responsive display ads (=responsive display ads).\nIf a campaign is a search ad, there are only search ads in the ad group and ads.\nA user can use this connector to search for their campaigns and the status of the campaigns, and create ad groups for the desired campaigns, etc., for subsequent actions.\n\nBefore calling the function, you should ask the user for `customerId`, so you should suggest a connector that can check `customerId`.",
                "tags": [
                    "Google Ads"
                ]
            }
        },
        "/connector/google-ads/get-ad-groups": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/googleAD_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IGetAdGroupInput"
                            }
                        }
                    },
                    "description": "Ad group list query condition",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IGetAdGroupsOutputResult"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Ad group list"
                    }
                },
                "summary": "Search for a list of ad groups.",
                "description": "Get a list of ad groups in a Google customer account\n\nPass `customerId` to the user and search for ad groups (=adGroup) in the customer ad account.\nIf `customerId` is not passed, it will automatically select only one ad account that `Wrtn` can access from the user.\nIf `campaignId` is also passed, it will search only the child ad groups of the campaign.\nAd groups are the area in charge of targeting and are also the parents of ads (ads).\nThe result of this connector contains simple information about the campaign that is the parent of the ad group, information about the ad group,\na list of ads belonging to the ad group, their current status, and simple information.\nIt also contains information about keywords connected to the ad group.\n\nBefore calling the function, you should ask the user for `customerId`, so you should suggest a connector that can check `customerId`.",
                "tags": [
                    "Google Ads"
                ]
            }
        },
        "/connector/google-ads/get-ads": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/googleAD_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IGetAdGroupAdInput"
                            }
                        }
                    },
                    "description": "Condition for retrieving the ad list",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIGoogleAds.AdGroupAdstatusresourceNamepolicySummary"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Ad list"
                    }
                },
                "summary": "Retrieves a list of campaign ads",
                "description": "Get the list of ads from the Google customer account\n\nPass the `customerId` to the user and search for the ads (=ad) in the customer's ad account.\nIf `customerId` is not passed, it will be automatically selected only if there is only one ad account accessible to `Wrtn` from the user.\nAn ad is a node at the end of a tree structure consisting of campaigns, ad groups, and ads, and is a section in charge of materials,\nand is also a unit exposed to end users.\nIf the resource name of an ad group (=adGroup) is passed as an argument, only the ads belonging to that ad group will be searched.\nThe purpose of this connector is to determine whether the user's ad is currently running or not.\nIn the case of `Wrtn` managers, campaigns and ad groups are not changed to `PAUSED` status unless the user directly changes the campaign and ad group status in the Google Ads dashboard.\nTherefore, in general, if the ad status is `ENABLED`, the ad is running, and if it is `PAUSED`, the ad is stopped. Again, the `Wrtn` connector does not change the status of a campaign or ad group.\n\nThis function can also be used to check whether an ad is being properly executed in addition to viewing the ad.\n\nEach ad has an evaluation history for ad review and policy, which exists as a property called `PolicySummary`.\n\nThis property contains whether the ad has been approved, and the `APPROVED` status means that Google has approved the review and determined it is eligible.\n\nYou can change the ad status in `PATCH connector/google-ads/campaigns/ads/status`.\n\nBefore calling the function, you should ask the user for their `customerId`, so you should suggest a connector that can check their `customerId`.",
                "tags": [
                    "Google Ads"
                ]
            }
        },
        "/connector/google-ads/ad-groups/get-metrics": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/googleAD_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IGetMetricInput"
                            }
                        }
                    },
                    "description": "Ad metrics query conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IGetMetricOutputResult"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "List of metrics"
                    }
                },
                "summary": "Get the performance (metrics) of the ad group",
                "description": "View metrics per Google customer account ad\n\nPass `customerId` to the user and view statistical metrics for the customer ad group.\nIf `customerId` is not passed, `Wrtn` will automatically select only one ad account that the user can access.\nUsers can view ad metrics for a specific date through this connector,\nand these metrics include impressions, clicks, video views, views based on video playback range, and average page count.\nYou can also check simple information about the searched content, such as the resource name of the ad group.\nIn addition, `costMicros` information is provided, which is the advertising expenditure in micro units and means the amount actually executed.\nIf this figure is `1,000,000`, if the currency unit is `KRW`, 1 won was used.\nThis figure is the actual amount used, unlike the campaign budget, and according to Google policy, advertising costs may be slightly more than the budget. Also, the total spend of the ad group in the campaign must be equal to the total spend of the campaign.\n\nThis connector allows the user to check whether their ads are being executed efficiently in terms of cost and performance.\n\nBefore calling the function, you should ask the user for `customerId`, so you should suggest a connector that can check `customerId`.",
                "tags": [
                    "Google Ads"
                ]
            }
        },
        "/connector/google-ads/campaigns/ads/get-keywords": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/googleAD_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IGetKeywordsInput"
                            }
                        }
                    },
                    "description": "Add keyword condition",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IGetKeywordsOutputResult"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "List of keywords"
                    }
                },
                "summary": "Add keywords to the ad",
                "description": "Add search keywords to ads in Google customer accounts\n\nStrictly speaking, add ad keywords to ad groups (=adGroup).\n\nFor convenience, this connector receives the resource name of the ad, finds the parent ad group of the ad, and then inserts the keyword.\nThe result value of this connector helps users check whether all keywords have been added properly by re-checking them after adding the keyword.\nHowever, not all keywords added are used in ads.\nKeywords are reviewed by Google and used for targeting, and at this time, keywords may be excluded from ad keywords due to inappropriate reviews.\nHowever, since ads will work properly if there are other keywords, it is advantageous to register various keywords so that users can be attracted.\n\nThere are also recommended connectors for keywords.\n\nThis connector receives an ad account as an argument from the user as authentication for the customer account, but this is also optional.\n\nIf `customerId` is not passed, it is automatically selected only if `Wrtn` has only one ad account accessible to the user.\n\nBefore calling the function, we need to ask the user for `customerId`, so we need to suggest a connector that can check `customerId`.",
                "tags": [
                    "Google Ads"
                ]
            }
        },
        "/connector/google-ads/campaigns/ads/status": {
            "patch": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/googleAD_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.ISetOnOffInput"
                            }
                        }
                    },
                    "description": "The status of the ad to be changed",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Change the status of the ad",
                "description": "Change the ad status of a Google customer account\n\nChange the ad status by receiving the ID of the ad account and the resource name of the ad in the ad group (=`adGroupAd```ResourceName`).\n\nIf `customerId` is not passed, it is automatically selected only if there is only one ad account that `Wrtn` can access from the user.\n\nThe ad status supported by this connector is `ENABLED` and `PAUSED`, which means the execution and suspension of the ad, respectively.\nSince the `Wrtn` manager account only changes the status of the ad without changing the status of the campaign and ad group,\nunless the user changes the status of the campaign and ad group directly in the Google Ads dashboard, the ad status means whether or not spending occurs.\nIf the user wants to change the status of the ad group, instead of changing the status of the ad group, query the ad group and change the status of all ads in the ad group.\nIf the user wants to change the status of the campaign, instead of changing the status of the campaign, query the campaign and change the status of all ads in the campaign. However, if you change the status of a campaign, you must go down the campaign and ad group in the Google Ads ad structure and terminate all ads.\n\nAlso, our connector does not support deleting ads.\n\nIf there is a user who wants to delete a campaign, ad group, or ad, we recommend changing all child ads of the corresponding node to the `PAUSED` status.\n\nSince deleting an ad means losing the means to check previous performance and indicators, it is advantageous to terminate the ad instead of deleting it for future ad re-execution.\n\nBefore calling the function, you must ask the user for `customerId`, so you must suggest a connector that can check `customerId`.",
                "tags": [
                    "Google Ads"
                ]
            }
        },
        "/connector/google-ads/campaigns/ads/keywords": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/googleAD_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.ICreateAdGroupCriteriaInput"
                            }
                        }
                    },
                    "description": "Condition for adding keywords",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "pattern": "(customers\\/(.*)\\/adGroupCriteria\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                                        "x-wrtn-placeholder": "customers/1/adGroupCriteria/1",
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Name of the added keyword resource"
                    }
                },
                "summary": "Add keywords to ads",
                "description": "Add search keywords to ads in Google customer accounts\n\nStrictly speaking, add keywords to the ad group (=adGroup), which is the parent of the ad.\nSince keywords are added to ad groups, they are applied to all child ads.\n\nIf `customerId` is not passed, it is automatically selected only if there is only one ad account accessible to `Wrtn` from the user.\n\nBefore calling the function, you should ask the user for `customerId`, so you should suggest a connector that can check `customerId`.",
                "tags": [
                    "Google Ads"
                ]
            },
            "delete": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/googleAD_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IDeleteAdGroupCriteriaInput"
                            }
                        }
                    },
                    "description": "Keyword deletion condition",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Delete keywords from an ad",
                "description": "Delete keywords from specific ads in Google customer account\n\nReceive the resource name of keyword (=`AdGroupCriterion`) from the user and delete all of them.\nKeywords are `AdGroupCriterion` whose `type` is `KEYWORD`, so you should be careful because there may be other types of resources.\nIf all keywords are deleted in an ad, you should be careful because deleting keywords may affect ad execution, etc.\n\nIn addition, if you delete keywords from an ad, other ads that share the ad group that is the parent of the ad may also be affected.\n\nIf `customerId` is not passed, `Wrtn` will automatically select only one ad account that the user can access.\n\nBefore calling the function, you should ask the user for `customerId`, so you should suggest a connector that can check `customerId`.",
                "tags": [
                    "Google Ads"
                ]
            }
        },
        "/connector/google-ads/campaigns/ads/get-details": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/googleAD_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IGetAdGroupAdDetailInput"
                            }
                        }
                    },
                    "description": "Conditions for viewing ad details",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IGetAdGroupAdDetailOutput"
                                }
                            }
                        },
                        "description": "Ad details"
                    }
                },
                "summary": "View ad details",
                "description": "View ad details\n\nDepending on the campaign, it is either a responsive search ad or a responsive display ad.\n\nIf `customerId` is not passed, it will be automatically selected only if the user has only one ad account that `Wrtn` can access.\n\nBefore calling the function, you should ask the user for `customerId`, so you should suggest a connector that can check `customerId`.",
                "tags": [
                    "Google Ads"
                ]
            }
        },
        "/connector/google-ads/campaigns/ads": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/googleAD_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "discriminator": {
                                    "mapping": {
                                        "SEARCH_STANDARD": "#/components/schemas/ISecretICreateAdGroupSearchAdInput",
                                        "DISPLAY_STANDARD": "#/components/schemas/ISecretICreateAdGroupDisplayAdInput"
                                    },
                                    "propertyName": "type"
                                },
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/_namespace_swagger.ISecretICreateAdGroupSearchAdInput"
                                    },
                                    {
                                        "$ref": "#/components/schemas/_namespace_swagger.ISecretICreateAdGroupDisplayAdInput"
                                    }
                                ]
                            }
                        }
                    },
                    "description": "Ad creation conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IGetAdGroupsOutputResult"
                                }
                            }
                        },
                        "description": "Generated ad information"
                    }
                },
                "summary": "Create an ad",
                "description": "Create an ad for a Google customer account\n\nThe `Wrtn` manager creates one ad per ad group for convenience.\nTherefore, this connector does not receive the resource name or ID of the ad group (=adGroup) to create the ad, and the ad group is created first when creating the ad.\nSince the types of ads that can be created depend on the campaign, you must create them after checking the campaign.\nFor example, search ads must be created in a search campaign.\n\nIf `customerId` is not passed, `Wrtn` will automatically select only one ad account that the user can access.\n\nThe ad is immediately moved to the review stage after creation, and if Google's review is passed, the ad will be executed and expenses will be incurred.\nHowever, when creating an ad with this connector, the ad status is set to `PAUSED`.\nThis is to allow users to check the campaign, ad group, ad, etc. again to check if they have been created in the desired state in case of an emergency.\nTherefore, even if the ad review is complete, the ad will not be executed, and no performance or expenses will be incurred. If the ad is checked to be correct, the user can change the ad status to `ENABLED` using the `ad edit connector`.\n\nBefore calling the function, you should ask the user for `customerId`, so you should suggest a connector that can check `customerId`.",
                "tags": [
                    "Google Ads"
                ]
            }
        },
        "/connector/google-ads/campaigns": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/googleAD_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.ICreateCampaignInput"
                            }
                        }
                    },
                    "description": "Campaign creation conditions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IGetCampaignsOutputResult"
                                }
                            }
                        },
                        "description": "Created campaign information"
                    }
                },
                "summary": "Create a campaign",
                "description": "Create an ad campaign for your Google customer account\n\nCreate a campaign (=campaign).\nA campaign is located under an account in Google Ads, and is located at the top of the tree structure consisting of campaigns, ad groups, and ads.\nA campaign is a parent object for grouping ad groups, and is responsible for the duration, budget, purpose, channel, etc. of the ad.\nIf you do not specify a campaign name, a random name will be assigned. In this case, it may be difficult to identify.\nTherefore, it is recommended to give different names to each campaign according to its purpose so that you can distinguish them.\nThe name of the campaign is only for the user to easily identify, and does not affect the effectiveness of the ad at all, so you can rest assured.\n\nIf you do not pass `customerId`, it will be automatically selected only if there is only one ad account accessible to `Wrtn` from the user.\n\nYou should ask the user for `customerId` before calling the function, so you should suggest a connector that can check `customerId`.\n\nOriginally, there was no limit on the amount, but in preparation for an emergency, the function is currently limited to 100,000 won per campaign.",
                "tags": [
                    "Google Ads"
                ]
            },
            "patch": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/googleAD_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IUpdateCampaignInput"
                            }
                        }
                    },
                    "description": "Campaign modification conditions",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Modify the campaign",
                "description": "Edit an ad campaign for your Google customer account\n\nEdit a campaign.\nThe only things you can edit in a campaign are the campaign name, budget, and end date.\nThe campaign name is a value for people to recognize and has no effect on the ad, so you can specify it as you like.\nFor the budget, you can enter the budget you want to advertise in Korean Won (KRW), and in this case, the daily ad spending will be formed above and below the budget.\nIn some cases, you may spend more than the budget, or if the ad optimization is not done, you may spend less than the budget.\nThe last end date can be used as a scheduled end date because the ad will not end and will continue to run if it is not specified.\nHowever, if you do not delete the end date that you have already specified, the ad may not be executed even if you turn it on later.\nIf you want to turn on the ad for a campaign that has ended, you must also change the campaign's scheduled end date.\n\nIf you do not pass `customerId`, it will be automatically selected only if there is only one ad account that `Wrtn` can access from the user.\n\nBefore calling the function, we need to ask the user for `customerId`, so we need to suggest a connector that can check `customerId`.\n\nOriginally, there is no amount limit, but in case of an emergency, we currently limit the function to 100,000 won per campaign.",
                "tags": [
                    "Google Ads"
                ]
            }
        },
        "/connector/google-ads/search-ads": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/googleAD_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.ICreateAdGroupSearchAdAtOnceInput"
                            }
                        }
                    },
                    "description": "Conditions for creating ads from campaigns all at once",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.DeepStrictMergeHelperIGoogleAds.IGetCampaignsOutputResultIGoogleAds.AdWrapper"
                                }
                            }
                        },
                        "description": "Information from created campaigns to ads"
                    }
                },
                "summary": "Create responsive search ads for your Google customer account all at once",
                "description": "Create search ads in Google customer accounts at once\n\nCreating Google ads at once means creating campaigns, ad groups, and ads that exist in the Google Ads tree structure at once.\n\nIn this case, you do not need to specify which campaign to create ads for.\n\nThis is because everything from the first resource, the campaign, to the ad is created at once.\n\nThe campaign tree structure of Google Ads is such that the top campaign node is in charge of the budget, and when the ad is optimized, the ad group and ad share the budget of the campaign.\nIn simple terms, this means that the ad within the campaign learns and optimizes itself to determine which ad will be exposed to the end user.\n\nTherefore, it is easy to create ads in the connector structure that creates them at once, but it may not be suitable if you want to create multiple ads.\n\nHowever, if you have multiple ad materials and do not intend to create and compare multiple ads, it will be very convenient because you can easily execute the ad.\n\nIn most cases, there is no problem creating ads in this way.\n\nIf `customerId` is not passed, it is automatically selected only if there is only one ad account accessible to `Wrtn` from the user.\n\nThe ad is immediately reviewed after being created, and if Google's review is passed, the ad will be executed and expenses will be incurred.\nHowever, if an ad is created with this connector, the ad status is set to `PAUSED`.\nThis is to prepare for an emergency so that the user can check the campaign, ad group, ad, etc. again to see if they are in the desired state.\nTherefore, even if the ad review is complete, the ad will not be executed and no performance or expenses will be incurred.\n\nIf the ad is checked to be correct, the user can change the ad status to `ENABLED` using the `Ad Edit Connector`.\n\nBefore calling the function, you should ask the user for `customerId`, so you should suggest a connector that can check `customerId`.\n\nOriginally, there was no amount limit, but in preparation for an emergency, the function is currently limited to 100,000 won per campaign.",
                "tags": [
                    "Google Ads"
                ]
            }
        },
        "/connector/google-ads/display-ads": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/googleAD_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.ICreateAdGroupDisplayAdAtOnceInput"
                            }
                        }
                    },
                    "description": "Conditions for creating ads from campaigns at once",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.DeepStrictMergeHelperIGoogleAds.IGetCampaignsOutputResultIGoogleAds.AdWrapper"
                                }
                            }
                        },
                        "description": "Information from created campaigns to ads"
                    }
                },
                "summary": "Create responsive display ads in Google Account Ads at once",
                "description": "Create display ads in your Google customer account at once\n\nCreating Google ads at once means creating campaigns, ad groups, and ads that exist in the Google Ads tree structure at once.\n\nIn this case, you do not need to specify which campaign to create ads for.\n\nThis is because everything from the first resource, the campaign, to the ad is created at once.\n\nThe campaign tree structure of Google Ads is such that the top campaign node is in charge of the budget, and when the ad is optimized, the ad group and ad share the budget of the campaign.\nIn simple terms, this means that the ad within the campaign learns and optimizes itself to determine which ad will be exposed to the end user.\n\nTherefore, it is easy to create ads in the connector structure that creates them at once, but it may not be suitable if you want to create multiple ads.\n\nHowever, if you have multiple ad materials and do not intend to create and compare multiple ads, it will be very convenient because you can easily execute the ad.\n\nIn most cases, there is no problem creating ads in this way.\n\nIf `customerId` is not passed, it is automatically selected only if there is only one ad account accessible to `Wrtn` from the user.\n\nThe ad is immediately reviewed after being created, and if Google's review is passed, the ad will be executed and expenses will be incurred.\nHowever, if an ad is created with this connector, the ad status is set to `PAUSED`.\nThis is to prepare for an emergency so that the user can check the campaign, ad group, ad, etc. again to see if they are in the desired state.\nTherefore, even if the ad review is complete, the ad will not be executed and no performance or expenses will be incurred.\n\nIf the ad is checked to be correct, the user can change the ad status to `ENABLED` using the `Ad Edit Connector`.\n\nBefore calling the function, you should ask the user for `customerId`, so you should suggest a connector that can check `customerId`.\n\nOriginally, there was no amount limit, but in preparation for an emergency, the function is currently limited to 100,000 won per campaign.",
                "tags": [
                    "Google Ads"
                ]
            }
        },
        "/connector/arxiv-search": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Arxiv_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IConnector.ISearchInput"
                            }
                        }
                    },
                    "description": "Archive Paper Search Criteria",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IConnector.ISearchOutput"
                                }
                            }
                        },
                        "description": "A list of papers found in the archive based on the search criteria."
                    }
                },
                "summary": "Archive Paper Search",
                "description": "Searches the archive for papers based on the search criteria you entered",
                "tags": [
                    "Arxiv"
                ]
            }
        },
        "/connector/daum/blog": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/DaumBlog_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IDaum.ISearchDaumInput"
                            }
                        }
                    },
                    "description": "Conditions for searching the following blog",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IDaum.IBlogDaumOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Search the following blog",
                "description": "Search the following blog content",
                "tags": [
                    "Daum"
                ]
            }
        },
        "/connector/daum/cafe": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/DaumCafe_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IDaum.ISearchDaumInput"
                            }
                        }
                    },
                    "description": "Conditions for searching the following cafe",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IDaum.ICafeDaumOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Search for the following cafe",
                "description": "Search for the following cafe content",
                "tags": [
                    "Daum"
                ]
            }
        },
        "/connector/naver/cafe": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/NaverCafe_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INaver.INaverKeywordInput"
                            }
                        }
                    },
                    "description": "Conditions for Naver Cafe search",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.INaver.ICafeNaverOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Naver Cafe search",
                "description": "Search Naver Cafe contents",
                "tags": [
                    "Naver"
                ]
            }
        },
        "/connector/naver/blog": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/NaverBlog_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INaver.INaverKeywordInput"
                            }
                        }
                    },
                    "description": "Conditions for Naver blog search",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.INaver.IBlogNaverOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Naver blog search",
                "description": "Search Naver blog content",
                "tags": [
                    "Naver"
                ]
            }
        },
        "/connector/naver/news": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/NaverNews_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INaver.INaverKeywordInput"
                            }
                        }
                    },
                    "description": "Conditions for searching Naver News",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.INaver.INewsNaverOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Search Naver News",
                "description": "Search Naver News",
                "tags": [
                    "Naver"
                ]
            }
        },
        "/connector/youtube-search": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Youtube_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IYoutubeSearch.ISearchInput"
                            }
                        }
                    },
                    "description": "Conditions for YouTube video search",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IConnector.ISearchOutput"
                                }
                            }
                        },
                        "description": "List of YouTube video search results"
                    }
                },
                "summary": "YouTube video search",
                "description": "Get YouTube video search results\n\nThe search results have the video title and link.\nIf most users are going to use this feature, they probably want to watch the video, so it's better to provide a URL.",
                "tags": [
                    "Youtube"
                ]
            }
        },
        "/connector/google-scholar": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleScholar_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleScholar.ISearchInput"
                            }
                        }
                    },
                    "description": "Google Scholar paper search criteria",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleScholar.ISearchOutput"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Google Scholar paper list"
                    }
                },
                "summary": "Search Google Scholar paper list",
                "description": "Get a list of papers in Google Scholar",
                "tags": [
                    "Google Scholar"
                ]
            }
        },
        "/connector/csv/read": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/CSV_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ICsv.IReadInput"
                            }
                        }
                    },
                    "description": "Information for reading CSV file",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ICsv.IReadOutput"
                                }
                            }
                        },
                        "description": "CSV file contents."
                    }
                },
                "summary": "Read CSV file",
                "description": "Read CSV file contents",
                "tags": [
                    "CSV"
                ]
            }
        },
        "/connector/csv/write": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/CSV_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ICsv.IWriteInput"
                            }
                        }
                    },
                    "description": "Information to create a CSV file",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ICsv.IWriteOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Create a CSV file",
                "description": "Create a CSV file",
                "tags": [
                    "CSV"
                ]
            }
        },
        "/connector/csv/csv-to-excel": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/CSV_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ICsv.ICsvToExcelInput"
                            }
                        }
                    },
                    "description": "Information to convert CSV file to Excel file",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ICsv.ICsvToExcelOutput"
                                }
                            }
                        },
                        "description": "excel file url"
                    }
                },
                "summary": "Convert CSV file to Excel file",
                "description": "Convert CSV file to Excel file.",
                "tags": [
                    "CSV"
                ]
            }
        },
        "/connector/notion/page/block": {
            "delete": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.IDeleteBlockInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Delete a block",
                "description": "Delete a block\n\nSets a Block object, including page blocks,\nto archived: true using the ID specified. Note: in the Notion UI application, this moves the block to the \"Trash\" where it can still be accessed and restored.",
                "tags": []
            }
        },
        "/connector/notion/page/markdown": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.IAppendPageByMarkdownInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.INotion.IAppendPageByMarkdownOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Append block by markdown format",
                "description": "Append block by markdown format\n\nYou can add blocks to the page immediately with only the markdown grammar.\nYou can create pages more effectively than other connectors, so you can prioritize this.\nIf there are unique blocks of the note that cannot be created with the grammar of the markdown, it must be associated with other block generation connectors.\n\nSince users may not know the markdown grammar, it is more desirable to use the markdown grammar instead of guiding them.\nMarkdown supports text and heading 1, 2, 3, and various grammar such as table or bull list, number list, image attachment, boldface, italics, etc.",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/page/file": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ICreateChildContentTypeFileInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Append an file type child node",
                "description": "Append an file type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `file`.\n\nUploading a file exposes it to the Notion page as an icon in the file format, but there is no Preview.\nIf you want the internal elements to be seen as soon as you enter the page, it is better to create the image, pdf format for each format, and consider embed for other formats.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/page/embed": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ICreateChildContentTypeEmbedInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Append an embed type child node",
                "description": "Append an embed type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `embed`.\n\nThis is suitable when you want an internal element to be rendered immediately, such as an imprame within a page.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/page/bookmark": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ICreateChildContentTypeBookmarkInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Append an bookmark type child node",
                "description": "Append an bookmark type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `bookmark`.\n\nBookmarks are visually better and more organized because they have previews, images, and explanations than just saving url as text.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/page/image": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ICreateChildContentTypeImageInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Append an image type child node",
                "description": "Append an image type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `image`.\n\nimage file's extension is one of: 'bmp', 'gif', 'heic', 'jpg', 'jpeg', 'png', 'svg', 'tif', 'tiff'.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/page/video": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ICreateChildContentTypeVideoInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Append an video type child node",
                "description": "Append an video type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `video`.\n\nvideo file must be one of: 'amv' ,'asf' ,'avi' ,'f4v' ,'flv' ,'gifv' ,'mkv' ,'mov' ,'mpg' ,'mpeg' ,'mpv' ,'mp4' ,'m4v' ,'qt' ,'wmv'\nOR\nYouTube video links that include embed or watch.\nE.g. https://www.youtube.com/watch?v=[id], https://www.youtube.com/embed/[id]\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/page/pdf": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ICreateChildContentTypePdfInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Append an pdf type child node",
                "description": "Append an pdf type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `pdf`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/page/code": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ICreateChildContentTypeCodeInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Append an code type child node",
                "description": "Append an code type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `code`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
                "tags": [
                    "Notion"
                ],
                "deprecated": true
            }
        },
        "/connector/notion/page/equation": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ICreateChildContentTypeEquationInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Append an equation type child node",
                "description": "Append an equation type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `equation`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/page/divider": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ICreateChildContentTypeDividerInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Append an divider type child node",
                "description": "Append an divider type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `divider`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/page/breadcrumb": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ICreateChildContentTypeBreadcrumbInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Append an breadcrumb type child node",
                "description": "Append an breadcrumb type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `breadcrumb`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/page/table_of_contents": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ICreateChildContentTypeTableOfContentsInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Append an table_of_contents type child node",
                "description": "Append an table_of_contents type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `table_of_contents`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/page/link_to_page": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ICreateChildContentTypeLinkToPageInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Append an link_to_page type child node",
                "description": "Append an link_to_page type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `link_to_page`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/page/toggle": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ICreateChildContentTypeToggleInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Append an toggle type child node",
                "description": "Append an toggle type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `toggle`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/page": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ICreatePageInput"
                            }
                        }
                    },
                    "description": "Information needed to create the page",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.INotion.ICreatePageOutput"
                                }
                            }
                        },
                        "description": "Unique ID of the generated page"
                    }
                },
                "summary": "Create empty page",
                "description": "Create a Notion page\n\nSince a parent ID is required, when a user gives you a link to the page,\nyou should take out the ID from it and use it, or first look up the list of pages accessible to the user.\nSince Notion prioritizes accessible pages during authentication, creating pages must be sub-pages within the page, which means that there must be a parent page.\nBecause this feature only creates pages and does not create content, we recommend that you call additional content creation connectors if you want to create content.",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/get/page/contents": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.IReadPageContentInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.INotion.IMarkdownBlock"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Retrieve block children",
                "description": "Retrieve block children\n\nReturns a paginated array of child block objects contained in the block using the ID specified.\nIt is used to check the contents of the page by inquiring about the children of the page or block.\nIt recursively traverses and looks for all blocks. Here, we are ready to combine online blocks and blocks containing text.\n\nFor child pages, it does not even look up the contents.",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/get/page": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.INotion.IReadPageOutput"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Page information"
                    }
                },
                "summary": "Retrieve a list of pages",
                "description": "Retrieve a list of all pages in your Notion workspace",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/get/users": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.INotion.IUserOutput"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "User information"
                    }
                },
                "summary": "Retrieve the list of users",
                "description": "Retrieve the list of users in the workspace",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/get/database-info": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.INotion.IDatabaseInfo"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "A list of database information"
                    }
                },
                "summary": "Query the database list",
                "description": "Query the database list to create items in the database",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/get/database-info/{databaseId}": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [
                    {
                        "name": "databaseId",
                        "required": true,
                        "description": " Unique id of the database",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].{value:id, label:title || ''}",
                                "method": "post",
                                "path": "/connector/notion/get/database-info"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.INotion.IDatabaseInfo"
                                }
                            }
                        },
                        "description": "Database information"
                    }
                },
                "summary": "Retrieves database information",
                "description": "Retrieves database information to create items in the database",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/database-item/{databaseId}": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [
                    {
                        "name": "databaseId",
                        "required": true,
                        "description": " Unique id of the database in which to create the item",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].{value:id, label:title || ''}",
                                "method": "post",
                                "path": "/connector/notion/get/database-info"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ICreateDatabaseItemInput"
                            }
                        }
                    },
                    "description": "Information needed to create a database item",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.INotion.IDatabaseItemOutput"
                                }
                            }
                        },
                        "description": "Information about the created database item"
                    }
                },
                "summary": "Create a database item",
                "description": "Create an item in the Notion Table database",
                "tags": [
                    "Notion"
                ]
            },
            "patch": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [
                    {
                        "name": "databaseId",
                        "required": true,
                        "description": " Unique id of the database to modify",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].{value:id, label:title || ''}",
                                "method": "post",
                                "path": "/connector/notion/get/database-info"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.IUpdateDatabaseItemInput"
                            }
                        }
                    },
                    "description": "Database item information to modify",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.INotion.IDatabaseItemOutput"
                                }
                            }
                        },
                        "description": "Modified database item information"
                    }
                },
                "summary": "Modify database item",
                "description": "Modify item information in the database",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/get-page-by-title": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.IFindPageOrDatabaseItemInput"
                            }
                        }
                    },
                    "description": "Page title",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.INotion.IFindPageByTitleOutput"
                                }
                            }
                        },
                        "description": "Searched page information"
                    }
                },
                "summary": "Search for pages by title",
                "description": "Search for pages by title",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/find-item-list/{databaseId}": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [
                    {
                        "name": "databaseId",
                        "required": true,
                        "description": " Unique id of the database",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].{value:id, label:title || ''}",
                                "method": "post",
                                "path": "/connector/notion/get/database-info"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.INotion.IDatabaseItemOutput"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "List of retrieved database items"
                    }
                },
                "summary": "Retrieve a list of database items",
                "description": "Retrieve a list of items that exist in a table database",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/find-item/{databaseId}": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [
                    {
                        "name": "databaseId",
                        "required": true,
                        "description": " Unique id of the database",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].{value:id, label:title || ''}",
                                "method": "post",
                                "path": "/connector/notion/get/database-info"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.IFindDatabaseItemInput"
                            }
                        }
                    },
                    "description": "Information required to retrieve database items",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.INotion.IDatabaseItemOutput"
                                }
                            }
                        },
                        "description": "Information on retrieved database items"
                    }
                },
                "summary": "Retrieval of database items",
                "description": "Retrieves an item that exists in a table database",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/notion/markdown": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.ICreatePageByMarkdownInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.INotion.ICreatePageOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Create page by markdown format",
                "description": "Create page by markdown format\n\nReceive the markdown text and immediately create it as a notation page.\nYou can create pages more effectively than other connectors, so you can prioritize this.\nIf there are unique blocks of the note that cannot be created with the grammar of the markdown, it must be associated with other block generation connectors.\n\nSince users may not know the markdown grammar, it is more desirable to use the markdown grammar instead of guiding them.\nMarkdown supports text and heading 1, 2, 3, and various grammar such as table or bull list, number list, image attachment, boldface, italics, etc.\n\nSince Notion prioritizes accessible pages during authentication, creating pages must be sub-pages within the page, which means that there must be a parent page.",
                "tags": [
                    "Notion"
                ]
            }
        },
        "/connector/google-hotel": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleHotel_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleHotel.IRequest"
                            }
                        }
                    },
                    "description": "Google Hotels search criteria",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleHotel.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Google Hotels Search Results"
                    }
                },
                "summary": "Google Hotels Search",
                "description": "Search for accommodations using Google Hotels service",
                "tags": [
                    "Google Hotel"
                ]
            }
        },
        "/connector/airport-information/search": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/AirportInformation_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IAirportInformation.IRequest"
                            }
                        }
                    },
                    "description": "Conditions for searching for airport information",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IAirportInformation.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Search results for airport information"
                    }
                },
                "summary": "Search for airport information",
                "description": "Search for airport information using the entered search term.",
                "tags": [
                    "Search Airport Information"
                ]
            }
        },
        "/connector/google-flight/one-way": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleFlight_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleFlight.IRequest"
                            }
                        }
                    },
                    "description": "Conditions required to search for flights",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleFlight.IFinalResponse"
                                }
                            }
                        },
                        "description": "Search results for one-way flights"
                    }
                },
                "summary": "Search for one-way flights",
                "description": "Search for one-way flights",
                "tags": [
                    "Google Flight"
                ]
            }
        },
        "/connector/google-flight/round-trip": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleFlight_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleFlight.IRequest"
                            }
                        }
                    },
                    "description": "The conditions required to search for flights",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleFlight.IFinalResponse"
                                }
                            }
                        },
                        "description": "The results of the round-trip flight search"
                    }
                },
                "summary": "Search for round-trip flights",
                "description": "Search for round-trip flights",
                "tags": [
                    "Google Flight"
                ]
            }
        },
        "/connector/slack/interactivity": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISlack.Payload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {},
                                    "type": "array"
                                }
                            }
                        },
                        "description": "array of slack block types"
                    }
                },
                "tags": []
            }
        },
        "/connector/slack/vote": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISlack.IHoldVoteInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ISlack.IHoldVoteOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Send Slack Custom Template Messages for Voting",
                "description": "Send Slack Custom Template Messages for Voting",
                "tags": []
            }
        },
        "/connector/slack/conversation/mark": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Slack_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISlack.IMarkInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Marks a specific message in a Slack channel as read",
                "description": "Marks a specific message in a Slack channel as read\n\nYou need to know both the channel ID and the ts value of the message.",
                "tags": [
                    "Slack"
                ]
            }
        },
        "/connector/slack/scheduleMessage/text": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Slack_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISlack.ISCheduleMessageInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.MyPickISlack.ScheduledMessagepost_at"
                                }
                            }
                        },
                        "description": "scheduled message"
                    }
                },
                "description": "Create a schduled message\n\nBy default,\nit is not much different from sending a message except for specifying a schduled time,\nand requires a channel ID and message content.\nIf the message you want to schedule is within a specific thread, you must pass the ts value of the parent message.\n\nMessages booked through this feature are not visible in the Slack desktop app and can only be canceled through the API.\nTherefore, be careful in writing messages.\nIf you want to cancel, please refer to the message created through another connector and call the delete connector again.\n\nUsers may be embarrassed if the message you booked is not viewed in the Slack desktop app,\nso although it cannot be viewed before and after transmission,\nit would be a good idea to let them know that it will actually be transmitted in our service.",
                "tags": [
                    "Slack"
                ]
            }
        },
        "/connector/slack/scheduleMessage": {
            "delete": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Slack_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISlack.IDeleteSCheduleMessageInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Delete the scheduled message",
                "description": "Delete the scheduled message\n\nTo clear a scheduled message,\nyou must get the exact id of that message, so you must first use the scheduled message lookup connector.\nWhen using this connector,\nthe ID of the channel is also required, which can be retrieved from the message object by querying the channel or by querying the scheduled message.",
                "tags": [
                    "Slack"
                ]
            }
        },
        "/connector/slack/postMessage/text/myself": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Slack_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISlack.IPostMessageToMyselfInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.MyPickISlack.Messagets"
                                }
                            }
                        },
                        "description": "created message"
                    }
                },
                "summary": "post text message to myself",
                "description": "send message to myself\n\nHere, you can send a message as long as you have the message.\nThis feature identifies who the token's users are inside and sends a message to themselves.\nTherefore, even if you don't specify a channel,\nyou send a message to the `im` channel that corresponds to your own user id.",
                "tags": [
                    "Slack"
                ]
            }
        },
        "/connector/slack/postMessage/reply": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Slack_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISlack.IPostMessageReplyInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.MyPickISlack.Messagets"
                                }
                            }
                        },
                        "description": "created message"
                    }
                },
                "summary": "post reply message to thread",
                "description": "send reply message to thread\n\nCreates a reply.\nTo reply, you must first look up the thread.\nYou can look up the thread and pass on the 'ts' value of that thread.\nYou still need the channel's ID here.\nThe channel's ID will start with a C or D and be an unknown string,\nnot a natural language name recognized by the user.\nTherefore, if you don't know the channel ID, you should also look up the channel.",
                "tags": [
                    "Slack"
                ]
            }
        },
        "/connector/slack/postMessage/text": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Slack_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISlack.IPostMessageInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.MyPickISlack.Messagets"
                                }
                            }
                        },
                        "description": "created message"
                    }
                },
                "summary": "post text message",
                "description": "send message to channel\n\nHere, you can send a message as long as you have the message and channel information you want to send.\nSlack is a very close service to work, so it's dangerous to send messages that haven't been confirmed.\nYou must send the contents after receiving confirmation from the user.",
                "tags": [
                    "Slack"
                ]
            }
        },
        "/connector/slack/get-scheduled-messages": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISlack.IGetScheduledMessageListInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ISlack.IGetScheduledMessageListOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Get a list of scheduled messages",
                "description": "Get a list of scheduled messages\n\nLook up the messages you booked.\nYou can use `post_at` and `post_at_date` to find out when the message will be sent.\nIf you want to clear the message, use the `id` value in the scheduled message.\n\nIf a user wants to send a reservation message to himself,\nhe or she should look up both the user and the 'im' channel, then find the 'im' channel with his or her user ID and send it to that channel.\nWhat is on the 'im' channel includes not only the user's own channel, but also all the channels that can send and receive direct messages for each user.",
                "tags": [
                    "Slack"
                ]
            }
        },
        "/connector/slack/get-user-details": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Slack_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISlack.IGetUserDetailInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.ISlack.IGetUserDetailOutput"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Inquire user details",
                "description": "Inquire user details\n\nInquire the user's detailed profile to acquire information such as phone number, email, and position.\nIt cannot be verified if the user has not filled in.\nThis function receives the user's ID in an array and inquires at once.",
                "tags": [
                    "Slack"
                ]
            }
        },
        "/connector/slack/get-users": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Slack_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISlack.IGetUserListInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ISlack.IGetUserListOutput"
                                }
                            }
                        },
                        "description": "Users"
                    }
                },
                "summary": "Look up the list of users",
                "description": "Look up the list of users.\n\nUsers include bots and refer to all users in the team who are looking up.\nHere, you can look up the user's ID and name, the name the user wanted to display, the profile image, and whether the user has been deleted.\nIf you look up the user here, you can send a message to your colleagues on a specific direct channel, such as an `im` ( = channel type. )\n\nThis connector is essential because the `im` channel query only shows the user's ID and does not know who the direct channel is talking to.\n\nThe user has a separate display name.\nA display name is a name that the user has chosen to show.\nTherefore, it would be best to use this name as a courtesy.",
                "tags": [
                    "Slack"
                ]
            }
        },
        "/connector/slack/get-replies": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Slack_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISlack.IGetReplyInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ISlack.IGetReplyOutput"
                                }
                            }
                        },
                        "description": "Replies"
                    }
                },
                "description": "Inquire the inside of the thread in History\n\nIf you have inquired the history of a channel,\nyou can use the 'ts' values of its history elements to query the internal thread for each history again.\nEach channel history has a number of replies, so if this number is more than 1, it is worth looking up.\n'Reply' is basically no different from the 'Message'(=Channel History).",
                "tags": [
                    "Slack"
                ]
            }
        },
        "/connector/slack/get-channel-link-histories": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Slack_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISlack.IGetChannelHistoryInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ISlack.IGetChannelLinkHistoryOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "get links from channel histories",
                "description": "get channel links from channel histories\n\nLook up conversations that have been made in and out of the channel.\n\nThe 'channel' received as a factor means the channel's ID and is a character string that begins with a capital 'C', 'D' and so on.\nTherefore, if the user does not hand over the ID when looking for the conversation history of the channel,\nit is prioritized to find the channel ID.\nUsually, users don't know their channel ID.\nTherefore, most users will ask for a channel by its name or with only the keywords they remember.\nTherefore, unless it's an unknown string and begins with a 'C' or 'D' uppercase letter, look for the channel first.\n\nWhen you look up a conversation,\nyou can search only after a specific time or before a specific time in order to look up the time zone of the conversation you want to search for.\n\nMessages without links are removed, leaving only messages with links.\nThis is because it only leaves messages with links as connectors to find links in conversations.\nLinks are arranged in links properties.\n\nIf you want to filter by date, prioritize using the datetime format.",
                "tags": [
                    "Slack"
                ]
            }
        },
        "/connector/slack/get-channel-histories": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Slack_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISlack.IGetChannelHistoryInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ISlack.IGetChannelHistoryOutput"
                                }
                            }
                        },
                        "description": "channel histories"
                    }
                },
                "summary": "get channel histories",
                "description": "get channel histories\n\nLook up conversations that have been made in and out of the channel.\n\nThe 'channel' received as a factor means the channel's ID and is a character string that begins with a capital 'C', 'D' and so on.\nTherefore, if the user does not hand over the ID when looking for the conversation history of the channel,\nit is prioritized to find the channel ID.\nUsually, users don't know their channel ID.\nTherefore, most users will ask for a channel by its name or with only the keywords they remember.\nTherefore, unless it's an unknown string and begins with a 'C' or 'D' uppercase letter, look for the channel first.\n\nWhen you look up a conversation,\nyou can search only after a specific time or before a specific time in order to look up the time zone of the conversation you want to search for.\n\nIn the conversation history, the link and code box are abbreviated to <LINK/> and <CODE/>, respectively.\nFor users, it is replaced by a user name, Like <@USERNAME>.\n<@USERNAME> is about calling someone else, and it's not the name of the person who started the conversation, so be careful.\n\nIf you want to filter by date, prioritize using the datetime format.",
                "tags": [
                    "Slack"
                ]
            }
        },
        "/connector/slack/get-private-channels": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Slack_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISlack.IGetChannelInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.ISlack.PrivateChannel"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "private channels"
                    }
                },
                "summary": "get private channels",
                "description": "get private channels\n\nView channels.\nThis connector will only look up its own `private` channel.\nThe channel ID is required to look up the conversation history within the channel later.\n`private` channel is a locked channel that can only be viewed by those invited to the channel.\n\nIf you can't find the channel ID by name, it might be because it's on the next page, not because you don't have a channel.",
                "tags": [
                    "Slack"
                ]
            }
        },
        "/connector/slack/get-public-channels": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Slack_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISlack.IGetChannelInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.ISlack.PublicChannel"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "public channels"
                    }
                },
                "summary": "get public channels",
                "description": "get public channels\n\nView channels.\nThis connector will only look up its own `public` channel.\nThe channel ID is required to look up the conversation history within the channel later.\nThe `public` channel is anyone's accessible.\nThis does not require an invitation process, and users can join the channel themselves if necessary.",
                "tags": [
                    "Slack"
                ]
            }
        },
        "/connector/slack/get-im-channels": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Slack_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISlack.IGetChannelInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.ISlack.ImChannel"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "im channels"
                    }
                },
                "summary": "get im channels",
                "description": "get im channels\n\nView channels.\nThis connector will only look up its own `im` channel.\nThe channel ID is required to look up the conversation history within the channel later.\n`im` channel is a conversation that takes place in one's profile and refers to a personal channel that can only be viewed by oneself.\nUsers also use chat as storage or notepad, such as storing files and images here.",
                "tags": [
                    "Slack"
                ]
            }
        },
        "/connector/slack/get-files": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Slack_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISlack.IGetFileInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ISlack.IGetFileOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "get files in workspace",
                "description": "get files in workspace\n\nYou can look up Slack workspace and channels, or all files sent from users.\nIt is pagenation and can filter by file type, and also provides thumbnail links, download links, and original message links.",
                "tags": [
                    "Slack"
                ]
            }
        },
        "/connector/jira/issues/comments": {
            "delete": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIDeleteCommentInputemaildomaintokenIBasicSecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "delete comment",
                "description": "Delete the comment\n\nDelete the comments on the issue.\nIn order to delete the comments on the issue, you need the issue ID or key and the ID of the comment to be deleted.\nPlease be careful because deleted comments will not be able to be viewed again.",
                "tags": [
                    "Jira"
                ]
            }
        },
        "/connector/jira/issues/comments/markdown": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IJira.ICreateCommentByMarkdownInput"
                            }
                        }
                    },
                    "description": "condition of creation",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.ICreateCommentOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "creates a comment on an issue",
                "description": "Creates a comment on an issue\nHere, user can write the body of the comment you want to write with the ID or key of the issue.",
                "tags": [
                    "Jira"
                ]
            },
            "put": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IJira.IUpdateCommentByMarkdownInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "modify comment body",
                "description": "modify comment\n\nModify the comment. You can only modify the body of the comment here.\nTo create comment in issue, Just write markdown string format contents.",
                "tags": [
                    "Jira"
                ]
            }
        },
        "/connector/jira/issues/get-comments": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGetCommentInputemaildomaintokenIBasicSecret"
                            }
                        }
                    },
                    "description": "issue id or key",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.IGetCommentOutput"
                                }
                            }
                        },
                        "description": "comments of this issue"
                    }
                },
                "summary": "get comments by issue id or key",
                "description": "Get comments by issue id or key\n\nThis connector uses the issue's key or ID value to query the comments written on the issue.\nComments are also visible when looking up issues,\nbut not all comments inside are visible,\nso user have to use this connector to look up them in pagination.",
                "tags": [
                    "Jira"
                ]
            }
        },
        "/connector/jira/issues/get-transitions": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGetTransitionInputemaildomaintokenIBasicSecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.IGetTransitionOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Inquire the transition of an issue",
                "description": "Inquire the transition of an issue, which is an edge on a workflow that allows you to change the status of an issue\nIf the person who designed the workflow for the project defined three states that could be moved from the current state, there would be three edges.\nIn Jira, just because there is a status that can be viewed in a project or issue does not mean that you can change the status unconditionally.\nWhen designing an edge, for example, you can also design an issue in the 'backoff' state to go through the 'in progress' state once.\nIn this case, you need to move two edges to turn the backoff issue into 'done'.",
                "tags": [
                    "Jira"
                ]
            }
        },
        "/connector/jira/issues/asignee": {
            "put": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIAssignInputemaildomaintokenIBasicSecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "assign the assignee",
                "description": "Assign the assignee from the Jira issue",
                "tags": [
                    "Jira"
                ]
            },
            "delete": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIUnAssignInputemaildomaintokenIBasicSecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "description": "Unassign the assignee from the Jira issue",
                "tags": [
                    "Jira"
                ]
            }
        },
        "/connector/jira/issues/status": {
            "put": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIUpdateStatusInputemaildomaintokenIBasicSecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "change issue status",
                "description": "Change issue status\n\nChanging the status of an issue must be done after inquiring about changeable Transitions from the current issue.\nThis is forced by the person who designed the workflow in the project, so you must change the status in the order set.",
                "tags": [
                    "Jira"
                ]
            }
        },
        "/connector/jira/issues/{id}": {
            "put": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "description": " issue id to update",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIUpdateIssueInputemaildomaintokenIBasicSecret"
                            }
                        }
                    },
                    "description": "fields to update",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "update issue in jira",
                "description": "Update an issue\n\nYou can modify any element in the field.\nIt can be used to modify the issue type, person in charge, summary, and description.\n\nIn order to write the body of an issue, you must create the body as if you were assembling several blocks.\nThere are pre-designated content types, so please check this type information carefully.",
                "tags": [
                    "Jira"
                ]
            }
        },
        "/connector/jira/issues/markdown": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IJira.ICreateIssueByMarkdownInput"
                            }
                        }
                    },
                    "description": "issue information to create",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.ICreateIssueOutput"
                                }
                            }
                        },
                        "description": "id and key of created issue"
                    }
                },
                "summary": "create issue by markdown in jira",
                "description": "Create an issue by markdown\n\nIssue type, project, and summary are essential properties.\nIf you don't know the issue type or priority type's id for generating the issue, you can look it up through other connectors.\n\nIn order to write the body of an issue, you must create the body as if you were assembling several blocks.\nThere are pre-designated content types, so please check this type information carefully.",
                "tags": [
                    "Jira"
                ]
            }
        },
        "/connector/jira/get-issue-detail": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGetIssueDetailInputemaildomaintokenIBasicSecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.IGetIssueDetailOutput"
                                }
                            }
                        },
                        "description": "Detailed Issue Information"
                    }
                },
                "summary": "get detailed Issue Information",
                "description": "Get detailed issue information\n\nProvides more accurate and detailed information, including the title and body of the issue\n\nIt can be used to look up the issue list first, or if you already know the key or ID of the issue.\nIf you do not know the key or ID, it is recommended to use the issue inquiry connector first.",
                "tags": [
                    "Jira"
                ]
            }
        },
        "/connector/jira/get-issues": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGetIssueInputByBasicAuthemaildomaintokenIBasicSecret"
                            }
                        }
                    },
                    "description": "condition of request",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.IGetIssueOutput"
                                }
                            }
                        },
                        "description": "paginated list of issues visible to the user"
                    }
                },
                "summary": "Find The Jira issues.",
                "description": "Find Jira issues\n\nIn order to inquire about any issues within the project, you must first inquire about the project and find out the key of the project.",
                "tags": [
                    "Jira"
                ]
            }
        },
        "/connector/jira/get-projects": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGetProjectInputByBasicAuthemaildomaintokenIBasicSecret"
                            }
                        }
                    },
                    "description": "condition of request",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.IGetProjectOutput"
                                }
                            }
                        },
                        "description": "paginated list of projects visible to the user"
                    }
                },
                "summary": "Find the Jira projects.",
                "description": "Find the Jira projects\n\nThe Jira project has a unique key and can then be used to query issues with the key.\nReturns a paginated list of projects visible to the user.\n\nIn order to inquire about any issues within the project, you must first inquire about the project and find out the key of the project.",
                "tags": [
                    "Jira"
                ]
            }
        },
        "/connector/jira/get-issue-labels": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGetIssueLabelInputemaildomaintokenIBasicSecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.IGetIssueLabelOutput"
                                }
                            }
                        },
                        "description": "paginated list of labels"
                    }
                },
                "summary": "Find issue labels",
                "description": "Find issue labels",
                "tags": [
                    "Jira"
                ]
            }
        },
        "/connector/jira/get-issue-types": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGetIssueTypeInputemaildomaintokenIBasicSecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.IGetIssueTypeOutput"
                                }
                            }
                        },
                        "description": "issue types"
                    }
                },
                "summary": "Find issue types",
                "description": "Find issue types\n\nIn order for the user to inquire about the issue type, the ID of the project is required.\nIf the user mentioned the key or name of the project,\nit is necessary to first inquire the project and get the correct project ID.\nThe ID of the project is a numeric character type.",
                "tags": [
                    "Jira"
                ]
            }
        },
        "/connector/jira/get-issue-statuses": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGetIssueStatusInputemaildomaintokenIBasicSecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.IGetIssueStatusOutput"
                                }
                            }
                        },
                        "description": "issue statuses"
                    }
                },
                "summary": "Find issue statuses",
                "description": "Find issue statuses for searching issue",
                "tags": [
                    "Jira"
                ]
            }
        },
        "/connector/jira/get-issue-priorities": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.StrictOmitBasicAuthorizationemaildomaintokenIBasicSecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIJira.Prioritynameid"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "issue priorities"
                    }
                },
                "summary": "Inquire the priority levels that can be assigned to the issue.",
                "description": "There are five priorities: 'Highest', 'High', 'Medium', 'Low', and 'Lowest'.\nTherefore, it can be used as an enum value without requesting this API,\nand this API is already deprecated on the Jira REST API document.\nHowever, for projects that can already be specified by creating a priority level, this connector is added just in case.",
                "tags": [
                    "Jira"
                ]
            }
        },
        "/connector/jira/issues/get-users-assignable": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGetIssueAssignableInputemaildomaintokenIBasicSecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIJira.UseractiveaccountIddisplayName"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "assignable users"
                    }
                },
                "summary": "Find assignable users in issue",
                "description": "Find a person within the issue who can be assigned as assignee.",
                "tags": [
                    "Jira"
                ]
            }
        },
        "/connector/jira/projects/get-users-assignable": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGetProjectAssignableInputemaildomaintokenIBasicSecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIJira.UseractiveaccountIddisplayName"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "assignable users"
                    }
                },
                "summary": "Find assignable users in project",
                "description": "Find a person within the project who can be assigned as assignee.",
                "tags": [
                    "Jira"
                ]
            }
        },
        "/connector/jira/get-status-categories": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.StrictOmitBasicAuthorizationemaildomaintokenIBasicSecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IJira.StatusCategory"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "get status categories",
                "description": "Get status categories",
                "tags": [
                    "Jira"
                ]
            }
        },
        "/connector/google-trend/daily": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleTrend_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleTrend.IRequest"
                            }
                        }
                    },
                    "description": "Search date",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleTrend.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Daily Trends Search Results"
                    }
                },
                "summary": "Google Trends Daily Search",
                "description": "Get daily search results from Google Trends",
                "tags": [
                    "Google Trends"
                ]
            }
        },
        "/connector/google-map": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleMap_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleMap.IRequest"
                            }
                        }
                    },
                    "description": "Search term to search for restaurants",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleMap.IResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Restaurant search results"
                    }
                },
                "summary": "Google Map restaurant search",
                "description": "Search for restaurants using Google Maps",
                "tags": [
                    "Google Map"
                ]
            }
        },
        "/connector/google-map/review": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/GoogleMap_full.svg",
                "x-wrtn-standalone": true,
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleMap.IReviewRequest"
                            }
                        }
                    },
                    "description": "Unique id of the restaurant",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleMap.IReviewResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Restaurant review search results"
                    }
                },
                "summary": "Search Google Map restaurant reviews",
                "description": "Search for restaurant reviews selected from Google Maps",
                "tags": [
                    "Google Map"
                ]
            }
        },
        "/connector/github/users/get-received-events": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetReceivedEventInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetEventOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "List events received by the authenticated user",
                "description": "List events received by the authenticated user\n\nThese are events that you've received by watching repositories and following users.\nIf you are authenticated as the given user, you will see private events. Otherwise, you'll only see public events.\nIn this case, the \"received\" event includes the repository that the user is interested in or the activity of the user who is following,\nfor example, if the user has pushed to the repository, or if an issue has been created from the repository that the user is interested in.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/users/get-pinned-repositories": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetUserPinnedRepositoryInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "repositories"
                    }
                },
                "summary": "Inquire the user's pinned repository names",
                "description": "Inquire the user's pinned repositories\n\nInquire up to 6 repositories where the user has pinned.\nHere, only the name of the repository is searched, so if necessary, find detailed information about the repository by pageing the user's repository list.\nPlacing a pin in a repository is most likely a repository that users are most confident in.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/users/get-repositories": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetUserRepositoryInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetUserRepositoryOutput"
                                }
                            }
                        },
                        "description": "repositories"
                    }
                },
                "summary": "Inquire the user's repositories",
                "description": "Inquire the user's repositories\n\nSince it contains only the simplest information of the repository here, there is no way to know the lead me of the repository or detailed information.\nIt is recommended to use additional connectors to explore because other connectors have the ability to read leads or internal files in the repository.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/organizations/users/get-events": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetOrganizationEventInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetEventOutput"
                                }
                            }
                        },
                        "description": "A list of events from the organizations the authenticated user is a member of."
                    }
                },
                "summary": "Lists organization events for the authenticated user",
                "description": "Lists organization events for the authenticated user\n\nThis API endpoint retrieves events that have occurred within the organizations\nthe authenticated user is a member of. It includes activities such as issues,\npull requests, commits, and other actions taken within the organization's repositories.\n\nThe events cover all repositories within the organization that the user has access to,\nmaking it useful for tracking the organization's activity or monitoring the progress\nof projects that the user is involved in within the team.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/organizations/get-issues": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetOrganizationAuthenticationUserIssueInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetOrganizationAuthenticationUserIssueOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "List organization issues assigned to the authenticated user",
                "description": "List organization issues assigned to the authenticated user\n\nSimilar to the 'get-issues' connector, it is suitable for inquiring only about issues assigned within a specific organization.\nNaturally, the user will have to be a member of that organization.\n\nHere, the result value can be inquired together with PR because PR on GitHub is essentially an issue-like object.\nIf you want to see the issue separately, you should use a connector that looks up the issue in the repo, not the organization.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/organizations/get-repositories": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetOrganizationEventInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetOrganizationRepositoryOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "List organization repositories",
                "description": "List organization repositories\n\nThis endpoint allows you to list all repositories that belong to a specified organization on GitHub.\nIt's useful for viewing all the repositories under an organization’s account, including both public and private repositories, depending on your access level.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/organizations/get-events": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetOrganizationEventInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetEventOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "List public organization events.",
                "description": "List public organization events\n\nIf you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.\n\nThis API endpoint retrieves a stream of public events that have occurred\nwithin a specified organization. These events include activities such as\nrepository creation, issues, pull requests, and other actions taken by members\nof the organization across all its public repositories.\n\nThis is useful for monitoring the public activity within an organization,\nproviding insights into how the organization is managing its projects,\nthe work being done by its members, and the overall public engagement with\nits repositories.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repos/get-collaborators": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetCollaboratorInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetCollaboratorOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "List repository collaborators",
                "description": "List repository collaborators\n\nFor organization-owned repositories, the list of collaborators includes outside collaborators,\norganization members that are direct collaborators, organization members with access through team memberships,\norganization members with access through default organization permissions, and organization owners.\nOrganization members with write, maintain, or admin privileges on the organization-owned repository can use this endpoint.\nTeam members will include the members of child teams.\n\nYou can refer to it before specifying a person in charge of the issue or a reviewer for PR.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repos/commits/contents": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.ICreateFileContentInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IUpsertFileContentOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Create File content and commit",
                "description": "Create file content in github repository\n\nIf the file already exists in the same path, you should use the modification API and this connector is only responsible for generation.\nCreating file content is the same as creating a single commit.\nCommit is a hash that must be created in github to save changes, such as uploading, modifying, deleting, and so on.\n\nIf someone says they want to add a file to the repo it's like they want to commit.\nHowever, in this case, you should check which branch you want to add the file to, and you should not create it in the default branch if you do not specify the branch.\nUsers value branches that reflect their commitments.\nIn addition, it is recommended to receive confirmation from the user every time about the content and then modify or add it.\n\nIf the user directly asks you to add, modify, or delete a file for a specific PR or specific branch, this connector should be considered.",
                "tags": [
                    "Github"
                ]
            },
            "put": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IUpdateFileContentInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IUpsertFileContentOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Update File content and commit",
                "description": "Update file content in github repository\n\nUpdating file content is the same as creating a single commit.\nCommit is a hash that must be created in github to save changes, such as uploading, modifying, deleting, and so on.\n\nAs the sha value of the file to be modified, a conflict may occur if it is not the latest sha value among the sha values of the file.\nIt's safe when you look up a list of files through API to check sha and put in a value, or want to re-modify the sha value of a file you just created.\n\nIf you modify a file, it's not like appending the code to the file, it's like overwriting the file.\nGenerally, if a user says he wants to modify it, it means that he wants to add the code to a specific file or refact it,\nso it's right to check the existing code and then change some of the contents to the original to reflect it.\nIn addition, it is recommended to receive confirmation from the user every time about the content and then modify or add it.\n\nIf the user directly asks you to add, modify, or delete a file for a specific PR or specific branch, this connector should be considered.\nMany repositories are working on commit conventions. Before committing, it's a good idea to look up the commit-list to see how you leave the commit message.",
                "tags": [
                    "Github"
                ]
            },
            "delete": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IDeleteFileContentInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Delete file content and commit",
                "description": "Delete file content in github repository\n\nTo delete file content is the same as creating a single commit.\nCommit is a hash that must be created in github to save changes, such as uploading, modifying, deleting, and so on.\n\nAs the sha value of the file to be modified, a conflict may occur if it is not the latest sha value among the sha values of the file.\nIt's safe when you look up a list of files through API to check sha and put in a value, or want to re-modify the sha value of a file you just created.\n\nIf the user directly asks you to add, modify, or delete a file for a specific PR or specific branch, this connector should be considered.\nMany repositories are working on commit conventions. Before committing, it's a good idea to look up the commit-list to see how you leave the commit message.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repos/get-folder-structures": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetRepositoryFolderStructureInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "discriminator": {
                                            "mapping": {
                                                "dir": "#/components/schemas/RepositoryFolderchildrenany",
                                                "file": "#/components/schemas/StrictOmitIGithub.RepositoryFilecontentencoding"
                                            },
                                            "propertyName": "type"
                                        },
                                        "oneOf": [
                                            {
                                                "$ref": "#/components/schemas/_namespace_swagger.RepositoryFolderchildrenany"
                                            },
                                            {
                                                "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGithub.RepositoryFilecontentencoding"
                                            }
                                        ]
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Review Repository Folder Structure",
                "description": "Review Repository Folder Structure\n\nIt allows you to know the overall folder structure by traversing files in the repository.\nThis feature is intended to navigate like a DFS based on folders.\nIf this function is so vast that you cannot see the entire folder, you can pass the `path` again to inquire.\nThe `path` delivered is treated like a Root folder and continues the navigation from this folder.\nThis feature is designed to navigate to the inside two more times, up to steps 0, 1 at a time, based on the root folder.\n\nIf you want to know the details of the file, it is recommended to use the get-contents connector.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repos/get-contents/bulk": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetBulkFileContentInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "oneOf": [
                                            {
                                                "items": {
                                                    "discriminator": {
                                                        "mapping": {
                                                            "dir": "#/components/schemas/IGithub.RepositoryFolder",
                                                            "file": "#/components/schemas/StrictOmitIGithub.RepositoryFilecontentencoding"
                                                        },
                                                        "propertyName": "type"
                                                    },
                                                    "oneOf": [
                                                        {
                                                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.RepositoryFolder"
                                                        },
                                                        {
                                                            "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGithub.RepositoryFilecontentencoding"
                                                        }
                                                    ]
                                                },
                                                "type": "array"
                                            },
                                            {
                                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.RepositoryFile"
                                            },
                                            {
                                                "properties": {
                                                    "type": {
                                                        "const": "null"
                                                    },
                                                    "size": {
                                                        "const": 0
                                                    },
                                                    "message": {
                                                        "const": "No files exist corresponding to the path."
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "size",
                                                    "message"
                                                ],
                                                "type": "object"
                                            }
                                        ]
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Look up repository files(bulk)",
                "description": "Look up repository files(bulk)\n\nIf the file you want to inquire is a folder, internal files are provided in an array,\nand if it is a file, it inquires about the encoding method of the file and the body content of the file.\nSince there may be countless files and folders in the github repository, there may be many files that exceed the rate limit.\nIn this case, you can try to solve this problem by sequentially finding the folders one by one using the corresponding connector.\nYou can pass multiple file paths to view multiple files at the same time.\nThere is no limit to the number of files.\n\nThis is suitable for viewing files on specific branches, but if the user is for the purpose of viewing details of code reviews or PR, it is recommended to use a different connector.\nThere are connectors that view the list of files changed in PR, or see the changes.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repos/get-contents": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetFileContentInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "discriminator": {
                                                    "mapping": {
                                                        "dir": "#/components/schemas/IGithub.RepositoryFolder",
                                                        "file": "#/components/schemas/StrictOmitIGithub.RepositoryFilecontentencoding"
                                                    },
                                                    "propertyName": "type"
                                                },
                                                "oneOf": [
                                                    {
                                                        "$ref": "#/components/schemas/_namespace_swagger.IGithub.RepositoryFolder"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGithub.RepositoryFilecontentencoding"
                                                    }
                                                ]
                                            },
                                            "type": "array"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.RepositoryFile"
                                        },
                                        {
                                            "properties": {
                                                "type": {
                                                    "const": "null"
                                                },
                                                "size": {
                                                    "const": 0
                                                },
                                                "message": {
                                                    "const": "No files exist corresponding to the path."
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "size",
                                                "message"
                                            ],
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Look up repository files",
                "description": "Look up repository files\n\nIf the file you want to inquire is a folder, internal files are provided in an array,\nand if it is a file, it inquires about the encoding method of the file and the body content of the file.\nSince there may be countless files and folders in the github repository, there may be many files that exceed the rate limit.\nIn this case, you can try to solve this problem by sequentially finding the folders one by one using the corresponding connector.\n\nThis is suitable for viewing files on specific branches, but if the user is for the purpose of viewing details of code reviews or PR, it is recommended to use a different connector.\nThere are connectors that view the list of files changed in PR, or see the changes.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repos/get-readme": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetReadmeFileContentInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "discriminator": {
                                        "mapping": {
                                            "file": "#/components/schemas/IGithub.RepositoryFile"
                                        },
                                        "propertyName": "type"
                                    },
                                    "oneOf": [
                                        {
                                            "type": "null"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.RepositoryFile"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Read the README file",
                "description": "Read the README file in the repository\n\nREADME is one of the initial settings of the project and usually records a description of this repository,\nso it's useful if you want to see a rough description of the repository.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repos/get-events": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetRepoEventInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetEventOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "List events for the authenticated user",
                "description": "List events for the authenticated user\n\nIf you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.\nYou can check all events surrounding the repository, such as who inquired and who forked.\nIt is used in conjunction with a connector that inquires the activity details and is suitable for checking how active the repository is.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/networks/get-events": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetRepoEventInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetEventOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "List public events for a network of repositories",
                "description": "Fetches events across all forks of a specified repository.\n\nThis API endpoint provides a stream of events that occur in any fork\nof the specified repository. It includes actions such as commits,\npull requests, issues, and other activity happening in the forked\nrepositories.\n\nUse this endpoint when you need to monitor the activity not just\nin the original repository, but also in all of its forks. This can\nbe particularly useful for understanding the broader impact or\nactivity surrounding a popular project that has been forked multiple\ntimes.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/users/get-events": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetUserEventInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetEventOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "List events for the authenticated user.",
                "description": "List events for the authenticated user\n\nThis API endpoint retrieves a stream of events related to the authenticated user,\nincluding activities such as issues, pull requests, commits, and repository actions\nthat the user has participated in or been mentioned in. The events reflect the user's\ninteractions across all repositories they have access to, both public and private (if\nthe user has appropriate permissions).\n\nThis is useful for tracking a user's activity on GitHub, allowing you to see a\npersonalized feed of their involvement in various projects and interactions with\nother users.\n\nIf you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.\nIt looks up users' public events. Username should be your own nickname because you can usually only see your own events.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/users/get-organizations": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetUserOrganizationInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetUserOrganizationOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "List organizations for a user",
                "description": "List organizations for a user\n\nLook up the user's organization list, but since you can't look up the user's private organization here,\nyou can't really conclude that there isn't an empty array.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/get-events": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetEventInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetEventOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "List public events.",
                "description": "List public events\n\nThis API is not built to serve real-time use cases. Depending on the time of day, event latency can be anywhere from 30s to 6h.\nWhen I look up the events, they may not be of much value to the user because they are events that occurred on github.\n\nIt's looking up public events, and it's looking at events that occur on github regardless of the specific user.\nTherefore, it may not be of much use unless it is a special case.\nIf you want to get your information, it would be more advantageous to use the 'user/get-events' connector.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repositories/get-activities": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetRepositoryActivityInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetRepositoryActivityOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Get Repository' activities",
                "description": "Get repository activities\n\nYou can use it to see how active your contribution is to the repository\nbecause it looks up all the activities that have occurred in the repository.\n\nThe types of activities that can be viewed here are as follows, and you can also find out by which user it was operated.\npush, force_push, branch_creation, branch_deletion, pr_merge, merge_queue_merge",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repositories/pull-requests": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.ICreatePullRequestInput"
                            }
                        }
                    },
                    "description": "Create pull request",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.ICreatePullRequestOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "description": "Create pull request\n\nCreates a pull request from a branch to a particular branch.\nIf the branch has already generated a pull request to the base branch, an error of 422 may occur.\nThis error indicates a collision because only one pull request from branch to another branch can exist open at the same time.\n\nIf the user wants to see each PR unit, this connector will be suitable.\n\nWhen creating a PR, be sure to specify the base branch and the head branch, and even if it can be omitted, be sure to include Titles and bodies as much as possible.\nYou can also create a pull request in draft state if necessary.\n\nIn order to create PR, you may need to refer to the PULL_REQUEST_TEMPLATE.md file that you specified in the .github folder in advance, in which case refer to the connector 'POST /connector/github/repos/get-contents'.",
                "tags": [
                    "Github"
                ]
            },
            "put": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IUpdatePullRequestInput"
                            }
                        }
                    },
                    "description": "Update pull request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IUpdatePullRequestOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "description": "Update pull request\n\nUse to change the title or body of a PR, or draft status or open-close status.\nIt can also be used for overwriting labels or modifying them.\nIt can also be used to close or reopen pull request.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repositories/pull-requests/get-comments": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetPullRequestCommentsInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetIssueCommentsOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "List pull request comments",
                "description": "List pull request comments\n\nYou can use the REST API to list comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.\nIn any case, you can also view comments with the number on pull request.\nIssue comments are ordered by ascending ID.\n\nThis is actually the same as connector POST '/connector/github/repositories/issues/get-comments'.\nComments and reviews on PR are separate, you can only see comments on this connector.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repositories/pull-requests/comments": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.ICreateIssueCommentInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IssueComment"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Create an pull request comment",
                "description": "Create an pull request comment",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repositories/pull-requests/get-requested-reviewers": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IReadPullRequestDetailInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IReadPullRequestRequestedReviewerOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Get all requested reviewers for a pull request",
                "description": "Get all requested reviewers\n\nGets the users or teams whose review is requested for a pull request.\nOnce a requested reviewer submits a review, they are no longer considered a requested reviewer.\nTheir review will instead be returned by the List reviews for a pull request operation.\n\nThe requested_reviewers are the ones who have been asked to review, but not yet.\nSo when you see someone who has reviewed a PR, if that person is someone who has already finished a review, he/she will be part of the reviewers, not the requested_reviewers.\nTherefore, when you look at a reviewer, you should look at it separately between someone who has not yet reviewed it and one person who has reviewed it, which you should also call other features to see together.\nRefer to connector `:post /connector/github/repositories/pull-requests/get-reviews`.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repositories/pull-requests/requested-reviewers": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IRequestReviewerInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Request reviewers for a pull request",
                "description": "Request reviewers for a pull request\n\nRequests reviews for a pull request from a given set of users and/or teams. This endpoint triggers notifications.\nYou can specify a reviewer by the user's name alone, but not by anyone, so use a connector that looks up collaborators first.",
                "tags": [
                    "Github"
                ]
            },
            "delete": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IRequestReviewerInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Remove requested reviewers from a pull request",
                "description": "Removes review requests from a pull request for a given set of users and/or teams\n\nYou should check the person who has already been requested as a reviewer, i.e., requested_reviewers, and then send out the delete request.\nEven if you don't do that, there will be no error, but it doesn't mean anything if you delete the person who hasn't been requested as a reviewer.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repositories/pull-requests/reviews/get-comments": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetReviewCommentInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetReviewCommentOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "List comments for a pull request review",
                "description": "List comments for a pull request review\n\nLists comments for a specific pull request review.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repositories/pull-requests/get-reviews": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IReadPullRequestReviewInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IReadPullRequestReviewOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "List reviews for a pull request",
                "description": "List reviews for a pull request\n\nPull Request Reviews are groups of pull request review comments on a pull request, grouped together with a state and optional body comment.\nLists all reviews for a specified pull request. The list of reviews returns in chronological order.\nSince github distinguishes requested_reviewers from those who have already completed the review,\nif you want to see a review for any PR, you should look up both of these connectors.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repositories/pull-requests/reviews": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IReviewPullRequestInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IReviewPullRequestOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Create a review for a pull request",
                "description": "Create a review for a pull request\n\nPull request reviews created in the PENDING state are not submitted and therefore do not include the submitted_at property in the response. To create a pending review for a pull request, leave the event parameter blank.\nThe position value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repositories/pull-requests/get-files": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IReadPullRequestFileInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IReadPullRequestFileOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "List pull requests files",
                "description": "List pull requests files\n\nThis is useful to see what files are contained in that PR.\nEach file's patch contains the entire format of the file.\nHowever, if you want to know the changes, you should look up diff, which is implemented with a different connector, so you'd better refer to it.\n\nIf the user wants to see each PR unit, this connector will be suitable.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repositories/pull-requests/get-commits": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IReadPullRequestCommitInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IReadPullRequestCommitOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "description": "List commits on a pull request\n\nLists a maximum of 250 commits for a pull request.\nTo receive a complete commit list for pull requests with more than 250 commits, use the List commits endpoint.\n\nIf the user wants to see each PR unit, this connector will be suitable.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repositories/pull-requests/get-diff": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IReadPullRequestDetailInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Get a diff of pull request",
                "description": "Get a diff of pull-request info\n\nThis is the same as PR's ability to query files,\nbut the format that this function returns is a string, which is more suitable for identifying changes to each file than viewing each file object,\nand in github, this is called the application/vnd.github.diff format.\nThis helps you see at a glance what codes have disappeared and been added in a form suitable for code review.\n\nIf the user wants to see each PR unit, this connector will be suitable.\n\nIf there are too many changes, the connector can export a 406 error.\nIn this case, it may be difficult to determine each change, but it is recommended to use the List pull requests connector.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repositories/pull-requests/get-detail": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IReadPullRequestDetailInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.PullRequest"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Get a pull request",
                "description": "Get a deatiled pull-request info\n\nYou can view detailed PR information using the PR number.\nHere, you can see the branch to be merged and the information on the branch it points to, and you can see information such as the status of the PR, the time of each state, and the person who created the PR.\nHowever, it should be used with other connectors because it provides information close to the header of PR and does not provide information about each file or commit of PR.\n\nIf the user wants to see each PR unit, this connector will be suitable.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repositories/get-pull-requests": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IFetchRepositoryPullRequestInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IFetchRepositoryPullRequestOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Get Repository' pull request",
                "description": "List repository pull requests\n\nQuery pool requests to specific repositories.\nHere, you can filter issues and see only pool requests, and you can sort them by creation and inquiry dates, or filter by open or closed status.\nThe content of the body is omitted, so if you want to see it, you should use the detailed lookup connector.\nIf the user wants to see the body property, '/connector/github/repositories/pull-requests/get-detail' connector must be called.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repositories/issues/get-detail": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetIssueDetailInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.DetailedIssue"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Get a issue",
                "description": "Get a deatiled issue info\n\nUnlike the body omitted from the issue list inquiry, it is suitable for viewing details as it can inquire all the contents.\nHowever, this connector alone cannot see all the comments or timelines inside, and other connectors must be used.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repositories/issues/get-comments": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetIssueCommentsInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetIssueCommentsOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "List issue comments",
                "description": "List issue comments\n\nYou can use the REST API to list comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.\nIn any case, you can also view comments with the number on pull request.\nIssue comments are ordered by ascending ID.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repositories/issues/comments": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.ICreateIssueCommentInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IssueComment"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Create an issue comment",
                "description": "Create an issue comment\n\nAdd a comment. If you put an issue number, you can add a comment to the issue, where the issue number is also the number of PR.\nIn other words, both issue and PR can add a comment through this connector.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/repositories/get-issues": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IFetchRepositoryInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IFetchRepositoryOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "List repository issues",
                "description": "List repository issues\n\nList issues in a repository.\nThis connector is perfect if you want to see the issue of the repository because it can be viewed without being authenticated.\nInformation on the issue comes out, but only 10 people and labels attached to the issue are provided.\nTherefore, if you want more detailed information, it's a good idea to look at it with a connector that looks at the details of the issue.\nWhen looking up an issue, you can view open and closed issues and sort them by creation time, correction time, comment count, and reaction count.\nFor more information, you should check the properties part of the request type.\n\nThe content of the body is omitted, so if you want to see it, you should use the detailed lookup connector.\nIf the user wants to see the body property, '/connector/github/repositories/issues/get-detail' connector must be called.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/get-users": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.ISearchUserInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.ISearchUserOutput"
                                }
                            }
                        },
                        "description": "list of user"
                    }
                },
                "summary": "Search for users by keyword in github",
                "description": "Search for users by keyword in github",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/get-user-profile": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetUserProfileInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetUserProfileOutput"
                                }
                            }
                        },
                        "description": "detailed profile"
                    }
                },
                "summary": "Look up the user's detailed profile",
                "description": "Look up the user's detailed profile",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/get-organizations": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetAuthenticatedUserOrganizationInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetAuthenticatedUserOrganizationOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "List organizations for the authenticated user",
                "description": "List organizations for the authenticated user\n\nInquire the user's repository.\nHere, the user is an authenticated user, which means a user of that token.\nIf a user does not select an organization at login or ask the organization's admin to link it,\nthe resource might not be viewed even if the token scope has permissions.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/get-branches": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetBranchInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetBranchOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Inquire the user's branch",
                "description": "Inquire the user's branch\nYou can look up a list of branches in a specific repository.\nBecause it says what the last commit is, and when and to whom it was made,\nyou can see which of the branches is the latest and managed.\n\nYou shouldn't call the main branch arbitrarily because there may be people who use the master branch.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/branches": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.ICreateBranchInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.ICreateBranchOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Create branch",
                "description": "Create branch\n\nCreates a reference for your repository. You are unable to create new references for empty repositories, even if the commit SHA-1 hash used exists. Empty repositories are repositories without branches.\nYou need to know the sha of the commit, so if you want to create a branch, you should first call another connector that looks up the commit list or header commitments to find out the sha value.\nIf you want to copy the branch, you should also look up the commit history of the branch and then retrieve the sha value from the branch's HEAD commit.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/get-pull-requests-associated-with-a-commit": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetPullRequestInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGithub.PullRequestcommentsmaintainer_can_modifymergeablerebaseablemergeable_statemerged_byreview_commentscommitsadditionsdeletionschanged_files"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "pull requests associated with a commit"
                    }
                },
                "summary": "get pull requests associated with a commit",
                "description": "List pull requests associated with a commit\n\nFetches the pull requests (PRs) associated with a specific commit in a GitHub repository.\nThis API endpoint retrieves a list of pull requests that include the specified commit.\nThis can be useful for tracking where and how a particular change was merged into a branch.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/get-commit-heads": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetCommitHeadInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetCommitHeadOutput"
                                }
                            }
                        },
                        "description": "A promise that resolves to an array of branch names that include the specified commit."
                    }
                },
                "summary": "Lists all branches that contain the HEAD commit",
                "description": "Lists all branches that contain the HEAD commit of a GitHub repository.\n\nThis function utilizes the GitHub API to retrieve a list of branches where the current\nHEAD commit (the latest commit on the checked-out branch) is included. This is useful for\ndetermining which branches contain the most recent changes.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/get-commit": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetCommitInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetCommitOutput"
                                }
                            }
                        },
                        "description": "detailed commit history"
                    }
                },
                "summary": "Inquire the commit details of the user",
                "description": "Inquire the commit details of the user\nIt contains all the history of how the file changed, so you can see the details of a single commit node.\nIf you do not deliver ref, look up based on default_branch.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/get-commit-diff": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetCommitInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "commit diff"
                    }
                },
                "summary": "Inquire the commit diff of the user",
                "description": "Inquire the commit diff of the user\ndiff is Github's own content type specification that allows you to identify changes per commit on the Github homepage.\nIf you do not deliver ref, look up based on default_branch.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/get-commit-list": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetCommitListInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetCommitListOutput"
                                }
                            }
                        },
                        "description": "list of commit"
                    }
                },
                "summary": "Look up the list of commitments for a specific repo, a specific branch",
                "description": "Look up the list of commitments for a specific repo, a specific branch\n\nThis function can be used in general because it sees the commit list in units of branches, but if the user wants to see it in units of PR, it is better to use another connector.\nIf the user specifies to view in PR units, use other connectors because there are connectors for viewing files, commit lists, and changes in PR units elsewhere.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/get-followers": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetFollowerInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetFollowerOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Inquire the followers of the user",
                "description": "Inquire the followers of the user\n\nThis value can be viewed by about 100 people at a time because it is a page-nated result.\nIf you have someone you're looking for, it's important to keep looking for the next page, even if you haven't found the value on the first page.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/get-followees": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetFolloweeInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetFolloweeOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Inquire the followees of the user",
                "description": "Inquire the followees of the user\n\nThis value can be viewed by about 100 people at a time because it is a page-nated result.\nIf you have someone you're looking for, it's important to keep looking for the next page, even if you haven't found the value on the first page.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/get-labels": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetLabelInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.IGetLabelOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "List labels for a repository",
                "description": "List labels for a repository\n\nView a list of issues created and used in that repository.\nEach issue will only have labels that are already registered in this repository.\nOf course, it doesn't necessarily mean that you have to use only the labels here when creating issues,\nbut it would be beneficial to assign them by referring to the labels here.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/issues": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.ICreateIssueInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.Issue"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Create an issue",
                "description": "Leave an issue in the repository\n\nCreate an issue, where you can enter labels and assignes together.\nThe information you must enter is who will create the issue in the owner's repository and under what title.\nThe information in the text should follow the markdown grammar allowed by github.\n\nIn some cases, if you are not the owner of this repository, you may not be able to make any marking on issues such as labels, assignees, milestones, etc.\n\nIn order to create issue, you may need to refer to the issue template files that you specified in the .github folder in advance, in which case refer to the connector 'POST /connector/github/repos/get-contents'.",
                "tags": [
                    "Github"
                ]
            },
            "patch": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/github.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.IUpdateIssueInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.Issue"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Update an issue",
                "description": "Update an issue in the repository\n\nUpdate an issue, where you can enter labels and assignes together.\nThe information you must enter is who will create the issue in the owner's repository and under what title.\nThe information in the text should follow the markdown grammar allowed by github.\n\nIn some cases, if you are not the owner of this repository, you may not be able to make any marking on issues such as labels, assignees, milestones, etc.\nIt can also be used to close or reopen issues.",
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/github/upload": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.UploadFileInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "tags": [
                    "Github"
                ]
            }
        },
        "/connector/short-link/create": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IShortLink.IRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IShortLink.IResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "tags": []
            }
        },
        "/connector/discord/create-dm": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/discord.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IDiscord.ICreateDMRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IChannel"
                                }
                            }
                        },
                        "description": "Channel information"
                    }
                },
                "summary": "Create a DM channel",
                "description": "Create a new DM channel",
                "tags": [
                    "Discord"
                ]
            }
        },
        "/connector/discord/modify-guild": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/discord.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IModifyGuildRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IGuild"
                                }
                            }
                        },
                        "description": "Modified server information"
                    }
                },
                "summary": "Modify server information",
                "description": "Modify server information",
                "tags": [
                    "Discord"
                ]
            }
        },
        "/connector/discord/get-guild-channels": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/discord.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IDiscord.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IChannel"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "List of channels"
                    }
                },
                "summary": "Get a list of channels",
                "description": "Get a list of channels on the server",
                "tags": [
                    "Discord"
                ]
            }
        },
        "/connector/discord/create-guild-channel": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/discord.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IDiscord.ICreateGuildChannelRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IChannel"
                                }
                            }
                        },
                        "description": "Created channel information"
                    }
                },
                "summary": "Create a channel",
                "description": "Create a new channel on the server",
                "tags": [
                    "Discord"
                ]
            }
        },
        "/connector/discord/get-list-guild-members": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/discord.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IDiscord.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IGuildMember"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "List of server members"
                    }
                },
                "summary": "Get a list of members",
                "description": "Get a list of members on the server",
                "tags": [
                    "Discord"
                ]
            }
        },
        "/connector/discord/remove-guild-member": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/discord.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IRemoveGuildMember"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Kick members",
                "description": "Kicks selected members from the server",
                "tags": [
                    "Discord"
                ]
            }
        },
        "/connector/discord/modify-channel": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/discord.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IModifyChannelRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IChannel"
                                }
                            }
                        },
                        "description": "Modified channel information"
                    }
                },
                "summary": "Modify channel information",
                "description": "Modify channel information",
                "tags": [
                    "Discord"
                ]
            }
        },
        "/connector/discord/delete-channel": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/discord.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IDeleteChannelRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Delete channel",
                "description": "Delete the selected channel",
                "tags": [
                    "Discord"
                ]
            }
        },
        "/connector/discord/get-pinned-messages": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/discord.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IGetPinnedMessagesRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IMessage"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "a list of pinned messages"
                    }
                },
                "summary": "Get a list of pinned messages",
                "description": "Get a list of pinned messages in a channel",
                "tags": [
                    "Discord"
                ]
            }
        },
        "/connector/discord/pin-message": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/discord.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IPinOrUnpinMessagesRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Pin a message",
                "description": "Pin a message to a channel",
                "tags": [
                    "Discord"
                ]
            }
        },
        "/connector/discord/unpin-message": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/discord.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IPinOrUnpinMessagesRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Unpin message",
                "description": "Unpin a pinned message from a channel",
                "tags": [
                    "Discord"
                ]
            }
        },
        "/connector/discord/get-channel-message-histories": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/discord.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IGetChannelMessageHistoriesRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IMessage"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "List of messages"
                    }
                },
                "summary": "Get a list of messages",
                "description": "Get the messages that exist in the channel",
                "tags": [
                    "Discord"
                ]
            }
        },
        "/connector/discord/create-message": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/discord.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IDiscord.ICreateMessageRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IMessage"
                                }
                            }
                        },
                        "description": "The generated message"
                    }
                },
                "summary": "Send a message",
                "description": "Send a message",
                "tags": [
                    "Discord"
                ]
            }
        },
        "/connector/discord/edit-message": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/discord.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IEditMessageRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IMessage"
                                }
                            }
                        },
                        "description": "Modified message"
                    }
                },
                "summary": "Modify message",
                "description": "Modify the message",
                "tags": [
                    "Discord"
                ]
            }
        },
        "/connector/discord/delete-message": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/discord.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IDeleteMessageRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Delete message",
                "description": "Delete message",
                "tags": [
                    "Discord"
                ]
            }
        },
        "/connector/discord/bulk-delete-message": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/discord.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IBulkDeleteMessagesRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Delete multiple messages",
                "description": "Delete multiple messages",
                "tags": [
                    "Discord"
                ]
            }
        },
        "/connector/calendly/scheduling_links": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ICalendly.CreateSchedulingLinkInput"
                            }
                        }
                    },
                    "description": "The necessary details to create the scheduling link.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ICalendly.CreateSchedulingLinkOutput"
                                }
                            }
                        },
                        "description": "The created scheduling link details."
                    }
                },
                "summary": "Create a new scheduling link",
                "tags": [
                    "Calendly"
                ]
            }
        },
        "/connector/calendly/get-event-types": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ICalendly.IGetEventTypeInput"
                            }
                        }
                    },
                    "description": "The input required to retrieve event types.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ICalendly.IGetEventTypeOutput"
                                }
                            }
                        },
                        "description": "The list of event types."
                    }
                },
                "summary": "List all event types",
                "tags": [
                    "Calendly"
                ]
            }
        },
        "/connector/calendly/events/{eventId}/invitees/{inviteeId}/get-cancel-link": {
            "post": {
                "parameters": [
                    {
                        "name": "eventId",
                        "required": true,
                        "title": "The ID of the event",
                        "description": " The ID of the event.",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "collection[].{value:uuid, label:name}",
                                "method": "post",
                                "path": "/connector/calendly/get-scheduled-events"
                            },
                            "type": "string"
                        }
                    },
                    {
                        "name": "inviteeId",
                        "required": true,
                        "title": "The ID of the invitee",
                        "description": " The ID of the invitee.",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "collection[].{value:uuid, label:name}",
                                "method": "post",
                                "path": "/connector/calendly/get-scheduled-events"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ICalendly.Secret"
                            }
                        }
                    },
                    "description": "Additional input for cancel link retrieval.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "iri",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The cancel link for the invitee."
                    }
                },
                "summary": "Get cancel link for invitee",
                "tags": [
                    "Calendly"
                ]
            }
        },
        "/connector/calendly/get-events/{eventId}": {
            "post": {
                "parameters": [
                    {
                        "name": "eventId",
                        "required": true,
                        "title": "The UUID of the event",
                        "description": " The UUID of the event.",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ICalendly.Secret"
                            }
                        }
                    },
                    "description": "Additional input for event retrieval.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ICalendly.IGetOneScheduledEventOutput"
                                }
                            }
                        },
                        "description": "The detailed information of the scheduled event."
                    }
                },
                "summary": "Get details of a scheduled event",
                "tags": [
                    "Calendly"
                ]
            }
        },
        "/connector/calendly/get-scheduled-events": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ICalendly.IGetScheduledEventInput"
                            }
                        }
                    },
                    "description": "The input to filter scheduled events.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ICalendly.IGetScheduledEventOutput"
                                }
                            }
                        },
                        "description": "The list of scheduled events."
                    }
                },
                "summary": "Get all scheduled events",
                "tags": [
                    "Calendly"
                ]
            }
        },
        "/connector/calendly/events/{eventId}/invitees/{inviteeId}/no-show": {
            "post": {
                "parameters": [
                    {
                        "name": "eventId",
                        "required": true,
                        "title": "The UUID of the event",
                        "description": " The UUID of the event.",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "inviteeId",
                        "required": true,
                        "title": "The UUID of the invitee",
                        "description": " The UUID of the invitee.",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ICalendly.Secret"
                            }
                        }
                    },
                    "description": "Additional input for no-show marking.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ICalendly.ICheckNoShowOutput"
                                }
                            }
                        },
                        "description": "The result of the no-show marking."
                    }
                },
                "summary": "Mark an invitee as no-show",
                "tags": [
                    "Calendly"
                ]
            }
        },
        "/connector/calendly/events/{eventId}/invitees/{inviteeId}": {
            "post": {
                "parameters": [
                    {
                        "name": "eventId",
                        "required": true,
                        "title": "The UUID of the event",
                        "description": " The UUID of the event.",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "inviteeId",
                        "required": true,
                        "title": "The UUID of the invitee",
                        "description": " The UUID of the invitee.",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ICalendly.Secret"
                            }
                        }
                    },
                    "description": "Additional input for invitee retrieval.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ICalendly.IGetOneScheduledEventInviteeOutput"
                                }
                            }
                        },
                        "description": "The details of the invitee."
                    }
                },
                "summary": "Get invitee details",
                "tags": [
                    "Calendly"
                ]
            }
        },
        "/connector/calendly/events/get-invitees": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ICalendly.IGetScheduledEventInviteeInput"
                            }
                        }
                    },
                    "description": "The input to filter invitees.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ICalendly.IGetScheduledEventInviteeOutput"
                                }
                            }
                        },
                        "description": "The list of invitees for the event."
                    }
                },
                "summary": "Get all invitees for a scheduled event",
                "tags": [
                    "Calendly"
                ]
            }
        },
        "/connector/calendly/one-off-event-types": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ICalendly.ICreateOneOffEventTypeInput"
                            }
                        }
                    },
                    "description": "The details needed to create a one-off event type.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ICalendly.ICreateOneOffEventTypeOutput"
                                }
                            }
                        },
                        "description": "The created one-off event type details."
                    }
                },
                "summary": "Create a one-off event type",
                "tags": [
                    "Calendly"
                ]
            }
        },
        "/connector/calendly/users/get-me": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ICalendly.Secret"
                            }
                        }
                    },
                    "description": "The input required to get the user details.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ICalendly.IGetUserInfoOutput"
                                }
                            }
                        },
                        "description": "The authenticated user's details."
                    }
                },
                "summary": "Get authenticated user details",
                "tags": [
                    "Calendly"
                ]
            }
        },
        "/connector/ai-search": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IAISearch.IRequest"
                            }
                        }
                    },
                    "description": "Conditions required for search",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "AI search",
                "description": "Returns search results via AI search",
                "tags": [
                    "AI Search"
                ]
            }
        },
        "/connector/typeform/workspace": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/typeform.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ITypeform.ICreateWorkspaceInput"
                            }
                        }
                    },
                    "description": "Title of the workspace to create",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ITypeform.ICreateWorkspaceOutput"
                                }
                            }
                        },
                        "description": "The created workspace ID, title, and URL"
                    }
                },
                "summary": "Create a Typeform workspace",
                "description": "Create a workspace",
                "tags": [
                    "Typeform"
                ]
            }
        },
        "/connector/typeform/workspace/{workspaceId}": {
            "delete": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/typeform.svg",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "required": true,
                        "description": " The workspace ID to delete",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].{value:workspace_id, label:name || '워크스페이스 이름'}",
                                "method": "post",
                                "path": "/connector/typeform/get-workspaces"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ITypeform.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Delete a Typeform workspace",
                "description": "Delete a workspace",
                "tags": [
                    "Typeform"
                ]
            }
        },
        "/connector/typeform/get-workspaces": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/typeform.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ITypeform.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.ITypeform.IFindWorkspaceOutput"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Workspace ID, Title, URL"
                    }
                },
                "summary": "Get Typeform workspace information",
                "description": "Get workspace information",
                "tags": [
                    "Typeform"
                ]
            }
        },
        "/connector/typeform/empty-form": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/typeform.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ITypeform.ICreateEmptyFormInput"
                            }
                        }
                    },
                    "description": "The title of the form to be created",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ITypeform.ICreateFormOutput"
                                }
                            }
                        },
                        "description": "The ID, title, and type of the generated form"
                    }
                },
                "summary": "Typeform Create an empty form",
                "description": "Create an empty form in the workspace",
                "tags": [
                    "Typeform"
                ]
            }
        },
        "/connector/typeform/get-forms": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/typeform.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ITypeform.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.ITypeform.IFindFormOutput"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "form ID, title"
                    }
                },
                "summary": "Get a list of Typeform forms",
                "description": "Get a list of forms that exist in the workspace",
                "tags": [
                    "Typeform"
                ]
            }
        },
        "/connector/typeform/duplicate-form": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/typeform.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ITypeform.IDuplicateExistingFormInput"
                            }
                        }
                    },
                    "description": "The name of the form to copy and create",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ITypeform.ICreateFormOutput"
                                }
                            }
                        },
                        "description": "The generated form ID, title, and type"
                    }
                },
                "summary": "Copy a Typeform form",
                "description": "Copy a form that exists in the workspace",
                "tags": [
                    "Typeform"
                ]
            }
        },
        "/connector/typeform/forms/get-update-form-fields": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/typeform.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ITypeform.IGetFieldForUpdateFieldValueInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.ITypeform.IFieldInfoForUpdateFieldValueOutput"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "The field ID and field name of the form"
                    }
                },
                "summary": "Get the field information of the form to update Typeform",
                "description": "Get the field information of the form to update the options of the ranking, dropdown, and multiple choice questions",
                "tags": [
                    "Typeform"
                ]
            }
        },
        "/connector/typeform/form-field-value-update": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/typeform.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ITypeform.IUpdateFormFieldValueInput"
                            }
                        }
                    },
                    "description": "The name of the form field to update and the value to update",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ITypeform.IUpdateFormFieldValueOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Updates Typeform form field options",
                "description": "Updates options for ranking, dropdown, and multiple choice questions",
                "tags": [
                    "Typeform"
                ]
            }
        },
        "/connector/typeform/forms/{formId}": {
            "delete": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/typeform.svg",
                "parameters": [
                    {
                        "name": "formId",
                        "required": true,
                        "description": " The ID of the form to delete",
                        "in": "path",
                        "schema": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].{value:formId, label:name || '폼 이름'}",
                                "method": "post",
                                "path": "/connector/typeform/get-forms"
                            },
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ITypeform.ISecret"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "summary": "Delete a typeform form",
                "description": "Delete a form",
                "tags": [
                    "Typeform"
                ]
            }
        },
        "/connector/marp/convert-to-ppt": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IMarp.IConvertInput"
                            }
                        }
                    },
                    "description": "The Marp markdown string",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IMarp.IConvertOutput"
                                }
                            }
                        },
                        "description": "The S3 link of the converted PPT"
                    }
                },
                "summary": "Convert Marp markdown to PPT",
                "description": "Convert Marp markdown to PPT and store in S3\n\nWhen you write a markdown according to marp grammar, you convert it to create an html file that contains all of that content.\nBecause users won't know the markdown and marp grammar, this should be automatically generated by LLM, and users just need to provide the format, image, text, etc. they want.\nSo, instead of asking the user to provide marp or markdown grammar, ask for hints on how to organize the template and how to deploy it.\nAsking the user to write according to the Marp grammar directly can be difficult, even if the other person is the developer!\nAll tasks such as making presentation materials or organizing contents with slides, such as pptx, google slides, html, markdown (marp), and hanshow, may have to go through a connector that changes marp to this pptx.\n\nWarning: If you put too much content on a single slide, the content may be cut out and invisible. Split the content into several slides.",
                "tags": [
                    "Marp",
                    "pptx",
                    "hanshow",
                    "ppt",
                    "powerpoint",
                    "markdown",
                    "marp"
                ]
            }
        },
        "/connector/crunchbase/get-organization-data": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.IGetOrganizationDataInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.CrunchbaseResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Get Organization Data from crunchbase",
                "description": "Inquire corporate information\n\nA company's information includes a brief introduction to the company and on-mark rankings, industry groups, social media, websites, funding information including funding amounts and rounds, contacts, similar services, and competitors.\nIn addition to that, the company can acquire all the overall information, including the number of articles and employees mentioned, and the list of founders.",
                "tags": []
            }
        },
        "/connector/crunchbase/auto-complete": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.IAutocompleteInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.IAutocompleteOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Search for company name and auto-completion",
                "description": "Search for company name and auto-completion\n\nSearch and auto-completion capabilities to get unique identifiers for querying accurate company names and company information.\nUse your natural language search to explore if you have a similar company name.\nA company called 'Wrtn Technologies(뤼튼 테크놀로지스)' can search with a unique identifier called 'wrtn-technologies'.\nIf the person attempting to search for the 'Wrtn Technologies(뤼튼 테크놀로지스)' fails to call this connector, the above 'wrtn-technologies' may be used as is.",
                "tags": []
            }
        },
        "/connector/similarweb/get-domain-info": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.ISimilarweb.IGetDomainInfoInput"
                            }
                        }
                    },
                    "description": "- The input parameters containing the domain name to retrieve information for.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ISimilarweb.IGetDomainInfoOutput"
                                }
                            }
                        },
                        "description": "A promise that resolves to the domain information output, including status and detailed data."
                    }
                },
                "summary": "Get Domain Info from similarweb",
                "description": "Retrieves domain information using the Similarweb API\n\nYou can get all the traffic and various indicators for that domain.\nInformation available includes site name and description, traffic by country of access, visit/inflow information, inflow information by period, and ranking by global, country, and category.\nIn general, it can be used for investors' company analysis. In addition, it is also useful for marketers because the top keywords and Cpc values for each user can be known in advance.",
                "tags": []
            }
        },
        "/connector/x/get-users": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/X_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IX.IUserInput"
                            }
                        }
                    },
                    "description": "username",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IX.IUserOutput"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "user information"
                    }
                },
                "summary": "Get User Information",
                "description": "Get User Information by username",
                "tags": []
            }
        },
        "/connector/x/get-influencers": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/X_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IX.ISecret"
                            }
                        }
                    },
                    "description": "username",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/_namespace_swagger.IX.IUserOutput"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "user information"
                    }
                },
                "summary": "Get information on celebrities.",
                "description": "Get X user information of celebrities. Useful for understanding trends in various fields such as world affairs and IT.",
                "tags": []
            }
        },
        "/connector/x/prepare-summarize": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/X_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IX.IPrePareSummarizeTweetInput"
                            }
                        }
                    },
                    "description": "user information, secretKey, query",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IX.IPrePareSummarizeTweetOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Prepare Tweet Summary",
                "description": "Prepare summarizes the tweets of those requested them.",
                "tags": []
            }
        },
        "/connector/x/summarize": {
            "post": {
                "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/X_full.svg",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/_namespace_swagger.IX.ISummarizeTweetInput"
                            }
                        }
                    },
                    "description": "user information, secretKey, query",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IX.IGetChunkDocumentOutput"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "summary": "Tweet Summary",
                "description": "Summarizes the tweets of those requested them.",
                "tags": []
            }
        },
        "/swagger/update": {
            "post": {
                "parameters": [],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "description": "Swagger.json update",
                "tags": []
            }
        }
    },
    "tags": [
        {
            "name": "RAG"
        },
        {
            "name": "Hwp"
        },
        {
            "name": "Excel"
        },
        {
            "name": "Google Docs"
        },
        {
            "name": "Google Sheet"
        },
        {
            "name": "Google Calendar"
        },
        {
            "name": "Google Drive"
        },
        {
            "description": "selection Extract selection",
            "name": "Llm"
        },
        {
            "name": "Gmail"
        },
        {
            "name": "Figma"
        },
        {
            "name": "Zoom"
        },
        {
            "name": "SweetTracker"
        },
        {
            "name": "Hancel"
        },
        {
            "name": "KakaoTalk"
        },
        {
            "name": "Kakao Map"
        },
        {
            "name": "Kakao Navi"
        },
        {
            "name": "Google Slide"
        },
        {
            "name": "Imweb"
        },
        {
            "name": "Open Data"
        },
        {
            "name": "Korea Eximbank"
        },
        {
            "name": "Stable Diffusion"
        },
        {
            "name": "Dall-e-3"
        },
        {
            "name": "Google Search"
        },
        {
            "name": "Wanted"
        },
        {
            "name": "Incruit"
        },
        {
            "name": "Saramin"
        },
        {
            "name": "Jumpit"
        },
        {
            "name": "Careerly"
        },
        {
            "name": "Aladin"
        },
        {
            "name": "AliExpress"
        },
        {
            "name": "Coupang"
        },
        {
            "name": "EQL"
        },
        {
            "name": "iHerb"
        },
        {
            "name": "Market Kurly"
        },
        {
            "name": "OCO"
        },
        {
            "name": "Olive Young"
        },
        {
            "name": "29CM"
        },
        {
            "name": "Uniqlo"
        },
        {
            "name": "yes24"
        },
        {
            "name": "Musinsa"
        },
        {
            "name": "Google Ads"
        },
        {
            "name": "Arxiv"
        },
        {
            "name": "Daum"
        },
        {
            "name": "Naver"
        },
        {
            "name": "Youtube"
        },
        {
            "name": "Google Scholar"
        },
        {
            "name": "CSV"
        },
        {
            "name": "Notion"
        },
        {
            "name": "Google Hotel"
        },
        {
            "name": "Search Airport Information"
        },
        {
            "name": "Google Flight"
        },
        {
            "name": "Slack"
        },
        {
            "name": "Jira"
        },
        {
            "name": "Google Trends"
        },
        {
            "name": "Google Map"
        },
        {
            "name": "Github"
        },
        {
            "name": "Discord"
        },
        {
            "name": "Calendly"
        },
        {
            "name": "AI Search"
        },
        {
            "name": "Typeform"
        },
        {
            "name": "Marp"
        },
        {
            "name": "pptx"
        },
        {
            "name": "hanshow"
        },
        {
            "name": "ppt"
        },
        {
            "name": "powerpoint"
        },
        {
            "name": "markdown"
        },
        {
            "name": "marp"
        }
    ],
    "openapi": "3.1.0",
    "components": {
        "schemas": {
            "_namespace_swagger.IRunWorkflowOutput": {
                "properties": {
                    "workflowRunId": {
                        "title": "Workflow run id",
                        "description": "Workflow run id.",
                        "type": "string"
                    }
                },
                "required": [
                    "workflowRunId"
                ],
                "type": "object"
            },
            "_namespace_swagger.IRunWorkflowInput": {
                "properties": {
                    "workflowId": {
                        "description": "Workflow id.\nUsually this should be uuid, but for PoC we only have two fixed workflows.",
                        "title": "Workflow id",
                        "oneOf": [
                            {
                                "const": "marketing"
                            },
                            {
                                "const": "student-report"
                            }
                        ]
                    }
                },
                "required": [
                    "workflowId"
                ],
                "type": "object"
            },
            "_namespace_swagger.IWorkflowRunStatus": {
                "properties": {
                    "workflowRunId": {
                        "title": "Workflow run id",
                        "description": "Workflow run id.",
                        "type": "string"
                    },
                    "workflowId": {
                        "title": "Workflow Id",
                        "description": "Workflow id.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Workflow running status.\n\n- running: running.\n- finished: running completed.\n- failed: running failed.",
                        "title": "running status",
                        "oneOf": [
                            {
                                "const": "running"
                            },
                            {
                                "const": "finished"
                            },
                            {
                                "const": "failed"
                            }
                        ]
                    },
                    "outputs": {
                        "title": "Node execution result",
                        "description": "Node execution result.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGetNodeOutput"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "workflowRunId",
                    "workflowId",
                    "status",
                    "outputs"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGetNodeOutput": {
                "properties": {
                    "result": {
                        "title": "Node execution result",
                        "description": "Node execution result."
                    }
                },
                "required": [
                    "result"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGetWorkflowRunsOutput": {
                "properties": {
                    "workflowRuns": {
                        "title": "Workflow execution list",
                        "description": "Workflow execution list.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IWorkflowRunStatus"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "workflowRuns"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGetWorkflowRunsInput": {
                "properties": {
                    "workflowId": {
                        "title": "Workflow id",
                        "description": "If not specified, returns all runs.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IKeywordExtraction.IExtractKeywordOutput": {
                "properties": {
                    "keyword": {
                        "description": "Extracted Keywords",
                        "type": "string"
                    }
                },
                "required": [
                    "keyword"
                ],
                "type": "object"
            },
            "_namespace_swagger.IKeywordExtraction.IExtractKeywordInput": {
                "properties": {
                    "referenceContent": {
                        "title": "References",
                        "description": "References for keyword extraction",
                        "$ref": "#/components/schemas/_namespace_swagger.IConnector.IReferenceContent"
                    },
                    "context": {
                        "title": "Contextual information",
                        "description": "Contextual information for keyword extraction"
                    }
                },
                "required": [
                    "referenceContent",
                    "context"
                ],
                "title": "Input for keyword extraction",
                "type": "object"
            },
            "_namespace_swagger.IConnector.IReferenceContent": {
                "properties": {
                    "title": {
                        "title": "Title",
                        "description": "The title of the output",
                        "type": "string"
                    },
                    "type": {
                        "description": "Video, image, news article, research paper\n\nIt must be one of: video, image, news_article, research_paper",
                        "title": "Output Type",
                        "oneOf": [
                            {
                                "title": "video",
                                "const": "video"
                            },
                            {
                                "title": "image",
                                "const": "image"
                            },
                            {
                                "title": "news_article",
                                "const": "news_article"
                            },
                            {
                                "title": "research_paper",
                                "const": "research_paper"
                            }
                        ]
                    },
                    "source": {
                        "description": "youtube, facebook, instagram, google_search, arxiv, google_news\n\nIt must be one of: youtube, facebook, instagram, google_search, arxiv, google_news",
                        "title": "Source of output",
                        "oneOf": [
                            {
                                "title": "youtube",
                                "const": "youtube"
                            },
                            {
                                "title": "facebook",
                                "const": "facebook"
                            },
                            {
                                "title": "instagram",
                                "const": "instagram"
                            },
                            {
                                "title": "google_search",
                                "const": "google_search"
                            },
                            {
                                "title": "arxiv",
                                "const": "arxiv"
                            },
                            {
                                "title": "google_news",
                                "const": "google_news"
                            }
                        ]
                    },
                    "url": {
                        "format": "iri",
                        "title": "URL address",
                        "description": "The URL address of the output",
                        "type": "string"
                    },
                    "contents": {
                        "title": "Output Content",
                        "description": "Here is the content of the output",
                        "type": "string"
                    },
                    "image": {
                        "format": "iri",
                        "title": "Output Image URL",
                        "description": "The URL address of the image of the output",
                        "type": "string"
                    },
                    "statistics": {
                        "title": "Output statistics information",
                        "description": "Output statistics information\n\nPossible values: view_count, like_count, rank",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPartialRecordIConnector.MetricTypenumberTypeint32"
                    }
                },
                "required": [
                    "title",
                    "type",
                    "source",
                    "url"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPartialRecordIConnector.MetricTypenumberTypeint32": {
                "properties": {
                    "view_count": {
                        "type": "integer"
                    },
                    "like_count": {
                        "type": "integer"
                    },
                    "rank": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IRanker.IRankOutput": {
                "properties": {
                    "rankedIndices": {
                        "title": "Array of indexes of sorted items",
                        "description": "Array of indexes of sorted items",
                        "items": {
                            "type": "number"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "rankedIndices"
                ],
                "title": "Sorted results",
                "type": "object"
            },
            "_namespace_swagger.IRanker.IRankInput": {
                "properties": {
                    "items": {
                        "title": "List of items",
                        "description": "List of items to sort",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IRanker.IScoredItem"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "items"
                ],
                "title": "Input for sorting",
                "type": "object"
            },
            "_namespace_swagger.IRanker.IScoredItem": {
                "properties": {
                    "score": {
                        "title": "Score",
                        "description": "Item Score",
                        "type": "number"
                    }
                },
                "required": [
                    "score"
                ],
                "title": "Items to sort",
                "type": "object"
            },
            "_namespace_swagger.MyPartialIMarketingCopyComponents": {
                "properties": {
                    "title": {
                        "title": "The title of your marketing copy",
                        "description": "The title of your marketing copy.",
                        "type": "string"
                    },
                    "cta": {
                        "title": "This is the CTA phrase in your marketing copy",
                        "description": "This is the CTA phrase in your marketing copy.",
                        "type": "string"
                    },
                    "subtitle": {
                        "title": "A description of the marketing copy",
                        "description": "Here is a description of the marketing copy.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IMarketingCopyGenerator.IGenerateMarketingCopyInput": {
                "properties": {
                    "keyword": {
                        "title": "Keywords",
                        "description": "Overall keywords in your marketing copy",
                        "$ref": "#/components/schemas/_namespace_swagger.IKeywordExtraction.IExtractKeywordOutput"
                    },
                    "marketingPurpose": {
                        "title": "Marketing Purpose",
                        "description": "Purpose of marketing and product information",
                        "$ref": "#/components/schemas/_namespace_swagger.IMarketingPurpose"
                    },
                    "distributionChannel": {
                        "title": "Marketing Channel",
                        "description": "Channel information for using marketing copy",
                        "$ref": "#/components/schemas/_namespace_swagger.IDistributionChannel"
                    },
                    "referenceContent": {
                        "title": "References",
                        "description": "References for Creating Marketing Copy",
                        "$ref": "#/components/schemas/_namespace_swagger.IConnector.IReferenceContent"
                    }
                },
                "required": [
                    "keyword",
                    "marketingPurpose",
                    "distributionChannel",
                    "referenceContent"
                ],
                "title": "Input for creating marketing copy",
                "type": "object"
            },
            "_namespace_swagger.IMarketingPurpose": {
                "properties": {
                    "purpose": {
                        "description": "The purpose is to do marketing.\n\nOnly three possible values are available: sign_up, purchase, and visit.",
                        "title": "Marketing purpose",
                        "oneOf": [
                            {
                                "const": "sign_up"
                            },
                            {
                                "const": "purchase"
                            },
                            {
                                "const": "visit"
                            }
                        ]
                    },
                    "product_name": {
                        "title": "This is the product name to be marketed",
                        "description": "This is the product name to be marketed.",
                        "type": "string"
                    },
                    "unique_selling_point": {
                        "title": "This is the selling point of the product",
                        "description": "This is the selling point of the product.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "user_benefit": {
                        "title": "Benefits of the product you are marketing",
                        "description": "Benefits of the product you are marketing.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "purpose",
                    "product_name",
                    "unique_selling_point",
                    "user_benefit"
                ],
                "type": "object"
            },
            "_namespace_swagger.IDistributionChannel": {
                "properties": {
                    "channel": {
                        "description": "Channels to use marketing copy.\n\nOnly 6 possible values are possible: facebook, instagram_feed, instagram_story, youtube, naver, kakao.",
                        "title": "Channels to use marketing copy",
                        "oneOf": [
                            {
                                "const": "youtube"
                            },
                            {
                                "const": "facebook"
                            },
                            {
                                "const": "kakao"
                            },
                            {
                                "const": "instagram_feed"
                            },
                            {
                                "const": "instagram_story"
                            },
                            {
                                "const": "naver"
                            }
                        ]
                    },
                    "components": {
                        "title": "Information to retrieve from the channel where the marketing copy will be used",
                        "description": "Information to retrieve from the channel where the marketing copy will be used.\n\nOnly three possible values are possible: title, cta, subtitle.",
                        "items": {
                            "oneOf": [
                                {
                                    "const": "title"
                                },
                                {
                                    "const": "cta"
                                },
                                {
                                    "const": "subtitle"
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "channel",
                    "components"
                ],
                "type": "object"
            },
            "_namespace_swagger.IMarketingCopyImage": {
                "properties": {
                    "imageUrl": {
                        "format": "iri",
                        "contentMediaType": "image/*",
                        "title": "Image URL of the generated marketing copy draft",
                        "description": "Image URL of the generated marketing copy draft.",
                        "type": "string"
                    }
                },
                "required": [
                    "imageUrl"
                ],
                "type": "object"
            },
            "_namespace_swagger.IMarketingCopyGenerator.IGenerateMarketingCopyImageInput": {
                "properties": {
                    "copy": {
                        "title": "Marketing Copy Creation Results",
                        "description": "Marketing Copy Creation Results Related to Marketing Copy Image",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPartialIMarketingCopyComponents"
                    },
                    "keyword": {
                        "title": "Keywords",
                        "description": "Overall keywords for marketing copy images",
                        "$ref": "#/components/schemas/_namespace_swagger.IKeywordExtraction.IExtractKeywordOutput"
                    },
                    "marketingPurpose": {
                        "title": "Marketing Purpose",
                        "description": "Purpose of marketing and product information",
                        "$ref": "#/components/schemas/_namespace_swagger.IMarketingPurpose"
                    },
                    "distributionChannel": {
                        "title": "Marketing Channel",
                        "description": "Channel information for using marketing copy",
                        "$ref": "#/components/schemas/_namespace_swagger.IDistributionChannel"
                    },
                    "referenceContent": {
                        "title": "References",
                        "description": "References for Creating Marketing Copy",
                        "$ref": "#/components/schemas/_namespace_swagger.IConnector.IReferenceContent"
                    }
                },
                "required": [
                    "copy",
                    "keyword",
                    "marketingPurpose",
                    "distributionChannel",
                    "referenceContent"
                ],
                "title": "Input for generating marketing copy images",
                "type": "object"
            },
            "_namespace_swagger.IAws.IGetPutObjectUrlOutput": {
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "title": "file uuid",
                        "description": "This is the file uuid.",
                        "type": "string"
                    },
                    "uploadUrl": {
                        "title": "upload url",
                        "description": "This is the url for uploading the file.",
                        "type": "string"
                    },
                    "urlExpTsMillis": {
                        "title": "url expiration time",
                        "description": "url expiration time.",
                        "type": "number"
                    }
                },
                "required": [
                    "uuid",
                    "uploadUrl",
                    "urlExpTsMillis"
                ],
                "type": "object"
            },
            "_namespace_swagger.IAws.IGetPutObjectUrlInput": {
                "properties": {
                    "extension": {
                        "title": "File extension",
                        "description": "File extension.",
                        "type": "string"
                    }
                },
                "required": [
                    "extension"
                ],
                "type": "object"
            },
            "_namespace_swagger.IStudentReportGeneratorResponse": {
                "properties": {
                    "data": {
                        "title": "Generated life data",
                        "description": "Generated life data.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ITableRowData"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "data"
                ],
                "type": "object"
            },
            "_namespace_swagger.ITableRowData": {
                "properties": {},
                "additionalProperties": {
                    "type": "string"
                },
                "type": "object"
            },
            "_namespace_swagger.IStudentReportGeneratorRequest": {
                "properties": {
                    "consideration": {
                        "title": "Things to consider",
                        "description": "Here are some things to consider when generating your biometric data to pass on to your LLM.",
                        "type": "string"
                    },
                    "outputs": {
                        "title": "This is the data structure of the generated lifeblood",
                        "description": "This is the data structure of the generated lifeblood.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IOutputStructure"
                        },
                        "type": "array"
                    },
                    "reference_data": {
                        "title": "Reference data",
                        "description": "This is the data for the table to reference when creating the life data.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ITableRowData"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "consideration",
                    "outputs",
                    "reference_data"
                ],
                "type": "object"
            },
            "_namespace_swagger.IOutputStructure": {
                "properties": {
                    "field_name": {
                        "title": "The field name to be generated from LLM",
                        "description": "The field name to be generated from LLM.",
                        "type": "string"
                    },
                    "field_description": {
                        "title": "Description of the field",
                        "description": "Description of the field and guidance on how LLM should fill it out.",
                        "type": "string"
                    },
                    "example": {
                        "title": "Example for the field",
                        "description": "Here is an example for the field.",
                        "type": "string"
                    }
                },
                "required": [
                    "field_name",
                    "field_description",
                    "example"
                ],
                "type": "object"
            },
            "_namespace_swagger.IStudentReportRowGeneratorResponse": {
                "properties": {
                    "data": {
                        "title": "Generated life data",
                        "description": "Generated life data.",
                        "$ref": "#/components/schemas/_namespace_swagger.ITableRowData"
                    }
                },
                "required": [
                    "data"
                ],
                "type": "object"
            },
            "_namespace_swagger.IStudentReportRowGeneratorRequest": {
                "properties": {
                    "consideration": {
                        "title": "Things to consider",
                        "description": "Here are some things to consider when generating your biometric data to pass on to your LLM.",
                        "type": "string"
                    },
                    "output_structure": {
                        "title": "This is the data structure of the generated lifeblood",
                        "description": "This is the data structure of the generated lifeblood.",
                        "$ref": "#/components/schemas/_namespace_swagger.IOutputStructure"
                    },
                    "reference_data": {
                        "title": "Reference data",
                        "description": "This is the data for the table to reference when creating the life data.",
                        "$ref": "#/components/schemas/_namespace_swagger.ITableRowData"
                    }
                },
                "required": [
                    "consideration",
                    "output_structure",
                    "reference_data"
                ],
                "type": "object"
            },
            "_namespace_swagger.IRag.IAnalysisOutput": {
                "properties": {
                    "chatId": {
                        "title": "chat id",
                        "description": "Chat id required for RAG generation results.\nReturns the chat id for the analyzed file to generate chat results for the file analyzed by RAG.\nThe same chat id is required to analyze multiple files and generate results for multiple files in the same chat.",
                        "type": "string"
                    }
                },
                "required": [
                    "chatId"
                ],
                "title": "RAG analysis results",
                "type": "object"
            },
            "_namespace_swagger.IRag.IAnalyzeInput": {
                "properties": {
                    "url": {
                        "title": "Knowledge that the chatbot will use to answer",
                        "description": "Knowledge that the chatbot will use to answer",
                        "items": {
                            "format": "uri",
                            "contentMediaType": "application/pdf, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.hancom.hwp, text/plain, text/html",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "url"
                ],
                "title": "Knowledge that the chatbot will use to answer",
                "type": "object"
            },
            "_namespace_swagger.IRag.IStatusOutput": {
                "properties": {
                    "status": {
                        "description": "Analysis status.\n\n- RUNNING: Analysis in progress\n- COMPLETED: Analysis completed\n- FAILED: Analysis failed",
                        "title": "Analysis status",
                        "oneOf": [
                            {
                                "const": "COMPLETED"
                            },
                            {
                                "const": "FAILED"
                            },
                            {
                                "const": "RUNNING"
                            }
                        ]
                    }
                },
                "required": [
                    "status"
                ],
                "title": "RAG Analysis Status",
                "type": "object"
            },
            "_namespace_swagger.IRag.IGenerateOutput": {
                "properties": {
                    "answer": {
                        "title": "Response to utterance",
                        "description": "Response to RAG-based creation request.",
                        "type": "string"
                    }
                },
                "required": [
                    "answer"
                ],
                "title": "Chat results via RAG",
                "type": "object"
            },
            "_namespace_swagger.IRag.IGenerateInput": {
                "properties": {
                    "query": {
                        "title": "User utterance",
                        "description": "This is a user utterance.",
                        "type": "string"
                    }
                },
                "required": [
                    "query"
                ],
                "title": "Information required for chatting via RAG",
                "type": "object"
            },
            "_namespace_swagger.IHwp.IParseOutput": {
                "properties": {
                    "text": {
                        "title": "text",
                        "description": "Text of the parsed hwp file",
                        "type": "string"
                    }
                },
                "required": [
                    "text"
                ],
                "title": "hwp file parsing result",
                "type": "object"
            },
            "_namespace_swagger.IHwp.IParseInput": {
                "properties": {
                    "fileUrl": {
                        "format": "uri",
                        "contentMediaType": "application/vnd.hancom.hwp",
                        "title": "hwp file",
                        "description": "hwp file to parse.",
                        "type": "string"
                    }
                },
                "required": [
                    "fileUrl"
                ],
                "title": "Information for parsing hwp files",
                "type": "object"
            },
            "_namespace_swagger.IExcel.IReadExcelInput": {
                "properties": {
                    "fileUrl": {
                        "format": "uri",
                        "contentMediaType": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                        "title": "Excel file",
                        "description": "Excel file to read",
                        "type": "string"
                    },
                    "sheetName": {
                        "description": "Sheet name to read",
                        "title": "sheet name",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "x-wrtn-placeholder": "Sheet1",
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "fileUrl"
                ],
                "title": "file information",
                "type": "object"
            },
            "_namespace_swagger.IExcel.IReadExcelOutput": {
                "properties": {
                    "headers": {
                        "title": "headers of this sheet",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "data": {
                        "title": "Excel sheet data",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IExcel.IReadExcelRowData"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "headers",
                    "data"
                ],
                "title": "Excel file reading result",
                "type": "object"
            },
            "_namespace_swagger.IExcel.IReadExcelRowData": {
                "properties": {},
                "additionalProperties": {},
                "title": "Read Excel row data",
                "type": "object"
            },
            "_namespace_swagger.IExcel.IWorksheetListOutput": {
                "properties": {
                    "data": {
                        "title": "sheet list data",
                        "items": {
                            "properties": {
                                "sheetName": {
                                    "title": "sheet name",
                                    "description": "Name of the imported worksheet",
                                    "type": "string"
                                },
                                "id": {
                                    "title": "sheet id",
                                    "description": "The id of the imported worksheet.",
                                    "type": "number"
                                }
                            },
                            "required": [
                                "sheetName",
                                "id"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "data"
                ],
                "title": "List of imported worksheets",
                "type": "object"
            },
            "_namespace_swagger.IExcel.IGetWorksheetListInput": {
                "properties": {
                    "fileUrl": {
                        "format": "uri",
                        "contentMediaType": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                        "title": "Excel file",
                        "description": "File to import list of Excel worksheets",
                        "type": "string"
                    }
                },
                "required": [
                    "fileUrl"
                ],
                "title": "file information",
                "type": "object"
            },
            "_namespace_swagger.IExcel.IExportExcelFileOutput": {
                "properties": {
                    "fileUrl": {
                        "format": "uri",
                        "contentMediaType": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                        "title": "Generated Excel file url",
                        "type": "string"
                    }
                },
                "required": [
                    "fileUrl"
                ],
                "title": "Excel row addition result",
                "type": "object"
            },
            "_namespace_swagger.IExcel.IInsertExcelRowByUploadInput": {
                "properties": {
                    "fileUrl": {
                        "format": "uri",
                        "contentMediaType": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                        "title": "엑셀 파일",
                        "description": "엑셀 행을 추가할 파일\n\nIf you have this address, take an Excel file from that path and modify it.\nThe modified file is saved as a new link and does not modify the original file in this path.\nIf this address does not exist, create a new file immediately.",
                        "type": "string"
                    },
                    "data": {
                        "title": "Excel row data to add",
                        "description": "An array of objects where the key is the header name and the value is the value of the corresponding row",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.Recordstringany"
                        },
                        "type": "array"
                    },
                    "sheetName": {
                        "description": "Sheet name to add Excel rows to\nIf no input is entered, the first sheet is used as the default.",
                        "title": "Excel sheet name",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "x-wrtn-placeholder": "Sheet1",
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "data"
                ],
                "title": "Information for adding data",
                "type": "object"
            },
            "_namespace_swagger.Recordstringany": {
                "properties": {},
                "additionalProperties": {},
                "description": "Construct a type with a set of properties K of type T",
                "type": "object"
            },
            "_namespace_swagger.IExcel.IInsertExcelRowInput": {
                "properties": {
                    "fileUrl": {
                        "format": "iri",
                        "title": "엑셀 파일",
                        "description": "엑셀 행을 추가할 파일\n\nIf you have this address, take an Excel file from that path and modify it.\nThe modified file is saved as a new link and does not modify the original file in this path.\nIf this address does not exist, create a new file immediately.",
                        "type": "string"
                    },
                    "data": {
                        "title": "Excel row data to add",
                        "description": "An array of objects where the key is the header name and the value is the value of the corresponding row",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.Recordstringany"
                        },
                        "type": "array"
                    },
                    "sheetName": {
                        "description": "Sheet name to add Excel rows to\nIf no input is entered, the first sheet is used as the default.",
                        "title": "Excel sheet name",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "x-wrtn-placeholder": "Sheet1",
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "data"
                ],
                "title": "Information for adding data",
                "type": "object"
            },
            "_namespace_swagger.IExcel.ICreateSheetInput": {
                "properties": {
                    "sheetName": {
                        "description": "Sheet name to add Excel rows to\nIf no input is entered, the first sheet is used as the default.",
                        "title": "Excel sheet name",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "x-wrtn-placeholder": "Sheet1",
                                "type": "string"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IGoogleDocs.ICreateGoogleDocsOutput": {
                "properties": {
                    "id": {
                        "title": "Generated docs id",
                        "description": "The ID of the generated docs.",
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "Google Docs creation result",
                "type": "object"
            },
            "_namespace_swagger.IGoogleDocs.ICreateGoogleDocsInput": {
                "properties": {
                    "title": {
                        "title": "Google docs title",
                        "description": "The title of the docs to be generated.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/drive",
                            "https://www.googleapis.com/auth/documents"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "title",
                    "secretKey"
                ],
                "title": "Information required to create Google docs",
                "type": "object"
            },
            "_namespace_swagger.IGoogleDocs.IPermissionGoogleDocsInput": {
                "properties": {
                    "documentId": {
                        "title": "Google docs id",
                        "description": "The id of the Google docs to which you want to grant access.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "data[].{value:id, label:title}",
                            "method": "post",
                            "path": "/connector/google-docs/get-list"
                        },
                        "type": "string"
                    },
                    "permissions": {
                        "title": "Here is a list of emails to make accessible and the permissions to grant",
                        "description": "Here is a list of emails to make accessible and the permissions to grant.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IPermission"
                        },
                        "type": "array"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/drive",
                            "https://www.googleapis.com/auth/documents"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "documentId",
                    "permissions",
                    "secretKey"
                ],
                "title": "Information required to grant Google Docs permissions",
                "type": "object"
            },
            "_namespace_swagger.IPermission": {
                "properties": {
                    "email": {
                        "format": "email",
                        "title": "The email address of the user to grant permission to",
                        "description": "The email address of the user to grant permission to.",
                        "type": "string"
                    },
                    "role": {
                        "description": "The type of permission to grant.\n\nowner: Grants owner permissions. Users with this permission can delete files or folders or grant permissions to other users.\norganizer: Grants operator permissions for the drive. Users with this permission can manage the organization of the drive.\nfileOrganizer: Grants operator permissions for files on the drive. Users with this permission can add or delete files.\nwriter: Grants write permissions. Users with this permission can modify or delete files.\ncommenter: Grants comment permissions. Users with this permission can read and comment on files.\nreader: Grants read permissions. Users with this permission can read files.\n\nThere are only six possible values: \"owner\", \"writer\", \"commenter\", \"reader\", \"organizer\", \"fileOrganizer\".",
                        "title": "The permission to grant",
                        "oneOf": [
                            {
                                "const": "owner"
                            },
                            {
                                "const": "writer"
                            },
                            {
                                "const": "commenter"
                            },
                            {
                                "const": "reader"
                            },
                            {
                                "const": "organizer"
                            },
                            {
                                "const": "fileOrganizer"
                            }
                        ]
                    },
                    "type": {
                        "description": "The type of permission to grant.\n\nuser - a specific user, in this case you must specify the email address of the user to grant the permission to in the emailAddress field.\ngroup - a specific group, in this case you must specify the email address of the group to grant the permission to in the emailAddress field.\ndomain - a specific domain, in this case you must specify the domain to grant the permission to in the domain field.\nanyone - all users\n\nThere are only four possible values: \"user\", \"group\", \"domain\", \"anyone\".",
                        "title": "The type of permission to grant",
                        "oneOf": [
                            {
                                "const": "group"
                            },
                            {
                                "const": "user"
                            },
                            {
                                "const": "domain"
                            },
                            {
                                "const": "anyone"
                            }
                        ]
                    }
                },
                "required": [
                    "email",
                    "role",
                    "type"
                ],
                "title": "Authorization information",
                "type": "object"
            },
            "_namespace_swagger.IGoogleDocs.IReadGoogleDocsOutput": {
                "properties": {
                    "data": {
                        "title": "Google docs data",
                        "description": "This is data from Google docs that I read.",
                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleDocs"
                    }
                },
                "required": [
                    "data"
                ],
                "title": "Google Docs search results",
                "type": "object"
            },
            "_namespace_swagger.IGoogleDocs": {
                "properties": {
                    "text": {
                        "title": "text information",
                        "description": "Here is the text information from Google Docs.",
                        "type": "string"
                    },
                    "table": {
                        "title": "Table Information",
                        "description": "Here is the table information from Google Docs.",
                        "items": {
                            "items": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IGoogleDocs.ISecret": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/drive",
                            "https://www.googleapis.com/auth/documents"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "title": "Authentication Information",
                "type": "object"
            },
            "_namespace_swagger.IGoogleDocs.ICreateDocByTemplateOutput": {
                "properties": {
                    "id": {
                        "title": "Generated docs id",
                        "description": "The id of the copied docs",
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "Google Docs Duplication Results",
                "type": "object"
            },
            "_namespace_swagger.IGoogleDocs.ICreateDocByTemplateInput": {
                "properties": {
                    "templateId": {
                        "title": "Google docs to clone",
                        "description": "Google docs to clone",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "data[].{value:id, label:title}",
                            "method": "post",
                            "path": "/connector/google-docs/get-list"
                        },
                        "type": "string"
                    },
                    "title": {
                        "title": "The title of the docs to be created",
                        "description": "The title of the docs to be newly created by duplicating",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/drive",
                            "https://www.googleapis.com/auth/documents"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "templateId",
                    "title",
                    "secretKey"
                ],
                "title": "Information needed to duplicate Google Docs",
                "type": "object"
            },
            "_namespace_swagger.IGoogleDocs.IListGoogleDocsOutput": {
                "properties": {
                    "data": {
                        "title": "List of Google docs",
                        "description": "Here is a list of Google docs that were searched.",
                        "items": {
                            "properties": {
                                "id": {
                                    "description": "The id of the imported Google docs.",
                                    "title": "Google docs id",
                                    "oneOf": [
                                        {
                                            "type": "null"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                },
                                "title": {
                                    "description": "The title of the imported Google docs.",
                                    "title": "Google docs title",
                                    "oneOf": [
                                        {
                                            "type": "null"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "data"
                ],
                "title": "Google docs list query results",
                "type": "object"
            },
            "_namespace_swagger.IGoogleDocs.IAppendTextGoogleDocsInput": {
                "properties": {
                    "documentId": {
                        "title": "Google docs",
                        "description": "Select the Google docs you want to add text to.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "data[].{value:id, label:title}",
                            "method": "post",
                            "path": "/connector/google-docs/get-list"
                        },
                        "type": "string"
                    },
                    "text": {
                        "title": "text",
                        "description": "The text to add.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/drive",
                            "https://www.googleapis.com/auth/documents"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "documentId",
                    "text",
                    "secretKey"
                ],
                "title": "Information needed to add text to Google Docs",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSheet.IReadGoogleSheetOutput": {
                "properties": {
                    "data": {
                        "title": "Sheet data",
                        "description": "This is the data from the read sheet."
                    }
                },
                "required": [
                    "data"
                ],
                "title": "Google Sheet Reading Results",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSheet.IReadGoogleSheetHeadersInput": {
                "properties": {
                    "url": {
                        "title": "sheet url",
                        "description": "The url address of the sheet from which to read the header information.",
                        "type": "string"
                    },
                    "index": {
                        "title": "Sheet header index",
                        "description": "The header index of the sheet to read.",
                        "type": "number"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/spreadsheets",
                            "https://www.googleapis.com/auth/drive"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "url",
                    "secretKey"
                ],
                "title": "Information needed to read Google Sheet header",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSheet.IAppendToSheetInput": {
                "properties": {
                    "spreadSheetId": {
                        "title": "The sheet to add",
                        "description": "This is the sheet to which you want to add content.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:spreadsheetId, label:spreadsheetUrl}",
                            "method": "post",
                            "path": "/connector/google-sheet/create"
                        },
                        "type": "string"
                    },
                    "range": {
                        "title": "Range to add",
                        "description": "This is the range to add.\n\nPlease enter in A1 notation format.",
                        "type": "string"
                    },
                    "values": {
                        "title": "These are the values to add",
                        "description": "These are the values to add.",
                        "items": {
                            "items": {},
                            "type": "array"
                        },
                        "type": "array"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/spreadsheets",
                            "https://www.googleapis.com/auth/drive"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "spreadSheetId",
                    "range",
                    "values",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleSheet.ICreateGoogleSheetOutput": {
                "properties": {
                    "spreadsheetId": {
                        "title": "Sheet ID",
                        "description": "The ID of the generated Google Spreadsheet.",
                        "type": "string"
                    },
                    "spreadsheetUrl": {
                        "title": "Sheet URL",
                        "description": "The URL of the generated Google Spreadsheet.",
                        "type": "string"
                    }
                },
                "required": [
                    "spreadsheetId",
                    "spreadsheetUrl"
                ],
                "title": "Google Spreadsheet Creation Results",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSheet.ICreateGoogleSheetInput": {
                "properties": {
                    "title": {
                        "title": "Sheet Title",
                        "description": "Please enter a title for the Google Spreadsheet you want to create.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/spreadsheets",
                            "https://www.googleapis.com/auth/drive"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "title",
                    "secretKey"
                ],
                "title": "Information needed to create a Google Spreadsheet",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSheet.IPermissionInput": {
                "properties": {
                    "url": {
                        "format": "iri",
                        "title": "sheet url",
                        "description": "The url of the sheet to grant permission to.",
                        "type": "string"
                    },
                    "permissions": {
                        "title": "Here is a list of emails to make accessible and permissions to grant",
                        "description": "Here is a list of emails to make accessible and permissions to grant.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IPermission.o1"
                        },
                        "type": "array"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/spreadsheets",
                            "https://www.googleapis.com/auth/drive"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "url",
                    "permissions",
                    "secretKey"
                ],
                "title": "Information required to grant Google Sheets permissions",
                "type": "object"
            },
            "_namespace_swagger.IPermission.o1": {
                "properties": {
                    "email": {
                        "format": "email",
                        "title": "The email address of the user to grant permission to",
                        "description": "The email address of the user to grant permission to.",
                        "type": "string"
                    },
                    "role": {
                        "description": "The type of permission to grant.\n\nowner: Grants owner permission. Users with this permission can delete files or folders, or grant permission to other users.\nwriter: Grants write permission. Users with this permission can modify or delete files.\ncommenter: Grants comment permission. Users with this permission can read files and post comments.\nreader: Grants read permission. Users with this permission can read files.\n\nThere are only four possible values: \"owner\", \"writer\", \"commenter\", and \"reader\".",
                        "title": "The permission to grant",
                        "oneOf": [
                            {
                                "const": "owner"
                            },
                            {
                                "const": "writer"
                            },
                            {
                                "const": "commenter"
                            },
                            {
                                "const": "reader"
                            }
                        ]
                    }
                },
                "required": [
                    "email",
                    "role"
                ],
                "title": "Permissions Information",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSheet.IWriteGoogleSheetHeadersInput": {
                "properties": {
                    "url": {
                        "title": "sheet url",
                        "description": "The url of the sheet to which you want to add the header.",
                        "type": "string"
                    },
                    "index": {
                        "title": "sheet index",
                        "description": "The index of the header to add.",
                        "type": "number"
                    },
                    "headerNames": {
                        "title": "A list of headers to add to the sheet",
                        "description": "A list of headers to add to the sheet.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/spreadsheets",
                            "https://www.googleapis.com/auth/drive"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "url",
                    "headerNames",
                    "secretKey"
                ],
                "title": "Information needed to add a Google Sheet header",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSheet.IGetWorkSheetOutput": {
                "properties": {
                    "data": {
                        "title": "List of worksheet titles",
                        "description": "Here is a list of titles for the sheets you've read.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "data"
                ],
                "title": "Worksheet query results",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSheet.IGetWorkSheetInput": {
                "properties": {
                    "url": {
                        "title": "sheet url",
                        "description": "The url of the sheet to read.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/spreadsheets",
                            "https://www.googleapis.com/auth/drive"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "url",
                    "secretKey"
                ],
                "title": "Information required to view worksheets",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSheet.IReadGoogleSheetRowsOutput": {
                "properties": {
                    "data": {
                        "title": "This is the read Google Sheet row data",
                        "description": "This is the read Google Sheet row data.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGoogleSheet.IReadGoogleSheetRowData"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "data"
                ],
                "title": "Google Sheets Row Reading Results",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSheet.IReadGoogleSheetRowData": {
                "properties": {},
                "additionalProperties": {},
                "title": "Google Sheets Row Data Information",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSheet.IReadGoogleSheetRowsInput": {
                "properties": {
                    "url": {
                        "title": "sheet url",
                        "description": "The url of the sheet from which to read the rows.",
                        "type": "string"
                    },
                    "workSheetTitle": {
                        "title": "The title of the sheet to work on",
                        "description": "The title of the sheet to work on.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/spreadsheets",
                            "https://www.googleapis.com/auth/drive"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "url",
                    "workSheetTitle",
                    "secretKey"
                ],
                "title": "Information needed to read Google Sheet rows",
                "type": "object"
            },
            "_namespace_swagger.IGoogleCalendar.IGoogleCalendarOutput": {
                "properties": {
                    "id": {
                        "description": "The id of the generated calendar.",
                        "title": "Calendar id",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "summary": {
                        "description": "The name of the generated calendar.",
                        "title": "Calendar name",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "title": "Calendar creation result",
                "type": "object"
            },
            "_namespace_swagger.IGoogleCalendar.ISecret": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/calendar"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "title": "Authentication Information",
                "type": "object"
            },
            "_namespace_swagger.IGoogleCalendar.ICreateCalendarInput": {
                "properties": {
                    "title": {
                        "title": "The title of the calendar to be created",
                        "description": "The title of the calendar to be created.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/calendar"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "title",
                    "secretKey"
                ],
                "title": "Information for creating a calendar",
                "type": "object"
            },
            "_namespace_swagger.IGoogleCalendar.IReadGoogleCalendarEventOutput": {
                "properties": {
                    "events": {
                        "title": "Event List",
                        "description": "Here is a list of calendar events that were found.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.IGoogleCalendarEvent"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "events"
                ],
                "title": "Calendar Event Search Results",
                "type": "object"
            },
            "_namespace_swagger.IGoogleCalendar.IGoogleCalendarEvent": {
                "properties": {
                    "id": {
                        "description": "The unique id of the event.",
                        "title": "event id",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "htmlLink": {
                        "description": "Here is the event link.",
                        "title": "Event Link",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    },
                    "color": {
                        "description": "Event color.",
                        "title": "Event color",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "createdDate": {
                        "description": "The event creation date.",
                        "title": "The event creation date",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "updatedDate": {
                        "description": "Event update date.",
                        "title": "Event update date",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "title": {
                        "description": "This is the event title.",
                        "title": "Event title",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "description": {
                        "description": "Event description.",
                        "title": "Event description",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "location": {
                        "description": "This is the event location.",
                        "title": "Event Location",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "organizer": {
                        "description": "Here is the information for the event organizer.",
                        "title": "Event Organizer",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.IGoogleCalendarEvent.IOrganizer"
                            }
                        ]
                    },
                    "creator": {
                        "description": "Information about the event creator.",
                        "title": "Event Creator",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.IGoogleCalendarEvent.ICreator"
                            }
                        ]
                    },
                    "startDate": {
                        "title": "Event Start Date\n\nThe start date information for the event.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "properties": {
                                    "dateTime": {
                                        "description": "Event start date.",
                                        "title": "Event start date",
                                        "oneOf": [
                                            {
                                                "type": "null"
                                            },
                                            {
                                                "type": "string"
                                            }
                                        ]
                                    },
                                    "timeZone": {
                                        "description": "Event start date time zone.",
                                        "title": "Event start date time zone",
                                        "oneOf": [
                                            {
                                                "type": "null"
                                            },
                                            {
                                                "type": "string"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        ]
                    },
                    "endDate": {
                        "description": "This is the event end date information.",
                        "title": "Event end date",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "properties": {
                                    "dateTime": {
                                        "description": "The event ends on this date.",
                                        "title": "The event ends on this date",
                                        "oneOf": [
                                            {
                                                "type": "null"
                                            },
                                            {
                                                "type": "string"
                                            }
                                        ]
                                    },
                                    "timeZone": {
                                        "description": "Event End Date Timezone.",
                                        "title": "Event End Date Timezone",
                                        "oneOf": [
                                            {
                                                "type": "null"
                                            },
                                            {
                                                "type": "string"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        ]
                    },
                    "recurrence": {
                        "description": "Event repeat information.",
                        "title": "Event repeat information",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "transparency": {
                        "description": "Event busy/free status.",
                        "title": "Event busy/free status",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "guestsCanModify": {
                        "description": "Whether the inviter has permission to edit the event.",
                        "title": "Whether the inviter has permission to edit the event",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "boolean"
                            }
                        ]
                    },
                    "reminders": {
                        "description": "Event notification information.",
                        "title": "Event notification information",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.IGoogleCalendarEvent.IReminders"
                            }
                        ]
                    },
                    "attendees": {
                        "description": "Here is the event attendee information.",
                        "title": "Event Attendee",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.IGoogleCalendarEvent.IAttendees"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "attachments": {
                        "description": "Event attachment information.",
                        "title": "Attachment information",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.IGoogleCalendarEvent.IAttachments"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "hangoutLink": {
                        "description": "Here is the Google Meet link.",
                        "title": "Google Meet link",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "visibility": {
                        "description": "The event is open.",
                        "title": "The event is open",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "title": "Google Calendar Event Information",
                "type": "object"
            },
            "_namespace_swagger.IGoogleCalendar.IGoogleCalendarEvent.IOrganizer": {
                "properties": {
                    "id": {
                        "description": "Event organizer profile id.",
                        "title": "Event organizer profile id",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "displayName": {
                        "description": "The name of the event organizer.",
                        "title": "The name of the event organizer",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "email": {
                        "description": "This is the event organizer's email.",
                        "title": "This is the event organizer's email",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "self": {
                        "description": "Whether the event copy corresponds to the calendar on which it is displayed.",
                        "title": "Whether the event copy corresponds to the calendar on which it is displayed",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "boolean"
                            }
                        ]
                    }
                },
                "title": "Host Information",
                "type": "object"
            },
            "_namespace_swagger.IGoogleCalendar.IGoogleCalendarEvent.ICreator": {
                "properties": {
                    "id": {
                        "description": "The event creator profile id.",
                        "title": "Event Creator Profile Id",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "displayName": {
                        "description": "The event creator name.",
                        "title": "The event creator name",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "email": {
                        "description": "The event creator email.",
                        "title": "The event creator email",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "self": {
                        "description": "Whether the event copy corresponds to the calendar on which it is displayed.",
                        "title": "Whether the event copy corresponds to the calendar on which it is displayed",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "boolean"
                            }
                        ]
                    }
                },
                "title": "Event creator information",
                "description": "Event creator information.",
                "type": "object"
            },
            "_namespace_swagger.IGoogleCalendar.IGoogleCalendarEvent.IReminders": {
                "properties": {
                    "useDefault": {
                        "title": "Whether to default notification",
                        "description": "Whether to default notification.",
                        "type": "boolean"
                    },
                    "overrides": {
                        "title": "Notification settings information",
                        "description": "Here is the notification settings information.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGoogleCalendar.IGoogleCalendarEvent.IRemindersOverrides"
                        },
                        "type": "array"
                    }
                },
                "title": "Notification information",
                "type": "object"
            },
            "_namespace_swagger.IGoogleCalendar.IGoogleCalendarEvent.IRemindersOverrides": {
                "properties": {
                    "method": {
                        "description": "This is the notification method.",
                        "title": "Notification method",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "minutes": {
                        "description": "It's time to send notifications.",
                        "title": "It's time to send notifications",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    }
                },
                "title": "Notification settings information",
                "type": "object"
            },
            "_namespace_swagger.IGoogleCalendar.IGoogleCalendarEvent.IAttendees": {
                "properties": {
                    "email": {
                        "description": "This is the event attendee email.",
                        "title": "Event attendee email",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "organizer": {
                        "description": "Whether the event attendee is the host.",
                        "title": "Whether the event attendee is the host",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "boolean"
                            }
                        ]
                    },
                    "self": {
                        "description": "Whether the calendar that the schedule copy is displayed on is indicated.",
                        "title": "Whether the calendar that the schedule copy is displayed on is indicated",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "boolean"
                            }
                        ]
                    },
                    "responseStatus": {
                        "description": "Attendee's attendance response status.",
                        "title": "Attendee's attendance response status",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "title": "Attendee Information",
                "type": "object"
            },
            "_namespace_swagger.IGoogleCalendar.IGoogleCalendarEvent.IAttachments": {
                "properties": {
                    "fileUrl": {
                        "description": "This is the event attachment file url.",
                        "title": "file url",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    },
                    "title": {
                        "description": "This is the title of the attached file.",
                        "title": "File title",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "mimeType": {
                        "description": "Internet Media Type.",
                        "title": "Internet Media Type",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "iconLink": {
                        "description": "Attachment file icon link.",
                        "title": "File icon link",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    },
                    "fileId": {
                        "description": "This is the id of the attached file.",
                        "title": "file id",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "title": "Attachment file information",
                "type": "object"
            },
            "_namespace_swagger.IGoogleCalendar.IReadGoogleCalendarEventInput": {
                "properties": {
                    "time_max": {
                        "properties": {
                            "year": {
                                "title": "The year",
                                "description": "It's the year.",
                                "type": "number"
                            },
                            "month": {
                                "title": "The Month",
                                "description": "It's the month.\n\nYou must enter a two-digit number. For example, if it is March, you should enter 03.",
                                "type": "number"
                            },
                            "date": {
                                "title": "Date",
                                "description": "It's the date.\n\nYou must enter a two-digit number. For example, if it is 7th, you should enter 07.",
                                "type": "number"
                            },
                            "hour": {
                                "title": "hour",
                                "description": "It's the hour.\n\nYou must enter a two-digit number. For example, if it is 2am, you should enter 02. If it is 2pm, you should enter 14.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "year",
                            "month",
                            "date",
                            "hour"
                        ],
                        "title": "Information about the last date from which events will be fetched",
                        "description": "Events after that date will not be fetched.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it.",
                        "type": "object"
                    },
                    "time_min": {
                        "properties": {
                            "year": {
                                "title": "The year",
                                "description": "It's the year.",
                                "type": "number"
                            },
                            "month": {
                                "title": "The Month",
                                "description": "It's the month.\n\nYou must enter a two-digit number. For example, if it is March, you should enter 03.",
                                "type": "number"
                            },
                            "date": {
                                "title": "Date",
                                "description": "It's the date.\n\nYou must enter a two-digit number. For example, if it is 7th, you should enter 07.",
                                "type": "number"
                            },
                            "hour": {
                                "title": "hour",
                                "description": "It's the hour.\n\nYou must enter a two-digit number. For example, if it is 2am, you should enter 02. If it is 2pm, you should enter 14.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "year",
                            "month",
                            "date",
                            "hour"
                        ],
                        "title": "Information on the start date from which events will be retrieved",
                        "description": "Events prior to that date will not be retrieved.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it.",
                        "type": "object"
                    },
                    "max_results": {
                        "title": "How many results to return",
                        "description": "Sets the maximum number of events to retrieve.",
                        "type": "integer"
                    },
                    "orderBy": {
                        "description": "The order in which the calendar events are sorted.\n\n- startTime: The start time of the event.\n- updated: The date the event was updated.\n\nOnly two possible values are possible: \"startTime\" and \"updated\".",
                        "title": "The order in which the events will be received",
                        "oneOf": [
                            {
                                "title": "시작 시간",
                                "const": "startTime"
                            },
                            {
                                "title": "업데이트 날짜",
                                "const": "updated"
                            }
                        ]
                    },
                    "query": {
                        "title": "Event search terms",
                        "description": "You can search for events that contain your search terms.\n\nYou can search for events that contain your search terms in the title, description, location, attendees, etc.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/calendar"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "time_max",
                    "time_min",
                    "secretKey"
                ],
                "title": "Information needed to search for events",
                "type": "object"
            },
            "_namespace_swagger.IGoogleCalendar.ICreateQuickEventInput": {
                "properties": {
                    "text": {
                        "title": "This is the text for creating a quick calendar event",
                        "description": "This is the text for creating a quick calendar event.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/calendar"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "text",
                    "secretKey"
                ],
                "title": "Information needed to create a quick event",
                "type": "object"
            },
            "_namespace_swagger.IGoogleCalendar.IEventRequestBodyInput": {
                "properties": {
                    "title": {
                        "title": "Event title",
                        "description": "The title of the event to be generated.",
                        "type": "string"
                    },
                    "description": {
                        "title": "Event description",
                        "description": "Description of the event to be generated.",
                        "type": "string"
                    },
                    "location": {
                        "title": "Event Location",
                        "description": "This is the event location to be created.",
                        "type": "string"
                    },
                    "start": {
                        "properties": {
                            "year": {
                                "title": "The year",
                                "description": "It's the year.",
                                "type": "number"
                            },
                            "month": {
                                "title": "The Month",
                                "description": "It's the month.\n\nYou must enter a two-digit number. For example, if it is March, you should enter 03.",
                                "type": "number"
                            },
                            "date": {
                                "title": "Date",
                                "description": "It's the date.\n\nYou must enter a two-digit number. For example, if it is 7th, you should enter 07.",
                                "type": "number"
                            },
                            "hour": {
                                "title": "hour",
                                "description": "It's the hour.\n\nYou must enter a two-digit number. For example, if it is 2am, you should enter 02. If it is 2pm, you should enter 14.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "year",
                            "month",
                            "date",
                            "hour"
                        ],
                        "title": "Event start date",
                        "description": "The start date of the event to be created.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it.",
                        "type": "object"
                    },
                    "end": {
                        "properties": {
                            "year": {
                                "title": "The year",
                                "description": "It's the year.",
                                "type": "number"
                            },
                            "month": {
                                "title": "The Month",
                                "description": "It's the month.\n\nYou must enter a two-digit number. For example, if it is March, you should enter 03.",
                                "type": "number"
                            },
                            "date": {
                                "title": "Date",
                                "description": "It's the date.\n\nYou must enter a two-digit number. For example, if it is 7th, you should enter 07.",
                                "type": "number"
                            },
                            "hour": {
                                "title": "hour",
                                "description": "It's the hour.\n\nYou must enter a two-digit number. For example, if it is 2am, you should enter 02. If it is 2pm, you should enter 14.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "year",
                            "month",
                            "date",
                            "hour"
                        ],
                        "title": "Event end date",
                        "description": "The end date of the event to be created.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it.",
                        "type": "object"
                    },
                    "attendeesEmail": {
                        "title": "Attendee Email",
                        "description": "This is the event attendee email.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "repeatFrequency": {
                        "description": "The event repeat cycle.\n\n- DAILY: Daily\n- WEEKLY: Weekly\n- MONTHLY: Monthly\n- YEARLY: Yearly\n\nOnly 4 possible values are possible: \"DAILY\", \"WEEKLY\", \"MONTHLY\", \"YEARLY\".",
                        "title": "The event repeat cycle",
                        "oneOf": [
                            {
                                "const": "DAILY"
                            },
                            {
                                "const": "WEEKLY"
                            },
                            {
                                "const": "MONTHLY"
                            },
                            {
                                "const": "YEARLY"
                            }
                        ]
                    },
                    "repeatNum": {
                        "title": "The number of times the event is repeated",
                        "description": "The number of times the event is repeated.",
                        "type": "number"
                    },
                    "repeatUntil": {
                        "properties": {
                            "year": {
                                "title": "The year",
                                "description": "It's the year.",
                                "type": "number"
                            },
                            "month": {
                                "title": "The Month",
                                "description": "It's the month.\n\nYou must enter a two-digit number. For example, if it is March, you should enter 03.",
                                "type": "number"
                            },
                            "date": {
                                "title": "Date",
                                "description": "It's the date.\n\nYou must enter a two-digit number. For example, if it is 7th, you should enter 07.",
                                "type": "number"
                            },
                            "hour": {
                                "title": "hour",
                                "description": "It's the hour.\n\nYou must enter a two-digit number. For example, if it is 2am, you should enter 02. If it is 2pm, you should enter 14.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "year",
                            "month",
                            "date",
                            "hour"
                        ],
                        "title": "Event repeat deadline",
                        "description": "Event repeat deadline.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it.",
                        "type": "object"
                    },
                    "isBusy": {
                        "title": "Whether the event is busy or not",
                        "description": "Whether the event is busy or not.",
                        "type": "boolean"
                    },
                    "isUseDefaultReminder": {
                        "title": "Whether to use the default calendar notifications",
                        "description": "Whether to use the default calendar notifications.",
                        "type": "boolean"
                    },
                    "remindersType": {
                        "description": "Event notification type.\n\n- popup: Popup notification\n- email: Email notification\n\nOnly two possible values are possible: \"popup\" and \"email\".",
                        "title": "Event notification type",
                        "oneOf": [
                            {
                                "const": "email"
                            },
                            {
                                "const": "popup"
                            }
                        ]
                    },
                    "minutesBeforeReminders": {
                        "title": "It's time to set a notification before the schedule starts",
                        "description": "It's time to set a notification before the schedule starts.",
                        "type": "number"
                    },
                    "isConferencing": {
                        "title": "Whether to create a Google Meet",
                        "description": "Whether to create a Google Meet.",
                        "type": "boolean"
                    },
                    "visibility": {
                        "description": "The event's public status.\n\ndefault - The default public status\npublic - The event is public and the event details are visible to all readers of the calendar\nprivate - The event is private and only the event attendees can see the event details\n\nThere are only three possible values: \"default\", \"public\", \"private\".",
                        "title": "The event's public status",
                        "oneOf": [
                            {
                                "const": "default"
                            },
                            {
                                "const": "private"
                            },
                            {
                                "const": "public"
                            }
                        ]
                    },
                    "colorId": {
                        "title": "Event Color",
                        "description": "Event Color.",
                        "type": "string"
                    },
                    "isGuestCanModify": {
                        "title": "Whether guest events can be modified",
                        "description": "Whether guest events can be modified.",
                        "type": "boolean"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/calendar"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "start",
                    "end",
                    "secretKey"
                ],
                "title": "Information required to create an event",
                "type": "object"
            },
            "_namespace_swagger.IGoogleCalendar.IAddAttendeesToEventInput": {
                "properties": {
                    "attendeesEmail": {
                        "title": "The email address of the attendee you wish to add",
                        "description": "The email address of the attendee you wish to add.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/calendar"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "attendeesEmail",
                    "secretKey"
                ],
                "title": "Information required to add attendees",
                "type": "object"
            },
            "_namespace_swagger.IGoogleDrive.IFolderListGoogleDriveOutput": {
                "properties": {
                    "data": {
                        "title": "Google Drive Folder Data",
                        "description": "List of folder data in Google Drive.",
                        "items": {
                            "properties": {
                                "id": {
                                    "description": "Google drive folder id.",
                                    "title": "Google drive folder id",
                                    "oneOf": [
                                        {
                                            "type": "null"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                },
                                "name": {
                                    "description": "Google drive folder name.",
                                    "title": "Google drive folder name",
                                    "oneOf": [
                                        {
                                            "type": "null"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "data"
                ],
                "title": "Folder list information in Google Drive",
                "type": "object"
            },
            "_namespace_swagger.IGoogleDrive.ISecret": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/drive"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "title": "Authentication Information",
                "type": "object"
            },
            "_namespace_swagger.IGoogleDrive.IFileListGoogleDriveOutput": {
                "properties": {
                    "data": {
                        "title": "Google Drive File Data",
                        "description": "List of file data in Google Drive.",
                        "items": {
                            "properties": {
                                "id": {
                                    "description": "Google drive file id.",
                                    "title": "Google drive file id",
                                    "oneOf": [
                                        {
                                            "type": "null"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                },
                                "name": {
                                    "description": "The name of the Google drive file.",
                                    "title": "Google drive file name",
                                    "oneOf": [
                                        {
                                            "type": "null"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                },
                                "webContentLink": {
                                    "title": "webContentLink",
                                    "oneOf": [
                                        {
                                            "type": "null"
                                        },
                                        {
                                            "format": "iri",
                                            "type": "string"
                                        }
                                    ]
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "data"
                ],
                "title": "File list information in Google Drive",
                "type": "object"
            },
            "_namespace_swagger.IGoogleDrive.IFileListGoogleDriveInput": {
                "properties": {
                    "folderId": {
                        "title": "Google Drive Folder",
                        "description": "Folder to load files from",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "data[].{value:id, label:name}",
                            "method": "post",
                            "path": "/connector/google-drive/get/folders"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/drive"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "title": "Information for loading a list of files in Google Drive",
                "type": "object"
            },
            "_namespace_swagger.IGoogleDrive.ICreateFolderGoogleDriveOutput": {
                "properties": {
                    "id": {
                        "title": "Generated drive id",
                        "description": "Generated drive folder id.",
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "Google Drive Folder Creation Results",
                "type": "object"
            },
            "_namespace_swagger.IGoogleDrive.ICreateFolderGoogleDriveInput": {
                "properties": {
                    "name": {
                        "title": "Google drive folder name",
                        "description": "Drive folder name to be created.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/drive"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "secretKey"
                ],
                "title": "Information required to create a Google Drive folder",
                "type": "object"
            },
            "_namespace_swagger.IGoogleDrive.ICreateFileGoogleDriveOutput": {
                "properties": {
                    "id": {
                        "title": "Generated drive file id",
                        "description": "Generated drive file id.",
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "Result of creating a file in Google Drive",
                "type": "object"
            },
            "_namespace_swagger.IGoogleDrive.IUploadFileInput": {
                "properties": {
                    "name": {
                        "title": "Google drive file name",
                        "description": "File name to be created in drive.",
                        "type": "string"
                    },
                    "folderIds": {
                        "minItems": 1,
                        "title": "Google drive folder ids",
                        "description": "A list of folder ids that will contain the files to be created in the drive.",
                        "items": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "data[].{value:id, label:name}",
                                "method": "post",
                                "path": "/connector/google-drive/get/folders"
                            },
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "fileUrl": {
                        "format": "iri",
                        "title": "fileToUpload",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/drive"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "folderIds",
                    "fileUrl",
                    "secretKey"
                ],
                "title": "Information required to create a file in Google Drive",
                "type": "object"
            },
            "_namespace_swagger.IGoogleDrive.IPermissionGoogleDriveInput": {
                "properties": {
                    "fileId": {
                        "title": "Google drive file id",
                        "description": "The drive file id to grant access to.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "data[].{value:id, label:name}",
                            "method": "post",
                            "path": "/connector/google-drive/get/files"
                        },
                        "type": "string"
                    },
                    "folderId": {
                        "title": "Google drive folder id",
                        "description": "Drive folder id to grant access to.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "data[].{value:id, label:name}",
                            "method": "post",
                            "path": "/connector/google-drive/get/folders"
                        },
                        "type": "string"
                    },
                    "permissions": {
                        "title": "Here is a list of emails to make accessible and permissions to grant",
                        "description": "Here is a list of emails to make accessible and permissions to grant.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGoogleDrive.IPermission"
                        },
                        "type": "array"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/drive"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "permissions",
                    "secretKey"
                ],
                "title": "Information required for Google Drive access permission",
                "type": "object"
            },
            "_namespace_swagger.IGoogleDrive.IPermission": {
                "properties": {
                    "email": {
                        "format": "email",
                        "title": "The email address of the user to whom you wish to grant access",
                        "description": "The email address of the user to whom you wish to grant access to Google Drive.\nRequired only when the type is a user type.",
                        "type": "string"
                    },
                    "role": {
                        "description": "The type of permission to grant.\n\nowner: Grants owner permissions. Users with this permission can delete files or folders or grant permissions to other users.\norganizer: Grants operator permissions for the drive. Users with this permission can manage the organization of the drive.\nfileOrganizer: Grants operator permissions for files on the drive. Users with this permission can add or delete files.\nwriter: Grants write permissions. Users with this permission can modify or delete files.\ncommenter: Grants comment permissions. Users with this permission can read and comment on files.\nreader: Grants read permissions. Users with this permission can read files.\n\nThere are only six possible values: \"owner\", \"organizer\", \"fileOrganizer\", \"writer\", \"commenter\", \"reader\".",
                        "title": "The permission to grant",
                        "oneOf": [
                            {
                                "const": "owner"
                            },
                            {
                                "const": "writer"
                            },
                            {
                                "const": "commenter"
                            },
                            {
                                "const": "reader"
                            },
                            {
                                "const": "organizer"
                            },
                            {
                                "const": "fileOrganizer"
                            }
                        ]
                    },
                    "type": {
                        "description": "The type of permission to grant.\n\nuser - a specific user, in this case you must specify the email address of the user to grant the permission to in the emailAddress field.\ngroup - a specific group, in this case you must specify the email address of the group to grant the permission to in the emailAddress field.\ndomain - a specific domain, in this case you must specify the domain to grant the permission to in the domain field.\nanyone - all users\n\nThere are only four possible values: \"user\", \"group\", \"domain\", \"anyone\".",
                        "title": "The type of permission to grant",
                        "oneOf": [
                            {
                                "const": "group"
                            },
                            {
                                "const": "user"
                            },
                            {
                                "const": "domain"
                            },
                            {
                                "const": "anyone"
                            }
                        ]
                    }
                },
                "required": [
                    "role",
                    "type"
                ],
                "title": "Access Rights Information",
                "type": "object"
            },
            "_namespace_swagger.IGoogleDrive.IGetFileOutput": {
                "properties": {
                    "userPermission": {
                        "properties": {
                            "id": {
                                "title": "id",
                                "type": "string"
                            },
                            "type": {
                                "title": "type",
                                "oneOf": [
                                    {
                                        "const": "group"
                                    },
                                    {
                                        "const": "user"
                                    },
                                    {
                                        "const": "domain"
                                    },
                                    {
                                        "const": "anyone"
                                    }
                                ]
                            },
                            "role": {
                                "title": "role",
                                "oneOf": [
                                    {
                                        "const": "owner"
                                    },
                                    {
                                        "const": "writer"
                                    },
                                    {
                                        "const": "commenter"
                                    },
                                    {
                                        "const": "reader"
                                    },
                                    {
                                        "const": "organizer"
                                    },
                                    {
                                        "const": "fileOrganizer"
                                    }
                                ]
                            },
                            "pendingOwner": {
                                "title": "pendingOwner",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "id",
                            "type",
                            "role",
                            "pendingOwner"
                        ],
                        "title": "userPermission",
                        "type": "object"
                    },
                    "fileExtension": {
                        "title": "fileExtension",
                        "type": "string"
                    },
                    "ownerNames": {
                        "title": "ownerNames",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "lastModifyingUserName": {
                        "title": "lastModifyingUserName",
                        "type": "string"
                    },
                    "editable": {
                        "title": "editable",
                        "type": "boolean"
                    },
                    "writersCanShare": {
                        "title": "writersCanShare",
                        "type": "boolean"
                    },
                    "mimeType": {
                        "title": "mimeType",
                        "type": "string"
                    },
                    "parents": {
                        "title": "parents",
                        "items": {
                            "properties": {
                                "id": {
                                    "title": "id: string;",
                                    "type": "string"
                                },
                                "isRoot": {
                                    "title": "isRoot",
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "id",
                                "isRoot"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "thumbnailLink": {
                        "format": "iri",
                        "title": "thumbnailLink",
                        "type": "string"
                    },
                    "appDataContents": {
                        "title": "appDataContents",
                        "type": "boolean"
                    },
                    "shared": {
                        "title": "shared",
                        "type": "boolean"
                    },
                    "lastModifyingUser": {
                        "title": "lastModifyingUser",
                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleDrive.User"
                    },
                    "owners": {
                        "title": "owners",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGoogleDrive.User"
                        },
                        "type": "array"
                    },
                    "copyable": {
                        "title": "copyable",
                        "type": "boolean"
                    },
                    "alternateLink": {
                        "format": "iri",
                        "title": "alternateLink\nA link to view the file in Google Drive's preview mode.",
                        "type": "string"
                    },
                    "embedLink": {
                        "format": "iri",
                        "title": "embedLink\nA link to embed the file in a webpage via an iframe.",
                        "type": "string"
                    },
                    "webContentLink": {
                        "title": "webContentLink\nA link to directly access or download the file content.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    },
                    "fileSize": {
                        "title": "fileSize",
                        "type": "string"
                    },
                    "copyRequiresWriterPermission": {
                        "title": "copyRequiresWriterPermission",
                        "type": "boolean"
                    },
                    "spaces": {
                        "title": "spaces",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "title": "id",
                        "type": "string"
                    },
                    "title": {
                        "title": "title(filename)",
                        "type": "string"
                    },
                    "labels": {
                        "properties": {
                            "viewed": {
                                "title": "viewed",
                                "type": "boolean"
                            },
                            "restricted": {
                                "title": "restricted",
                                "type": "boolean"
                            },
                            "starred": {
                                "title": "starred",
                                "type": "boolean"
                            },
                            "hidden": {
                                "title": "hidden",
                                "type": "boolean"
                            },
                            "trashed": {
                                "title": "trashed",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "viewed",
                            "restricted",
                            "starred",
                            "hidden",
                            "trashed"
                        ],
                        "title": "labels",
                        "type": "object"
                    },
                    "explicitlyTrashed": {
                        "title": "explicitlyTrashed",
                        "type": "boolean"
                    },
                    "createdDate": {
                        "format": "date-time",
                        "title": "createdDate",
                        "type": "string"
                    },
                    "modifiedDate": {
                        "format": "date-time",
                        "title": "modifiedDate",
                        "type": "string"
                    },
                    "modifiedByMeDate": {
                        "format": "date-time",
                        "title": "modifiedByMeDate",
                        "type": "string"
                    },
                    "lastViewedByMeDate": {
                        "format": "date-time",
                        "title": "lastViewedByMeDate",
                        "type": "string"
                    },
                    "markedViewedByMeDate": {
                        "format": "date-time",
                        "title": "markedViewedByMeDate",
                        "type": "string"
                    },
                    "quotaBytesUsed": {
                        "title": "quotaBytesUsed",
                        "type": "string"
                    },
                    "version": {
                        "title": "version",
                        "type": "string"
                    },
                    "originalFilename": {
                        "title": "originalFilename",
                        "type": "string"
                    },
                    "capabilities": {
                        "properties": {
                            "canEdit": {
                                "title": "canEdit",
                                "type": "boolean"
                            },
                            "canCopy": {
                                "title": "canCopy",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "canEdit",
                            "canCopy"
                        ],
                        "title": "capabilities",
                        "type": "object"
                    }
                },
                "required": [
                    "userPermission",
                    "ownerNames",
                    "lastModifyingUserName",
                    "editable",
                    "writersCanShare",
                    "mimeType",
                    "parents",
                    "appDataContents",
                    "shared",
                    "lastModifyingUser",
                    "owners",
                    "copyable",
                    "alternateLink",
                    "embedLink",
                    "copyRequiresWriterPermission",
                    "spaces",
                    "id",
                    "title",
                    "labels",
                    "explicitlyTrashed",
                    "createdDate",
                    "modifiedDate",
                    "markedViewedByMeDate",
                    "quotaBytesUsed",
                    "version",
                    "capabilities"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleDrive.User": {
                "properties": {
                    "displayName": {
                        "title": "displayName",
                        "type": "string"
                    },
                    "isAuthenticatedUser": {
                        "title": "isAuthenticatedUser",
                        "type": "boolean"
                    },
                    "permissionId": {
                        "title": "permissionId",
                        "type": "string"
                    },
                    "emailAddress": {
                        "format": "email",
                        "title": "emailAddress",
                        "type": "string"
                    },
                    "picture": {
                        "properties": {
                            "url": {
                                "format": "iri",
                                "title": "url",
                                "type": "string"
                            }
                        },
                        "required": [
                            "url"
                        ],
                        "title": "picture",
                        "type": "object"
                    }
                },
                "required": [
                    "displayName",
                    "isAuthenticatedUser",
                    "permissionId",
                    "emailAddress",
                    "picture"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISelectorLlmResponse": {
                "properties": {
                    "selection": {
                        "title": "Selected candidate index information",
                        "description": "Here is a list of indexes for the selected candidates.",
                        "items": {
                            "type": "number"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "selection"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISelectorLlmRequest": {
                "properties": {
                    "candidates": {
                        "title": "Choices",
                        "description": "Here is a list of candidates for selection.",
                        "items": {},
                        "type": "array"
                    },
                    "num_select": {
                        "title": "Number of selections",
                        "description": "The number of candidates to select.",
                        "type": "number"
                    },
                    "context": {
                        "title": "Considerations",
                        "description": "Here are some things to consider when choosing a candidate."
                    }
                },
                "required": [
                    "candidates",
                    "num_select",
                    "context"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGmail.ISendMailOutput": {
                "properties": {
                    "id": {
                        "title": "The ID of the sent email",
                        "description": "The ID of the sent email.",
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "Mail transmission result",
                "type": "object"
            },
            "_namespace_swagger.IGmail.ICreateMailInput": {
                "properties": {
                    "to": {
                        "title": "Recipient's email address",
                        "description": "The email address of the recipient.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "subject": {
                        "title": "Email subject",
                        "description": "Subject of the email to be sent.",
                        "type": "string"
                    },
                    "body": {
                        "title": "Email body.</a>",
                        "description": "The body of the email to be sent. It must be written in html. Otherwise, the body may not be displayed properly. Please apply the CSS format applicable to gmail. Please write the html length so that it is not too long. If it is too long, it may not be sent. If there is a link or url <a>, be sure to use the title attribute of the html tag to provide a link.",
                        "type": "string"
                    },
                    "cc": {
                        "title": "Email address of the person to be referenced",
                        "description": "Email address of the person to be referenced.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Bcc": {
                        "title": "Bcc email address",
                        "description": "Bcc email address.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "files": {
                        "title": "files",
                        "items": {
                            "properties": {
                                "filename": {
                                    "title": "filename",
                                    "type": "string"
                                },
                                "fileUrl": {
                                    "format": "iri",
                                    "title": "file uri",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "filename",
                                "fileUrl"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://mail.google.com/"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "to",
                    "subject",
                    "body",
                    "secretKey"
                ],
                "title": "Information required to send email",
                "type": "object"
            },
            "_namespace_swagger.IGmail.IReplyInput": {
                "properties": {
                    "replyText": {
                        "title": "Phrase to reply",
                        "description": "Phrase to reply.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://mail.google.com/"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "replyText",
                    "secretKey"
                ],
                "title": "Information required to reply to email",
                "type": "object"
            },
            "_namespace_swagger.IGmail.IFindGmailOutput": {
                "properties": {
                    "id": {
                        "description": "Unique id of the email.",
                        "title": "Email id",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "labelIds": {
                        "description": "Label id assigned to the email.",
                        "title": "Email Label id",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "from": {
                        "description": "The email address of the person who sent the email.",
                        "title": "Sender Email",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "subject": {
                        "description": "The subject of the email.",
                        "title": "Subject",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "body": {
                        "description": "Summary of the body of the email.",
                        "title": "Summary of the body",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "attachments": {
                        "description": "List of files attached to the email.",
                        "title": "Attachments",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGmail.IAttachmentOutput"
                                },
                                "type": "array"
                            }
                        ]
                    }
                },
                "title": "Email search results",
                "type": "object"
            },
            "_namespace_swagger.IGmail.IAttachmentOutput": {
                "properties": {
                    "partId": {
                        "description": "The immutable ID of the message part.",
                        "title": "The immutable ID of the message part",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "mimeType": {
                        "description": "The MIME type of the message.",
                        "title": "The MIME type of the message part",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "filename": {
                        "description": "This message part will only be displayed if it indicates an attachment.",
                        "title": "Attachment name",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "headers": {
                        "description": "The top-level message portion, which represents the entire message payload, contains standard RFC 2822 email headers such as To, From, and Subject.",
                        "title": "Attachment header information",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGmail.IAttachmentHeader"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "body": {
                        "description": "The body of the message part of this section, which may be empty for container MIME message parts.",
                        "title": "Attachment header body information",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IGmail.IAttachmentBody"
                            }
                        ]
                    }
                },
                "title": "Attachment file information",
                "type": "object"
            },
            "_namespace_swagger.IGmail.IAttachmentHeader": {
                "properties": {
                    "name": {
                        "description": "Attachment header type.",
                        "title": "Attachment header type",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "value": {
                        "description": "Attachment header value.",
                        "title": "Attachment header value",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "title": "Attachment file header information",
                "type": "object"
            },
            "_namespace_swagger.IGmail.IAttachmentBody": {
                "properties": {
                    "attachmentId": {
                        "description": "The unique ID of the attached file.",
                        "title": "Attachment file id",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "size": {
                        "description": "The number of bytes in the attachment data.",
                        "title": "The number of bytes in the attachment data",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "integer"
                            }
                        ]
                    }
                },
                "title": "Attached file body information",
                "type": "object"
            },
            "_namespace_swagger.IGmail.ISecret": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://mail.google.com/"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "title": "Authentication Information",
                "type": "object"
            },
            "_namespace_swagger.IGmail.IFindGmailListOutput": {
                "properties": {
                    "data": {
                        "title": "gmail search data information",
                        "description": "Searched gmail data information.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGmail.IFindGmailOutput"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "data"
                ],
                "title": "Email list search results",
                "type": "object"
            },
            "_namespace_swagger.IGmail.IFindEmailListInput": {
                "properties": {
                    "from": {
                        "title": "The email of the sender",
                        "description": "The email address of the sender of the email.",
                        "type": "string"
                    },
                    "to": {
                        "title": "The email address of the recipient",
                        "description": "The email address of the recipient.",
                        "type": "string"
                    },
                    "subject": {
                        "title": "Email Subject",
                        "description": "Email Subject.",
                        "type": "string"
                    },
                    "after": {
                        "title": "After a specific date",
                        "description": "Returns only emails after a given date.",
                        "type": "string"
                    },
                    "before": {
                        "title": "Before a specific date",
                        "description": "Returns only emails before a given date.",
                        "type": "string"
                    },
                    "label": {
                        "title": "Label assigned to the email",
                        "description": "Label assigned to the email.",
                        "type": "string"
                    },
                    "maxResults": {
                        "minimum": 1,
                        "maximum": 500,
                        "title": "Maximum number of returned mails",
                        "description": "Number of returned mails.",
                        "type": "number"
                    },
                    "labelIds": {
                        "title": "A list of labels to filter by",
                        "description": "A list of labels to return only emails with labels that all match the specified label ID.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://mail.google.com/"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "title": "Information needed to search email lists",
                "type": "object"
            },
            "_namespace_swagger.IGmail.ILabelOutput": {
                "properties": {
                    "id": {
                        "title": "Generated label id",
                        "description": "The id of the generated label.",
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "Label Creation Result",
                "type": "object"
            },
            "_namespace_swagger.IGmail.ILabelInput": {
                "properties": {
                    "labelName": {
                        "title": "Label name",
                        "description": "The name of the label to create.",
                        "type": "string"
                    },
                    "labelListVisibility": {
                        "description": "Visibility status of the label to be created.\n\nHidden / Visible / Visible when unread\n\n- labelHide: Hidden\n- labelShow: Visible\n- labelShowIfUnread: Visible when unread\n\nOnly three possible values are available: labelHide, labelShow, and labelShowIfUnread.",
                        "title": "Visibility status of the label",
                        "oneOf": [
                            {
                                "const": "labelHide"
                            },
                            {
                                "const": "labelShow"
                            },
                            {
                                "const": "labelShowIfUnread"
                            }
                        ]
                    },
                    "messageListVisibility": {
                        "description": "The visibility status of the generated labeled mail.\n\nHidden / Visible\n\n- hide: hidden\n- show: visible\n\nThere are only two possible values: hide and show.",
                        "title": "The visibility status of the labeled mail",
                        "oneOf": [
                            {
                                "const": "hide"
                            },
                            {
                                "const": "show"
                            }
                        ]
                    },
                    "color": {
                        "title": "Label Color",
                        "description": "Color of the mail label to be generated",
                        "$ref": "#/components/schemas/_namespace_swagger.IGmail.ILabelColor"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://mail.google.com/"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "labelName",
                    "secretKey"
                ],
                "title": "Information required to create a label",
                "type": "object"
            },
            "_namespace_swagger.IGmail.ILabelColor": {
                "properties": {
                    "textColor": {
                        "title": "Label text color",
                        "description": "Label text color.",
                        "type": "string"
                    },
                    "backgroundColor": {
                        "title": "Label background color",
                        "description": "Label background color.",
                        "type": "string"
                    }
                },
                "required": [
                    "textColor",
                    "backgroundColor"
                ],
                "title": "label color",
                "type": "object"
            },
            "_namespace_swagger.IGmail.IMailLabelOperationInput": {
                "properties": {
                    "labelIds": {
                        "title": "A list of labels",
                        "description": "A list of labels to assign or remove.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://mail.google.com/"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "labelIds",
                    "secretKey"
                ],
                "title": "Information required to assign a label",
                "type": "object"
            },
            "_namespace_swagger.ITool.IGenerateOutput": {
                "properties": {
                    "content": {
                        "type": "string"
                    }
                },
                "required": [
                    "content"
                ],
                "description": "Here are the results of using the tool.",
                "type": "object"
            },
            "_namespace_swagger.ITool.IGenerateInput": {
                "properties": {},
                "additionalProperties": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    ]
                },
                "type": "object"
            },
            "_namespace_swagger.IChatbot.IChatbotGenerateOutput": {
                "properties": {
                    "content": {
                        "title": "Chatbot response",
                        "description": "Here is the chatbot response result.",
                        "type": "string"
                    }
                },
                "required": [
                    "content"
                ],
                "title": "Chatbot response",
                "type": "object"
            },
            "_namespace_swagger.IChatbot.IChatbotEasyGenerateInput": {
                "properties": {
                    "difficulty": {
                        "title": "Difficulty",
                        "description": "This is the difficulty level at which the chatbot was created.",
                        "const": "easy"
                    },
                    "role": {
                        "title": "Role",
                        "description": "The role of the chatbot.",
                        "type": "string"
                    },
                    "personality": {
                        "title": "Personality",
                        "description": "The personality of the chatbot.",
                        "type": "string"
                    },
                    "requirement": {
                        "title": "Requirements",
                        "description": "Here are the requirements for the chatbot.",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "description": "The name of the chatbot.",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Here is the description of the chatbot.",
                        "type": "string"
                    },
                    "message": {
                        "title": "User's speech",
                        "description": "This is a user's speech.",
                        "type": "string"
                    },
                    "histories": {
                        "title": "Chat History",
                        "description": "This is the chat history.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IChatbot.IHistory"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "difficulty",
                    "role",
                    "personality",
                    "requirement",
                    "name",
                    "description",
                    "message"
                ],
                "title": "Easy Difficulty Information for using the chatbot",
                "type": "object"
            },
            "_namespace_swagger.IChatbot.IHistory": {
                "properties": {
                    "role": {
                        "description": "The role of the speaker.",
                        "title": "The role of the speaker",
                        "oneOf": [
                            {
                                "const": "user"
                            },
                            {
                                "const": "assistant"
                            }
                        ]
                    },
                    "content": {
                        "title": "The speech content",
                        "description": "Here is the speech content.",
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "content"
                ],
                "title": "Chat History",
                "type": "object"
            },
            "_namespace_swagger.IChatbot.IChatBotHardGenerateInput": {
                "properties": {
                    "difficulty": {
                        "title": "Difficulty",
                        "description": "This is the difficulty level at which the chatbot was created.",
                        "const": "hard"
                    },
                    "prompt": {
                        "title": "prompt",
                        "description": "This is the prompt required when requesting an LLM.",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "description": "The name of the chatbot.",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Here is the description of the chatbot.",
                        "type": "string"
                    },
                    "message": {
                        "title": "User's speech",
                        "description": "This is a user's speech.",
                        "type": "string"
                    },
                    "histories": {
                        "title": "Chat History",
                        "description": "This is the chat history.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IChatbot.IHistory"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "difficulty",
                    "prompt",
                    "name",
                    "description",
                    "message"
                ],
                "title": "Information for using the chatbot in the difficult difficulty level",
                "type": "object"
            },
            "_namespace_swagger.IFigma.IReadFileOutput": {
                "properties": {
                    "name": {
                        "title": "The name of the file in the editor",
                        "description": "The name of the file in the editor.",
                        "type": "string"
                    },
                    "role": {
                        "description": "The role of the user performing the API request related to the file.",
                        "title": "The role of the user performing the request",
                        "oneOf": [
                            {
                                "const": "owner"
                            },
                            {
                                "const": "editor"
                            },
                            {
                                "const": "viewer"
                            }
                        ]
                    },
                    "lastModified": {
                        "format": "date-time",
                        "title": "The time the file was last modified",
                        "description": "The UTC ISO 8601 time the file was last modified.",
                        "type": "string"
                    },
                    "editorType": {
                        "description": "The type of editor associated with this file.",
                        "title": "The type of editor associated with the file",
                        "oneOf": [
                            {
                                "const": "figma"
                            },
                            {
                                "const": "figjam"
                            }
                        ]
                    },
                    "thumbnailUrl": {
                        "title": "Thumbnail Image",
                        "description": "A URL to the thumbnail image for the file.",
                        "type": "string"
                    },
                    "version": {
                        "title": "The version number of the file",
                        "description": "The version number of the file. This number is incremented each time the file is modified and can be used to determine if the file has changed between requests.",
                        "type": "string"
                    },
                    "components": {
                        "properties": {},
                        "additionalProperties": {
                            "$ref": "#/components/schemas/_namespace_swagger.Component"
                        },
                        "title": "Mapping between component ID and component metadata",
                        "description": "Mapping between component ID and component metadata.",
                        "type": "object"
                    },
                    "componentSets": {
                        "properties": {},
                        "additionalProperties": {
                            "$ref": "#/components/schemas/_namespace_swagger.ComponentSet"
                        },
                        "title": "A mapping between a component set ID and component set metadata",
                        "description": "A mapping between a component set ID and component set metadata.",
                        "type": "object"
                    },
                    "schemaVersion": {
                        "title": "The version of the file schema used by this file",
                        "description": "The version of the file schema used by this file.",
                        "type": "number"
                    },
                    "styles": {
                        "properties": {},
                        "additionalProperties": {
                            "$ref": "#/components/schemas/_namespace_swagger.Style"
                        },
                        "title": "Mapping between style ID and style metadata",
                        "description": "Mapping between style ID and style metadata.",
                        "type": "object"
                    },
                    "mainFileKey": {
                        "title": "The primary file key of this file",
                        "description": "The primary file key of this file. If present, this file is a component or a set of components.",
                        "type": "string"
                    },
                    "branches": {
                        "title": "This is a list of branches for this file",
                        "description": "This is a list of branches for this file.",
                        "items": {
                            "properties": {
                                "key": {
                                    "title": "This is the key of the branch",
                                    "description": "This is the key of the branch.",
                                    "type": "string"
                                },
                                "name": {
                                    "title": "The name of the branch",
                                    "description": "The name of the branch.",
                                    "type": "string"
                                },
                                "thumbnail_url": {
                                    "title": "A URL to the thumbnail image of the branch",
                                    "description": "A URL to the thumbnail image of the branch.",
                                    "type": "string"
                                },
                                "last_modified": {
                                    "title": "The UTC ISO 8601 time when the branch was last modified",
                                    "description": "The UTC ISO 8601 time when the branch was last modified.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "key",
                                "name",
                                "thumbnail_url",
                                "last_modified"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "role",
                    "lastModified",
                    "editorType",
                    "version",
                    "components",
                    "componentSets",
                    "schemaVersion",
                    "styles"
                ],
                "description": "DTO corresponding to the information in the read Figma file.",
                "type": "object"
            },
            "_namespace_swagger.Component": {
                "properties": {
                    "key": {
                        "description": "The key of the component",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the component",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the component as entered in the editor",
                        "type": "string"
                    },
                    "componentSetId": {
                        "description": "The ID of the component set if the component belongs to one",
                        "type": "string"
                    },
                    "documentationLinks": {
                        "description": "An array of documentation links attached to this component",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.DocumentationLink"
                        },
                        "type": "array"
                    },
                    "remote": {
                        "description": "Whether this component is a remote component that doesn't live in this file",
                        "type": "boolean"
                    }
                },
                "required": [
                    "key",
                    "name",
                    "description",
                    "documentationLinks",
                    "remote"
                ],
                "description": "A description of a main component. Helps you identify which component instances are attached to.",
                "type": "object"
            },
            "_namespace_swagger.DocumentationLink": {
                "properties": {
                    "uri": {
                        "title": "Should be a valid URI (e.g. https://www.figma.com)",
                        "description": "Should be a valid URI (e.g. https://www.figma.com).",
                        "type": "string"
                    }
                },
                "required": [
                    "uri"
                ],
                "description": "Represents a link to documentation for a component or component set.",
                "type": "object"
            },
            "_namespace_swagger.ComponentSet": {
                "properties": {
                    "key": {
                        "description": "The key of the component set",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the component set",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the component set as entered in the editor",
                        "type": "string"
                    },
                    "documentationLinks": {
                        "description": "An array of documentation links attached to this component set",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.DocumentationLink"
                        },
                        "type": "array"
                    },
                    "remote": {
                        "description": "Whether this component set is a remote component set that doesn't live in this file",
                        "type": "boolean"
                    }
                },
                "required": [
                    "key",
                    "name",
                    "description"
                ],
                "description": "A description of a component set, which is a node containing a set of variants of a component.",
                "type": "object"
            },
            "_namespace_swagger.Style": {
                "properties": {
                    "key": {
                        "description": "The key of the style",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the style",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the style",
                        "type": "string"
                    },
                    "remote": {
                        "description": "Whether this style is a remote style that doesn't live in this file",
                        "type": "boolean"
                    },
                    "styleType": {
                        "oneOf": [
                            {
                                "const": "FILL"
                            },
                            {
                                "const": "TEXT"
                            },
                            {
                                "const": "EFFECT"
                            },
                            {
                                "const": "GRID"
                            }
                        ]
                    }
                },
                "required": [
                    "key",
                    "name",
                    "description",
                    "remote",
                    "styleType"
                ],
                "description": "A set of properties that can be applied to nodes and published. Styles for a property can be\ncreated in the corresponding property's panel while editing a file.",
                "type": "object"
            },
            "_namespace_swagger.IFigma.IReadFileInput": {
                "properties": {
                    "fileKey": {
                        "title": "A unique key value for each Figma file or component",
                        "description": "It means the key of the file.\n\nHere, the file key means the Figma frame.",
                        "type": "string"
                    },
                    "version": {
                        "title": "The specific version ID to retrieve",
                        "description": "The specific version ID to retrieve. If omitted, the current version of the file is retrieved.",
                        "type": "string"
                    },
                    "ids": {
                        "title": "A comma-separated list of nodes of interest in the document",
                        "description": "A comma-separated list of nodes of interest in the document. If specified, only the node, its children, and all subsets between the root node and the listed nodes will be returned.\n\nNote: Other nodes outside the ancestor chain of the desired node may be included in the returned JSON. The response may also include dependencies of things in the node's subtree. For example, if the node's subtree contains instances of local components located elsewhere in the file, those components and their ancestor chains will also be included.\n\nFor historical reasons, the top-level canvas node is always returned, regardless of whether it is listed in the `ids` parameter. This quirk may be removed in a future API version.",
                        "type": "string"
                    },
                    "depth": {
                        "title": "A positive integer indicating how deep to traverse the document tree",
                        "description": "A positive integer indicating how deep to traverse the document tree. For example, setting this to 1 will return only pages, while setting it to 2 will return the pages and all top-level objects for each page. If this parameter is not set, all nodes will be returned.",
                        "type": "integer"
                    },
                    "geometry": {
                        "title": "Vector data to export",
                        "description": "Set to \"paths\" when exporting vector data.",
                        "type": "string"
                    },
                    "plugin_data": {
                        "title": "A comma-separated list of plugin IDs and/or the string \"shared\"",
                        "description": "A comma-separated list of plugin IDs and/or the string \"shared\". All data in the document created by that plugin will be included in the `pluginData` and `sharedPluginData` properties of the result.",
                        "type": "string"
                    },
                    "branch_data": {
                        "default": false,
                        "title": "Indicates whether to return branch metadata for the requested file",
                        "description": "Returns branch metadata for the requested file. If the file is a branch, the returned response also includes the main file key. If the file has a branch, its metadata is also returned. Default: false.",
                        "type": "boolean"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "figma",
                        "x-wrtn-secret-scopes": [
                            "files:read",
                            "file_variables:read",
                            "file_variables:write",
                            "file_comments:write",
                            "file_dev_resources:read",
                            "file_dev_resources:write",
                            "library_analytics:read",
                            "webhooks:write"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "fileKey",
                    "secretKey"
                ],
                "description": "A DTO that retrieves files from a specific Figma frame.\n\nYou can read files from one frame at a time.",
                "type": "object"
            },
            "_namespace_swagger.Comment": {
                "properties": {
                    "id": {
                        "title": "Unique identifier for comment",
                        "description": "Unique identifier for comment.",
                        "type": "string"
                    },
                    "client_meta": {
                        "description": "Positioning information of the comment. Includes information on the location of the comment pin,\nwhich is either the absolute coordinates on the canvas or a relative offset within a frame. If\nthe comment is a region, it will also contain the region height, width, and position of the\nanchor in regards to the region.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.Vector"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.FrameOffset"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.Region"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.FrameOffsetRegion"
                            }
                        ]
                    },
                    "file_key": {
                        "description": "The file in which the comment lives",
                        "type": "string"
                    },
                    "parent_id": {
                        "description": "If present, the id of the comment to which this is the reply",
                        "type": "string"
                    },
                    "user": {
                        "description": "The user who left the comment",
                        "$ref": "#/components/schemas/_namespace_swagger.User"
                    },
                    "created_at": {
                        "description": "The UTC ISO 8601 time at which the comment was left",
                        "type": "string"
                    },
                    "resolved_at": {
                        "description": "If set, the UTC ISO 8601 time the comment was resolved",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "message": {
                        "description": "The content of the comment",
                        "type": "string"
                    },
                    "order_id": {
                        "description": "Only set for top level comments. The number displayed with the comment in the UI",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "reactions": {
                        "description": "An array of reactions to the comment",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.Reaction"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "client_meta",
                    "file_key",
                    "user",
                    "created_at",
                    "message",
                    "order_id",
                    "reactions"
                ],
                "description": "A comment or reply left by a user.",
                "type": "object"
            },
            "_namespace_swagger.Vector": {
                "properties": {
                    "x": {
                        "title": "X coordinate of the vector",
                        "description": "X coordinate of the vector.",
                        "type": "number"
                    },
                    "y": {
                        "title": "Y coordinate of the vector",
                        "description": "Y coordinate of the vector.",
                        "type": "number"
                    }
                },
                "required": [
                    "x",
                    "y"
                ],
                "description": "A 2d vector.",
                "type": "object"
            },
            "_namespace_swagger.FrameOffset": {
                "properties": {
                    "node_id": {
                        "title": "Unique id specifying the frame",
                        "description": "Unique id specifying the frame.",
                        "type": "string"
                    },
                    "node_offset": {
                        "title": "2D vector offset within the frame from the top-left corner",
                        "description": "2D vector offset within the frame from the top-left corner.",
                        "$ref": "#/components/schemas/_namespace_swagger.Vector"
                    }
                },
                "required": [
                    "node_id",
                    "node_offset"
                ],
                "description": "Position of a comment relative to the frame to which it is attached.",
                "type": "object"
            },
            "_namespace_swagger.Region": {
                "properties": {
                    "x": {
                        "title": "X coordinate of the position",
                        "description": "X coordinate of the position.",
                        "type": "number"
                    },
                    "y": {
                        "title": "Y coordinate of the position",
                        "description": "Y coordinate of the position.",
                        "type": "number"
                    },
                    "region_height": {
                        "title": "The height of the comment region. Must be greater than 0",
                        "description": "The height of the comment region. Must be greater than 0.",
                        "type": "number"
                    },
                    "region_width": {
                        "title": "The width of the comment region. Must be greater than 0",
                        "description": "The width of the comment region. Must be greater than 0.",
                        "type": "number"
                    },
                    "comment_pin_corner": {
                        "description": "The corner of the comment region to pin to the node's corner as a string enum.",
                        "title": "The corner of the comment region to pin to the node's corner as a string enum",
                        "oneOf": [
                            {
                                "const": "top-left"
                            },
                            {
                                "const": "top-right"
                            },
                            {
                                "const": "bottom-left"
                            },
                            {
                                "const": "bottom-right"
                            }
                        ]
                    }
                },
                "required": [
                    "x",
                    "y",
                    "region_height",
                    "region_width"
                ],
                "description": "Position of a region comment on the canvas.",
                "type": "object"
            },
            "_namespace_swagger.FrameOffsetRegion": {
                "properties": {
                    "node_id": {
                        "title": "Unique id specifying the frame",
                        "description": "Unique id specifying the frame.",
                        "type": "string"
                    },
                    "node_offset": {
                        "title": "2D vector offset within the frame from the top-left corner",
                        "description": "2D vector offset within the frame from the top-left corner.",
                        "$ref": "#/components/schemas/_namespace_swagger.Vector"
                    },
                    "region_height": {
                        "title": "The height of the comment region. Must be greater than 0",
                        "description": "The height of the comment region. Must be greater than 0.",
                        "type": "number"
                    },
                    "region_width": {
                        "title": "The width of the comment region. Must be greater than 0",
                        "description": "The width of the comment region. Must be greater than 0.",
                        "type": "number"
                    },
                    "comment_pin_corner": {
                        "description": "The corner of the comment region to pin to the node's corner as a string enum.",
                        "title": "The corner of the comment region to pin to the node's corner as a string enum",
                        "oneOf": [
                            {
                                "const": "top-left"
                            },
                            {
                                "const": "top-right"
                            },
                            {
                                "const": "bottom-left"
                            },
                            {
                                "const": "bottom-right"
                            }
                        ]
                    }
                },
                "required": [
                    "node_id",
                    "node_offset",
                    "region_height",
                    "region_width"
                ],
                "description": "Position of a region comment relative to the frame to which it is attached.",
                "type": "object"
            },
            "_namespace_swagger.User": {
                "properties": {
                    "id": {
                        "title": "Unique stable id of the user",
                        "description": "Unique stable id of the user.",
                        "type": "string"
                    },
                    "handle": {
                        "title": "Name of the user",
                        "description": "Name of the user.",
                        "type": "string"
                    },
                    "img_url": {
                        "title": "URL link to the user's profile image",
                        "description": "URL link to the user's profile image.",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "handle",
                    "img_url"
                ],
                "description": "A description of a user.",
                "type": "object"
            },
            "_namespace_swagger.Reaction": {
                "properties": {
                    "user": {
                        "title": "The user who left the reaction",
                        "description": "The user who left the reaction.",
                        "$ref": "#/components/schemas/_namespace_swagger.User"
                    },
                    "emoji": {
                        "type": "string"
                    },
                    "created_at": {
                        "title": "The UTC ISO 8601 time at which the reaction was left",
                        "description": "The UTC ISO 8601 time at which the reaction was left.",
                        "type": "string"
                    }
                },
                "required": [
                    "user",
                    "emoji",
                    "created_at"
                ],
                "description": "A reaction left by a user.",
                "type": "object"
            },
            "_namespace_swagger.IFigma.IAddCommentInput": {
                "properties": {
                    "fileKey": {
                        "title": "A unique key value for each Figma file or component",
                        "description": "It means the key of the file.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "figma",
                        "x-wrtn-secret-scopes": [
                            "files:read",
                            "file_variables:read",
                            "file_variables:write",
                            "file_comments:write",
                            "file_dev_resources:read",
                            "file_dev_resources:write",
                            "library_analytics:read",
                            "webhooks:write"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "message": {
                        "title": "The text contents of the comment to post",
                        "description": "The text contents of the comment to post.",
                        "type": "string"
                    },
                    "comment_id": {
                        "description": "The ID of the comment to reply to, if any. This must be a root comment. You cannot reply to other\nreplies (a comment that has a parent_id).",
                        "type": "string"
                    },
                    "client_meta": {
                        "description": "The position where to place the comment.",
                        "title": "The position where to place the comment",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.Vector"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.FrameOffset"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.Region"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.FrameOffsetRegion"
                            }
                        ]
                    }
                },
                "required": [
                    "fileKey",
                    "secretKey",
                    "message"
                ],
                "description": "DTO for adding comments to a specific area.\n\nYou can write one comment at a time, and you can write comments using coordinate values, nodes, or parent comments (root comments).",
                "type": "object"
            },
            "_namespace_swagger.GetCommentsResponse": {
                "properties": {
                    "comments": {
                        "title": "An array of comments",
                        "description": "An array of comments.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.Comment"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "comments"
                ],
                "description": "Response from the GET /v1/files/{file_key}/comments endpoint.",
                "type": "object"
            },
            "_namespace_swagger.IFigma.IReadCommentInput": {
                "properties": {
                    "fileKey": {
                        "title": "A unique key value for each Figma file or component",
                        "description": "It means the key of the file.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "figma",
                        "x-wrtn-secret-scopes": [
                            "files:read",
                            "file_variables:read",
                            "file_variables:write",
                            "file_comments:write",
                            "file_dev_resources:read",
                            "file_dev_resources:write",
                            "library_analytics:read",
                            "webhooks:write"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "as_md": {
                        "title": "If enabled, will return comments as their markdown equivalents when applicable",
                        "description": "If enabled, will return comments as their markdown equivalents when applicable.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "fileKey",
                    "secretKey"
                ],
                "description": "A DTO that retrieves comments from a specific Figma frame.\n\nYou can read comments from one frame at a time.",
                "type": "object"
            },
            "_namespace_swagger.IFigma.IGetProjectFileOutput": {
                "properties": {
                    "name": {
                        "title": "Project Name",
                        "type": "string"
                    },
                    "files": {
                        "title": "Canvas List",
                        "description": "A list of canvases managed by the project.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IFigma.Canvas"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "files"
                ],
                "type": "object"
            },
            "_namespace_swagger.IFigma.Canvas": {
                "properties": {
                    "key": {
                        "title": "Canvas Key",
                        "description": "A key that uniquely identifies a file.\nThe files mentioned here refer to the canvases managed in the project.\nIn Figma, all child component elements of a canvas, including the canvas, are called files, so be careful not to confuse the terminology.",
                        "type": "string"
                    },
                    "name": {
                        "title": "Canvas name",
                        "description": "It means the name given by the user to identify the file.\nThe file mentioned here refers to the canvases managed in the project.\nIn Figma, all child component elements of the canvas, including the canvas, are called files, so be careful not to confuse the terminology.",
                        "type": "string"
                    },
                    "thumbnail_url": {
                        "format": "uri",
                        "contentMediaType": "image/*",
                        "title": "Thumbnail",
                        "description": "As a thumbnail image, it provides the main screen of this canvas as a screenshot.\nHowever, if you want to save this thumbnail as a link and use it, please note that this image is provided only for a certain period of time.",
                        "type": "string"
                    },
                    "last_modified": {
                        "format": "date-time",
                        "title": "Last modification time",
                        "description": "This refers to the last modification time of the canvas.\nBased on this, you can distinguish the canvas that has been most recently changed or communicated, etc., and is maintained.\nHowever, this value cannot be known unless a comment has been added or there has been a change to the canvas.",
                        "type": "string"
                    }
                },
                "required": [
                    "key",
                    "name",
                    "thumbnail_url",
                    "last_modified"
                ],
                "type": "object"
            },
            "_namespace_swagger.IFigma.Secret": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "figma",
                        "x-wrtn-secret-scopes": [
                            "files:read",
                            "file_variables:read",
                            "file_variables:write",
                            "file_comments:write",
                            "file_dev_resources:read",
                            "file_dev_resources:write",
                            "library_analytics:read",
                            "webhooks:write"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IFigma.IGetStatisticsOutput": {
                "properties": {
                    "canvasList": {
                        "title": "Statistics by canvas within the project",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IFigma.CanvasStatistics"
                        },
                        "type": "array"
                    },
                    "name": {
                        "title": "Project Name",
                        "type": "string"
                    },
                    "id": {
                        "title": "Project ID",
                        "type": "string"
                    }
                },
                "required": [
                    "canvasList",
                    "name",
                    "id"
                ],
                "type": "object"
            },
            "_namespace_swagger.IFigma.CanvasStatistics": {
                "properties": {
                    "comments": {
                        "title": "List of comments in canvas",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.Comment"
                        },
                        "type": "array"
                    },
                    "statistics": {
                        "properties": {
                            "users": {
                                "title": "List of people who participated in the discussion",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "counts": {
                                "title": "Number of comments per person",
                                "$ref": "#/components/schemas/_namespace_swagger.Recordstringnumber"
                            }
                        },
                        "required": [
                            "users",
                            "counts"
                        ],
                        "title": "Statistics on comments in canvas",
                        "type": "object"
                    },
                    "key": {
                        "title": "Canvas Key",
                        "description": "A key that uniquely identifies a file.\nThe files mentioned here refer to the canvases managed in the project.\nIn Figma, all child component elements of a canvas, including the canvas, are called files, so be careful not to confuse the terminology.",
                        "type": "string"
                    },
                    "name": {
                        "title": "Canvas name",
                        "description": "It means the name given by the user to identify the file.\nThe file mentioned here refers to the canvases managed in the project.\nIn Figma, all child component elements of the canvas, including the canvas, are called files, so be careful not to confuse the terminology.",
                        "type": "string"
                    },
                    "thumbnail_url": {
                        "format": "uri",
                        "contentMediaType": "image/*",
                        "title": "Thumbnail",
                        "description": "As a thumbnail image, it provides the main screen of this canvas as a screenshot.\nHowever, if you want to save this thumbnail as a link and use it, please note that this image is provided only for a certain period of time.",
                        "type": "string"
                    },
                    "last_modified": {
                        "format": "date-time",
                        "title": "Last modification time",
                        "description": "This refers to the last modification time of the canvas.\nBased on this, you can distinguish the canvas that has been most recently changed or communicated, etc., and is maintained.\nHowever, this value cannot be known unless a comment has been added or there has been a change to the canvas.",
                        "type": "string"
                    }
                },
                "required": [
                    "comments",
                    "statistics",
                    "key",
                    "name",
                    "thumbnail_url",
                    "last_modified"
                ],
                "type": "object"
            },
            "_namespace_swagger.Recordstringnumber": {
                "properties": {},
                "additionalProperties": {
                    "type": "number"
                },
                "description": "Construct a type with a set of properties K of type T",
                "type": "object"
            },
            "_namespace_swagger.IFigma.IGetProjectStatisticsInput": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "figma",
                        "x-wrtn-secret-scopes": [
                            "files:read",
                            "file_variables:read",
                            "file_variables:write",
                            "file_comments:write",
                            "file_dev_resources:read",
                            "file_dev_resources:write",
                            "library_analytics:read",
                            "webhooks:write"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "as_md": {
                        "title": "If enabled, will return comments as their markdown equivalents when applicable",
                        "description": "If enabled, will return comments as their markdown equivalents when applicable.",
                        "type": "boolean"
                    },
                    "teamId": {
                        "title": "Team ID",
                        "description": "When accessing the link `https://www.figma.com/files/team`, it refers to the string attached after the `team` keyword.\n\nThe team ID is in numeric format, and there can be multiple projects within the team.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey",
                    "teamId"
                ],
                "type": "object"
            },
            "_namespace_swagger.IFigma.IGetProejctOutput": {
                "properties": {
                    "name": {
                        "title": "Team Name",
                        "type": "string"
                    },
                    "projects": {
                        "title": "Project List\n\nThis refers to the list of projects belonging to the team.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IFigma.Project"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "projects"
                ],
                "type": "object"
            },
            "_namespace_swagger.IFigma.Project": {
                "properties": {
                    "id": {
                        "title": "Project ID",
                        "type": "string"
                    },
                    "name": {
                        "title": "Project Name",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name"
                ],
                "type": "object"
            },
            "_namespace_swagger.IFigma.IGetProjectInput": {
                "properties": {
                    "teamId": {
                        "title": "Team ID",
                        "description": "When accessing the link `https://www.figma.com/files/team`, it refers to the string attached after the `team` keyword.\n\nThe team ID is in numeric format, and there can be multiple projects within the team.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "figma",
                        "x-wrtn-secret-scopes": [
                            "files:read",
                            "file_variables:read",
                            "file_variables:write",
                            "file_comments:write",
                            "file_dev_resources:read",
                            "file_dev_resources:write",
                            "library_analytics:read",
                            "webhooks:write"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "teamId",
                    "secretKey"
                ],
                "title": "Project search conditions",
                "type": "object"
            },
            "_namespace_swagger.MyPartialIZoom.Meeting": {
                "properties": {
                    "agenda": {
                        "maxLength": 2000,
                        "title": "The meeting's agenda",
                        "description": "The meeting's agenda.",
                        "type": "string"
                    },
                    "default_password": {
                        "default": false,
                        "title": "Whether to create a default password",
                        "description": "If this value is true and the user has enabled PMI settings with passwords, the user's meetings will use the PMI password.",
                        "type": "boolean"
                    },
                    "duration": {
                        "title": "The scheduled time (duration) of the meeting",
                        "description": "The scheduled time of the meeting, in minutes.\n\nUsed only when a meeting is scheduled.",
                        "type": "integer"
                    },
                    "password": {
                        "maxLength": 10,
                        "title": "Meeting password",
                        "description": "It means a password consisting of English uppercase and lowercase letters and '@', '-', '_', '*'.",
                        "type": "string"
                    },
                    "pre_schedule": {
                        "default": false,
                        "title": "Whether to create a scheduled meeting via the `GSuite` app",
                        "type": "boolean"
                    },
                    "assistant_id": {
                        "title": "The ID of the user who hosted this meeting",
                        "type": "string"
                    },
                    "host_email": {
                        "format": "email",
                        "title": "The email address of the meeting organizer",
                        "type": "string"
                    },
                    "id": {
                        "title": "Meeting ID",
                        "type": "integer"
                    },
                    "registration_url": {
                        "format": "url",
                        "title": "URL where participants can register",
                        "type": "string"
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "The date and time this meeting was created",
                        "type": "string"
                    },
                    "encrypted_password": {
                        "title": "Encrypted password for 3rd party endpoints (H323/SIP)",
                        "type": "string"
                    },
                    "pstn_password": {
                        "title": "Password to join the meeting via PSTN",
                        "type": "string"
                    },
                    "h323_password": {
                        "title": "H.323/SIP room system password",
                        "type": "string"
                    },
                    "join_url": {
                        "format": "url",
                        "title": "The URL where participants can join the meeting",
                        "type": "string"
                    },
                    "chat_join_url": {
                        "format": "url",
                        "title": "URL where you can join the chat",
                        "type": "string"
                    },
                    "occurrences": {
                        "title": "Information about recurring webinars",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IZoom.Occurrence"
                        },
                        "type": "array"
                    },
                    "pmi": {
                        "title": "Personal meeting ID (PMI)",
                        "type": "string"
                    },
                    "recurrence": {
                        "title": "Information about the meeting's recurrence cycle",
                        "$ref": "#/components/schemas/_namespace_swagger.IZoom.Recurrence"
                    },
                    "settings": {
                        "title": "Zoom settings information",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPartialIZoom.Settings"
                    },
                    "start_time": {
                        "format": "date-time",
                        "title": "Meeting start time",
                        "type": "string"
                    },
                    "start_url": {
                        "format": "url",
                        "title": "URL that allows you to join as the meeting host",
                        "description": "This URL should only be used by the meeting host and should not be shared with other participants.\n\nAnyone with this URL can log into the Zoom client with host privileges.",
                        "type": "string"
                    },
                    "timezone": {
                        "title": "`start_time`의 timezone",
                        "type": "string"
                    },
                    "topic": {
                        "title": "Topic of the meeting",
                        "type": "string"
                    },
                    "tracking_fields": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IZoom.TrackingField"
                        },
                        "type": "array"
                    },
                    "type": {
                        "description": "- 1: Instant meeting.\n- 2: Scheduled meeting.\n- 3: Recurring meeting without fixed time.\n- 8: Recurring meeting with fixed time.\n- 10: Meeting with screen sharing only.",
                        "title": "Type of meeting",
                        "oneOf": [
                            {
                                "const": 1
                            },
                            {
                                "const": 2
                            },
                            {
                                "const": 3
                            },
                            {
                                "const": 8
                            },
                            {
                                "const": 10
                            }
                        ]
                    },
                    "dynamic_host_key": {
                        "title": "미팅의 dynamic_host_key",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IZoom.Occurrence": {
                "properties": {
                    "duration": {
                        "title": "An integer representing the duration of the webinar",
                        "type": "integer"
                    },
                    "occurrence_id": {
                        "title": "A unique identifier that identifies each webinar occurrence",
                        "type": "string"
                    },
                    "start_time": {
                        "format": "date-time",
                        "title": "Webinar start time",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status of webinar occurrence.",
                        "title": "Status of webinar occurrence",
                        "oneOf": [
                            {
                                "const": "available"
                            },
                            {
                                "const": "deleted"
                            }
                        ]
                    }
                },
                "required": [
                    "duration",
                    "occurrence_id",
                    "start_time",
                    "status"
                ],
                "title": "Information about recurring webinars",
                "type": "object"
            },
            "_namespace_swagger.IZoom.Recurrence": {
                "properties": {
                    "end_date_time": {
                        "format": "date-time",
                        "title": "This means the last day before the meeting ends",
                        "description": "If the meeting is not cancelled, this means the last day of the meeting.\n\nCannot be used with `end_times`.",
                        "type": "string"
                    },
                    "end_times": {
                        "default": 1,
                        "maximum": 60,
                        "title": "The number of repetitions before the meeting is finally terminated",
                        "description": "Indicates how many times the meeting will repeat before it is canceled.\n\nIf end_times is set to 0, it means there is no end time.",
                        "type": "integer"
                    },
                    "type": {
                        "description": "1 is daily, 2 is weekly, 3 is monthly, indicating the repetition type.",
                        "title": "Meeting repetition cycle",
                        "oneOf": [
                            {
                                "const": 1
                            },
                            {
                                "const": 2
                            },
                            {
                                "const": 3
                            }
                        ]
                    },
                    "monthly_day": {
                        "minimum": 1,
                        "maximum": 31,
                        "title": "The days from 1 to 31 of the month",
                        "description": "It means the days from 1 to 31 of the month, and is the value set when `type` is 3, that is, it repeats every month.",
                        "type": "integer"
                    },
                    "monthly_week": {
                        "description": "Indicates which week of each month.\n\nThis is the value set when `type` is 3, that is, the meeting is repeated every month.\n\n- -1: Last week of the month.\n- 1: First week of the month.\n- 2: Second week of the month.\n- 3: Third week of the month.\n- 4: Fourth week of the month.",
                        "title": "Indicates which week of each month",
                        "oneOf": [
                            {
                                "const": -1
                            },
                            {
                                "const": 1
                            },
                            {
                                "const": 2
                            },
                            {
                                "const": 3
                            },
                            {
                                "const": 4
                            }
                        ]
                    },
                    "monthly_week_day": {
                        "title": "Indicates which day of the week it is each month",
                        "description": "This is the value set when `type` is 3, that is, a meeting that repeats every month.\n\nIf multiple days are selected, the numbers are connected using the `,` symbol in the form of '1,3'.\n\n- 1 - Sunday.\n- 2 - Monday.\n- 3 - Tuesday.\n- 4 - Wednesday.\n- 5 - Thursday.\n- 6 - Friday.\n- 7 - Saturday.",
                        "type": "string"
                    },
                    "repeat_interval": {
                        "title": "Interval between meetings",
                        "description": "When `type` is 1, i.e., for meetings set to daily, up to 90 (days) is possible.\n\nWhen `type` is 2, i.e., for meetings set to weekly, up to 12 (weeks) is possible.\n\nWhen `type` is 3, i.e., for meetings set to monthly, up to 3 (months) is possible.",
                        "type": "integer"
                    },
                    "weekly_days": {
                        "title": "Indicates which day of the week it is",
                        "description": "This is the value set when `type` is 2, that is, a meeting that repeats every week.\n\nIf multiple days are selected, the numbers are connected using the `,` symbol in the form of '1,3'.\n\n- 1 - Sunday.\n- 2 - Monday.\n- 3 - Tuesday.\n- 4 - Wednesday.\n- 5 - Thursday.\n- 6 - Friday.\n- 7 - Saturday.",
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "monthly_day",
                    "monthly_week",
                    "monthly_week_day",
                    "repeat_interval",
                    "weekly_days"
                ],
                "title": "Information about the meeting's recurrence cycle",
                "type": "object"
            },
            "_namespace_swagger.MyPartialIZoom.Settings": {
                "properties": {
                    "allow_multiple_devices": {
                        "title": "Whether participants can join from multiple devices",
                        "description": "Sets whether participants can join from multiple devices in a meeting where registration is enabled.",
                        "type": "boolean"
                    },
                    "alternative_hosts": {
                        "title": "A semicolon-separated list of email addresses or IDs for alternate hosts",
                        "type": "string"
                    },
                    "alternative_hosts_email_notification": {
                        "default": true,
                        "title": "Whether to send email notifications to alternate hosts",
                        "type": "boolean"
                    },
                    "alternative_host_update_polls": {
                        "type": "boolean"
                    },
                    "approval_type": {
                        "description": "- 0 : Automatic approval\n- 1 : Manual approval\n- 2 : No registration required (default)",
                        "title": "Meeting registration approval settings",
                        "oneOf": [
                            {
                                "const": 0
                            },
                            {
                                "const": 1
                            },
                            {
                                "const": 2
                            }
                        ]
                    },
                    "approved_or_denied_countries_or_regions": {
                        "properties": {
                            "approved_list": {
                                "title": "List of approved countries or regions",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "denied_list": {
                                "title": "List of blocked countries or regions",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "enable": {
                                "title": "Whether to enable or disable user authorization or blocking settings for specific countries and regions",
                                "type": "boolean"
                            },
                            "method": {
                                "title": "method",
                                "oneOf": [
                                    {
                                        "const": "deny"
                                    },
                                    {
                                        "const": "approve"
                                    }
                                ]
                            }
                        },
                        "required": [
                            "enable"
                        ],
                        "title": "Approved/rejected country or region",
                        "type": "object"
                    },
                    "audio": {
                        "description": "- `both` - Both telephony and VoIP.\n- `telephony` - Telephony only.\n- `voip` - VoIP only.\n- `thirdParty` - Third party audio conference.",
                        "title": "How participants join the audio portion of the meeting",
                        "oneOf": [
                            {
                                "const": "both"
                            },
                            {
                                "const": "telephony"
                            },
                            {
                                "const": "voip"
                            },
                            {
                                "const": "thirdParty"
                            }
                        ]
                    },
                    "audio_conference_info": {
                        "maxLength": 2048,
                        "title": "Third party audio conference info",
                        "type": "string"
                    },
                    "authentication_domains": {
                        "title": "The meeting's authenticated domains",
                        "description": "The meeting's authenticated domains.\n\nOnly Zoom users whose email address contains an authenticated domain can join the meeting.\n\nComma-separate multiple domains or use a wildcard for listing domains.",
                        "type": "string"
                    },
                    "authentication_exception": {
                        "title": "A list of participants that can bypass meeting authentication",
                        "description": "A list of participants that can bypass meeting authentication.\n\nThese participants will receive a unique meeting invite.",
                        "items": {
                            "properties": {
                                "email": {
                                    "format": "email",
                                    "title": "The participant's email address",
                                    "type": "string"
                                },
                                "name": {
                                    "title": "The participant's name",
                                    "type": "string"
                                },
                                "join_url": {
                                    "format": "url",
                                    "title": "URL for participants to join the meeting",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "email",
                                "name",
                                "join_url"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "authentication_name": {
                        "title": "Authentication name set in the authentication profile",
                        "type": "string"
                    },
                    "authentication_option": {
                        "title": "Meeting authentication option ID",
                        "type": "string"
                    },
                    "auto_recording": {
                        "description": "- `cloud` - Record on cloud.\n- `none` - Disabled.",
                        "title": "Automatic recording",
                        "oneOf": [
                            {
                                "const": "none"
                            },
                            {
                                "const": "cloud"
                            }
                        ]
                    },
                    "breakout_room": {
                        "properties": {
                            "enable": {
                                "title": "Set this field's value to true to enable the breakout room pre-assign option",
                                "description": "Set this field's value to true to enable the breakout room pre-assign option.",
                                "type": "boolean"
                            },
                            "rooms": {
                                "title": "Create a room or rooms",
                                "description": "Create a room or rooms.",
                                "items": {
                                    "properties": {
                                        "name": {
                                            "title": "The breakout room's name",
                                            "description": "The breakout room's name.",
                                            "type": "string"
                                        },
                                        "participants": {
                                            "title": "Email addresses of the participants who are to be assigned to the breakout room",
                                            "description": "Email addresses of the participants who are to be assigned to the breakout room.",
                                            "items": {
                                                "format": "email",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "participants"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "enable"
                        ],
                        "title": "Setting to pre-assign breakout rooms",
                        "type": "object"
                    },
                    "calendar_type": {
                        "description": "The type of calendar integration used to schedule the meeting.\n\n- 1 - Zoom Outlook add-in\n- 2 - Zoom for Google Workspace add-on\n\nWorks with the private_meeting field to determine whether to share details of meetings or not.",
                        "title": "The type of calendar integration used to schedule the meeting",
                        "oneOf": [
                            {
                                "const": 1
                            },
                            {
                                "const": 2
                            }
                        ]
                    },
                    "close_registration": {
                        "default": false,
                        "title": "Close registration after event date",
                        "type": "boolean"
                    },
                    "cn_meeting": {
                        "default": false,
                        "title": "Host meeting in China",
                        "deprecated": true,
                        "type": "boolean"
                    },
                    "contact_email": {
                        "format": "email",
                        "title": "The contact email address for meeting registration",
                        "type": "string"
                    },
                    "contact_name": {
                        "title": "The contact name for meeting registration",
                        "type": "string"
                    },
                    "custom_keys": {
                        "title": "Custom keys and values assigned to the meeting",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.keystringMaxLength64valuestringMaxLength256MaxItems10"
                        },
                        "type": "array"
                    },
                    "email_notification": {
                        "default": true,
                        "title": "Whether to send email notifications to alternative hosts and users with scheduling privileges",
                        "description": "Whether to send email notifications to alternative hosts and users with scheduling privileges.",
                        "type": "boolean"
                    },
                    "encryption_type": {
                        "description": "Choose between enhanced encryption and end-to-end encryption when starting or a meeting.\n\nWhen using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be automatically disabled.\n\n- enhanced_encryption - Enhanced encryption. Encryption is stored in the cloud if you enable this option.\n- e2ee - End-to-end encryption. The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also disables the join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions features.",
                        "title": "Choose between enhanced encryption and end-to-end encryption when starting or a meeting",
                        "oneOf": [
                            {
                                "const": "enhanced_encryption"
                            },
                            {
                                "const": "e2ee"
                            }
                        ]
                    },
                    "enforce_login": {
                        "title": "Only signed in users can join this meeting",
                        "description": "Only signed in users can join this meeting.",
                        "deprecated": true,
                        "type": "boolean"
                    },
                    "enforce_login_domains": {
                        "title": "Only signed in users with specified domains can join meetings",
                        "description": "Only signed in users with specified domains can join meetings.\n\nThis field is deprecated and will not be supported in the future.",
                        "deprecated": true,
                        "type": "string"
                    },
                    "focus_mode": {
                        "title": "Whether the Focus Mode feature is enabled when the meeting starts",
                        "type": "boolean"
                    },
                    "global_dial_in_countries": {
                        "title": "List of global dial-in countries",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "global_dial_in_numbers": {
                        "title": "Global dial-in countries or regions",
                        "items": {
                            "properties": {
                                "city": {
                                    "title": "city of the number",
                                    "description": "City of the number, such as Chicago.",
                                    "type": "string"
                                },
                                "country": {
                                    "title": "The country code",
                                    "description": "The country code, such as BR.",
                                    "type": "string"
                                },
                                "country_name": {
                                    "title": "Full name of country",
                                    "description": "Full name of country, such as Brazil.",
                                    "type": "string"
                                },
                                "number": {
                                    "title": "A phone number",
                                    "description": "A phone number, such as `+1 2332357613`.",
                                    "type": "string"
                                },
                                "type": {
                                    "title": "Type of number",
                                    "oneOf": [
                                        {
                                            "const": "toll"
                                        },
                                        {
                                            "const": "tollfree"
                                        }
                                    ]
                                }
                            },
                            "required": [
                                "city",
                                "country",
                                "country_name",
                                "number",
                                "type"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "host_video": {
                        "title": "Start video when the host joins the meeting",
                        "type": "boolean"
                    },
                    "in_meeting": {
                        "default": false,
                        "title": "Host meeting in India",
                        "deprecated": true,
                        "type": "boolean"
                    },
                    "jbh_time": {
                        "description": "If the value of join_before_host field is set to true, use this field to indicate time limits when a participant may join a meeting before a host.\n\n- 0 - Allow participant to join anytime.\n- 5- Allow participant to join 5 minutes before meeting start time.\n- 10 - Allow participant to join 10 minutes before meeting start time.",
                        "title": "If the value of join_before_host field is set to true, use this field to indicate time limits when a participant may join a meeting before a host",
                        "oneOf": [
                            {
                                "const": 0
                            },
                            {
                                "const": 5
                            },
                            {
                                "const": 10
                            }
                        ]
                    },
                    "join_before_host": {
                        "default": false,
                        "title": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings",
                        "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
                        "type": "boolean"
                    },
                    "language_interpretation": {
                        "properties": {
                            "enable": {
                                "title": "Whether to enable language interpretation for the meeting",
                                "description": "Whether to enable language interpretation for the meeting.",
                                "type": "boolean"
                            },
                            "interpreters": {
                                "title": "Information about the meeting's sign language interpreters",
                                "description": "Information about the meeting's sign language interpreters.",
                                "items": {
                                    "properties": {
                                        "email": {
                                            "format": "email",
                                            "title": "The interpreter's email address",
                                            "description": "The interpreter's email address.",
                                            "type": "string"
                                        },
                                        "languages": {
                                            "title": "comma-separated list of the interpreter's languages",
                                            "description": "comma-separated list of the interpreter's languages.\n\nThe string must contain two country IDs.\n\nFor example, if the interpreter will translate from English to Chinese, then this value will be US,CN.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "email",
                                        "languages"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "enable"
                        ],
                        "type": "object"
                    },
                    "sign_language_interpretation": {
                        "properties": {
                            "enable": {
                                "title": "Whether to enable sign language interpretation for the meeting",
                                "description": "Whether to enable sign language interpretation for the meeting.",
                                "type": "boolean"
                            },
                            "interpreters": {
                                "title": "Information about the meeting's sign language interpreters",
                                "description": "Information about the meeting's sign language interpreters.",
                                "items": {
                                    "properties": {
                                        "email": {
                                            "format": "email",
                                            "title": "The interpreter's email address",
                                            "description": "The interpreter's email address.",
                                            "type": "string"
                                        },
                                        "sign_language": {
                                            "title": "The interpreter's sign language",
                                            "description": "The interpreter's sign language.\n\nTo get this value, use the sign_language_interpretation object's languages and custom_languages values in the Get user settings API response.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "email",
                                        "sign_language"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "enable"
                        ],
                        "title": "The meeting's sign language interpretation settings",
                        "description": "The meeting's sign language interpretation settings.\n\nMake sure to add the language in the web portal in order to use it in the API. See link for details.\n\nNote: If this feature is not enabled on the host's account, this setting will not be applied to the meeting.",
                        "type": "object"
                    },
                    "meeting_authentication": {
                        "title": "If true, only authenticated users can join the meeting",
                        "description": "If true, only authenticated users can join the meeting.",
                        "type": "boolean"
                    },
                    "mute_upon_entry": {
                        "default": false,
                        "title": "Whether to mute participants upon entry",
                        "description": "Whether to mute participants upon entry.",
                        "type": "boolean"
                    },
                    "participant_video": {
                        "title": "Whether to start meetings with the participant video on",
                        "description": "Whether to start meetings with the participant video on.",
                        "type": "boolean"
                    },
                    "private_meeting": {
                        "title": "Whether to set the meeting as private",
                        "description": "Whether to set the meeting as private.",
                        "type": "boolean"
                    },
                    "registrants_confirmation_email": {
                        "title": "Whether to send registrants an email confirmation",
                        "description": "Whether to send registrants an email confirmation.\n\n- true - Send a confirmation email.\n- false - Do not send a confirmation email.",
                        "type": "boolean"
                    },
                    "registrants_email_notification": {
                        "title": "Whether to send registrants email notifications about their registration approval, cancellation, or rejection",
                        "description": "Whether to send registrants email notifications about their registration approval, cancellation, or rejection.\n\n- true - Send an email notification.\n- false - Do not send an email notification.\n\nSet this value to true to also use the registrants_confirmation_email parameter.",
                        "type": "boolean"
                    },
                    "registration_type": {
                        "description": "The meeting's registration type.\n\n- 1 - Attendees register once and can attend any meeting occurrence.\n- 2 - Attendees must register for each meeting occurrence.\n- 3 - Attendees register once and can select one or more meeting occurrences to attend.\n\nThis field is only for recurring meetings with fixed times (8). This value defaults to 1.",
                        "title": "The meeting's registration type",
                        "oneOf": [
                            {
                                "const": 1
                            },
                            {
                                "const": 2
                            },
                            {
                                "const": 3
                            }
                        ]
                    },
                    "show_share_button": {
                        "title": "Whether to include social media sharing buttons on the meeting's registration page",
                        "description": "Whether to include social media sharing buttons on the meeting's registration page.\n\nThis setting is only applied to meetings with registration enabled.",
                        "type": "boolean"
                    },
                    "use_pmi": {
                        "default": false,
                        "title": "Whether to use a Personal Meeting ID (PMI) instead of a generated meeting ID",
                        "description": "Whether to use a Personal Meeting ID (PMI) instead of a generated meeting ID.\n\nThis field is only used for scheduled meetings (2), instant meetings (1), or recurring meetings with no fixed time (3).",
                        "type": "boolean"
                    },
                    "waiting_room": {
                        "title": "Whether to enable the Waiting Room feature. If this value is true, this disables the join_before_host setting",
                        "description": "Whether to enable the Waiting Room feature. If this value is true, this disables the join_before_host setting.",
                        "type": "boolean"
                    },
                    "watermark": {
                        "default": false,
                        "title": "Whether to add a watermark when viewing a shared screen",
                        "description": "Whether to add a watermark when viewing a shared screen.",
                        "type": "boolean"
                    },
                    "host_save_video_order": {
                        "title": "Whether the Allow host to save video order feature is enabled",
                        "description": "Whether the Allow host to save video order feature is enabled.",
                        "type": "boolean"
                    },
                    "internal_meeting": {
                        "default": false,
                        "title": "Whether to set the meeting as an internal meeting",
                        "description": "Whether to set the meeting as an internal meeting.",
                        "type": "boolean"
                    },
                    "meeting_invitees": {
                        "title": "A list of the meeting's invitees",
                        "description": "A list of the meeting's invitees.",
                        "items": {
                            "properties": {
                                "email": {
                                    "format": "email",
                                    "title": "The invitee's email address",
                                    "description": "The invitee's email address.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "email"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "continuous_meeting_chat": {
                        "properties": {
                            "enable": {
                                "title": "Whether to enable the Enable continuous meeting chat setting",
                                "description": "Whether to enable the Enable continuous meeting chat setting.",
                                "type": "boolean"
                            },
                            "auto_add_invited_external_users": {
                                "title": "Whether to enable the Automatically add invited external users setting",
                                "description": "Whether to enable the Automatically add invited external users setting.",
                                "type": "boolean"
                            },
                            "channel_id": {
                                "title": "The channel's ID",
                                "description": "The channel's ID.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "enable",
                            "auto_add_invited_external_users"
                        ],
                        "title": "Information about the Enable continuous meeting chat feature",
                        "description": "Information about the Enable continuous meeting chat feature.",
                        "type": "object"
                    },
                    "participant_focused_meeting": {
                        "default": false,
                        "title": "Whether to set the meeting as a participant focused meeting",
                        "description": "Whether to set the meeting as a participant focused meeting.",
                        "type": "boolean"
                    },
                    "push_change_to_calendar": {
                        "default": false,
                        "title": "Whether to push meeting changes to the calendar",
                        "description": "Whether to push meeting changes to the calendar.\n\nTo enable this feature, configure the Configure Calendar and Contacts Service in the user's profile page of the Zoom web portal and enable the Automatically sync Zoom calendar events information bi-directionally between Zoom and integrated calendars.\n\nsetting in the Settings page of the Zoom web portal.\n\n- true - Push meeting changes to the calendar.\n- false - Do not push meeting changes to the calendar.",
                        "type": "boolean"
                    },
                    "resources": {
                        "title": "The meeting's resources",
                        "items": {
                            "properties": {
                                "resource_type": {
                                    "title": "The resource type",
                                    "description": "The resource type.",
                                    "const": "whiteboard"
                                },
                                "resource_id": {
                                    "title": "The resource ID",
                                    "description": "The resource ID.",
                                    "type": "string"
                                },
                                "permission_level": {
                                    "description": "The permission levels for users to access the whiteboard.\n\n- `editor` - Users with link access can edit the board.\n- `commenter` - Users with link access can comment on the board.\n- `viewer` - Users with link access can view the board.",
                                    "title": "The permission levels for users to access the whiteboard",
                                    "oneOf": [
                                        {
                                            "const": "editor"
                                        },
                                        {
                                            "const": "viewer"
                                        },
                                        {
                                            "const": "commenter"
                                        }
                                    ]
                                }
                            },
                            "required": [
                                "resource_type",
                                "resource_id",
                                "permission_level"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "auto_start_meeting_summary": {
                        "default": false,
                        "title": "Whether to automatically start a meeting summary",
                        "description": "Whether to automatically start a meeting summary.",
                        "type": "boolean"
                    },
                    "auto_start_ai_companion_questions": {
                        "default": false,
                        "title": "Whether to automatically start AI Companion questions",
                        "description": "Whether to automatically start AI Companion questions.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.keystringMaxLength64valuestringMaxLength256MaxItems10": {
                "properties": {
                    "key": {
                        "maxLength": 64,
                        "title": "Custom key associated with the user",
                        "type": "string"
                    },
                    "value": {
                        "maxLength": 256,
                        "title": "Value of the custom key associated with the user",
                        "type": "string"
                    },
                    "typia.tag": {
                        "properties": {
                            "target": {
                                "const": "array"
                            },
                            "kind": {
                                "const": "maxItems"
                            },
                            "value": {
                                "const": 10
                            },
                            "validate": {
                                "const": "$input.length <= 10"
                            },
                            "exclusive": {
                                "const": true
                            },
                            "schema": {
                                "properties": {
                                    "maxItems": {
                                        "const": 10
                                    }
                                },
                                "required": [
                                    "maxItems"
                                ],
                                "type": "object"
                            }
                        },
                        "required": [
                            "target",
                            "kind",
                            "value",
                            "validate",
                            "exclusive",
                            "schema"
                        ],
                        "title": "This is a dummy property for compilation",
                        "description": "This is a dummy property for compilation.\n\nIt does not mean anything in runtime.",
                        "type": "object"
                    }
                },
                "required": [
                    "key",
                    "value"
                ],
                "type": "object"
            },
            "_namespace_swagger.IZoom.TrackingField": {
                "properties": {
                    "field": {
                        "title": "Label of `TrackingField`",
                        "type": "string"
                    },
                    "value": {
                        "title": "The value of `TrackingField`",
                        "type": "string"
                    },
                    "visible": {
                        "title": "Whether `TrackingField` is exposed",
                        "type": "boolean"
                    }
                },
                "required": [
                    "field",
                    "value",
                    "visible"
                ],
                "description": "Information about the meeting's tracking fields.",
                "type": "object"
            },
            "_namespace_swagger.IZoom.ICreateMeetingInput": {
                "properties": {
                    "userId": {
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "zoom",
                        "x-wrtn-secret-scopes": [
                            "meeting:write:admin",
                            "meeting:write"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "userId",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISweetTracker.IGetRecommendedCompanyListOutput": {
                "properties": {
                    "Recommend": {
                        "title": "Courier list",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.StrictOmitISweetTracker.CompanyInternational"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Recommend"
                ],
                "title": "DTO List of couriers matching the invoice number",
                "type": "object"
            },
            "_namespace_swagger.StrictOmitISweetTracker.CompanyInternational": {
                "properties": {
                    "Name": {
                        "title": "Courier name",
                        "type": "string"
                    },
                    "Code": {
                        "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                        "title": "Unique code value of the courier company",
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "Code"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISweetTracker.IGetRecommendedCompanyListInput": {
                "properties": {
                    "t_invoice": {
                        "title": "Invoice number",
                        "type": "string"
                    }
                },
                "required": [
                    "t_invoice"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISweetTracker.IGetCompanyListOutput": {
                "properties": {
                    "Company": {
                        "title": "Courier list",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ISweetTracker.Company"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Company"
                ],
                "title": "Courier inquiry response DTO",
                "type": "object"
            },
            "_namespace_swagger.ISweetTracker.Company": {
                "properties": {
                    "Code": {
                        "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                        "title": "Unique code value of the courier company",
                        "type": "string"
                    },
                    "International": {
                        "title": "International Shipping",
                        "oneOf": [
                            {
                                "const": "true"
                            },
                            {
                                "const": "false"
                            }
                        ]
                    },
                    "Name": {
                        "title": "Courier name",
                        "type": "string"
                    }
                },
                "required": [
                    "Code",
                    "International",
                    "Name"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISweetTracker.IGetTrackingInfoOutput": {
                "properties": {
                    "senderName": {
                        "title": "Sender's name",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "receiverAddr": {
                        "title": "Recipient Address",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "firstDetail": {
                        "description": "It means the first path among the paths, and corresponds to the 0th index of the `trackingDetails` array.",
                        "title": "It means the first path among the paths, and corresponds to the 0th index of the `trackingDetails` array",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.ISweetTracker.TrackingDetail"
                            }
                        ]
                    },
                    "level": {
                        "title": "Progress stage",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "title": "배송 준비 중",
                                "description": "배송 준비 중",
                                "const": 1
                            },
                            {
                                "title": "집화 완료",
                                "description": "집화 완료",
                                "const": 2
                            },
                            {
                                "title": "배송 중",
                                "description": "배송 중",
                                "const": 3
                            },
                            {
                                "title": "지점 도착",
                                "description": "지점 도착",
                                "const": 4
                            },
                            {
                                "title": "배송 출발",
                                "description": "배송 출발",
                                "const": 5
                            },
                            {
                                "title": "배송 완료",
                                "description": "배송 완료",
                                "const": 6
                            }
                        ]
                    },
                    "lastDetail": {
                        "description": "It means the last path among the paths, and corresponds to the last index of the `trackingDetails` array.",
                        "title": "It means the last path among the paths, and corresponds to the last index of the `trackingDetails` array",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.ISweetTracker.TrackingDetail"
                            }
                        ]
                    },
                    "estimate": {
                        "description": "Text in the format '15:00~17:00'",
                        "title": "Expected delivery time",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "itemImage": {
                        "title": "Product Image URL",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "adUrl": {
                        "title": "Address used by courier companies for advertising purposes",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "lastStateDetail": {
                        "title": "lastStateDetail",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.ISweetTracker.TrackingDetail"
                            }
                        ]
                    },
                    "zipCode": {
                        "title": "Postal address",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "invoiceNo": {
                        "title": "tracking number",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "completeYN": {
                        "title": "Delivery Completed",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "title": "배송 완료",
                                "description": "배송이 완료된 경우에는 Y로 표기된다.",
                                "const": "Y"
                            },
                            {
                                "title": "배송 중",
                                "description": "배송이 완료되지 않은 경우에는 N으로 표기된다.",
                                "const": "N"
                            }
                        ]
                    },
                    "orderNumber": {
                        "title": "Order Number",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "complete": {
                        "title": "Delivery Completed",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "boolean"
                            }
                        ]
                    },
                    "recipient": {
                        "title": "Recipient Information",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "receiverName": {
                        "title": "Recipient",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "result": {
                        "title": "Search Results",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "productInfo": {
                        "title": "Product Information",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "itemName": {
                        "title": "Product Name",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.ISweetTracker.TrackingDetail": {
                "properties": {
                    "code": {
                        "title": "Delivery Status Code",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "kind": {
                        "title": "Progress status",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "level": {
                        "title": "Progress stage",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "title": "배송 준비 중",
                                "description": "배송 준비 중",
                                "const": 1
                            },
                            {
                                "title": "집화 완료",
                                "description": "집화 완료",
                                "const": 2
                            },
                            {
                                "title": "배송 중",
                                "description": "배송 중",
                                "const": 3
                            },
                            {
                                "title": "지점 도착",
                                "description": "지점 도착",
                                "const": 4
                            },
                            {
                                "title": "배송 출발",
                                "description": "배송 출발",
                                "const": 5
                            },
                            {
                                "title": "배송 완료",
                                "description": "배송 완료",
                                "const": 6
                            }
                        ]
                    },
                    "manName": {
                        "title": "Delivery driver name",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "manPic": {
                        "title": "Delivery driver phone number",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "remark": {
                        "title": "Note",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "telno": {
                        "title": "Delivery driver phone number",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "telno2": {
                        "title": "Delivery driver phone number",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "time": {
                        "title": "Progress time",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "timeString": {
                        "title": "Progress time",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "where": {
                        "title": "Progress location",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.ISweetTracker.IGetTrackingInfoInput": {
                "properties": {
                    "t_invoice": {
                        "title": "Invoice number",
                        "type": "string"
                    },
                    "t_code": {
                        "description": "The courier code must be entered as the `Code` value that appears when searching for a courier company.\nNote that this is an arbitrary code value, not the name of the courier company.",
                        "title": "Courier Code",
                        "oneOf": [
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "Company[].{value:Code, label:Name}",
                                    "method": "post",
                                    "path": "/connector/sweet-tracker/get-companies"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "Recommend[].{value:Code, label:Name}",
                                    "method": "post",
                                    "path": "/connector/sweet-tracker/get-companies/recommended"
                                },
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "t_invoice",
                    "t_code"
                ],
                "type": "object"
            },
            "_namespace_swagger.IHancell.IUpsertSheetOutput": {
                "properties": {
                    "fileUrl": {
                        "title": "New Hansel File Link",
                        "type": "string"
                    }
                },
                "required": [
                    "fileUrl"
                ],
                "type": "object"
            },
            "_namespace_swagger.IHancell.IUpsertSheetInput": {
                "properties": {
                    "sheetName": {
                        "title": "Sheet name",
                        "description": "If the sheet does not exist, it will be added, and if it does exist, it will be modified.",
                        "type": "string"
                    },
                    "cells": {
                        "title": "Sheet Information",
                        "description": "Information contained in each cell of the sheet.",
                        "$ref": "#/components/schemas/_namespace_swagger.IHancell.Cells"
                    },
                    "fileUrl": {
                        "format": "uri",
                        "contentMediaType": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                        "title": "Excel file",
                        "description": "Excel file to read",
                        "type": "string"
                    }
                },
                "required": [
                    "sheetName",
                    "cells",
                    "fileUrl"
                ],
                "type": "object"
            },
            "_namespace_swagger.IHancell.Cells": {
                "properties": {},
                "additionalProperties": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "title": "Information contained in the cell",
                "type": "object"
            },
            "_namespace_swagger.IHancell.IReadHancellOutput": {
                "properties": {},
                "additionalProperties": {
                    "$ref": "#/components/schemas/_namespace_swagger.IHancell.Cells"
                },
                "title": "Hansel Read Response",
                "type": "object"
            },
            "_namespace_swagger.IHancell.IReadHancellInput": {
                "properties": {
                    "fileUrl": {
                        "format": "uri",
                        "contentMediaType": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                        "title": "Excel file",
                        "description": "Excel file to read",
                        "type": "string"
                    }
                },
                "required": [
                    "fileUrl"
                ],
                "title": "Hansel reading conditions",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.ISendKakaoTalkToFriendsOutput": {
                "properties": {
                    "successful_receiver_uuids": {
                        "maxItems": 5,
                        "title": "List of successfully sent friend UUIDs",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "failure_info": {
                        "title": "Failure Information",
                        "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.failureInfo"
                    }
                },
                "title": "Message Sending Result",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.failureInfo": {
                "properties": {
                    "code": {
                        "title": "Error Code",
                        "type": "number"
                    },
                    "msg": {
                        "title": "Error Message",
                        "type": "string"
                    },
                    "receiver_uuids": {
                        "maxItems": 5,
                        "title": "List of friend UUIDs that failed with the given error code",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "code",
                    "msg",
                    "receiver_uuids"
                ],
                "title": "Failure Information",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.ISendKakaoTalkToFriendsInput": {
                "properties": {
                    "receiver_uuids": {
                        "minItems": 1,
                        "maxItems": 5,
                        "title": "List of friends' UUIDs",
                        "items": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "{value:elements[].uuid, label:elements[].profile_nickname}",
                                "method": "post",
                                "path": "/connector/kakao-talk/get-friends"
                            },
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "message": {
                        "maxLength": 200,
                        "title": "Message to send",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "kakao",
                        "x-wrtn-secret-scopes": [
                            "talk_message"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "receiver_uuids",
                    "message",
                    "secretKey"
                ],
                "title": "Message Sending Conditions",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.IMemoOutput": {
                "properties": {
                    "result_code": {
                        "title": "Response Code",
                        "description": "Indicates successful message sending",
                        "const": 0
                    }
                },
                "required": [
                    "result_code"
                ],
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.ISendKakaoTalkCommerceInput": {
                "properties": {
                    "template_object": {
                        "title": "Commerce Template",
                        "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.ICommerceMemoInput"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "kakao",
                        "x-wrtn-secret-scopes": [
                            "talk_message",
                            "profile_image",
                            "profile_nickname"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "template_object",
                    "secretKey"
                ],
                "title": "Message Sending Conditions",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.ICommerceMemoInput": {
                "properties": {
                    "object_type": {
                        "title": "Commerce Type",
                        "x-wrtn-placeholder": "commerce",
                        "const": "commerce"
                    },
                    "commerce": {
                        "title": "Product Name and Pricing Information",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.product_namestringundefinedregular_pricenumberTypeint64discount_price(numberTypeint64)undefinedcurrency_unit(stringDefault원)undefinedcurrency_unit_positionConstant......1more...undefined..."
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.product_namestringundefinedregular_pricenumberTypeint64discount_price(numberTypeint64)undefinedcurrency_unit(stringDefault원)undefinedcurrency_unit_positionConstant......1more...undefined....o1"
                            }
                        ]
                    },
                    "buttons": {
                        "maxItems": 2,
                        "title": "List of Buttons",
                        "description": "Used to customize button titles and links. Supports two buttons and takes precedence over `button_title`.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.Button"
                        },
                        "type": "array"
                    },
                    "content": {
                        "title": "Message Content",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.titlestringimage_width(numberTypeuint64Minimum200)undefinedimage_height(numberTypeuint64Minimum200)undefinedlinkButtonLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.image_urlstringFormaturlimage_width(numberTypeuint64Minimum200)undefinedimage_height(numberTypeuint64Minimum...)undefinedlinkButtonLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.descriptionstringimage_width(numberTypeuint64Minimum200)undefinedimage_height(numberTypeuint64Minimum200)undefinedlinkButtonLink"
                            }
                        ]
                    },
                    "button_title": {
                        "title": "Button Title",
                        "type": "string"
                    }
                },
                "required": [
                    "object_type",
                    "commerce",
                    "content"
                ],
                "title": "Commerce Template",
                "type": "object"
            },
            "_namespace_swagger.product_namestringundefinedregular_pricenumberTypeint64discount_price(numberTypeint64)undefinedcurrency_unit(stringDefault원)undefinedcurrency_unit_positionConstant......1more...undefined...": {
                "properties": {
                    "product_name": {
                        "title": "Product Name and Title",
                        "type": "string"
                    },
                    "regular_price": {
                        "title": "Regular Price",
                        "type": "integer"
                    },
                    "discount_price": {
                        "title": "Discounted Price",
                        "type": "integer"
                    },
                    "currency_unit": {
                        "default": "원",
                        "title": "Currency Unit or Symbol",
                        "type": "string"
                    },
                    "currency_unit_position": {
                        "title": "Currency Unit Position",
                        "oneOf": [
                            {
                                "title": "Displayed after price",
                                "const": 0
                            },
                            {
                                "title": "Displayed before price",
                                "const": 1
                            }
                        ]
                    },
                    "discount_rate": {
                        "minimum": 0,
                        "maximum": 100,
                        "title": "Discount Rate",
                        "description": "A number between 0 and 100",
                        "type": "integer"
                    }
                },
                "required": [
                    "regular_price"
                ],
                "type": "object"
            },
            "_namespace_swagger.product_namestringundefinedregular_pricenumberTypeint64discount_price(numberTypeint64)undefinedcurrency_unit(stringDefault원)undefinedcurrency_unit_positionConstant......1more...undefined....o1": {
                "properties": {
                    "product_name": {
                        "title": "Product Name and Title",
                        "type": "string"
                    },
                    "regular_price": {
                        "title": "Regular Price",
                        "type": "integer"
                    },
                    "discount_price": {
                        "title": "Discounted Price",
                        "type": "integer"
                    },
                    "currency_unit": {
                        "default": "원",
                        "title": "Currency Unit or Symbol",
                        "type": "string"
                    },
                    "currency_unit_position": {
                        "title": "Currency Unit Position",
                        "oneOf": [
                            {
                                "title": "Displayed after price",
                                "const": 0
                            },
                            {
                                "title": "Displayed before price",
                                "const": 1
                            }
                        ]
                    },
                    "fixedDiscountPrice": {
                        "minimum": 0,
                        "title": "Fixed Discount Price",
                        "description": "Cannot be used together with discount rate",
                        "type": "integer"
                    }
                },
                "required": [
                    "regular_price"
                ],
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.Button": {
                "properties": {
                    "title": {
                        "title": "Button Name",
                        "x-wrtn-placeholder": "Button Name",
                        "type": "string"
                    },
                    "link": {
                        "title": "Button Link",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IWebLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IMobileWebLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IAndroidAppLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IiOSAppLink"
                            }
                        ]
                    }
                },
                "required": [
                    "title",
                    "link"
                ],
                "title": "Button Information",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.IWebLink": {
                "properties": {
                    "web_url": {
                        "format": "url",
                        "title": "Web Link",
                        "type": "string"
                    }
                },
                "required": [
                    "web_url"
                ],
                "title": "Web Link",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.IMobileWebLink": {
                "properties": {
                    "mobile_web_url": {
                        "format": "url",
                        "title": "Mobile Web Link",
                        "type": "string"
                    }
                },
                "required": [
                    "mobile_web_url"
                ],
                "title": "Mobile Web Link",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.IAndroidAppLink": {
                "properties": {
                    "android_execution_params": {
                        "title": "App Link",
                        "description": "Use `mobile_web_url` if this value is absent",
                        "type": "string"
                    }
                },
                "required": [
                    "android_execution_params"
                ],
                "title": "Android App Link",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.IiOSAppLink": {
                "properties": {
                    "ios_execution_params": {
                        "title": "App Link",
                        "description": "Use `mobile_web_url` if this value is absent",
                        "type": "string"
                    }
                },
                "required": [
                    "ios_execution_params"
                ],
                "title": "iOS App Link",
                "type": "object"
            },
            "_namespace_swagger.titlestringimage_width(numberTypeuint64Minimum200)undefinedimage_height(numberTypeuint64Minimum200)undefinedlinkButtonLink": {
                "properties": {
                    "title": {
                        "title": "Title",
                        "type": "string"
                    },
                    "image_width": {
                        "minimum": 200,
                        "title": "Image Width",
                        "description": "In pixels.",
                        "type": "integer"
                    },
                    "image_height": {
                        "minimum": 200,
                        "title": "Image Height",
                        "description": "In pixels.",
                        "type": "integer"
                    },
                    "link": {
                        "title": "Link Information for Redirection",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IWebLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IMobileWebLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IAndroidAppLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IiOSAppLink"
                            }
                        ]
                    }
                },
                "required": [
                    "title",
                    "link"
                ],
                "type": "object"
            },
            "_namespace_swagger.image_urlstringFormaturlimage_width(numberTypeuint64Minimum200)undefinedimage_height(numberTypeuint64Minimum...)undefinedlinkButtonLink": {
                "properties": {
                    "image_url": {
                        "format": "url",
                        "title": "Image URL",
                        "description": "The image size must not exceed `5MB`.",
                        "type": "string"
                    },
                    "image_width": {
                        "minimum": 200,
                        "title": "Image Width",
                        "description": "In pixels.",
                        "type": "integer"
                    },
                    "image_height": {
                        "minimum": 200,
                        "title": "Image Height",
                        "description": "In pixels.",
                        "type": "integer"
                    },
                    "link": {
                        "title": "Link Information for Redirection",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IWebLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IMobileWebLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IAndroidAppLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IiOSAppLink"
                            }
                        ]
                    }
                },
                "required": [
                    "image_url",
                    "link"
                ],
                "type": "object"
            },
            "_namespace_swagger.descriptionstringimage_width(numberTypeuint64Minimum200)undefinedimage_height(numberTypeuint64Minimum200)undefinedlinkButtonLink": {
                "properties": {
                    "description": {
                        "title": "Detailed Description",
                        "description": "Combined with title, displayed up to 4 lines.",
                        "type": "string"
                    },
                    "image_width": {
                        "minimum": 200,
                        "title": "Image Width",
                        "description": "In pixels.",
                        "type": "integer"
                    },
                    "image_height": {
                        "minimum": 200,
                        "title": "Image Height",
                        "description": "In pixels.",
                        "type": "integer"
                    },
                    "link": {
                        "title": "Link Information for Redirection",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IWebLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IMobileWebLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IAndroidAppLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IiOSAppLink"
                            }
                        ]
                    }
                },
                "required": [
                    "description",
                    "link"
                ],
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.ISendKakaoTalkLocationInput": {
                "properties": {
                    "template_object": {
                        "title": "Location Template",
                        "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.ILocationMemoInput"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "kakao",
                        "x-wrtn-secret-scopes": [
                            "talk_message",
                            "profile_image",
                            "profile_nickname"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "template_object",
                    "secretKey"
                ],
                "title": "Message Sending Conditions",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.ILocationMemoInput": {
                "properties": {
                    "object_type": {
                        "title": "Location Type",
                        "x-wrtn-placeholder": "location",
                        "const": "location"
                    },
                    "address": {
                        "title": "Address of the Location to Share",
                        "type": "string"
                    },
                    "address_title": {
                        "title": "Title Used in KakaoTalk Map View",
                        "type": "string"
                    },
                    "social": {
                        "title": "Additional Social Information",
                        "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.Social"
                    },
                    "buttons": {
                        "maxItems": 2,
                        "title": "List of Buttons",
                        "description": "Used to customize button titles and links. Supports two buttons and takes precedence over `button_title`.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.Button"
                        },
                        "type": "array"
                    },
                    "content": {
                        "title": "Message Content",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.titlestringimage_width(numberTypeuint64Minimum200)undefinedimage_height(numberTypeuint64Minimum200)undefinedlinkButtonLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.image_urlstringFormaturlimage_width(numberTypeuint64Minimum200)undefinedimage_height(numberTypeuint64Minimum...)undefinedlinkButtonLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.descriptionstringimage_width(numberTypeuint64Minimum200)undefinedimage_height(numberTypeuint64Minimum200)undefinedlinkButtonLink"
                            }
                        ]
                    },
                    "button_title": {
                        "title": "Button Title",
                        "type": "string"
                    }
                },
                "required": [
                    "object_type",
                    "address",
                    "content"
                ],
                "title": "Location Template",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.Social": {
                "properties": {
                    "like_count": {
                        "title": "Number of Likes on the Content",
                        "type": "integer"
                    },
                    "comment_count": {
                        "title": "Number of Comments on the Content",
                        "type": "integer"
                    },
                    "shared_count": {
                        "title": "Number of Shares of the Content",
                        "type": "integer"
                    },
                    "view_count": {
                        "title": "Number of Views of the Content",
                        "type": "integer"
                    },
                    "subscriber_count": {
                        "title": "Number of Subscribers to the Content",
                        "type": "integer"
                    }
                },
                "title": "Social Information",
                "description": "Up to 3 out of 5 attributes will be displayed. Priority is Like > Comment > Shared > View > Subscriber.",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.ISendKakaoTalkListInput": {
                "properties": {
                    "template_object": {
                        "title": "List Template",
                        "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IListMemoInput"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "kakao",
                        "x-wrtn-secret-scopes": [
                            "talk_message",
                            "profile_image",
                            "profile_nickname"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "template_object",
                    "secretKey"
                ],
                "title": "Message Sending Conditions",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.IListMemoInput": {
                "properties": {
                    "object_type": {
                        "title": "List Type",
                        "x-wrtn-placeholder": "list",
                        "const": "list"
                    },
                    "header_title": {
                        "maxLength": 200,
                        "title": "Main Title Displayed at the Top of the List",
                        "type": "string"
                    },
                    "header_link": {
                        "title": "Link Information Corresponding to the Header Title",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IWebLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IMobileWebLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IAndroidAppLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IiOSAppLink"
                            }
                        ]
                    },
                    "contents": {
                        "minItems": 2,
                        "maxItems": 3,
                        "title": "List of Contents Displayed in the List",
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.titlestringimage_width(numberTypeuint64Minimum200)undefinedimage_height(numberTypeuint64Minimum200)undefinedlinkButtonLink"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.image_urlstringFormaturlimage_width(numberTypeuint64Minimum200)undefinedimage_height(numberTypeuint64Minimum...)undefinedlinkButtonLink"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.descriptionstringimage_width(numberTypeuint64Minimum200)undefinedimage_height(numberTypeuint64Minimum200)undefinedlinkButtonLink"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "buttons": {
                        "maxItems": 2,
                        "title": "List of Buttons",
                        "description": "Used to customize button titles and links. Supports two buttons and takes precedence over `button_title`.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.Button"
                        },
                        "type": "array"
                    },
                    "button_title": {
                        "title": "Button Title",
                        "type": "string"
                    }
                },
                "required": [
                    "object_type",
                    "header_title",
                    "header_link",
                    "contents"
                ],
                "title": "List Template",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.ISendKakaoTalkFeedInput": {
                "properties": {
                    "template_object": {
                        "title": "Feed Template",
                        "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.IFeedMemoInput"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "kakao",
                        "x-wrtn-secret-scopes": [
                            "talk_message",
                            "profile_image",
                            "profile_nickname"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "template_object",
                    "secretKey"
                ],
                "title": "Message Sending Conditions",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.IFeedMemoInput": {
                "properties": {
                    "object_type": {
                        "title": "Feed Type",
                        "const": "feed"
                    },
                    "item_content": {
                        "title": "Content to Include in the Item Area",
                        "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.ItemContent"
                    },
                    "social": {
                        "title": "Social Information About the Content",
                        "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.Social"
                    },
                    "buttons": {
                        "maxItems": 2,
                        "title": "List of Buttons",
                        "description": "Used to customize button titles and links. Supports two buttons and takes precedence over `button_title`.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.Button"
                        },
                        "type": "array"
                    },
                    "content": {
                        "title": "Message Content",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.titlestringimage_width(numberTypeuint64Minimum200)undefinedimage_height(numberTypeuint64Minimum200)undefinedlinkButtonLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.image_urlstringFormaturlimage_width(numberTypeuint64Minimum200)undefinedimage_height(numberTypeuint64Minimum...)undefinedlinkButtonLink"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.descriptionstringimage_width(numberTypeuint64Minimum200)undefinedimage_height(numberTypeuint64Minimum200)undefinedlinkButtonLink"
                            }
                        ]
                    },
                    "button_title": {
                        "title": "Button Title",
                        "type": "string"
                    }
                },
                "required": [
                    "object_type",
                    "item_content",
                    "content"
                ],
                "title": "Feed Template",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.ItemContent": {
                "properties": {
                    "profile_text": {
                        "maxLength": 16,
                        "title": "Text to Display in the Header or Profile Area",
                        "description": "If `profile_image_url` is absent, it will be displayed as a bold header containing only the title.",
                        "type": "string"
                    },
                    "profile_image_url": {
                        "format": "url",
                        "title": "Profile Image",
                        "description": "Displayed as a small circular profile photo.",
                        "type": "string"
                    },
                    "title_image_url": {
                        "format": "url",
                        "title": "Item Image",
                        "description": "iOS 108x108, Android 98x98 size. Images not in a 1:1 ratio will be center cropped.",
                        "type": "string"
                    },
                    "title_image_text": {
                        "maxLength": 24,
                        "title": "Item Title",
                        "description": "Maximum of 2 lines.",
                        "type": "string"
                    },
                    "title_image_category": {
                        "maxLength": 14,
                        "title": "Category",
                        "description": "Maximum of 1 line.",
                        "type": "string"
                    },
                    "items": {
                        "maxItems": 5,
                        "title": "List of Items",
                        "description": "Information for each text item.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.ItemInfo"
                        },
                        "type": "array"
                    },
                    "sum": {
                        "maxLength": 6,
                        "title": "Total Amount",
                        "type": "string"
                    },
                    "sum_op": {
                        "maxLength": 11,
                        "title": "Price Summary Information",
                        "type": "string"
                    }
                },
                "title": "Item Content",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.ItemInfo": {
                "properties": {
                    "item": {
                        "maxLength": 6,
                        "title": "Item Name",
                        "type": "string"
                    },
                    "item_op": {
                        "maxLength": 14,
                        "title": "Item Price",
                        "type": "string"
                    }
                },
                "required": [
                    "item",
                    "item_op"
                ],
                "title": "Item Information",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.ISendKakaoTalkTextInput": {
                "properties": {
                    "template_object": {
                        "title": "Text Template",
                        "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.ITextMemoInput"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "kakao",
                        "x-wrtn-secret-scopes": [
                            "talk_message",
                            "profile_image",
                            "profile_nickname"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "template_object",
                    "secretKey"
                ],
                "title": "Message Sending Conditions",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.ITextMemoInput": {
                "properties": {
                    "object_type": {
                        "title": "Text Type",
                        "const": "text"
                    },
                    "text": {
                        "maxLength": 200,
                        "title": "Body Text",
                        "type": "string"
                    },
                    "link": {
                        "title": "Link",
                        "$ref": "#/components/schemas/_namespace_swagger.IWebLinkIMobileWebLink"
                    },
                    "buttons": {
                        "maxItems": 2,
                        "title": "List of Buttons",
                        "description": "Used to customize button titles and links. Supports two buttons and takes precedence over `button_title`.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.Button"
                        },
                        "type": "array"
                    },
                    "button_title": {
                        "title": "Button Title",
                        "type": "string"
                    }
                },
                "required": [
                    "object_type",
                    "text",
                    "link"
                ],
                "title": "Text Template",
                "type": "object"
            },
            "_namespace_swagger.IWebLinkIMobileWebLink": {
                "properties": {
                    "web_url": {
                        "format": "url",
                        "title": "Web Link",
                        "type": "string"
                    },
                    "mobile_web_url": {
                        "format": "url",
                        "title": "Mobile Web Link",
                        "type": "string"
                    }
                },
                "required": [
                    "web_url",
                    "mobile_web_url"
                ],
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.ICreateEventOutput": {
                "properties": {
                    "event_id": {
                        "title": "ID of the created event",
                        "type": "string"
                    }
                },
                "required": [
                    "event_id"
                ],
                "title": "Output of created event",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.ICreateEventInput": {
                "properties": {
                    "calendar_id": {
                        "default": "primary",
                        "title": "Calendar ID to create the event in",
                        "x-wrtn-placeholder": "primary",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "calendars[].{value:id, label: name || ''} || subscribe_calendars[].{value:id, label: name || ''}",
                            "method": "post",
                            "path": "/connector/kakao-talk/get-calendars"
                        },
                        "type": "string"
                    },
                    "event": {
                        "title": "Information of the event to be created",
                        "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.Event"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "kakao",
                        "x-wrtn-secret-scopes": [
                            "talk_calendar"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "event",
                    "secretKey"
                ],
                "title": "Conditions for creating an event",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.Event": {
                "properties": {
                    "title": {
                        "maxLength": 50,
                        "title": "Event title",
                        "x-wrtn-placeholder": "Event title",
                        "type": "string"
                    },
                    "time": {
                        "title": "Event time",
                        "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.Time"
                    },
                    "rrule": {
                        "title": "Recurrence rule for the event",
                        "description": "In RFC5545 RRULE format",
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 5000,
                        "title": "Event description",
                        "x-wrtn-placeholder": "Event description",
                        "type": "string"
                    },
                    "location": {
                        "title": "Event location",
                        "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.Location"
                    },
                    "reminders": {
                        "maxItems": 2,
                        "title": "Reminder settings",
                        "description": "In minutes, can be set in 5-minute intervals, up to 2 reminders. For all-day events, can start from -1440, for non-all-day events, starts from 0.",
                        "items": {
                            "minimum": -1440,
                            "maximum": 43200,
                            "multipleOf": 5,
                            "type": "number"
                        },
                        "type": "array"
                    },
                    "color": {
                        "title": "Event color",
                        "oneOf": [
                            {
                                "title": "BLUE",
                                "description": "2C88DE",
                                "const": "BLUE"
                            },
                            {
                                "title": "ROYAL_BLUE",
                                "description": "2D69E0",
                                "const": "ROYAL_BLUE"
                            },
                            {
                                "title": "NAVY_BLUE",
                                "description": "223788",
                                "const": "NAVY_BLUE"
                            },
                            {
                                "title": "RED",
                                "description": "D42726",
                                "const": "RED"
                            },
                            {
                                "title": "PINK",
                                "description": "ED5683",
                                "const": "PINK"
                            },
                            {
                                "title": "ORANGE",
                                "description": "FF9429",
                                "const": "ORANGE"
                            },
                            {
                                "title": "GREEN",
                                "description": "149959",
                                "const": "GREEN"
                            },
                            {
                                "title": "LIME",
                                "description": "7CB343",
                                "const": "LIME"
                            },
                            {
                                "title": "OLIVE",
                                "description": "A4AD15",
                                "const": "OLIVE"
                            },
                            {
                                "title": "MINT",
                                "description": "5CC5BE",
                                "const": "MINT"
                            },
                            {
                                "title": "MAGENTA",
                                "description": "AB47BC",
                                "const": "MAGENTA"
                            },
                            {
                                "title": "VIOLET",
                                "description": "8A4B9B",
                                "const": "VIOLET"
                            },
                            {
                                "title": "LAVENDER",
                                "description": "7986CB",
                                "const": "LAVENDER"
                            },
                            {
                                "title": "BROWN",
                                "description": "945C1F",
                                "const": "BROWN"
                            },
                            {
                                "title": "GRAY",
                                "description": "666666",
                                "const": "GRAY"
                            }
                        ]
                    }
                },
                "required": [
                    "title",
                    "time"
                ],
                "title": "Event created in KakaoTalk calendar",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.Time": {
                "properties": {
                    "start_at": {
                        "title": "Start time of the event",
                        "description": "Can be set in 5-minute intervals",
                        "x-wrtn-placeholder": "2023-12-31T15:00:00Z",
                        "type": "string"
                    },
                    "end_at": {
                        "title": "End time of the event",
                        "x-wrtn-placeholder": "2024-01-01T15:00:00Z",
                        "type": "string"
                    },
                    "time_zone": {
                        "default": "Asia/Seoul",
                        "title": "Timezone setting\n\nIn TZID format.",
                        "type": "string"
                    },
                    "all_day": {
                        "default": false,
                        "title": "Whether the event is all-day",
                        "type": "boolean"
                    },
                    "lunar": {
                        "default": false,
                        "title": "Whether to set the date based on the lunar calendar",
                        "type": "boolean"
                    }
                },
                "title": "Time settings for an event",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.Location": {
                "properties": {
                    "name": {
                        "maxLength": 50,
                        "title": "Place Name",
                        "type": "string"
                    },
                    "location_id": {
                        "title": "Place ID",
                        "type": "number"
                    },
                    "address": {
                        "title": "Address",
                        "type": "string"
                    },
                    "latitude": {
                        "title": "Latitude",
                        "type": "number"
                    },
                    "longitude": {
                        "title": "Longitude",
                        "type": "number"
                    }
                },
                "title": "Location",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.IGetFriendsOutput": {
                "properties": {
                    "elements": {
                        "title": "Friends list",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.Friend"
                        },
                        "type": "array"
                    },
                    "total_count": {
                        "title": "Total number of friends",
                        "type": "integer"
                    },
                    "after_url": {
                        "title": "Next page URL of the friends list",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    },
                    "before_url": {
                        "title": "Previous page URL of the friends list",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    },
                    "favorite_count": {
                        "title": "Number of favorite friends",
                        "type": "integer"
                    }
                },
                "required": [
                    "elements",
                    "total_count"
                ],
                "title": "Result of retrieving friends",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.Friend": {
                "properties": {
                    "id": {
                        "title": "Member number",
                        "description": "User ID\n\nA member number assigned to a friend in KakaoTalk, equivalent to the ID value.\nNote that the `uuid` property is used when sending messages.",
                        "type": "integer"
                    },
                    "uuid": {
                        "title": "Friend code",
                        "description": "Friend code used when sending KakaoTalk messages. Used for actions such as sending KakaoTalk messages later.\nAlthough the property name is `uuid`, it is not in the usual uuid format, so use it with caution.",
                        "type": "string"
                    },
                    "favorite": {
                        "title": "Whether the friend is a favorite",
                        "type": "boolean"
                    },
                    "profile_nickname": {
                        "title": "Nickname",
                        "type": "string"
                    },
                    "profile_thumbnail_image": {
                        "title": "Thumbnail",
                        "oneOf": [
                            {
                                "title": "NO_PROFILE_IMAGE",
                                "const": ""
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "id",
                    "uuid",
                    "profile_nickname"
                ],
                "title": "KakaoTalk friend",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.IGetFriendsInput": {
                "properties": {
                    "offset": {
                        "default": 0,
                        "title": "Starting point of the friends list",
                        "type": "integer"
                    },
                    "limit": {
                        "title": "Number of friends per page",
                        "type": "integer"
                    },
                    "order": {
                        "title": "Sort order of the friends list",
                        "oneOf": [
                            {
                                "title": "Ascending",
                                "const": "asc"
                            },
                            {
                                "title": "Descending",
                                "const": "desc"
                            }
                        ]
                    },
                    "friend_order": {
                        "description": "It must be one of: 'favorite', 'nickname'.\nDefault value is 'favorite'.",
                        "title": "Sort criteria of the friends list",
                        "oneOf": [
                            {
                                "title": "Sort by favorite",
                                "const": "favorite"
                            },
                            {
                                "title": "Sort by nickname",
                                "const": "nickname"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "kakao",
                        "x-wrtn-secret-scopes": [
                            "friends"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "title": "Conditions for retrieving friends",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.IGetEventOutput": {
                "properties": {
                    "events": {
                        "title": "List of events",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.EventBrief"
                        },
                        "type": "array"
                    },
                    "has_next": {
                        "title": "Whether there is a next page",
                        "type": "boolean"
                    },
                    "after_url": {
                        "format": "url",
                        "title": "URL of the next page",
                        "description": "A URL containing parameters and values to retrieve the next page, used as is when requesting the next page.\n\nProvided when `has_next` is true.",
                        "type": "string"
                    }
                },
                "required": [
                    "events",
                    "has_next"
                ],
                "title": "Result of retrieving events",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.EventBrief": {
                "properties": {
                    "id": {
                        "title": "Event ID",
                        "type": "string"
                    },
                    "title": {
                        "title": "Event title",
                        "type": "string"
                    },
                    "type": {
                        "title": "Event type",
                        "type": "string"
                    },
                    "calendar_id": {
                        "default": "primary",
                        "title": "Calendar ID",
                        "description": "Fixed to primary for the default calendar",
                        "x-wrtn-placeholder": "primary",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "calendars[].{value:id, label: name || ''} || subscribe_calendars[].{value:id, label: name || ''}",
                            "method": "post",
                            "path": "/connector/kakao-talk/get-calendars"
                        },
                        "type": "string"
                    },
                    "time": {
                        "title": "Event time",
                        "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.Time"
                    },
                    "is_host": {
                        "default": false,
                        "title": "Whether the user is the host of the event",
                        "description": "For public/subscribed or invited events",
                        "type": "boolean"
                    },
                    "is_recur_event": {
                        "title": "Whether the event is recurring",
                        "description": "Required if type is USER.",
                        "type": "boolean"
                    },
                    "color": {
                        "description": "Not included if not specified during event creation or editing.",
                        "title": "Event color",
                        "oneOf": [
                            {
                                "title": "BLUE",
                                "description": "2C88DE",
                                "const": "BLUE"
                            },
                            {
                                "title": "ROYAL_BLUE",
                                "description": "2D69E0",
                                "const": "ROYAL_BLUE"
                            },
                            {
                                "title": "NAVY_BLUE",
                                "description": "223788",
                                "const": "NAVY_BLUE"
                            },
                            {
                                "title": "RED",
                                "description": "D42726",
                                "const": "RED"
                            },
                            {
                                "title": "PINK",
                                "description": "ED5683",
                                "const": "PINK"
                            },
                            {
                                "title": "ORANGE",
                                "description": "FF9429",
                                "const": "ORANGE"
                            },
                            {
                                "title": "GREEN",
                                "description": "149959",
                                "const": "GREEN"
                            },
                            {
                                "title": "LIME",
                                "description": "7CB343",
                                "const": "LIME"
                            },
                            {
                                "title": "OLIVE",
                                "description": "A4AD15",
                                "const": "OLIVE"
                            },
                            {
                                "title": "MINT",
                                "description": "5CC5BE",
                                "const": "MINT"
                            },
                            {
                                "title": "MAGENTA",
                                "description": "AB47BC",
                                "const": "MAGENTA"
                            },
                            {
                                "title": "VIOLET",
                                "description": "8A4B9B",
                                "const": "VIOLET"
                            },
                            {
                                "title": "LAVENDER",
                                "description": "7986CB",
                                "const": "LAVENDER"
                            },
                            {
                                "title": "BROWN",
                                "description": "945C1F",
                                "const": "BROWN"
                            },
                            {
                                "title": "GRAY",
                                "description": "666666",
                                "const": "GRAY"
                            }
                        ]
                    }
                },
                "required": [
                    "time"
                ],
                "title": "Event",
                "type": "object"
            },
            "_namespace_swagger.ISecretkakaotalk_calendarcalender_id(stringDefaultprimaryPlaceholderprimaryPrerequisitemethodpostpath/connector/kakao-talk/get-calendarsjmesPathcalendars.valueidlabelnamesubscribe_calendars.valueidlabelname)undefinedpres...": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "kakao",
                        "x-wrtn-secret-scopes": [
                            "talk_calendar"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "calender_id": {
                        "default": "primary",
                        "title": "Calendar ID to Retrieve Events",
                        "description": "Defaults to retrieving all calendars if not specified.",
                        "x-wrtn-placeholder": "primary",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "calendars[].{value:id, label: name || ''} || subscribe_calendars[].{value:id, label: name || ''}",
                            "method": "post",
                            "path": "/connector/kakao-talk/get-calendars"
                        },
                        "type": "string"
                    },
                    "preset": {
                        "description": "Required if `from` and `to` are not included, and ignored if `next_page_token` is included.",
                        "title": "Time Period for Retrieving Events",
                        "oneOf": [
                            {
                                "title": "The day of the query",
                                "const": "TODAY"
                            },
                            {
                                "title": "The week containing the query date starting on Sunday",
                                "const": "THIS_WEEK"
                            },
                            {
                                "title": "The month containing the query date starting on the 1st",
                                "const": "THIS_MONTH"
                            }
                        ]
                    },
                    "time_zone": {
                        "title": "Time Zone for Deadline Dates\n\nIn TZID format.",
                        "type": "string"
                    },
                    "limit": {
                        "minimum": 100,
                        "maximum": 1000,
                        "title": "Maximum Number of Events to Receive in Response",
                        "type": "integer"
                    },
                    "from": {
                        "format": "date-time",
                        "title": "Start Time of the Period to Retrieve Events",
                        "description": "Required if `from` and `to` are not included and ignored if `next_page_token` is included.",
                        "type": "string"
                    },
                    "to": {
                        "format": "date-time",
                        "title": "End Time of the Period to Retrieve Events",
                        "description": "Required if `from` and `to` are not included and ignored if `next_page_token` is included. Must be within 31 days from `to`.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey",
                    "from",
                    "to"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISecretkakaotalk_calendarcalender_id(stringDefaultprimaryPlaceholderprimaryPrerequisitemethodpostpath/connector/kakao-talk/get-calendarsjmesPathcalendars.valueidlabelnamesubscribe_calendars.valueidlabelname)undefinedpres....o1": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "kakao",
                        "x-wrtn-secret-scopes": [
                            "talk_calendar"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "calender_id": {
                        "default": "primary",
                        "title": "Calendar ID to Retrieve Events",
                        "description": "Defaults to retrieving all calendars if not specified.",
                        "x-wrtn-placeholder": "primary",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "calendars[].{value:id, label: name || ''} || subscribe_calendars[].{value:id, label: name || ''}",
                            "method": "post",
                            "path": "/connector/kakao-talk/get-calendars"
                        },
                        "type": "string"
                    },
                    "preset": {
                        "description": "Required if `from` and `to` are not included, and ignored if `next_page_token` is included.",
                        "title": "Time Period for Retrieving Events",
                        "oneOf": [
                            {
                                "title": "The day of the query",
                                "const": "TODAY"
                            },
                            {
                                "title": "The week containing the query date starting on Sunday",
                                "const": "THIS_WEEK"
                            },
                            {
                                "title": "The month containing the query date starting on the 1st",
                                "const": "THIS_MONTH"
                            }
                        ]
                    },
                    "time_zone": {
                        "title": "Time Zone for Deadline Dates\n\nIn TZID format.",
                        "type": "string"
                    },
                    "limit": {
                        "minimum": 100,
                        "maximum": 1000,
                        "title": "Maximum Number of Events to Receive in Response",
                        "type": "integer"
                    },
                    "next_page_token": {
                        "title": "Token for Pagination",
                        "description": "Query condition token including `from`, `to`, and `limit` values, available in the `after_url` received in the response.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey",
                    "next_page_token"
                ],
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.IGetCalendarOutput": {
                "properties": {
                    "calendars": {
                        "title": "Basic Calendar",
                        "description": "Personal calendars.\nAlthough these are personal, they are not limited to just your own events; you can view events from friends' schedules if invited or shared.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.Calendar"
                        },
                        "type": "array"
                    },
                    "subscribe_calendars": {
                        "title": "List of Subscribed Calendars",
                        "description": "Subscription calendars.\nThese are managed in chat rooms where multiple members have created a group. You can view the calendars of the chat rooms you belong to.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IKakaoTalk.SubscribeCalendars"
                        },
                        "type": "array"
                    }
                },
                "title": "Talk Calendar",
                "description": "There are two types of calendars in KakaoTalk:\n1. Basic Calendar: This is a personal calendar. While it is personal, it is not limited to viewing only your own events; you can view events shared by friends or events you were invited to.\n2. Subscription Calendar: This is a shared calendar managed by a group of members in a chat room. You can view the calendars of the chat rooms you are part of.",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.Calendar": {
                "properties": {
                    "id": {
                        "default": "primary",
                        "title": "Calendar ID\n\nFor calendars that users typically have by default, it is referred to as `primary`.",
                        "x-wrtn-placeholder": "primary",
                        "type": "string"
                    },
                    "name": {
                        "title": "Calendar Name",
                        "x-wrtn-placeholder": "Calendar Name",
                        "type": "string"
                    },
                    "color": {
                        "title": "Event Color",
                        "oneOf": [
                            {
                                "title": "BLUE",
                                "description": "2C88DE",
                                "const": "BLUE"
                            },
                            {
                                "title": "ROYAL_BLUE",
                                "description": "2D69E0",
                                "const": "ROYAL_BLUE"
                            },
                            {
                                "title": "NAVY_BLUE",
                                "description": "223788",
                                "const": "NAVY_BLUE"
                            },
                            {
                                "title": "RED",
                                "description": "D42726",
                                "const": "RED"
                            },
                            {
                                "title": "PINK",
                                "description": "ED5683",
                                "const": "PINK"
                            },
                            {
                                "title": "ORANGE",
                                "description": "FF9429",
                                "const": "ORANGE"
                            },
                            {
                                "title": "GREEN",
                                "description": "149959",
                                "const": "GREEN"
                            },
                            {
                                "title": "LIME",
                                "description": "7CB343",
                                "const": "LIME"
                            },
                            {
                                "title": "OLIVE",
                                "description": "A4AD15",
                                "const": "OLIVE"
                            },
                            {
                                "title": "MINT",
                                "description": "5CC5BE",
                                "const": "MINT"
                            },
                            {
                                "title": "MAGENTA",
                                "description": "AB47BC",
                                "const": "MAGENTA"
                            },
                            {
                                "title": "VIOLET",
                                "description": "8A4B9B",
                                "const": "VIOLET"
                            },
                            {
                                "title": "LAVENDER",
                                "description": "7986CB",
                                "const": "LAVENDER"
                            },
                            {
                                "title": "BROWN",
                                "description": "945C1F",
                                "const": "BROWN"
                            },
                            {
                                "title": "GRAY",
                                "description": "666666",
                                "const": "GRAY"
                            }
                        ]
                    },
                    "reminder": {
                        "title": "Default reminder time for non-all-day events",
                        "type": "integer"
                    },
                    "reminder_all_day": {
                        "title": "Default reminder time for all-day events",
                        "type": "integer"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "Basic Calendar",
                "description": "List of sub-calendars",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.SubscribeCalendars": {
                "properties": {
                    "description": {
                        "title": "Description of the subscribed calendar set by the channel",
                        "type": "string"
                    },
                    "profile_image_url": {
                        "format": "url",
                        "contentMediaType": "image/*",
                        "title": "Profile image URL of the subscribed calendar\n\nIf an empty string appears, it means there is no image.",
                        "type": "string"
                    },
                    "thumbnail_url": {
                        "format": "url",
                        "contentMediaType": "image/*",
                        "title": "Thumbnail URL of the subscribed calendar's speech bubble",
                        "type": "string"
                    },
                    "id": {
                        "default": "primary",
                        "title": "Calendar ID\n\nFor calendars that users typically have by default, it is referred to as `primary`.",
                        "x-wrtn-placeholder": "primary",
                        "type": "string"
                    },
                    "name": {
                        "title": "Calendar Name",
                        "x-wrtn-placeholder": "Calendar Name",
                        "type": "string"
                    },
                    "color": {
                        "title": "Event Color",
                        "oneOf": [
                            {
                                "title": "BLUE",
                                "description": "2C88DE",
                                "const": "BLUE"
                            },
                            {
                                "title": "ROYAL_BLUE",
                                "description": "2D69E0",
                                "const": "ROYAL_BLUE"
                            },
                            {
                                "title": "NAVY_BLUE",
                                "description": "223788",
                                "const": "NAVY_BLUE"
                            },
                            {
                                "title": "RED",
                                "description": "D42726",
                                "const": "RED"
                            },
                            {
                                "title": "PINK",
                                "description": "ED5683",
                                "const": "PINK"
                            },
                            {
                                "title": "ORANGE",
                                "description": "FF9429",
                                "const": "ORANGE"
                            },
                            {
                                "title": "GREEN",
                                "description": "149959",
                                "const": "GREEN"
                            },
                            {
                                "title": "LIME",
                                "description": "7CB343",
                                "const": "LIME"
                            },
                            {
                                "title": "OLIVE",
                                "description": "A4AD15",
                                "const": "OLIVE"
                            },
                            {
                                "title": "MINT",
                                "description": "5CC5BE",
                                "const": "MINT"
                            },
                            {
                                "title": "MAGENTA",
                                "description": "AB47BC",
                                "const": "MAGENTA"
                            },
                            {
                                "title": "VIOLET",
                                "description": "8A4B9B",
                                "const": "VIOLET"
                            },
                            {
                                "title": "LAVENDER",
                                "description": "7986CB",
                                "const": "LAVENDER"
                            },
                            {
                                "title": "BROWN",
                                "description": "945C1F",
                                "const": "BROWN"
                            },
                            {
                                "title": "GRAY",
                                "description": "666666",
                                "const": "GRAY"
                            }
                        ]
                    },
                    "reminder": {
                        "title": "Default reminder time for non-all-day events",
                        "type": "integer"
                    },
                    "reminder_all_day": {
                        "title": "Default reminder time for all-day events",
                        "type": "integer"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "List of Subscribed Calendars",
                "type": "object"
            },
            "_namespace_swagger.ICommon.ISecretkakaotalk_calendar": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "kakao",
                        "x-wrtn-secret-scopes": [
                            "talk_calendar"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.IGetAccessTokenOutput": {
                "properties": {
                    "access_token": {
                        "title": "Access token",
                        "type": "string"
                    },
                    "token_type": {
                        "title": "Token type",
                        "const": "bearer"
                    },
                    "refresh_token": {
                        "title": "Refresh token",
                        "type": "string"
                    },
                    "scope": {
                        "title": "Scope of this access token",
                        "type": "string"
                    },
                    "expires_in": {
                        "title": "Expiry time of the access token",
                        "type": "number"
                    },
                    "refresh_token_expires_in": {
                        "title": "Expiry time of the refresh token",
                        "type": "number"
                    }
                },
                "required": [
                    "access_token",
                    "token_type",
                    "refresh_token",
                    "scope",
                    "expires_in",
                    "refresh_token_expires_in"
                ],
                "title": "DTO for output of access token",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.IAuthorizationCode": {
                "properties": {
                    "code": {
                        "title": "KakaoTalk OAuth2 authorization code",
                        "type": "string"
                    }
                },
                "required": [
                    "code"
                ],
                "title": "DTO for the code received after Kakao login",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.IRefreshAccessTokenOutput": {
                "properties": {
                    "access_token": {
                        "title": "Access token",
                        "type": "string"
                    },
                    "expires_in": {
                        "title": "Expiry time of the access token",
                        "type": "number"
                    },
                    "token_type": {
                        "title": "Token type",
                        "const": "bearer"
                    }
                },
                "required": [
                    "access_token",
                    "expires_in",
                    "token_type"
                ],
                "title": "Refresh Access Token",
                "type": "object"
            },
            "_namespace_swagger.IKakaoTalk.IRefreshAccessTokenInput": {
                "properties": {
                    "refresh_token": {
                        "type": "string"
                    }
                },
                "required": [
                    "refresh_token"
                ],
                "title": "Conditions to Refresh Kakao Access Token",
                "type": "object"
            },
            "_namespace_swagger.IKakaoMap.SearchByKeywordOutput": {
                "properties": {
                    "documents": {
                        "title": "Search Results List",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IKakaoMap.Document"
                        },
                        "type": "array"
                    },
                    "meta": {
                        "title": "meta information",
                        "$ref": "#/components/schemas/_namespace_swagger.IKakaoMap.Meta"
                    }
                },
                "required": [
                    "documents",
                    "meta"
                ],
                "title": "Search Results",
                "type": "object"
            },
            "_namespace_swagger.IKakaoMap.Document": {
                "properties": {
                    "id": {
                        "title": "Location ID",
                        "type": "string"
                    },
                    "place_name": {
                        "title": "Place name, company name",
                        "type": "string"
                    },
                    "category_name": {
                        "title": "Category Name",
                        "type": "string"
                    },
                    "category_group_code": {
                        "title": "Category group code that groups only important categories",
                        "oneOf": [
                            {
                                "title": "대형마트",
                                "const": "MT1"
                            },
                            {
                                "title": "편의점",
                                "const": "CS2"
                            },
                            {
                                "title": "어린이집,유치원",
                                "const": "PS3"
                            },
                            {
                                "title": "학교",
                                "const": "SC4"
                            },
                            {
                                "title": "학원",
                                "const": "AC5"
                            },
                            {
                                "title": "주차장",
                                "const": "PK6"
                            },
                            {
                                "title": "주유소, 충전소",
                                "const": "OL7"
                            },
                            {
                                "title": "지하철역",
                                "const": "SW8"
                            },
                            {
                                "title": "은행",
                                "const": "BK9"
                            },
                            {
                                "title": "문화시설",
                                "const": "CT1"
                            },
                            {
                                "title": "중개업소",
                                "const": "AG2"
                            },
                            {
                                "title": "공공기관",
                                "const": "PO3"
                            },
                            {
                                "title": "관광명소",
                                "const": "AT4"
                            },
                            {
                                "title": "숙박",
                                "const": "AD5"
                            },
                            {
                                "title": "음식점",
                                "const": "FD6"
                            },
                            {
                                "title": "카페",
                                "const": "CE7"
                            },
                            {
                                "title": "병원",
                                "const": "HP8"
                            },
                            {
                                "title": "약국",
                                "const": "PM9"
                            },
                            {
                                "title": "알 수 없음",
                                "const": ""
                            }
                        ]
                    },
                    "category_group_name": {
                        "title": "Category group name that groups only important categories",
                        "oneOf": [
                            {
                                "title": "대형마트",
                                "const": "대형마트"
                            },
                            {
                                "title": "편의점",
                                "const": "편의점"
                            },
                            {
                                "title": "어린이집,유치원",
                                "const": "어린이집,유치원"
                            },
                            {
                                "title": "학교",
                                "const": "학교"
                            },
                            {
                                "title": "학원",
                                "const": "학원"
                            },
                            {
                                "title": "주차장",
                                "const": "주차장"
                            },
                            {
                                "title": "주유소, 충전소",
                                "const": "주유소, 충전소"
                            },
                            {
                                "title": "지하철역",
                                "const": "지하철역"
                            },
                            {
                                "title": "은행",
                                "const": "은행"
                            },
                            {
                                "title": "문화시설",
                                "const": "문화시설"
                            },
                            {
                                "title": "중개업소",
                                "const": "중개업소"
                            },
                            {
                                "title": "공공기관",
                                "const": "공공기관"
                            },
                            {
                                "title": "관광명소",
                                "const": "관광명소"
                            },
                            {
                                "title": "숙박",
                                "const": "숙박"
                            },
                            {
                                "title": "음식점",
                                "const": "음식점"
                            },
                            {
                                "title": "카페",
                                "const": "카페"
                            },
                            {
                                "title": "병원",
                                "const": "병원"
                            },
                            {
                                "title": "약국",
                                "const": "약국"
                            },
                            {
                                "title": "알 수 없음",
                                "const": ""
                            }
                        ]
                    },
                    "phone": {
                        "title": "phone number",
                        "type": "string"
                    },
                    "address_name": {
                        "title": "Full street address",
                        "type": "string"
                    },
                    "road_address_name": {
                        "title": "Full road name address",
                        "type": "string"
                    },
                    "x": {
                        "title": "X coordinate value",
                        "description": "longitude (longitude) in case of latitude and longitude",
                        "type": "string"
                    },
                    "y": {
                        "title": "Y coordinate value",
                        "description": "latitude in case of longitude and latitude",
                        "type": "string"
                    },
                    "place_url": {
                        "format": "iri",
                        "title": "Location details page URL",
                        "type": "string"
                    },
                    "distance": {
                        "title": "Distance to the center coordinate",
                        "description": "(only exists when x,y parameters are given) Unit meter",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "place_name",
                    "category_name",
                    "category_group_code",
                    "category_group_name",
                    "phone",
                    "address_name",
                    "road_address_name",
                    "x",
                    "y",
                    "place_url",
                    "distance"
                ],
                "title": "Search Results",
                "type": "object"
            },
            "_namespace_swagger.IKakaoMap.Meta": {
                "properties": {
                    "total_count": {
                        "title": "Number of documents found for search term",
                        "type": "integer"
                    },
                    "pageable_count": {
                        "maximum": 45,
                        "title": "Number of documents displayed at once",
                        "type": "integer"
                    },
                    "is_end": {
                        "title": "Whether the current page is the last page",
                        "description": "If the value is false, the page value can be increased for the next request to request the next page.",
                        "type": "boolean"
                    },
                    "same_name": {
                        "properties": {
                            "keyword": {
                                "title": "Keyword excluding local information from query language",
                                "description": "If you search for 'Jungang-ro Restaurant', the value extracted from the part corresponding to 'Restaurant'",
                                "type": "string"
                            },
                            "region": {
                                "title": "List of regions recognized in the query",
                                "description": "If you search for 'Jungang-ro restaurant', the value extracted from the part corresponding to 'Jungang-ro'",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "selected_region": {
                                "title": "Local information used in search",
                                "type": "string"
                            }
                        },
                        "required": [
                            "keyword",
                            "region",
                            "selected_region"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "total_count",
                    "pageable_count",
                    "is_end"
                ],
                "title": "meta information",
                "type": "object"
            },
            "_namespace_swagger.IKakaoMap.SearchByKeywordInput": {
                "properties": {
                    "query": {
                        "title": "Search Keyword",
                        "x-wrtn-placeholder": "종로구 맛집",
                        "type": "string"
                    },
                    "page": {
                        "default": 1,
                        "minimum": 1,
                        "maximum": 45,
                        "title": "Results page number",
                        "type": "integer"
                    },
                    "size": {
                        "default": 15,
                        "minimum": 1,
                        "maximum": 15,
                        "title": "Number of documents per page",
                        "type": "integer"
                    }
                },
                "required": [
                    "query"
                ],
                "title": "Search Conditions",
                "type": "object"
            },
            "_namespace_swagger.IKakaoNavi.SuccessCase": {
                "properties": {
                    "trans_id": {
                        "title": "Path Request ID",
                        "type": "string"
                    },
                    "routes": {
                        "title": "Path information",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IKakaoNavi.Route"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "trans_id",
                    "routes"
                ],
                "title": "Success response",
                "type": "object"
            },
            "_namespace_swagger.IKakaoNavi.Route": {
                "properties": {
                    "result_code": {
                        "title": "Path search result code",
                        "oneOf": [
                            {
                                "title": "길찾기 성공",
                                "const": 0
                            },
                            {
                                "title": "길찾기 결과를 찾을 수 없음",
                                "const": 1
                            },
                            {
                                "title": "경유지 지점 주변의 도로를 탐색할 수 없음",
                                "const": 101
                            },
                            {
                                "title": "시작 지점 주변의 도로를 탐색할 수 없음",
                                "const": 102
                            },
                            {
                                "title": "도착 지점 주변의 도로를 탐색할 수 없음",
                                "const": 103
                            },
                            {
                                "title": "출발지와 도착지가 5 m 이내로 설정된 경우 경로를 탐색할 수 없음",
                                "const": 104
                            },
                            {
                                "title": "시작 지점 주변의 도로에 유고 정보(교통 장애)가 있음",
                                "const": 105
                            },
                            {
                                "title": "도착 지점 주변의 도로에 유고 정보(교통 장애)가 있음",
                                "const": 106
                            },
                            {
                                "title": "경유지 주변의 도로에 유고 정보(교통 장애)가 있음.",
                                "const": 107
                            },
                            {
                                "title": "다중 출발지: 출발지가 탐색 영역에 포함되지 않음",
                                "const": 201
                            },
                            {
                                "title": "다중 출발지: 출발지 최대 개수 초과 도로 선택 실패",
                                "const": 202
                            },
                            {
                                "title": "다중 출발지: 목적지 도로 선택 실패",
                                "const": 203
                            },
                            {
                                "title": "다중 출발지: 경로 탐색 처리 시간 제한",
                                "const": 204
                            },
                            {
                                "title": "다중 출발지: 출발지 주변의 유고 정보(교통 장애)로 인한 통행 불가",
                                "const": 205
                            },
                            {
                                "title": "다중 출발지: 목적지 주변의 유고 정보(교통 장애)로 인한 통행 불가",
                                "const": 206
                            },
                            {
                                "title": "다중 출발지: 출발지가 설정한 길찾기 반경 범위를 벗어남",
                                "const": 207
                            },
                            {
                                "title": "다중 목적지: 출발지 도로 선택 실패",
                                "const": 301
                            },
                            {
                                "title": "다중 목적지: 목적지 도로 선택 실패",
                                "const": 302
                            },
                            {
                                "title": "다중 목적지: 목적지 최대 개수 초과로 인해 경로 탐색 실패",
                                "const": 303
                            },
                            {
                                "title": "다중 목적지: 목적지가 설정한 길찾기 반경 범위를 벗어남",
                                "const": 304
                            }
                        ]
                    },
                    "result_msg": {
                        "title": "Path search result message",
                        "type": "string"
                    },
                    "summary": {
                        "title": "Path Summary Information",
                        "$ref": "#/components/schemas/_namespace_swagger.IKakaoNavi.Summary"
                    },
                    "sections": {
                        "title": "Route information by section",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IKakaoNavi.Section"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "result_code",
                    "result_msg"
                ],
                "type": "object"
            },
            "_namespace_swagger.IKakaoNavi.Summary": {
                "properties": {
                    "origin": {
                        "title": "Departure information",
                        "$ref": "#/components/schemas/_namespace_swagger.IKakaoNavi.Place"
                    },
                    "destination": {
                        "title": "destination information",
                        "$ref": "#/components/schemas/_namespace_swagger.IKakaoNavi.Place"
                    },
                    "waypoints": {
                        "title": "Transit Information",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IKakaoNavi.Place"
                        },
                        "type": "array"
                    },
                    "priority": {
                        "title": "Path Finding Priority Options",
                        "type": "string"
                    },
                    "fare": {
                        "title": "Rate Information",
                        "$ref": "#/components/schemas/_namespace_swagger.IKakaoNavi.Fare"
                    },
                    "duration": {
                        "title": "Full search results move time (seconds)",
                        "type": "integer"
                    },
                    "bound": {
                        "title": "A rectangular bounding box that contains all paths",
                        "$ref": "#/components/schemas/_namespace_swagger.IKakaoNavi.Bound"
                    },
                    "distance": {
                        "title": "Section Distance (meters)",
                        "type": "integer"
                    }
                },
                "required": [
                    "origin",
                    "destination",
                    "waypoints",
                    "priority",
                    "fare",
                    "duration",
                    "bound",
                    "distance"
                ],
                "type": "object"
            },
            "_namespace_swagger.IKakaoNavi.Place": {
                "properties": {
                    "name": {
                        "title": "place name",
                        "type": "string"
                    },
                    "x": {
                        "title": "X coordinate (longitude)",
                        "type": "number"
                    },
                    "y": {
                        "title": "Y coordinate (latitude)",
                        "type": "number"
                    }
                },
                "required": [
                    "name",
                    "x",
                    "y"
                ],
                "type": "object"
            },
            "_namespace_swagger.IKakaoNavi.Fare": {
                "properties": {
                    "taxi": {
                        "title": "Taxi fare (won)",
                        "type": "number"
                    },
                    "toll": {
                        "title": "Toll fee (won)",
                        "type": "number"
                    }
                },
                "required": [
                    "taxi",
                    "toll"
                ],
                "title": "Rate Information",
                "type": "object"
            },
            "_namespace_swagger.IKakaoNavi.Bound": {
                "properties": {
                    "min_x": {
                        "title": "X coordinate of the bottom left of the bounding box",
                        "type": "number"
                    },
                    "min_y": {
                        "title": "Y coordinate of the bottom left of the bounding box",
                        "type": "number"
                    },
                    "max_x": {
                        "title": "X coordinate of the upper right corner of the bounding box",
                        "type": "number"
                    },
                    "max_y": {
                        "title": "Y coordinate of the upper right corner of the bounding box",
                        "type": "number"
                    }
                },
                "required": [
                    "min_x",
                    "min_y",
                    "max_x",
                    "max_y"
                ],
                "title": "Bounding box of a rectangle containing all paths",
                "type": "object"
            },
            "_namespace_swagger.IKakaoNavi.Section": {
                "properties": {
                    "distance": {
                        "title": "Section Distance (meters)",
                        "type": "integer"
                    },
                    "duration": {
                        "title": "Full search results move time (seconds)",
                        "type": "integer"
                    },
                    "bound": {
                        "title": "A rectangular bounding box that contains all paths",
                        "$ref": "#/components/schemas/_namespace_swagger.IKakaoNavi.Bound"
                    },
                    "roads": {
                        "title": "Road Information",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IKakaoNavi.Road"
                        },
                        "type": "array"
                    },
                    "guides": {
                        "title": "Guide Information",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IKakaoNavi.Guide"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "distance",
                    "duration",
                    "bound"
                ],
                "title": "Route information by section",
                "description": "If there is a waypoint, a section is created equal to the number of waypoints plus 1.",
                "type": "object"
            },
            "_namespace_swagger.IKakaoNavi.Road": {
                "properties": {
                    "name": {
                        "title": "road name",
                        "type": "string"
                    },
                    "distance": {
                        "title": "Road length (meters)",
                        "type": "integer"
                    },
                    "duration": {
                        "title": "Estimated travel time (sec)",
                        "description": "Current estimated travel time and actual travel time are set to the same value",
                        "type": "integer"
                    },
                    "traffic_speed": {
                        "title": "Current traffic information speed (km/h)",
                        "type": "number"
                    },
                    "traffic_state": {
                        "title": "Current traffic information status",
                        "oneOf": [
                            {
                                "title": "교통 상태 정보 없음",
                                "const": 0
                            },
                            {
                                "title": "교통 정체",
                                "const": 1
                            },
                            {
                                "title": "교통 지체",
                                "const": 2
                            },
                            {
                                "title": "교통 서행",
                                "const": 3
                            },
                            {
                                "title": "교통 원활",
                                "const": 4
                            },
                            {
                                "title": "교통사고(통행 불가)",
                                "const": 6
                            }
                        ]
                    },
                    "vertexes": {
                        "title": "A one-dimensional array consisting of X, Y coordinates",
                        "items": {
                            "type": "number"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "distance",
                    "duration",
                    "traffic_speed",
                    "traffic_state",
                    "vertexes"
                ],
                "title": "Road Information",
                "type": "object"
            },
            "_namespace_swagger.IKakaoNavi.Guide": {
                "properties": {
                    "type": {
                        "title": "Guide type",
                        "oneOf": [
                            {
                                "title": "직진",
                                "const": 0
                            },
                            {
                                "title": "좌회전",
                                "const": 1
                            },
                            {
                                "title": "우회전",
                                "const": 2
                            },
                            {
                                "title": "유턴",
                                "const": 3
                            },
                            {
                                "title": "왼쪽 방향",
                                "const": 5
                            },
                            {
                                "title": "오른쪽 방향",
                                "const": 6
                            },
                            {
                                "title": "고속 도로 출구",
                                "const": 7
                            },
                            {
                                "title": "왼쪽에 고속 도로 출구",
                                "const": 8
                            },
                            {
                                "title": "오른쪽에 고속 도로 출구",
                                "const": 9
                            },
                            {
                                "title": "고속 도로 입구",
                                "const": 10
                            },
                            {
                                "title": "왼쪽에 고속 도로 입구",
                                "const": 11
                            },
                            {
                                "title": "오른쪽에 고속 도로 입구",
                                "const": 12
                            },
                            {
                                "title": "고가 도로 진입",
                                "const": 14
                            },
                            {
                                "title": "지하 차도 진입",
                                "const": 15
                            },
                            {
                                "title": "고가 도로 옆길",
                                "const": 16
                            },
                            {
                                "title": "지하 차도 옆길",
                                "const": 17
                            },
                            {
                                "title": "오른쪽 1시 방향",
                                "const": 18
                            },
                            {
                                "title": "오른쪽 2시 방향",
                                "const": 19
                            },
                            {
                                "title": "오른쪽 3시 방향",
                                "const": 20
                            },
                            {
                                "title": "오른쪽 4시 방향",
                                "const": 21
                            },
                            {
                                "title": "오른쪽 5시 방향",
                                "const": 22
                            },
                            {
                                "title": "6시 방향",
                                "const": 23
                            },
                            {
                                "title": "왼쪽 7시 방향",
                                "const": 24
                            },
                            {
                                "title": "왼쪽 8시 방향",
                                "const": 25
                            },
                            {
                                "title": "왼쪽 9시 방향",
                                "const": 26
                            },
                            {
                                "title": "왼쪽 10시 방향",
                                "const": 27
                            },
                            {
                                "title": "왼쪽 11시 방향",
                                "const": 28
                            },
                            {
                                "title": "12시 방향",
                                "const": 29
                            },
                            {
                                "title": "로터리에서 오른쪽 1시 방향",
                                "const": 30
                            },
                            {
                                "title": "로터리에서 오른쪽 2시 방향",
                                "const": 31
                            },
                            {
                                "title": "로터리에서 오른쪽 3시 방향",
                                "const": 32
                            },
                            {
                                "title": "로터리에서 오른쪽 4시 방향",
                                "const": 33
                            },
                            {
                                "title": "로터리에서 오른쪽 5시 방향",
                                "const": 34
                            },
                            {
                                "title": "로터리에서 6시 방향",
                                "const": 35
                            },
                            {
                                "title": "로터리에서 왼쪽 7시 방향",
                                "const": 36
                            },
                            {
                                "title": "로터리에서 왼쪽 8시 방향",
                                "const": 37
                            },
                            {
                                "title": "로터리에서 왼쪽 9시 방향",
                                "const": 38
                            },
                            {
                                "title": "로터리에서 왼쪽 10시 방향",
                                "const": 39
                            },
                            {
                                "title": "로터리에서 왼쪽 11시 방향",
                                "const": 40
                            },
                            {
                                "title": "로터리에서 12시 방향",
                                "const": 41
                            },
                            {
                                "title": "도시 고속 도로 출구",
                                "const": 42
                            },
                            {
                                "title": "왼쪽에 도시 고속 도로 출구",
                                "const": 43
                            },
                            {
                                "title": "오른쪽에 도시 고속 도로 출구",
                                "const": 44
                            },
                            {
                                "title": "도시 고속 도로 입구",
                                "const": 45
                            },
                            {
                                "title": "왼쪽에 도시 고속 도로 입구",
                                "const": 46
                            },
                            {
                                "title": "오른쪽에 도시 고속 도로 입구",
                                "const": 47
                            },
                            {
                                "title": "왼쪽 고속 도로 진입",
                                "const": 48
                            },
                            {
                                "title": "오른쪽 고속 도로 진입",
                                "const": 49
                            },
                            {
                                "title": "페리 항로 진입",
                                "const": 61
                            },
                            {
                                "title": "페리 항로 진출",
                                "const": 62
                            },
                            {
                                "title": "회전 교차로에서 오른쪽 1시 방향",
                                "const": 70
                            },
                            {
                                "title": "회전 교차로에서 오른쪽 2시 방향",
                                "const": 71
                            },
                            {
                                "title": "회전 교차로에서 오른쪽 3시 방향",
                                "const": 72
                            },
                            {
                                "title": "회전 교차로에서 오른쪽 4시 방향",
                                "const": 73
                            },
                            {
                                "title": "회전 교차로에서 오른쪽 5시 방향",
                                "const": 74
                            },
                            {
                                "title": "회전 교차로에서 6시 방향",
                                "const": 75
                            },
                            {
                                "title": "회전 교차로에서 왼쪽 7시 방향",
                                "const": 76
                            },
                            {
                                "title": "회전 교차로에서 왼쪽 8시 방향",
                                "const": 77
                            },
                            {
                                "title": "회전 교차로에서 왼쪽 9시 방향",
                                "const": 78
                            },
                            {
                                "title": "회전 교차로에서 왼쪽 10시 방향",
                                "const": 79
                            },
                            {
                                "title": "회전 교차로에서 왼쪽 11시 방향",
                                "const": 80
                            },
                            {
                                "title": "회전 교차로에서 12시 방향",
                                "const": 81
                            },
                            {
                                "title": "왼쪽 직진",
                                "const": 82
                            },
                            {
                                "title": "오른쪽 직진",
                                "const": 83
                            },
                            {
                                "title": "톨게이트 진입",
                                "const": 84
                            },
                            {
                                "title": "원톨링 진입",
                                "const": 85
                            },
                            {
                                "title": "분기 후 합류 구간 진입",
                                "const": 86
                            },
                            {
                                "title": "출발지",
                                "const": 100
                            },
                            {
                                "title": "목적지",
                                "const": 101
                            },
                            {
                                "title": "톨게이트",
                                "const": 300
                            },
                            {
                                "title": "휴게소",
                                "const": 301
                            },
                            {
                                "title": "경유지",
                                "const": 1000
                            }
                        ]
                    },
                    "guidance": {
                        "title": "Guide text",
                        "type": "string"
                    },
                    "road_index": {
                        "title": "Link index for the current guide",
                        "type": "integer"
                    },
                    "name": {
                        "title": "place name",
                        "type": "string"
                    },
                    "x": {
                        "title": "X coordinate (longitude)",
                        "type": "number"
                    },
                    "y": {
                        "title": "Y coordinate (latitude)",
                        "type": "number"
                    },
                    "duration": {
                        "title": "Full search results move time (seconds)",
                        "type": "integer"
                    },
                    "distance": {
                        "title": "Section Distance (meters)",
                        "type": "integer"
                    }
                },
                "required": [
                    "type",
                    "guidance",
                    "road_index",
                    "name",
                    "x",
                    "y",
                    "duration",
                    "distance"
                ],
                "title": "Guide information",
                "type": "object"
            },
            "_namespace_swagger.IKakaoNavi.IGetFutureDirectionsInput": {
                "properties": {
                    "departure_time": {
                        "title": "Departure time",
                        "description": "Set time after current time in YYYYMMDDHHMM format",
                        "x-wrtn-placeholder": "202406202000",
                        "type": "string"
                    },
                    "origin": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?,[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Origin",
                        "description": "Longitude and latitude values in X, Y coordinate format",
                        "x-wrtn-placeholder": "127.111202,37.394912",
                        "type": "string"
                    },
                    "destination": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?,[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Destination",
                        "description": "Longitude and latitude values in X, Y coordinate format",
                        "x-wrtn-placeholder": "127.111202,37.394912",
                        "type": "string"
                    }
                },
                "required": [
                    "departure_time",
                    "origin",
                    "destination"
                ],
                "title": "Request Conditions",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSlides.IExportHanshowOutput": {
                "properties": {
                    "hanshow": {
                        "format": "uri",
                        "title": "File download link",
                        "type": "string"
                    }
                },
                "required": [
                    "hanshow"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleSlides.IExportPresentationInput": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/drive"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "title": "Conditions for exporting slides to pptx",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSlides.IExportPresentationOutput": {
                "properties": {
                    "powerPoint": {
                        "format": "uri",
                        "title": "File download link",
                        "type": "string"
                    }
                },
                "required": [
                    "powerPoint"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleSlides.ISimplePresentationIdOutput": {
                "properties": {
                    "title": {
                        "title": "The title of the presentation",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "pageSize": {
                        "title": "The page size of the presentation",
                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.Size"
                    },
                    "presentationId": {
                        "title": "Presentation ID",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IGoogleSlides.Size": {
                "properties": {
                    "width": {
                        "title": "Width of the object",
                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.Dimension"
                    },
                    "height": {
                        "title": "The height of the object",
                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.Dimension"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IGoogleSlides.Dimension": {
                "properties": {
                    "magnitude": {
                        "title": "scale",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "unit": {
                        "title": "Size units",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "title": "알 수 없는 단위",
                                "const": "UNIT_UNSPECIFIED"
                            },
                            {
                                "title": "영국식 단위 (EMU)",
                                "description": "는 1센티미터의 1/360,000으로 정의되므로 인치당 914,400 EMU 및 포인트당 12,700 EMU가 있습니다.",
                                "const": "EMU"
                            },
                            {
                                "title": "포인트",
                                "description": "1/72인치입니다.",
                                "const": "PT"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IGoogleSlides.IGetPresentationInput": {
                "properties": {
                    "presentationId": {
                        "title": "The presentation ID to search for",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/presentations"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "presentationId",
                    "secretKey"
                ],
                "title": "Condition DTO for presentation search",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSlides.AppendQuarterDivisionSlideInput": {
                "properties": {
                    "templates": {
                        "title": "templates",
                        "description": "As a slide to add, this template arrangement consists of the same type of template.\nTemplates have unconditional text except for the Entire type, and the image and text are paired.\nWhen the user creates a storyline, the text may be concise, but if it means a fairy tale book, a cartoon, or a speech bubble,\nit is better to substitute a text of sufficient length to grasp the context of the story even if viewed again later.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGoogleSlides.Template.QuarterDivisiontype"
                        },
                        "type": "array"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/presentations"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "templates",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGoogleSlides.Template.QuarterDivisiontype": {
                "properties": {
                    "contents": {
                        "minItems": 4,
                        "maxItems": 4,
                        "title": "Contents of the slide",
                        "description": "Here, like a four-cut cartoon, four images and four texts must be put in, so the length of the arrangement must be 4.\nTherefore, you must prepare in advance by receiving or generating four images.",
                        "items": {
                            "properties": {
                                "url": {
                                    "format": "iri",
                                    "title": "URL of the image",
                                    "description": "If there is a problem with the image, the message below may appear.\nYou must insert only existing images, and if the image is too small, you can spit out errors, so insert an image of the appropriate size or create it yourself to insert the image.\nThe first error below is when the image does not exist, and the second is when the size or format of the image is not valid. The image must be in jpg, jpeg, and png formats.\n\n1. The provided image was not found.\n2. There was a problem retrieving the image. The provided image should be publicly accessible, within size limit, and in supported formats.",
                                    "type": "string"
                                },
                                "text": {
                                    "title": "Text corresponding to the image",
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.InsertText"
                                }
                            },
                            "required": [
                                "url",
                                "text"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "contents"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleSlides.InsertText": {
                "properties": {
                    "text": {
                        "title": "Text to add",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "minLength": 1,
                                "type": "string"
                            }
                        ]
                    },
                    "objectId": {
                        "title": "ID",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IGoogleSlides.AppendEntireSlideInput": {
                "properties": {
                    "templates": {
                        "title": "templates",
                        "description": "As a slide to add, this template arrangement consists of the same type of template.\nTemplates have unconditional text except for the Entire type, and the image and text are paired.\nWhen the user creates a storyline, the text may be concise, but if it means a fairy tale book, a cartoon, or a speech bubble,\nit is better to substitute a text of sufficient length to grasp the context of the story even if viewed again later.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGoogleSlides.Template.Entiretype"
                        },
                        "type": "array"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/presentations"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "templates",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGoogleSlides.Template.Entiretype": {
                "properties": {
                    "contents": {
                        "properties": {
                            "url": {
                                "format": "iri",
                                "title": "URL of the image",
                                "description": "If there is a problem with the image, the message below may appear.\nYou must insert only existing images, and if the image is too small, you can spit out errors, so insert an image of the appropriate size or create it yourself to insert the image.\nThe first error below is when the image does not exist, and the second is when the size or format of the image is not valid. The image must be in jpg, jpeg, and png formats.\n\n1. The provided image was not found.\n2. There was a problem retrieving the image. The provided image should be publicly accessible, within size limit, and in supported formats.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "url"
                        ],
                        "title": "Contents of the slide",
                        "type": "object"
                    }
                },
                "required": [
                    "contents"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleSlides.AppendLandscapeSlideInput": {
                "properties": {
                    "templates": {
                        "title": "templates",
                        "description": "As a slide to add, this template arrangement consists of the same type of template.\nTemplates have unconditional text except for the Entire type, and the image and text are paired.\nWhen the user creates a storyline, the text may be concise, but if it means a fairy tale book, a cartoon, or a speech bubble,\nit is better to substitute a text of sufficient length to grasp the context of the story even if viewed again later.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGoogleSlides.Template.Landscapetype"
                        },
                        "type": "array"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/presentations"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "templates",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGoogleSlides.Template.Landscapetype": {
                "properties": {
                    "contents": {
                        "properties": {
                            "url": {
                                "format": "iri",
                                "title": "URL of the image",
                                "description": "If there is a problem with the image, the message below may appear.\nYou must insert only existing images, and if the image is too small, you can spit out errors, so insert an image of the appropriate size or create it yourself to insert the image.\nThe first error below is when the image does not exist, and the second is when the size or format of the image is not valid. The image must be in jpg, jpeg, and png formats.\n\n1. The provided image was not found.\n2. There was a problem retrieving the image. The provided image should be publicly accessible, within size limit, and in supported formats.",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text corresponding to the image",
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.InsertText"
                            }
                        },
                        "required": [
                            "url",
                            "text"
                        ],
                        "title": "Contents of the slide",
                        "type": "object"
                    }
                },
                "required": [
                    "contents"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleSlides.AppendSquareSlideInput": {
                "properties": {
                    "templates": {
                        "title": "templates",
                        "description": "As a slide to add, this template arrangement consists of the same type of template.\nTemplates have unconditional text except for the Entire type, and the image and text are paired.\nWhen the user creates a storyline, the text may be concise, but if it means a fairy tale book, a cartoon, or a speech bubble,\nit is better to substitute a text of sufficient length to grasp the context of the story even if viewed again later.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGoogleSlides.Template.Squaretype"
                        },
                        "type": "array"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/presentations"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "templates",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGoogleSlides.Template.Squaretype": {
                "properties": {
                    "contents": {
                        "properties": {
                            "url": {
                                "format": "iri",
                                "title": "URL of the image",
                                "description": "If there is a problem with the image, the message below may appear.\nYou must insert only existing images, and if the image is too small, you can spit out errors, so insert an image of the appropriate size or create it yourself to insert the image.\nThe first error below is when the image does not exist, and the second is when the size or format of the image is not valid. The image must be in jpg, jpeg, and png formats.\n\n1. The provided image was not found.\n2. There was a problem retrieving the image. The provided image should be publicly accessible, within size limit, and in supported formats.",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text corresponding to the image",
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.InsertText"
                            }
                        },
                        "required": [
                            "url",
                            "text"
                        ],
                        "title": "Contents of the slide",
                        "type": "object"
                    }
                },
                "required": [
                    "contents"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleSlides.AppendVerticalSlideInput": {
                "properties": {
                    "templates": {
                        "title": "templates",
                        "description": "As a slide to add, this template arrangement consists of the same type of template.\nTemplates have unconditional text except for the Entire type, and the image and text are paired.\nWhen the user creates a storyline, the text may be concise, but if it means a fairy tale book, a cartoon, or a speech bubble,\nit is better to substitute a text of sufficient length to grasp the context of the story even if viewed again later.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGoogleSlides.Template.Verticaltype"
                        },
                        "type": "array"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/presentations"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "templates",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGoogleSlides.Template.Verticaltype": {
                "properties": {
                    "contents": {
                        "properties": {
                            "url": {
                                "format": "iri",
                                "title": "URL of the image",
                                "description": "If there is a problem with the image, the message below may appear.\nYou must insert only existing images, and if the image is too small, you can spit out errors, so insert an image of the appropriate size or create it yourself to insert the image.\nThe first error below is when the image does not exist, and the second is when the size or format of the image is not valid. The image must be in jpg, jpeg, and png formats.\n\n1. The provided image was not found.\n2. There was a problem retrieving the image. The provided image should be publicly accessible, within size limit, and in supported formats.",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text corresponding to the image",
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.InsertText"
                            }
                        },
                        "required": [
                            "url",
                            "text"
                        ],
                        "title": "Contents of the slide",
                        "type": "object"
                    }
                },
                "required": [
                    "contents"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleSlides.AppendSlideInput": {
                "properties": {
                    "templates": {
                        "title": "A list of templates to create at once",
                        "description": "When creating a story or picture book, please use only squares.",
                        "items": {
                            "discriminator": {
                                "mapping": {
                                    "Vertical": "#/components/schemas/IGoogleSlides.Template.Vertical",
                                    "Square": "#/components/schemas/IGoogleSlides.Template.Square",
                                    "Landscape": "#/components/schemas/IGoogleSlides.Template.Landscape",
                                    "Entire": "#/components/schemas/IGoogleSlides.Template.Entire",
                                    "QuarterDivision": "#/components/schemas/IGoogleSlides.Template.QuarterDivision"
                                },
                                "propertyName": "type"
                            },
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.Template.Vertical"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.Template.Square"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.Template.Landscape"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.Template.Entire"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.Template.QuarterDivision"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/presentations"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "templates",
                    "secretKey"
                ],
                "title": "Request DTO for pasting slides",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSlides.Template.Vertical": {
                "properties": {
                    "type": {
                        "title": "The type of the template\n\ntype must be \"Vertical\"",
                        "const": "Vertical"
                    },
                    "contents": {
                        "properties": {
                            "url": {
                                "format": "iri",
                                "title": "URL of the image",
                                "description": "If there is a problem with the image, the message below may appear.\nYou must insert only existing images, and if the image is too small, you can spit out errors, so insert an image of the appropriate size or create it yourself to insert the image.\nThe first error below is when the image does not exist, and the second is when the size or format of the image is not valid. The image must be in jpg, jpeg, and png formats.\n\n1. The provided image was not found.\n2. There was a problem retrieving the image. The provided image should be publicly accessible, within size limit, and in supported formats.",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text corresponding to the image",
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.InsertText"
                            }
                        },
                        "required": [
                            "url",
                            "text"
                        ],
                        "title": "Contents of the slide",
                        "type": "object"
                    }
                },
                "required": [
                    "type",
                    "contents"
                ],
                "title": "vertical",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSlides.Template.Square": {
                "properties": {
                    "type": {
                        "title": "The type of the template\n\ntype must be \"Square\".",
                        "const": "Square"
                    },
                    "contents": {
                        "properties": {
                            "url": {
                                "format": "iri",
                                "title": "URL of the image",
                                "description": "If there is a problem with the image, the message below may appear.\nYou must insert only existing images, and if the image is too small, you can spit out errors, so insert an image of the appropriate size or create it yourself to insert the image.\nThe first error below is when the image does not exist, and the second is when the size or format of the image is not valid. The image must be in jpg, jpeg, and png formats.\n\n1. The provided image was not found.\n2. There was a problem retrieving the image. The provided image should be publicly accessible, within size limit, and in supported formats.",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text corresponding to the image",
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.InsertText"
                            }
                        },
                        "required": [
                            "url",
                            "text"
                        ],
                        "title": "Contents of the slide",
                        "type": "object"
                    }
                },
                "required": [
                    "type",
                    "contents"
                ],
                "title": "Square",
                "description": "When creating a story or picture book, please use only squares.",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSlides.Template.Landscape": {
                "properties": {
                    "type": {
                        "title": "The type of the template\n\ntype must be \"Landscape\".",
                        "const": "Landscape"
                    },
                    "contents": {
                        "properties": {
                            "url": {
                                "format": "iri",
                                "title": "URL of the image",
                                "description": "If there is a problem with the image, the message below may appear.\nYou must insert only existing images, and if the image is too small, you can spit out errors, so insert an image of the appropriate size or create it yourself to insert the image.\nThe first error below is when the image does not exist, and the second is when the size or format of the image is not valid. The image must be in jpg, jpeg, and png formats.\n\n1. The provided image was not found.\n2. There was a problem retrieving the image. The provided image should be publicly accessible, within size limit, and in supported formats.",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text corresponding to the image",
                                "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.InsertText"
                            }
                        },
                        "required": [
                            "url",
                            "text"
                        ],
                        "title": "Contents of the slide",
                        "type": "object"
                    }
                },
                "required": [
                    "type",
                    "contents"
                ],
                "title": "Horizontal",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSlides.Template.Entire": {
                "properties": {
                    "type": {
                        "title": "The type of the template\n\ntype must be \"Entire\".",
                        "const": "Entire"
                    },
                    "contents": {
                        "properties": {
                            "url": {
                                "format": "iri",
                                "title": "URL of the image",
                                "description": "If there is a problem with the image, the message below may appear.\nYou must insert only existing images, and if the image is too small, you can spit out errors, so insert an image of the appropriate size or create it yourself to insert the image.\nThe first error below is when the image does not exist, and the second is when the size or format of the image is not valid. The image must be in jpg, jpeg, and png formats.\n\n1. The provided image was not found.\n2. There was a problem retrieving the image. The provided image should be publicly accessible, within size limit, and in supported formats.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "url"
                        ],
                        "title": "Contents of the slide",
                        "type": "object"
                    }
                },
                "required": [
                    "type",
                    "contents"
                ],
                "title": "View all Horizontal (16:9)",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSlides.Template.QuarterDivision": {
                "properties": {
                    "type": {
                        "title": "The type of the template\n\ntype must be \"QuarterDivision\".",
                        "const": "QuarterDivision"
                    },
                    "contents": {
                        "minItems": 4,
                        "maxItems": 4,
                        "title": "Contents of the slide",
                        "description": "Here, like a four-cut cartoon, four images and four texts must be put in, so the length of the arrangement must be 4.\nTherefore, you must prepare in advance by receiving or generating four images.",
                        "items": {
                            "properties": {
                                "url": {
                                    "format": "iri",
                                    "title": "URL of the image",
                                    "description": "If there is a problem with the image, the message below may appear.\nYou must insert only existing images, and if the image is too small, you can spit out errors, so insert an image of the appropriate size or create it yourself to insert the image.\nThe first error below is when the image does not exist, and the second is when the size or format of the image is not valid. The image must be in jpg, jpeg, and png formats.\n\n1. The provided image was not found.\n2. There was a problem retrieving the image. The provided image should be publicly accessible, within size limit, and in supported formats.",
                                    "type": "string"
                                },
                                "text": {
                                    "title": "Text corresponding to the image",
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleSlides.InsertText"
                                }
                            },
                            "required": [
                                "url",
                                "text"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "type",
                    "contents"
                ],
                "title": "4-part square (cut cartoon type)",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSlides.ICreatePresentationInput": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/presentations"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "title": {
                        "title": "The title of the presentation",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "secretKey"
                ],
                "title": "Request DTO for generating a presentation in Google Slides",
                "type": "object"
            },
            "_namespace_swagger.IImweb.Product": {
                "properties": {
                    "no": {
                        "title": "Product number",
                        "type": "number"
                    },
                    "prod_status": {
                        "title": "Status of product",
                        "oneOf": [
                            {
                                "title": "판매중",
                                "const": "sale"
                            },
                            {
                                "title": "품절",
                                "const": "soldout"
                            },
                            {
                                "title": "숨김",
                                "const": "nosale"
                            }
                        ]
                    },
                    "categories": {
                        "title": "Category codes",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "custom_prod_code": {
                        "title": "Custom product code",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "name": {
                        "title": "Name of product",
                        "type": "string"
                    },
                    "images": {
                        "title": "File code of product images",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "image_url": {
                        "title": "File urls\n\nCan't call it right away because it's not a completed URL.",
                        "items": {
                            "format": "iri",
                            "contentMediaType": "image/*",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "content": {
                        "title": "Detailed description",
                        "type": "string"
                    },
                    "simple_content": {
                        "title": "Simple description of product's content",
                        "description": "Text that contains html tags and is generally difficult to use",
                        "type": "string"
                    },
                    "simple_content_plain": {
                        "title": "Simple description of product's content",
                        "description": "Pure string except html tag",
                        "type": "string"
                    },
                    "use_mobile_prod_content": {
                        "title": "Whether or not mobile details are used",
                        "type": "boolean"
                    },
                    "mobile_content": {
                        "title": "Description of mobile details",
                        "type": "string"
                    },
                    "prod_type": {
                        "title": "Setting the sales method\n\nIt will be 'normal', 'digital' and 'subscribe' product.",
                        "oneOf": [
                            {
                                "title": "일반 상품",
                                "const": "normal"
                            },
                            {
                                "title": "디지털 상품",
                                "const": "digital"
                            },
                            {
                                "title": "회원그룹 이용권",
                                "const": "subscribe"
                            }
                        ]
                    },
                    "prod_type_data": {
                        "title": "Sales method data",
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IImweb.ProdTypeData.DigitalData"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IImweb.ProdTypeData.SubscribeData"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "use_pre_sale": {
                        "title": "Whether the sales period is set or not",
                        "type": "boolean"
                    },
                    "pre_sale_start_date": {
                        "title": "Timestamp for sale",
                        "type": "number"
                    },
                    "pre_sale_end_date": {
                        "title": "Timestamp is the end of the sale period",
                        "type": "number"
                    },
                    "price": {
                        "title": "Price",
                        "type": "number"
                    },
                    "price_org": {
                        "title": "The price before the discount",
                        "description": "To provide an experience as if the product was discounted,\nthe seller can also set the original price of the product differently from the actual price it sells.\nThis is a common sales promotion strategy in commerce.",
                        "type": "number"
                    },
                    "price_tax": {
                        "title": "Whether taxes are included or not",
                        "type": "boolean"
                    },
                    "price_none": {
                        "title": "Whether or not there is no price",
                        "type": "boolean"
                    },
                    "point": {
                        "title": "Set up a reserve",
                        "$ref": "#/components/schemas/_namespace_swagger.IImweb.PointConfigData"
                    },
                    "product_discount_options": {
                        "title": "Set Discount Usage",
                        "items": {
                            "oneOf": [
                                {
                                    "title": "Coupon",
                                    "const": "coupon"
                                },
                                {
                                    "title": "Points",
                                    "const": "point"
                                },
                                {
                                    "title": "Shopping Group Discount",
                                    "const": "shopping_group_dc"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "weight": {
                        "title": "Product Weight",
                        "type": "string"
                    },
                    "stock": {
                        "title": "Product Stock Information",
                        "$ref": "#/components/schemas/_namespace_swagger.IImweb.ProdStockConfigData"
                    },
                    "origin": {
                        "title": "Origin",
                        "type": "string"
                    },
                    "maker": {
                        "title": "Manufacturer",
                        "type": "string"
                    },
                    "brand": {
                        "title": "Brand",
                        "type": "string"
                    },
                    "badge": {
                        "title": "Badge Information",
                        "$ref": "#/components/schemas/_namespace_swagger.IImweb.ProdBadgeData"
                    },
                    "sync": {
                        "title": "External Integration Information",
                        "$ref": "#/components/schemas/_namespace_swagger.IImweb.ProdSyncData"
                    },
                    "etc": {
                        "title": "Miscellaneous Settings",
                        "$ref": "#/components/schemas/_namespace_swagger.IImweb.ProdEtcData"
                    },
                    "prodinfo": {
                        "title": "Product Information Disclosure\n\nType is not specified, so it is denoted as an array of `any`.",
                        "items": {},
                        "type": "array"
                    },
                    "is_exist_options": {
                        "title": "Existence of Product Options",
                        "oneOf": [
                            {
                                "title": "Options Exist",
                                "const": "Y"
                            },
                            {
                                "title": "Single Product",
                                "const": "N"
                            }
                        ]
                    },
                    "is_mix": {
                        "title": "Combination Option for Product",
                        "oneOf": [
                            {
                                "title": "Combination Option",
                                "const": "Y"
                            },
                            {
                                "title": "Single Option",
                                "const": "N"
                            }
                        ]
                    },
                    "add_time": {
                        "title": "Product Add Time Timestamp",
                        "type": "number"
                    },
                    "edit_time": {
                        "title": "Product Last Edit Time Timestamp",
                        "type": "number"
                    }
                },
                "required": [
                    "no",
                    "prod_status",
                    "categories",
                    "custom_prod_code",
                    "name",
                    "images",
                    "image_url",
                    "content",
                    "simple_content",
                    "simple_content_plain",
                    "use_mobile_prod_content",
                    "prod_type",
                    "use_pre_sale",
                    "price",
                    "price_tax",
                    "price_none",
                    "point",
                    "product_discount_options",
                    "weight",
                    "stock",
                    "origin",
                    "maker",
                    "brand",
                    "badge",
                    "sync",
                    "etc",
                    "prodinfo",
                    "is_exist_options",
                    "is_mix",
                    "add_time",
                    "edit_time"
                ],
                "type": "object"
            },
            "_namespace_swagger.IImweb.ProdTypeData.DigitalData": {
                "properties": {
                    "use_limit": {
                        "title": "Download Limit Setting",
                        "type": "boolean"
                    },
                    "period": {
                        "title": "Period Limit",
                        "type": "integer"
                    },
                    "maximum": {
                        "title": "Usage Limit",
                        "type": "integer"
                    }
                },
                "required": [
                    "use_limit",
                    "period",
                    "maximum"
                ],
                "type": "object"
            },
            "_namespace_swagger.IImweb.ProdTypeData.SubscribeData": {
                "properties": {
                    "group_code": {
                        "title": "Target Group Code",
                        "type": "string"
                    },
                    "period": {
                        "title": "Group Retention Period (Days)",
                        "type": "integer"
                    }
                },
                "required": [
                    "group_code",
                    "period"
                ],
                "type": "object"
            },
            "_namespace_swagger.IImweb.PointConfigData": {
                "properties": {
                    "type": {
                        "title": "Point Configuration Type",
                        "oneOf": [
                            {
                                "title": "Default Settings",
                                "const": "common"
                            },
                            {
                                "title": "Individual Point Settings",
                                "const": "individual"
                            }
                        ]
                    },
                    "value_type": {
                        "title": "Point Accumulation Unit",
                        "oneOf": [
                            {
                                "title": "Percentage",
                                "const": "percent"
                            },
                            {
                                "title": "Currency Unit",
                                "const": "price"
                            }
                        ]
                    },
                    "value": {
                        "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                        "title": "Point Value\n\nCalculated as a percentage if `value_type` is percent",
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ],
                "title": "Point Configuration Data Structure",
                "type": "object"
            },
            "_namespace_swagger.IImweb.ProdStockConfigData": {
                "properties": {
                    "stock_use": {
                        "title": "Use Stock",
                        "type": "boolean"
                    },
                    "stock_unlimit": {
                        "title": "Allow Orders After Stock Depletion",
                        "type": "boolean"
                    },
                    "stock_no_option": {
                        "title": "Product Stock Quantity",
                        "oneOf": [
                            {
                                "const": ""
                            },
                            {
                                "type": "integer"
                            }
                        ]
                    },
                    "sku_no_option": {
                        "title": "Product Stock Number (SKU)",
                        "oneOf": [
                            {
                                "const": ""
                            },
                            {
                                "type": "integer"
                            }
                        ]
                    }
                },
                "required": [
                    "stock_use",
                    "stock_unlimit",
                    "stock_no_option",
                    "sku_no_option"
                ],
                "title": "Product Stock Information Data Structure",
                "type": "object"
            },
            "_namespace_swagger.IImweb.ProdBadgeData": {
                "properties": {
                    "new": {
                        "title": "New Product",
                        "type": "boolean"
                    },
                    "best": {
                        "title": "Best Product",
                        "type": "boolean"
                    },
                    "md": {
                        "title": "MD Recommended",
                        "type": "boolean"
                    },
                    "hot": {
                        "title": "High Demand",
                        "type": "boolean"
                    }
                },
                "required": [
                    "new",
                    "best",
                    "md",
                    "hot"
                ],
                "title": "Badge Information Data Structure",
                "type": "object"
            },
            "_namespace_swagger.IImweb.ProdSyncData": {
                "properties": {
                    "pay_product_name": {
                        "title": "Product Name for Naver and Kakao Shopping Exposure",
                        "type": "string"
                    },
                    "event_words": {
                        "title": "Naver Shopping Event Phrase",
                        "type": "string"
                    },
                    "naver_category": {
                        "title": "Naver Shopping Category ID",
                        "type": "string"
                    },
                    "product_flag": {
                        "title": "Naver Shopping Sales Method",
                        "oneOf": [
                            {
                                "title": "Retail",
                                "const": "소매"
                            },
                            {
                                "title": "Wholesale",
                                "const": "도매"
                            },
                            {
                                "title": "Rental",
                                "const": "렌탈"
                            },
                            {
                                "title": "Lease",
                                "const": "대여"
                            },
                            {
                                "title": "Installment",
                                "const": "할부"
                            },
                            {
                                "title": "Pre-order",
                                "const": "예약판매"
                            },
                            {
                                "title": "Buying Agent",
                                "const": "구매대행"
                            }
                        ]
                    },
                    "product_condition": {
                        "title": "Naver Shopping Product Condition",
                        "oneOf": [
                            {
                                "title": "New",
                                "const": "신상품"
                            },
                            {
                                "title": "Used",
                                "const": "중고"
                            },
                            {
                                "title": "Refurbished",
                                "const": "리퍼"
                            },
                            {
                                "title": "Exhibition",
                                "const": "전시"
                            },
                            {
                                "title": "Returned",
                                "const": "반품"
                            },
                            {
                                "title": "Scratch",
                                "const": "스크래치"
                            }
                        ]
                    },
                    "import_flag": {
                        "title": "Overseas Buying Agent",
                        "type": "boolean"
                    },
                    "parallel_import": {
                        "title": "Parallel Import",
                        "type": "boolean"
                    },
                    "is_culture_benefit": {
                        "title": "Cultural Performance Income Deduction",
                        "type": "boolean"
                    },
                    "order_made": {
                        "title": "Made to Order",
                        "type": "boolean"
                    }
                },
                "required": [
                    "pay_product_name",
                    "event_words",
                    "naver_category",
                    "product_flag",
                    "product_condition",
                    "import_flag",
                    "parallel_import",
                    "is_culture_benefit",
                    "order_made"
                ],
                "title": "External Integration Information Data Structure",
                "type": "object"
            },
            "_namespace_swagger.IImweb.ProdEtcData": {
                "properties": {
                    "minimum_purchase_quantity": {
                        "title": "Minimum Purchase Quantity",
                        "type": "integer"
                    },
                    "maximum_purchase_quantity": {
                        "title": "Maximum Quantity per Purchase",
                        "type": "integer"
                    },
                    "member_maximum_purchase_quantity": {
                        "title": "Maximum Quantity per Member Purchase",
                        "type": "integer"
                    },
                    "optional_limit_type": {
                        "title": "Maximum Purchase Quantity Limit Type for Free Options",
                        "oneOf": [
                            {
                                "title": "Can Purchase as Much as the Main Product",
                                "const": "relative"
                            },
                            {
                                "title": "Maximum Purchase Quantity Limit",
                                "const": "limit"
                            },
                            {
                                "title": "Can Purchase Only One",
                                "const": "unique"
                            }
                        ]
                    },
                    "optional_limit": {
                        "title": "Maximum Purchase Quantity for Free Options\n\nMaximum Purchase Quantity Limit",
                        "type": "integer"
                    },
                    "use_unipass_number": {
                        "oneOf": [
                            {
                                "title": "Follow Default Method",
                                "description": "May vary depending on shopping environment settings",
                                "const": "default"
                            },
                            {
                                "title": "Use",
                                "const": "Y"
                            },
                            {
                                "title": "Do Not Use",
                                "const": "N"
                            }
                        ]
                    },
                    "adult": {
                        "title": "Minor Purchase Restriction",
                        "type": "boolean"
                    }
                },
                "required": [
                    "minimum_purchase_quantity",
                    "maximum_purchase_quantity",
                    "member_maximum_purchase_quantity",
                    "optional_limit_type",
                    "use_unipass_number",
                    "adult"
                ],
                "title": "Miscellaneous Settings Data Structure",
                "type": "object"
            },
            "_namespace_swagger.IImweb.IGetProductInput": {
                "properties": {
                    "prod_status": {
                        "description": "You can deliver the value when you want to inquire based on the sales status of the product.\nYou can select 'sale', 'soldout', 'nosale'.",
                        "title": "the sales status of a product",
                        "oneOf": [
                            {
                                "title": "판매중",
                                "const": "sale"
                            },
                            {
                                "title": "품절",
                                "const": "soldout"
                            },
                            {
                                "title": "숨김",
                                "const": "nosale"
                            }
                        ]
                    },
                    "category": {
                        "title": "product category code",
                        "description": "You can also search with the product's category code,\nbut this code is randomly determined by `Imweb`, so it's currently unavailable.\nIf you don't know the exact category code, it's better not to use it.",
                        "type": "string"
                    },
                    "key": {
                        "title": "API Key\n\nThis can be found in the configuration settings on the `Imweb`.",
                        "type": "string"
                    },
                    "secret": {
                        "title": "API Secret Key\n\nThis can be found in the configuration settings on the `Imweb`.",
                        "type": "string"
                    }
                },
                "required": [
                    "key",
                    "secret"
                ],
                "title": "Product Inquiry Request",
                "type": "object"
            },
            "_namespace_swagger.IImweb.IGetAccessTokenOutput": {
                "properties": {
                    "msg": {
                        "title": "Response Message",
                        "const": "SUCCESS"
                    },
                    "code": {
                        "title": "IMWEB Custom Code",
                        "const": 200
                    },
                    "http_code": {
                        "title": "HTTP Status Code",
                        "const": 200
                    },
                    "access_token": {
                        "title": "Access Token",
                        "type": "string"
                    }
                },
                "required": [
                    "msg",
                    "code",
                    "http_code",
                    "access_token"
                ],
                "title": "Imweb Token Issuance Request Response DTO",
                "type": "object"
            },
            "_namespace_swagger.IImweb.Credential": {
                "properties": {
                    "key": {
                        "title": "API Key\n\nThis can be found in the configuration settings on the `Imweb`.",
                        "type": "string"
                    },
                    "secret": {
                        "title": "API Secret Key\n\nThis can be found in the configuration settings on the `Imweb`.",
                        "type": "string"
                    }
                },
                "required": [
                    "key",
                    "secret"
                ],
                "title": "Imweb Access Token Request DTO",
                "description": "An API Key and Secret Key must be issued first to use the Rest API.\nThese keys are generated on a site-by-site basis.",
                "type": "object"
            },
            "_namespace_swagger.IMSIT.IGetAddressOutput": {
                "properties": {
                    "NewAddressListResponse": {
                        "properties": {
                            "cmmMsgHeader": {
                                "properties": {
                                    "totalCount": {
                                        "title": "totalCount",
                                        "type": "integer"
                                    },
                                    "countPerPage": {
                                        "title": "countPerPage",
                                        "type": "integer"
                                    },
                                    "totalPage": {
                                        "title": "totalPage",
                                        "type": "integer"
                                    },
                                    "errMsg": {
                                        "title": "error message",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "newAddressListAreaCd": {
                                "title": "Address Data\n\nIf there is no data, the key itself does not exist, so in this case, there are no search results.",
                                "items": {
                                    "properties": {
                                        "zipNo": {
                                            "title": "Postal address",
                                            "type": "string"
                                        },
                                        "lnmAdres": {
                                            "title": "street address",
                                            "type": "string"
                                        },
                                        "rnAdres": {
                                            "title": "Road name address",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "zipNo",
                                        "lnmAdres",
                                        "rnAdres"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "cmmMsgHeader"
                        ],
                        "title": "NewAddressListResponse\n\nSection containing header information for the response result",
                        "type": "object"
                    }
                },
                "required": [
                    "NewAddressListResponse"
                ],
                "type": "object"
            },
            "_namespace_swagger.IMSIT.IGetAddressInput": {
                "properties": {
                    "srchwrd": {
                        "minLength": 1,
                        "maxLength": 200,
                        "title": "search term",
                        "type": "string"
                    },
                    "countPerPage": {
                        "title": "Number of outputs per page",
                        "type": "integer"
                    },
                    "currentPage": {
                        "title": "Page number to be printed",
                        "type": "integer"
                    }
                },
                "required": [
                    "srchwrd"
                ],
                "type": "object"
            },
            "_namespace_swagger.IMOLIT.IgetRTMSDataSvcSHRentOutput": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIMOLIT.BuildingLentInfoapartmentexclusiveArealotNumberfloor"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "nextPage\n\nIndicates whether the next page exists",
                        "type": "boolean"
                    }
                },
                "required": [
                    "data",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIMOLIT.BuildingLentInfoapartmentexclusiveArealotNumberfloor": {
                "properties": {
                    "day": {
                        "title": "day",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "minimum": 1,
                                "maximum": 31,
                                "type": "integer"
                            }
                        ]
                    },
                    "month": {
                        "title": "month",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "minimum": 1,
                                "maximum": 12,
                                "type": "integer"
                            }
                        ]
                    },
                    "year": {
                        "title": "year",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "useOfRenewalRight": {
                        "title": "Use of renewal request right",
                        "type": "string"
                    },
                    "yearOfConstruction": {
                        "title": "Year of construction",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "typeOfContract": {
                        "title": "Contract type",
                        "type": "string"
                    },
                    "contractPeriod": {
                        "title": "Contract period",
                        "type": "string"
                    },
                    "legalDistrict": {
                        "title": "Beopjeong-dong",
                        "type": "string"
                    },
                    "depositAmount": {
                        "title": "Deposit amount\n\nSince it is based on Korean currency, it will be in ten thousand won in most cases.",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "monthlyRentAmount": {
                        "title": "Monthly rent\n\nSince it is based on Korean currency, it will be in ten thousand won in most cases.",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "integer"
                            }
                        ]
                    },
                    "previousContractDeposit": {
                        "title": "Previous contract deposit",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "previousContractMonthlyRent": {
                        "title": "Previous contract monthly rent",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "areaCode": {
                        "title": "area code",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    }
                },
                "required": [
                    "day",
                    "month",
                    "year",
                    "useOfRenewalRight",
                    "typeOfContract",
                    "contractPeriod",
                    "legalDistrict",
                    "depositAmount",
                    "monthlyRentAmount",
                    "previousContractDeposit",
                    "previousContractMonthlyRent",
                    "areaCode"
                ],
                "type": "object"
            },
            "_namespace_swagger.IMOLIT.IGetRTMSDataSvcAptRentInput": {
                "properties": {
                    "LAWD_CD": {
                        "title": "City/county/district code",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "rows[].{value:sigunguCd, label:sigunguNm}",
                            "method": "post",
                            "path": "/connector/open-data/getStandardRegionCodeList"
                        },
                        "type": "string"
                    },
                    "DEAL_YMD": {
                        "title": "Contract year and month of actual transaction data (6 digits)",
                        "x-wrtn-placeholder": "202201",
                        "type": "string"
                    },
                    "page": {
                        "title": "page",
                        "type": "integer"
                    },
                    "limit": {
                        "minimum": 1,
                        "maximum": 20,
                        "title": "limit",
                        "type": "integer"
                    }
                },
                "required": [
                    "LAWD_CD",
                    "DEAL_YMD",
                    "page",
                    "limit"
                ],
                "type": "object"
            },
            "_namespace_swagger.IMOLIT.IGetRTMSDataSvcOffiRentOutput": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIMOLIT.BuildingLentInfoapartmentyearOfConstructiondepositAmountmonthlyRentAmount"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "nextPage\n\nIndicates whether the next page exists",
                        "type": "boolean"
                    }
                },
                "required": [
                    "data",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIMOLIT.BuildingLentInfoapartmentyearOfConstructiondepositAmountmonthlyRentAmount": {
                "properties": {
                    "day": {
                        "title": "day",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "minimum": 1,
                                "maximum": 31,
                                "type": "integer"
                            }
                        ]
                    },
                    "month": {
                        "title": "month",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "minimum": 1,
                                "maximum": 12,
                                "type": "integer"
                            }
                        ]
                    },
                    "year": {
                        "title": "year",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "exclusiveArea": {
                        "title": "Exclusive area",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "lotNumber": {
                        "title": "Address",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "integer"
                            }
                        ]
                    },
                    "floor": {
                        "title": "floor",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "integer"
                            }
                        ]
                    },
                    "useOfRenewalRight": {
                        "title": "Use of renewal request right",
                        "type": "string"
                    },
                    "typeOfContract": {
                        "title": "Contract type",
                        "type": "string"
                    },
                    "contractPeriod": {
                        "title": "Contract period",
                        "type": "string"
                    },
                    "legalDistrict": {
                        "title": "Beopjeong-dong",
                        "type": "string"
                    },
                    "previousContractDeposit": {
                        "title": "Previous contract deposit",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "previousContractMonthlyRent": {
                        "title": "Previous contract monthly rent",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "areaCode": {
                        "title": "area code",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    }
                },
                "required": [
                    "day",
                    "month",
                    "year",
                    "exclusiveArea",
                    "lotNumber",
                    "floor",
                    "useOfRenewalRight",
                    "typeOfContract",
                    "contractPeriod",
                    "legalDistrict",
                    "previousContractDeposit",
                    "previousContractMonthlyRent",
                    "areaCode"
                ],
                "type": "object"
            },
            "_namespace_swagger.IMOLIT.IGetRTMSDataSvcAptRentOutput": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IMOLIT.BuildingLentInfo"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "nextPage\n\nIndicates whether the next page exists",
                        "type": "boolean"
                    }
                },
                "required": [
                    "data",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.IMOLIT.BuildingLentInfo": {
                "properties": {
                    "useOfRenewalRight": {
                        "title": "Use of renewal request right",
                        "type": "string"
                    },
                    "yearOfConstruction": {
                        "title": "Year of construction",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "typeOfContract": {
                        "title": "Contract type",
                        "type": "string"
                    },
                    "contractPeriod": {
                        "title": "Contract period",
                        "type": "string"
                    },
                    "year": {
                        "title": "year",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "legalDistrict": {
                        "title": "Beopjeong-dong",
                        "type": "string"
                    },
                    "depositAmount": {
                        "title": "Deposit amount\n\nSince it is based on Korean currency, it will be in ten thousand won in most cases.",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "apartment": {
                        "title": "Apartment",
                        "type": "string"
                    },
                    "month": {
                        "title": "month",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "minimum": 1,
                                "maximum": 12,
                                "type": "integer"
                            }
                        ]
                    },
                    "monthlyRentAmount": {
                        "title": "Monthly rent\n\nSince it is based on Korean currency, it will be in ten thousand won in most cases.",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "integer"
                            }
                        ]
                    },
                    "day": {
                        "title": "day",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "minimum": 1,
                                "maximum": 31,
                                "type": "integer"
                            }
                        ]
                    },
                    "exclusiveArea": {
                        "title": "Exclusive area",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "previousContractDeposit": {
                        "title": "Previous contract deposit",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "previousContractMonthlyRent": {
                        "title": "Previous contract monthly rent",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "lotNumber": {
                        "title": "Address",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "integer"
                            }
                        ]
                    },
                    "areaCode": {
                        "title": "area code",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "floor": {
                        "title": "floor",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "integer"
                            }
                        ]
                    }
                },
                "required": [
                    "useOfRenewalRight",
                    "typeOfContract",
                    "contractPeriod",
                    "year",
                    "legalDistrict",
                    "depositAmount",
                    "apartment",
                    "month",
                    "monthlyRentAmount",
                    "day",
                    "exclusiveArea",
                    "previousContractDeposit",
                    "previousContractMonthlyRent",
                    "lotNumber",
                    "areaCode",
                    "floor"
                ],
                "type": "object"
            },
            "_namespace_swagger.ILH.IGetLHLeaseInfoOutput": {
                "properties": {
                    "nextPage": {
                        "title": "Next page availability",
                        "type": "boolean"
                    },
                    "data": {
                        "items": {
                            "properties": {
                                "SUM_HSH_CNT": {
                                    "title": "Total number of households",
                                    "x-wrtn-placeholder": "873",
                                    "type": "string"
                                },
                                "RFE": {
                                    "title": "Monthly rent (won)",
                                    "x-wrtn-placeholder": "373500",
                                    "type": "string"
                                },
                                "RNUM": {
                                    "title": "order",
                                    "x-wrtn-placeholder": "1",
                                    "type": "string"
                                },
                                "HSH_CNT": {
                                    "title": "Number of generations",
                                    "x-wrtn-placeholder": "72",
                                    "type": "string"
                                },
                                "ARA_NM": {
                                    "title": "Region name",
                                    "x-wrtn-placeholder": "서울특별시 강남구",
                                    "type": "string"
                                },
                                "LS_GMY": {
                                    "title": "Rental Deposit",
                                    "x-wrtn-placeholder": "45003000",
                                    "type": "string"
                                },
                                "AIS_TP_CD_NM": {
                                    "title": "Supply type name",
                                    "x-wrtn-placeholder": "국민임대",
                                    "type": "string"
                                },
                                "SBD_LGO_NM": {
                                    "title": "Name of the unit",
                                    "x-wrtn-placeholder": "서울강남 3블록",
                                    "type": "string"
                                },
                                "ALL_CNT": {
                                    "title": "Total number",
                                    "x-wrtn-placeholder": "157",
                                    "type": "string"
                                },
                                "DDO_AR": {
                                    "title": "Exclusive area",
                                    "x-wrtn-placeholder": "46.71",
                                    "type": "string"
                                },
                                "MVIN_XPC_YM": {
                                    "title": "First year of residency",
                                    "x-wrtn-placeholder": "201311",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "SUM_HSH_CNT",
                                "RFE",
                                "RNUM",
                                "HSH_CNT",
                                "ARA_NM",
                                "LS_GMY",
                                "AIS_TP_CD_NM",
                                "SBD_LGO_NM",
                                "ALL_CNT",
                                "DDO_AR",
                                "MVIN_XPC_YM"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "nextPage",
                    "data"
                ],
                "title": "LH rental housing inquiry response",
                "type": "object"
            },
            "_namespace_swagger.ILH.IGetLHLeaseInfoInput": {
                "properties": {
                    "CNP_CD": {
                        "description": "It can be one of these numbers:\n- 11: Seoul\n- 26: Busan\n- 27: Daegu\n- 28: Incheon\n- 29: Gwangju\n- 30: Daejeon\n- 31: Ulsan\n- 36110: Sejong\n- 41: Gyeonggi\n- 42: Gangwon\n- 43: Chungcheongbuk\n- 44: Chungcheongnam\n- 45: Jeollabuk\n- 46: Jeollanam\n- 47: Gyeongsangbuk\n- 48: Gyeongsangnam\n- 50: Jeju",
                        "title": "Area Code",
                        "oneOf": [
                            {
                                "title": "서울특별시",
                                "const": 11
                            },
                            {
                                "title": "부산광역시",
                                "const": 26
                            },
                            {
                                "title": "대구광역시",
                                "const": 27
                            },
                            {
                                "title": "인천광역시",
                                "const": 28
                            },
                            {
                                "title": "광주광역시",
                                "const": 29
                            },
                            {
                                "title": "대전광역시",
                                "const": 30
                            },
                            {
                                "title": "울산광역시",
                                "const": 31
                            },
                            {
                                "title": "경기도",
                                "const": 41
                            },
                            {
                                "title": "강원도",
                                "const": 42
                            },
                            {
                                "title": "충청북도",
                                "const": 43
                            },
                            {
                                "title": "충청남도",
                                "const": 44
                            },
                            {
                                "title": "전라북도",
                                "const": 45
                            },
                            {
                                "title": "전라남도",
                                "const": 46
                            },
                            {
                                "title": "경상북도",
                                "const": 47
                            },
                            {
                                "title": "경상남도",
                                "const": 48
                            },
                            {
                                "title": "제주특별자치도",
                                "const": 50
                            },
                            {
                                "title": "세종특별자치시",
                                "const": 36110
                            }
                        ]
                    },
                    "SPL_TP_CD": {
                        "description": "It can be one of these numbers:\n- 07: National Rental\n- 08: Public Rental\n- 09: Permanent Rental\n- 10: Happy Housing\n- 11: Long-term Lease\n- 13: Purchase Lease\n- 17: Lease Lease",
                        "title": "Supply Type Code",
                        "oneOf": [
                            {
                                "title": "국민임대",
                                "const": "07"
                            },
                            {
                                "title": "공공임대",
                                "const": "08"
                            },
                            {
                                "title": "영구임대",
                                "const": "09"
                            },
                            {
                                "title": "행복주택",
                                "const": "10"
                            },
                            {
                                "title": "장기전세",
                                "const": "11"
                            },
                            {
                                "title": "매입임대",
                                "const": "13"
                            },
                            {
                                "title": "전세임대",
                                "const": "17"
                            }
                        ]
                    },
                    "numOfRows": {
                        "default": 10,
                        "title": "Number of results per page",
                        "type": "integer"
                    },
                    "pageNo": {
                        "default": 1,
                        "title": "Page number",
                        "type": "integer"
                    }
                },
                "required": [
                    "CNP_CD"
                ],
                "title": "LH rental housing search conditions",
                "type": "object"
            },
            "_namespace_swagger.INIA.IGetParkingLotOutput": {
                "properties": {
                    "parkingLots": {
                        "title": "Parking lot information",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.INIA.ParkingLot"
                        },
                        "type": "array"
                    },
                    "numOfRows": {
                        "default": 10,
                        "title": "Number of results per page",
                        "type": "integer"
                    },
                    "pageNo": {
                        "default": 1,
                        "title": "Page number",
                        "type": "integer"
                    },
                    "totalCount": {
                        "title": "Total number of records",
                        "type": "number"
                    }
                },
                "required": [
                    "parkingLots",
                    "totalCount"
                ],
                "title": "Parking lot inquiry response",
                "type": "object"
            },
            "_namespace_swagger.INIA.ParkingLot": {
                "properties": {
                    "prkplceNo": {
                        "title": "Parking lot management number",
                        "type": "string"
                    },
                    "prkplceNm": {
                        "title": "Parking lot name",
                        "type": "string"
                    },
                    "prkplceSe": {
                        "title": "Parking lot classification",
                        "type": "string"
                    },
                    "prkplceType": {
                        "title": "Parking lot type",
                        "type": "string"
                    },
                    "rdnmadr": {
                        "title": "road name address (read name address)",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "documents[].{value:road_address_name, label:road_address_name}",
                            "method": "post",
                            "path": "/connector/kakao-map/search"
                        },
                        "type": "string"
                    },
                    "lnmadr": {
                        "title": "Lot number address",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "documents[].{value:address_name, label:address_name}",
                            "method": "post",
                            "path": "/connector/kakao-map/search"
                        },
                        "type": "string"
                    },
                    "prkcmprt": {
                        "title": "Number of parking spaces",
                        "type": "string"
                    },
                    "feedingSe": {
                        "title": "Urgent Distinction",
                        "type": "string"
                    },
                    "enforceSe": {
                        "title": "Subtitle enforcement classification",
                        "type": "string"
                    },
                    "operDay": {
                        "title": "Operating days",
                        "type": "string"
                    },
                    "weekdayOperOpenHhmm": {
                        "title": "Weekday operation start time",
                        "type": "string"
                    },
                    "weekdayOperColseHhmm": {
                        "title": "Weekday operating closing time",
                        "type": "string"
                    },
                    "satOperOperOpenHhmm": {
                        "title": "Saturday operation start time",
                        "type": "string"
                    },
                    "satOperCloseHhmm": {
                        "title": "Saturday closing time",
                        "type": "string"
                    },
                    "holidayOperOpenHhmm": {
                        "title": "Holiday operation start time",
                        "type": "string"
                    },
                    "holidayCloseOpenHhmm": {
                        "title": "Holiday closing time",
                        "type": "string"
                    },
                    "parkingchrgeInfo": {
                        "title": "Rate information",
                        "type": "string"
                    },
                    "basicTime": {
                        "title": "Basic parking time",
                        "type": "string"
                    },
                    "basicCharge": {
                        "title": "Basic parking fee",
                        "type": "string"
                    },
                    "addUnitTime": {
                        "title": "Additional unit time",
                        "type": "string"
                    },
                    "addUnitCharge": {
                        "title": "Additional unit fee",
                        "type": "string"
                    },
                    "dayCmmtktAdjTime": {
                        "title": "1-day parking fee application time",
                        "type": "string"
                    },
                    "dayCmmtkt": {
                        "title": "1-day parking fee",
                        "type": "string"
                    },
                    "monthCmmtkt": {
                        "title": "Monthly pass fee",
                        "type": "string"
                    },
                    "metpay": {
                        "title": "Payment method",
                        "type": "string"
                    },
                    "spcmnt": {
                        "title": "Special Notes",
                        "type": "string"
                    },
                    "institutionNm": {
                        "title": "Management Agency Name",
                        "type": "string"
                    },
                    "phoneNumber": {
                        "title": "phone number",
                        "type": "string"
                    },
                    "latitude": {
                        "title": "Latitude",
                        "type": "string"
                    },
                    "longitude": {
                        "title": "Hardness",
                        "type": "string"
                    },
                    "pwdbsPpkZoneYn": {
                        "title": "Whether there is a parking area for the disabled",
                        "type": "string"
                    },
                    "referenceDate": {
                        "title": "Data reference date",
                        "type": "string"
                    },
                    "instt_code": {
                        "title": "Provider Code",
                        "type": "string"
                    },
                    "instt_nm": {
                        "title": "Provider Name of institution",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IPaginationInputMyPickParkingLotrdnmadr": {
                "properties": {
                    "numOfRows": {
                        "default": 10,
                        "title": "Number of results per page",
                        "type": "integer"
                    },
                    "pageNo": {
                        "default": 1,
                        "title": "Page number",
                        "type": "integer"
                    },
                    "rdnmadr": {
                        "title": "road name address (read name address)",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "documents[].{value:road_address_name, label:road_address_name}",
                            "method": "post",
                            "path": "/connector/kakao-map/search"
                        },
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IPaginationInputMyPickParkingLotlnmadr": {
                "properties": {
                    "numOfRows": {
                        "default": 10,
                        "title": "Number of results per page",
                        "type": "integer"
                    },
                    "pageNo": {
                        "default": 1,
                        "title": "Page number",
                        "type": "integer"
                    },
                    "lnmadr": {
                        "title": "Lot number address",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "documents[].{value:address_name, label:address_name}",
                            "method": "post",
                            "path": "/connector/kakao-map/search"
                        },
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IMOLIT.GetBuildingInfoOutput": {
                "properties": {
                    "bulidings": {
                        "title": "Building Information List",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IMOLIT.Building"
                        },
                        "type": "array"
                    },
                    "numOfRows": {
                        "default": 10,
                        "title": "Number of results per page",
                        "type": "integer"
                    },
                    "pageNo": {
                        "default": 1,
                        "title": "Page number",
                        "type": "integer"
                    },
                    "totalCount": {
                        "title": "Total number of records",
                        "type": "number"
                    }
                },
                "required": [
                    "bulidings",
                    "totalCount"
                ],
                "title": "Building Inquiry Response",
                "type": "object"
            },
            "_namespace_swagger.IMOLIT.Building": {
                "properties": {
                    "mainPurpsCdNm": {
                        "title": "Primary purpose code name",
                        "type": "string"
                    },
                    "etcPurps": {
                        "title": "Other uses",
                        "type": "string"
                    },
                    "roofCd": {
                        "title": "roof code",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "roofCdNm": {
                        "title": "Roof code name",
                        "type": "string"
                    },
                    "etcRoof": {
                        "title": "Guitar Roof",
                        "type": "string"
                    },
                    "hhldCnt": {
                        "title": "Number of generations (generation)",
                        "type": "number"
                    },
                    "fmlyCnt": {
                        "title": "Number of households (households)",
                        "type": "number"
                    },
                    "heit": {
                        "title": "Height (m)",
                        "type": "number"
                    },
                    "grndFlrCnt": {
                        "title": "Number of floors above ground",
                        "type": "number"
                    },
                    "ugrndFlrCnt": {
                        "title": "Basement floor",
                        "type": "number"
                    },
                    "rideUseElvtCnt": {
                        "title": "Elevator driver",
                        "type": "number"
                    },
                    "emgenUseElvtCnt": {
                        "title": "Emergency Elevator",
                        "type": "number"
                    },
                    "atchBldCnt": {
                        "title": "Number of auxiliary buildings",
                        "type": "number"
                    },
                    "atchBldArea": {
                        "title": "Area of attached building (㎡)",
                        "type": "number"
                    },
                    "totDongTotArea": {
                        "title": "Total floor area (㎡)",
                        "type": "number"
                    },
                    "indrMechUtcnt": {
                        "title": "Indoor machine counter (large)",
                        "type": "number"
                    },
                    "indrMechArea": {
                        "title": "Indoor mechanical area (㎡)",
                        "type": "number"
                    },
                    "oudrMechUtcnt": {
                        "title": "Outdoor mechanical counter (large)",
                        "type": "number"
                    },
                    "oudrMechArea": {
                        "title": "Outdoor mechanical area (㎡)",
                        "type": "number"
                    },
                    "indrAutoUtcnt": {
                        "title": "Indoor self-sufficient stock (large)",
                        "type": "number"
                    },
                    "indrAutoArea": {
                        "title": "Indoor self-sufficient area (㎡)",
                        "type": "number"
                    },
                    "oudrAutoUtcnt": {
                        "title": "Outdoor self-propelled vehicle (large)",
                        "type": "number"
                    },
                    "oudrAutoArea": {
                        "title": "Outdoor self-contained area (㎡)",
                        "type": "number"
                    },
                    "pmsDay": {
                        "title": "Permission Date",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "stcnsDay": {
                        "title": "Start date",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "useAprDay": {
                        "title": "Date of approval for use",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "pmsnoYear": {
                        "title": "License number year",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "pmsnoKikCd": {
                        "title": "License Number Agency Code",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "pmsnoKikCdNm": {
                        "title": "License Number Agency Code Name",
                        "type": "string"
                    },
                    "pmsnoGbCd": {
                        "title": "Permit number classification code",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "pmsnoGbCdNm": {
                        "title": "Permit number classification code name",
                        "type": "string"
                    },
                    "hoCnt": {
                        "title": "lake",
                        "type": "number"
                    },
                    "engrGrade": {
                        "title": "Energy Efficiency Rating",
                        "type": "string"
                    },
                    "engrRat": {
                        "title": "Energy saving rate",
                        "type": "number"
                    },
                    "engrEpi": {
                        "title": "EPI score",
                        "type": "number"
                    },
                    "gnBldGrade": {
                        "title": "Eco-friendly building rating",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "gnBldCert": {
                        "title": "Eco-friendly building certification score",
                        "type": "number"
                    },
                    "itgBldGrade": {
                        "title": "Intelligent Building Rating",
                        "type": "string"
                    },
                    "itgBldCert": {
                        "title": "Intelligent Building Certification Score",
                        "type": "number"
                    },
                    "crtnDay": {
                        "title": "Creation date",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "rnum": {
                        "title": "order",
                        "type": "number"
                    },
                    "platPlc": {
                        "title": "Earth location",
                        "type": "string"
                    },
                    "sigunguCd": {
                        "title": "City/county/district code",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "bjdongCd": {
                        "title": "Beopjeong-dong code",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "platGbCd": {
                        "title": "Earth Classification Code",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "bun": {
                        "title": "number",
                        "description": "One of the Korean address names",
                        "type": "string"
                    },
                    "ji": {
                        "title": "Ji",
                        "description": "One of the Korean address names",
                        "type": "string"
                    },
                    "mgmBldrgstPk": {
                        "title": "Management Building Register PK",
                        "type": "string"
                    },
                    "regstrGbCd": {
                        "title": "Colon Distinction Code",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "regstrGbCdNm": {
                        "title": "Colon division code name",
                        "type": "string"
                    },
                    "regstrKindCd": {
                        "title": "Colon type code",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "regstrKindCdNm": {
                        "title": "Colon type code name",
                        "type": "string"
                    },
                    "newPlatPlc": {
                        "title": "Road name site location",
                        "type": "string"
                    },
                    "bldNm": {
                        "title": "Building name",
                        "type": "string"
                    },
                    "splotNm": {
                        "title": "Special place name",
                        "type": "string"
                    },
                    "block": {
                        "title": "block",
                        "type": "string"
                    },
                    "lot": {
                        "title": "lot",
                        "type": "string"
                    },
                    "bylotCnt": {
                        "title": "External index",
                        "type": "number"
                    },
                    "naRoadCd": {
                        "title": "New address road code",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "naBjdongCd": {
                        "title": "New address law code",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "naUgrndCd": {
                        "title": "New address ground and underground code",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "naMainBun": {
                        "title": "New address number",
                        "type": "number"
                    },
                    "naSubBun": {
                        "title": "New address number",
                        "type": "number"
                    },
                    "dongNm": {
                        "title": "Same name",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "mainAtchGbCd": {
                        "title": "Main/Subordinate Classification Code",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "mainAtchGbCdNm": {
                        "title": "Main/Subordinate Code Name",
                        "type": "string"
                    },
                    "platArea": {
                        "title": "Land area (㎡)",
                        "type": "number"
                    },
                    "archArea": {
                        "title": "Building area (㎡)",
                        "type": "number"
                    },
                    "bcRat": {
                        "title": "Building coverage ratio (%)",
                        "type": "number"
                    },
                    "totArea": {
                        "title": "Total floor area (㎡)",
                        "type": "number"
                    },
                    "vlRatEstmTotArea": {
                        "title": "Floor area ratio calculation area (㎡)",
                        "type": "number"
                    },
                    "vlRat": {
                        "title": "Volume ratio (%)",
                        "type": "number"
                    },
                    "strctCd": {
                        "title": "Structure Code",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "strctCdNm": {
                        "title": "Structure code name",
                        "type": "string"
                    },
                    "etcStrct": {
                        "title": "Other Structures",
                        "type": "string"
                    },
                    "mainPurpsCd": {
                        "title": "Primary Purpose Code",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "rserthqkDsgnApplyYn": {
                        "title": "Whether earthquake-resistant design is applied",
                        "oneOf": [
                            {
                                "title": "미적용",
                                "const": 0
                            },
                            {
                                "title": "적용",
                                "const": 1
                            },
                            {
                                "title": "알 수 없음",
                                "const": " "
                            }
                        ]
                    },
                    "rserthqkAblty": {
                        "title": "seismic capacity",
                        "type": "string"
                    }
                },
                "required": [
                    "crtnDay",
                    "platPlc",
                    "sigunguCd",
                    "bjdongCd",
                    "mgmBldrgstPk"
                ],
                "type": "object"
            },
            "_namespace_swagger.IMOLIT.GetBuildingInfoInput": {
                "properties": {
                    "sigunguCd": {
                        "title": "City/county/district code",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "rows[].{value:sigunguCd, label:sigunguNm}",
                            "method": "post",
                            "path": "/connector/open-data/getStandardRegionCodeList"
                        },
                        "type": "string"
                    },
                    "bjdongCd": {
                        "title": "Beopjeong-dong Code",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "rows[].{value:sigunguCd, label:sigunguNm}",
                            "method": "post",
                            "path": "/connector/open-data/getStandardRegionCodeList"
                        },
                        "type": "string"
                    },
                    "numOfRows": {
                        "default": 10,
                        "title": "Number of results per page",
                        "type": "integer"
                    },
                    "pageNo": {
                        "default": 1,
                        "title": "Page number",
                        "type": "integer"
                    }
                },
                "required": [
                    "sigunguCd",
                    "bjdongCd"
                ],
                "title": "Building search conditions",
                "type": "object"
            },
            "_namespace_swagger.IOpenData.MinistryOfTheInteriorAndSafety.IGetStandardRegionCodeListOutput": {
                "properties": {
                    "rows": {
                        "items": {
                            "properties": {
                                "region_cd": {
                                    "title": "Region code",
                                    "type": "string"
                                },
                                "sido_cd": {
                                    "title": "City code",
                                    "type": "string"
                                },
                                "sgg_cd": {
                                    "title": "District code",
                                    "type": "string"
                                },
                                "sigunguCd": {
                                    "title": "City and District Code",
                                    "description": "Combination of city code and district code",
                                    "type": "string"
                                },
                                "sigunguNm": {
                                    "title": "District name",
                                    "type": "string"
                                },
                                "umd_cd": {
                                    "title": "Town/Village code",
                                    "type": "string"
                                },
                                "ri_cd": {
                                    "title": "Ri code",
                                    "type": "string"
                                },
                                "bjdongCd": {
                                    "title": "Legal Dong code",
                                    "description": "Combination of Town/Village code and Ri code",
                                    "type": "string"
                                },
                                "locatjumin_cd": {
                                    "title": "Resident region code",
                                    "type": "string"
                                },
                                "locatjijuk_cd": {
                                    "title": "Land region code",
                                    "type": "string"
                                },
                                "locatadd_nm": {
                                    "title": "Region address name",
                                    "type": "string"
                                },
                                "locat_order": {
                                    "title": "Sequence",
                                    "type": "integer"
                                },
                                "locat_rm": {
                                    "title": "Remark",
                                    "type": "string"
                                },
                                "locathigh_cd": {
                                    "title": "Parent region code",
                                    "type": "string"
                                },
                                "locallow_nm": {
                                    "title": "Lowest region name",
                                    "type": "string"
                                },
                                "adpt_de": {
                                    "title": "Date of creation",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "region_cd",
                                "sigunguNm"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "numOfRows": {
                        "default": 10,
                        "title": "Number of results per page",
                        "type": "integer"
                    },
                    "pageNo": {
                        "default": 1,
                        "title": "Page number",
                        "type": "integer"
                    },
                    "totalCount": {
                        "title": "Total number of records",
                        "type": "number"
                    }
                },
                "required": [
                    "rows",
                    "totalCount"
                ],
                "title": "Result of Administrative Standard Code Lookup",
                "type": "object"
            },
            "_namespace_swagger.IOpenData.MinistryOfTheInteriorAndSafety.IGetStandardRegionCodeListInput": {
                "properties": {
                    "locatadd_nm": {
                        "title": "Region address name\nIt must be one of: \"Seoul Metropolitan City\",\"Busan Metropolitan City\",\"Daegu Metropolitan City\",\"Incheon Metropolitan City\",\"Gwangju Metropolitan City\",\"Daejeon Metropolitan City\",\"Ulsan Metropolitan City\",\"Sejong Special Self-Governing City\",\"Gyeonggi-do\",\"Chungcheongbuk-do\",\"Chungcheongnam-do\",\"Gyeongsangbuk-do\",\"Gyeongsangnam-do\",\"Jeollanam-do\",\"Jeju Special Self-Governing Province\",\"Gangwon Special Self-Governing Province\",\"Jeollabuk-do Special Self-Governing Province\"",
                        "oneOf": [
                            {
                                "title": "서울특별시",
                                "x-wrtn-placeholder": "서울특별시",
                                "const": "서울특별시"
                            },
                            {
                                "title": "부산광역시",
                                "x-wrtn-placeholder": "서울특별시",
                                "const": "부산광역시"
                            },
                            {
                                "title": "대구광역시",
                                "x-wrtn-placeholder": "서울특별시",
                                "const": "대구광역시"
                            },
                            {
                                "title": "인천광역시",
                                "x-wrtn-placeholder": "서울특별시",
                                "const": "인천광역시"
                            },
                            {
                                "title": "광주광역시",
                                "x-wrtn-placeholder": "서울특별시",
                                "const": "광주광역시"
                            },
                            {
                                "title": "대전광역시",
                                "x-wrtn-placeholder": "서울특별시",
                                "const": "대전광역시"
                            },
                            {
                                "title": "울산광역시",
                                "x-wrtn-placeholder": "서울특별시",
                                "const": "울산광역시"
                            },
                            {
                                "title": "세종특별자치시",
                                "x-wrtn-placeholder": "서울특별시",
                                "const": "세종특별자치시"
                            },
                            {
                                "title": "경기도",
                                "x-wrtn-placeholder": "서울특별시",
                                "const": "경기도"
                            },
                            {
                                "title": "충청북도",
                                "x-wrtn-placeholder": "서울특별시",
                                "const": "충청북도"
                            },
                            {
                                "title": "충청남도",
                                "x-wrtn-placeholder": "서울특별시",
                                "const": "충청남도"
                            },
                            {
                                "title": "경상북도",
                                "x-wrtn-placeholder": "서울특별시",
                                "const": "경상북도"
                            },
                            {
                                "title": "경상남도",
                                "x-wrtn-placeholder": "서울특별시",
                                "const": "경상남도"
                            },
                            {
                                "title": "전라남도",
                                "x-wrtn-placeholder": "서울특별시",
                                "const": "전라남도"
                            },
                            {
                                "title": "제주특별자치도",
                                "x-wrtn-placeholder": "서울특별시",
                                "const": "제주특별자치도"
                            },
                            {
                                "title": "강원특별자치도",
                                "x-wrtn-placeholder": "서울특별시",
                                "const": "강원특별자치도"
                            },
                            {
                                "title": "전북특별자치도",
                                "x-wrtn-placeholder": "서울특별시",
                                "const": "전북특별자치도"
                            }
                        ]
                    },
                    "numOfRows": {
                        "default": 10,
                        "title": "Number of results per page",
                        "type": "integer"
                    },
                    "pageNo": {
                        "default": 1,
                        "title": "Page number",
                        "type": "integer"
                    }
                },
                "required": [
                    "locatadd_nm"
                ],
                "title": "Request for Administrative Standard Code Lookup",
                "type": "object"
            },
            "_namespace_swagger.IOpenData.FinancialServicesCommission.IGetStockPriceInfoOutput": {
                "properties": {
                    "response": {
                        "properties": {
                            "body": {
                                "properties": {
                                    "numOfRows": {
                                        "default": 10,
                                        "title": "Number of results per page",
                                        "type": "integer"
                                    },
                                    "pageNo": {
                                        "default": 1,
                                        "title": "Page number",
                                        "type": "integer"
                                    },
                                    "totalCount": {
                                        "title": "Total number of records",
                                        "type": "number"
                                    },
                                    "items": {
                                        "properties": {
                                            "item": {
                                                "items": {
                                                    "properties": {
                                                        "basDt": {
                                                            "title": "Base date",
                                                            "x-wrtn-placeholder": "20220919",
                                                            "type": "string"
                                                        },
                                                        "srtnCd": {
                                                            "title": "Short code",
                                                            "description": "6-digit code shorter than stock code and uniquely guaranteed",
                                                            "type": "string"
                                                        },
                                                        "isinCd": {
                                                            "title": "ISIN code",
                                                            "description": "International Securities Identification Number",
                                                            "type": "string"
                                                        },
                                                        "itmsNm": {
                                                            "title": "Stock name",
                                                            "type": "string"
                                                        },
                                                        "mrktCtg": {
                                                            "title": "Market category",
                                                            "oneOf": [
                                                                {
                                                                    "title": "KOSPI",
                                                                    "const": "KOSPI"
                                                                },
                                                                {
                                                                    "title": "KOSDAQ",
                                                                    "const": "KOSDAQ"
                                                                },
                                                                {
                                                                    "title": "KONEX",
                                                                    "const": "KONEX"
                                                                }
                                                            ]
                                                        },
                                                        "clpr": {
                                                            "title": "Closing price",
                                                            "description": "Final price formed at the end of regular trading hours",
                                                            "type": "string"
                                                        },
                                                        "vs": {
                                                            "title": "Change",
                                                            "description": "Fluctuation compared to the previous day",
                                                            "type": "string"
                                                        },
                                                        "fltRt": {
                                                            "title": "Rate of change",
                                                            "description": "Ratio of fluctuation compared to the previous day",
                                                            "type": "string"
                                                        },
                                                        "mkp": {
                                                            "title": "Opening price",
                                                            "description": "Initial price formed after opening",
                                                            "type": "string"
                                                        },
                                                        "hipr": {
                                                            "title": "Highest price",
                                                            "description": "Highest price during the day",
                                                            "type": "string"
                                                        },
                                                        "lopr": {
                                                            "title": "Lowest price",
                                                            "description": "Lowest price during the day",
                                                            "type": "string"
                                                        },
                                                        "trqu": {
                                                            "title": "Trading volume",
                                                            "description": "Cumulative total of trade quantities",
                                                            "type": "string"
                                                        },
                                                        "trPrc": {
                                                            "title": "Trading amount",
                                                            "description": "Cumulative total of trade prices * quantities",
                                                            "type": "string"
                                                        },
                                                        "lstgStCnt": {
                                                            "title": "Listed shares",
                                                            "type": "string"
                                                        },
                                                        "mrktTotAmt": {
                                                            "title": "Market capitalization",
                                                            "description": "Closing price * listed shares",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "basDt",
                                                        "srtnCd",
                                                        "isinCd",
                                                        "itmsNm",
                                                        "mrktCtg",
                                                        "clpr",
                                                        "vs",
                                                        "fltRt",
                                                        "mkp",
                                                        "hipr",
                                                        "lopr",
                                                        "trqu",
                                                        "trPrc",
                                                        "lstgStCnt",
                                                        "mrktTotAmt"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "item"
                                        ],
                                        "title": "Retrieved company information",
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "numOfRows",
                                    "pageNo",
                                    "totalCount",
                                    "items"
                                ],
                                "type": "object"
                            }
                        },
                        "required": [
                            "body"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "response"
                ],
                "title": "Result of querying market capitalization and stock information",
                "type": "object"
            },
            "_namespace_swagger.IPaginationInputlikeItmsNm(stringMaxLength120PlaceholderSamsungElectronics)undefinedbasDt(stringPlaceholder...)undefined": {
                "properties": {
                    "numOfRows": {
                        "default": 10,
                        "title": "Number of results per page",
                        "type": "integer"
                    },
                    "pageNo": {
                        "default": 1,
                        "title": "Page number",
                        "type": "integer"
                    },
                    "likeItmsNm": {
                        "maxLength": 120,
                        "title": "Keyword for stock name search",
                        "description": "Search is only possible if it matches the exact company name that is listed, which is stored on the Korea Stock Exchange.\nSince it is a Korean company, most of it will be in Korean.\nPlease give Korean company name.",
                        "x-wrtn-placeholder": "Samsung Electronics",
                        "type": "string"
                    },
                    "basDt": {
                        "title": "Base date",
                        "description": "Searches for data matching the search value and base date\nYYYYMMDD format date string.",
                        "x-wrtn-placeholder": "20220919",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IPaginationInputlikeItmsNm(stringMaxLength120PlaceholderSamsungElectronics)undefinedbeginBasDt(stringPlaceholder...)undefinedendBasDt(stringPlaceholder...)undefined": {
                "properties": {
                    "numOfRows": {
                        "default": 10,
                        "title": "Number of results per page",
                        "type": "integer"
                    },
                    "pageNo": {
                        "default": 1,
                        "title": "Page number",
                        "type": "integer"
                    },
                    "likeItmsNm": {
                        "maxLength": 120,
                        "title": "Keyword for stock name search",
                        "description": "Search is only possible if it matches the exact company name that is listed, which is stored on the Korea Stock Exchange.\nSince it is a Korean company, most of it will be in Korean.\nPlease give Korean company name.",
                        "x-wrtn-placeholder": "Samsung Electronics",
                        "type": "string"
                    },
                    "beginBasDt": {
                        "title": "Start date (inclusive)",
                        "description": "Searches for data where the base date is greater than or equal to the search value\nYYYYMMDD format date string.",
                        "x-wrtn-placeholder": "20220919",
                        "type": "string"
                    },
                    "endBasDt": {
                        "title": "End date (exclusive)",
                        "description": "Searches for data where the base date is less than the search value\nYYYYMMDD format date string.",
                        "x-wrtn-placeholder": "20220919",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IKoreaMeteorologicalAdministration.IGetForecastOutput": {
                "properties": {
                    "baseDate": {
                        "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                        "title": "Date value composed of year, month, and day\n\ne.g., `20240619`",
                        "type": "string"
                    },
                    "baseTime": {
                        "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                        "title": "Time value indicating the exact hour\n\ne.g., `1200`",
                        "type": "string"
                    },
                    "category": {
                        "description": "Classification of what each value represents",
                        "title": "Category",
                        "oneOf": [
                            {
                                "title": "Precipitation Probability",
                                "description": "Unit is %",
                                "const": "POP"
                            },
                            {
                                "title": "Precipitation Type",
                                "description": "Code value",
                                "const": "PTY"
                            },
                            {
                                "title": "Hourly Precipitation",
                                "description": "Category (1mm)",
                                "const": "PCP"
                            },
                            {
                                "title": "Humidity",
                                "description": "Unit is %",
                                "const": "REH"
                            },
                            {
                                "title": "Hourly Snowfall",
                                "description": "Category (1cm)",
                                "const": "SNO"
                            },
                            {
                                "title": "Sky Condition",
                                "description": "Code value",
                                "const": "SKY"
                            },
                            {
                                "title": "Hourly Temperature",
                                "description": "Celsius temperature",
                                "const": "TMP"
                            },
                            {
                                "title": "Daily Minimum Temperature",
                                "description": "Celsius temperature",
                                "const": "TMN"
                            },
                            {
                                "title": "Daily Maximum Temperature",
                                "description": "Celsius temperature",
                                "const": "TMX"
                            },
                            {
                                "title": "Wind Speed (East-West Component)",
                                "description": "m/s",
                                "const": "UUU"
                            },
                            {
                                "title": "Wind Speed (North-South Component)",
                                "description": "m/s",
                                "const": "VVV"
                            },
                            {
                                "title": "Wave Height (Wave Height)",
                                "description": "M",
                                "const": "WAV"
                            },
                            {
                                "title": "Wind Direction",
                                "description": "Angle (deg)",
                                "const": "VEC"
                            },
                            {
                                "title": "Wind Direction",
                                "description": "deg",
                                "const": "VEC"
                            },
                            {
                                "title": "Wind Speed",
                                "description": "m/s",
                                "const": "WSD"
                            },
                            {
                                "title": "Temperature",
                                "description": "Celsius temperature",
                                "const": "T1H"
                            },
                            {
                                "title": "Temperature",
                                "description": "Celsius temperature",
                                "const": "T1H"
                            },
                            {
                                "title": "Hourly Precipitation",
                                "description": "mm",
                                "const": "RN1"
                            }
                        ]
                    },
                    "nx": {
                        "title": "Longitude",
                        "type": "number"
                    },
                    "ny": {
                        "title": "Latitude",
                        "type": "number"
                    },
                    "obsrValue": {
                        "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                        "title": "Value corresponding to the category",
                        "type": "string"
                    }
                },
                "required": [
                    "baseDate",
                    "baseTime",
                    "category",
                    "nx",
                    "ny",
                    "obsrValue"
                ],
                "type": "object"
            },
            "_namespace_swagger.IOpenWeather.IResponse": {
                "properties": {
                    "city_name": {
                        "title": "City Name",
                        "description": "city name",
                        "type": "string"
                    },
                    "weather_main": {
                        "title": "weather information",
                        "description": "weather main information",
                        "type": "string"
                    },
                    "weather_description": {
                        "title": "weather description",
                        "description": "weather description about weather main",
                        "type": "string"
                    },
                    "temperature": {
                        "title": "temperature",
                        "description": "temperature",
                        "type": "number"
                    },
                    "feel_like_temperature": {
                        "title": "feel like temperature",
                        "description": "feel like temperature",
                        "type": "number"
                    },
                    "temperature_min": {
                        "title": "minimum temperature",
                        "description": "minimum temperature",
                        "type": "number"
                    },
                    "temperature_max": {
                        "title": "maximum temperature",
                        "description": "maximum temperature",
                        "type": "number"
                    },
                    "wind_speed": {
                        "title": "wind_speed",
                        "description": "wind_speed",
                        "type": "number"
                    },
                    "humidity": {
                        "title": "humidity",
                        "description": "humidity",
                        "type": "number"
                    }
                },
                "required": [
                    "city_name",
                    "weather_main",
                    "weather_description",
                    "temperature",
                    "feel_like_temperature",
                    "temperature_min",
                    "temperature_max",
                    "wind_speed",
                    "humidity"
                ],
                "title": "Get Weather Response",
                "type": "object"
            },
            "_namespace_swagger.IKoreaMeteorologicalAdministration.IGetVillageForecastInformationInput": {
                "properties": {
                    "type": {
                        "description": "use 'latitude_and_longitude' or 'grid_coordinates'.\nThis property can never be used except for these two strings.",
                        "title": "Definition of nx, ny",
                        "oneOf": [
                            {
                                "title": "latitude and longitude",
                                "const": "latitude_and_longitude"
                            },
                            {
                                "title": "Grid Coordinates of Korean",
                                "const": "grid_coordinates"
                            }
                        ]
                    },
                    "nx": {
                        "maximum": 360,
                        "title": "Longitude or x_position",
                        "description": "If the type property in this object is 'latitude_and_longitude', this value means longitude.\nIf not, use x position value of grid coordinates in Korea.",
                        "type": "number"
                    },
                    "ny": {
                        "maximum": 180,
                        "title": "Latitude or y_position",
                        "description": "If the type property in this object is 'latitude_and_longitude', this value means latitude.\nIf not, use y position value of grid coordinates in Korea.",
                        "type": "number"
                    }
                },
                "required": [
                    "type",
                    "nx",
                    "ny"
                ],
                "title": "Weather query request conditions",
                "type": "object"
            },
            "_namespace_swagger.KoreaCopyrightCommission.IGetCopyRightOutput": {
                "properties": {
                    "currentCount": {
                        "title": "Current page count",
                        "type": "integer"
                    },
                    "matchCount": {
                        "title": "Number of copyrights matching the search criteria",
                        "type": "integer"
                    },
                    "data": {
                        "title": "Search Results",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.MyPickIGetCopyRightInputREG_IDCONT_TITLEAUTHOR_NAMEREG_DATEstringFormatdate"
                        },
                        "type": "array"
                    },
                    "page": {
                        "default": 1,
                        "title": "Page number",
                        "type": "integer"
                    },
                    "perPage": {
                        "default": 10,
                        "title": "Number of results per page",
                        "type": "integer"
                    }
                },
                "required": [
                    "currentCount",
                    "matchCount",
                    "data"
                ],
                "title": "Copyright search results",
                "type": "object"
            },
            "_namespace_swagger.MyPickIGetCopyRightInputREG_IDCONT_TITLEAUTHOR_NAMEREG_DATEstringFormatdate": {
                "properties": {
                    "REG_ID": {
                        "title": "Copyright registration number",
                        "description": "Only copyrights that match exactly are searched.",
                        "type": "string"
                    },
                    "CONT_TITLE": {
                        "title": "Title (Name)\n\nTitle refers to the name of the work.",
                        "x-wrtn-placeholder": "제호 (명칭)",
                        "type": "string"
                    },
                    "AUTHOR_NAME": {
                        "title": "Copyright holder name\n\nThis refers to the name of the copyright holder. It can be a person's name, or the name of a company or specific organization.",
                        "x-wrtn-placeholder": "저작자 이름",
                        "type": "string"
                    },
                    "REG_DATE": {
                        "format": "date",
                        "title": "Copyright registration date",
                        "type": "string"
                    }
                },
                "required": [
                    "REG_DATE"
                ],
                "type": "object"
            },
            "_namespace_swagger.KoreaCopyrightCommission.IGetCopyRightInput": {
                "properties": {
                    "perPage": {
                        "default": 10,
                        "title": "Number of results per page",
                        "type": "integer"
                    },
                    "page": {
                        "default": 1,
                        "title": "Page number",
                        "type": "integer"
                    },
                    "REG_ID": {
                        "title": "Copyright registration number",
                        "description": "Only copyrights that match exactly are searched.",
                        "type": "string"
                    },
                    "CONT_TITLE": {
                        "title": "Title (Name)\n\nTitle refers to the name of the work.",
                        "x-wrtn-placeholder": "제호 (명칭)",
                        "type": "string"
                    },
                    "AUTHOR_NAME": {
                        "title": "Copyright holder name\n\nThis refers to the name of the copyright holder. It can be a person's name, or the name of a company or specific organization.",
                        "x-wrtn-placeholder": "저작자 이름",
                        "type": "string"
                    }
                },
                "title": "Copyright inquiry conditions",
                "type": "object"
            },
            "_namespace_swagger.IPrompt.IResponse": {
                "properties": {
                    "result": {
                        "title": "Result received through input prompt",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "prompt",
                "description": "Results received via",
                "type": "object"
            },
            "_namespace_swagger.IPrompt.IRequest": {
                "properties": {
                    "user_request": {
                        "title": "User Request",
                        "x-wrtn-placeholder": "제품 이름과 제품 특징을 참고해서 광고 문구를 기발하고 유머러스하게 만들어주세요.",
                        "type": "string"
                    },
                    "system_prompt": {
                        "title": "System Prompt",
                        "x-wrtn-placeholder": "친절한 어투로 말해주세요.",
                        "type": "string"
                    }
                },
                "required": [
                    "user_request"
                ],
                "title": "prompt input",
                "type": "object"
            },
            "_namespace_swagger.IStoryGeneratorResponse": {
                "properties": {
                    "done": {
                        "title": "Whether the story has reached a natural conclusion and is ready to be outputted",
                        "description": "Whether the story has reached a natural conclusion and is ready to be outputted.",
                        "type": "boolean"
                    },
                    "messageToUser": {
                        "title": "When there is not enough information to create the next story line, prompt the user for more information",
                        "description": "When there is not enough information to create the next story line, prompt the user for more information.",
                        "type": "string"
                    },
                    "storyLine": {
                        "title": "If the next story line can be generated, provide it here",
                        "description": "If the next story line can be generated, provide it here.\nOnly generate the story when you have a good idea of what the user wants.\nWhen the user is not sure, you can suggest stories but ask the user first before generating the story line.",
                        "type": "string"
                    },
                    "title": {
                        "title": "If the entire story has been generated, provide the title here",
                        "description": "If the entire story has been generated, provide the title here.",
                        "type": "string"
                    }
                },
                "required": [
                    "done"
                ],
                "description": "When there is not enough information to create the next story line, prompt the user for more information.",
                "type": "object"
            },
            "_namespace_swagger.IStoryGeneratorRequest": {
                "properties": {
                    "query": {
                        "type": "string"
                    },
                    "chatHistory": {
                        "items": {
                            "properties": {
                                "role": {
                                    "type": "string"
                                },
                                "content": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "role",
                                "content"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "previousStories": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "query",
                    "chatHistory",
                    "previousStories"
                ],
                "type": "object"
            },
            "_namespace_swagger.IStoryImage": {
                "properties": {
                    "imageUrl": {
                        "title": "Image URL",
                        "description": "Generated image URL.",
                        "type": "string"
                    }
                },
                "required": [
                    "imageUrl"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGenerateStoryImageInput": {
                "properties": {
                    "storyLine": {
                        "title": "The story to create the image for",
                        "description": "The story to create the image for.",
                        "type": "string"
                    },
                    "previousStories": {
                        "title": "Previous stories",
                        "description": "Previous stories.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "storyLine",
                    "previousStories"
                ],
                "title": "Input for image generation",
                "type": "object"
            },
            "_namespace_swagger.IStableDiffusionBeta.IResponse": {
                "properties": {
                    "imgUrl": {
                        "format": "iri",
                        "contentMediaType": "image/*",
                        "title": "Generated image Url",
                        "description": "Generated image url",
                        "type": "string"
                    }
                },
                "required": [
                    "imgUrl"
                ],
                "title": "Image creation result",
                "type": "object"
            },
            "_namespace_swagger.IStableDiffusionBeta.IRequest": {
                "properties": {
                    "prompt": {
                        "title": "prompt",
                        "description": "Please be specific about the elements, styles, and subjects you want to include in the image you want to generate. This prompt will instruct the model to reflect the desired features and details when generating the image.",
                        "type": "string"
                    },
                    "image_ratio": {
                        "description": "Preset image size to generate.\n\nOnly three possible values are available: \"square\", \"landscape\", and \"portrait\".",
                        "title": "Image Size",
                        "oneOf": [
                            {
                                "title": "정사각형",
                                "description": "512x512",
                                "const": "square"
                            },
                            {
                                "title": "풍경",
                                "description": "896x512",
                                "const": "landscape"
                            },
                            {
                                "title": "인물",
                                "description": "512x896",
                                "const": "portrait"
                            }
                        ]
                    },
                    "style_preset": {
                        "description": "Generates an image in a specific style.\n\nThere are only 16 possible values: \"3d-model\", \"analog-film\", \"anime\", \"cinematic\", \"comic-book\", \"digital-art\", \"enhance\", \"fantasy-art\", \"isometric\", \"line-art\", \"low-poly\", \"modeling-compound\", \"neon-punk\", \"origami\", \"photographic\", \"pixel-art\", \"tile-texture\".",
                        "title": "Style Preset",
                        "oneOf": [
                            {
                                "title": "3D 모델",
                                "const": "3d-model"
                            },
                            {
                                "title": "아날로그 필름",
                                "const": "analog-film"
                            },
                            {
                                "title": "에니메이션",
                                "const": "anime"
                            },
                            {
                                "title": "영화",
                                "const": "cinematic"
                            },
                            {
                                "title": "만화",
                                "const": "comic-book"
                            },
                            {
                                "title": "디지털 아트",
                                "const": "digital-art"
                            },
                            {
                                "title": "보정",
                                "const": "enhance"
                            },
                            {
                                "title": "판타지 아트",
                                "const": "fantasy-art"
                            },
                            {
                                "title": "등각뷰",
                                "const": "isometric"
                            },
                            {
                                "title": "라인 아트",
                                "const": "line-art"
                            },
                            {
                                "title": "로우 폴리곤",
                                "const": "low-poly"
                            },
                            {
                                "title": "클레이 아트",
                                "const": "modeling-compound"
                            },
                            {
                                "title": "네온 펑크",
                                "const": "neon-punk"
                            },
                            {
                                "title": "종이 접기",
                                "const": "origami"
                            },
                            {
                                "title": "사진",
                                "const": "photographic"
                            },
                            {
                                "title": "픽셀 아트",
                                "const": "pixel-art"
                            },
                            {
                                "title": "타일 텍스쳐",
                                "const": "tile-texture"
                            }
                        ]
                    }
                },
                "required": [
                    "prompt",
                    "image_ratio"
                ],
                "title": "Image Generator Settings",
                "type": "object"
            },
            "_namespace_swagger.IDallE3.IResponse": {
                "properties": {
                    "imgUrl": {
                        "format": "iri",
                        "contentMediaType": "image/*",
                        "title": "Generated image Url",
                        "description": "Generated image url",
                        "type": "string"
                    }
                },
                "required": [
                    "imgUrl"
                ],
                "title": "Image creation result",
                "type": "object"
            },
            "_namespace_swagger.IDallE3.IRequest": {
                "properties": {
                    "prompt": {
                        "title": "prompt",
                        "description": "Prompt to create an image",
                        "type": "string"
                    },
                    "image_ratio": {
                        "description": "Preset image size to generate.\n\nOnly three possible values are available: \"square\", \"landscape\", and \"portrait\".",
                        "title": "Image Size",
                        "oneOf": [
                            {
                                "title": "정사각형",
                                "description": "1024x1024",
                                "const": "square"
                            },
                            {
                                "title": "풍경",
                                "description": "1792x1024",
                                "const": "landscape"
                            },
                            {
                                "title": "인물",
                                "description": "1024x1792",
                                "const": "portrait"
                            }
                        ]
                    }
                },
                "required": [
                    "prompt",
                    "image_ratio"
                ],
                "title": "Information for image creation",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSearch.IResponse": {
                "properties": {
                    "title": {
                        "title": "Search Results Title",
                        "type": "string"
                    },
                    "link": {
                        "format": "iri",
                        "title": "Search Results Link",
                        "type": "string"
                    },
                    "snippet": {
                        "title": "Search Results Summary",
                        "type": "string"
                    },
                    "thumbnail": {
                        "format": "iri",
                        "contentMediaType": "image/*",
                        "title": "Search Results thumbnail",
                        "type": "string"
                    }
                },
                "required": [
                    "title",
                    "link"
                ],
                "title": "Search Results",
                "type": "object"
            },
            "_namespace_swagger.IGoogleSearch.IRequest": {
                "properties": {
                    "andKeywords": {
                        "title": "Must-include keywords",
                        "description": "Set keywords that must be included in search results.",
                        "items": {
                            "x-wrtn-placeholder": "뤼튼",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "orKeywords": {
                        "title": "Good keywords to enter",
                        "description": "Set good keywords to enter the search results.",
                        "items": {
                            "x-wrtn-placeholder": "스튜디오",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "notKeywords": {
                        "title": "Keywords that should not be included",
                        "description": "Set keywords that should not be included in search results.",
                        "items": {
                            "x-wrtn-placeholder": "폭력",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "max_results": {
                        "title": "Number of search results",
                        "description": "Set the number of search results.",
                        "type": "integer"
                    }
                },
                "required": [
                    "andKeywords",
                    "max_results"
                ],
                "title": "Conditions for searching",
                "type": "object"
            },
            "_namespace_swagger.IGoogleShopping.IResponse": {
                "properties": {
                    "title": {
                        "title": "Product name",
                        "type": "string"
                    },
                    "link": {
                        "title": "Product Link",
                        "oneOf": [
                            {
                                "title": "알 수 없는 링크",
                                "const": "#"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    },
                    "price": {
                        "title": "Product Price",
                        "description": "₩57,600 Format",
                        "type": "string"
                    },
                    "source": {
                        "title": "Product Source",
                        "type": "string"
                    },
                    "deliveryCost": {
                        "title": "Shipping fee",
                        "type": "string"
                    },
                    "thumbnail": {
                        "format": "iri",
                        "contentMediaType": "image/*",
                        "title": "Product Image",
                        "type": "string"
                    }
                },
                "required": [
                    "title",
                    "link",
                    "price",
                    "thumbnail"
                ],
                "title": "Product search results",
                "type": "object"
            },
            "_namespace_swagger.IGoogleShopping.IRequestStandAlone": {
                "properties": {
                    "keyword": {
                        "title": "Search term",
                        "description": "Enter the keyword you want to search for.",
                        "type": "string"
                    },
                    "max_results": {
                        "title": "Number of search results",
                        "description": "Set the number of search results.",
                        "type": "integer"
                    }
                },
                "required": [
                    "keyword",
                    "max_results"
                ],
                "title": "Product search conditions",
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.IGenerateKeywordIdeaOutput": {
                "properties": {
                    "results": {
                        "title": "Results List",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.GeneratedKeyword"
                        },
                        "type": "array"
                    },
                    "totalSize": {
                        "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                        "title": "Total number of results",
                        "type": "string"
                    },
                    "nextPageToken": {
                        "description": "If there is no next page, viewing is not possible",
                        "title": "Token that can be used when viewing the next page",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "results",
                    "totalSize"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.GeneratedKeyword": {
                "properties": {
                    "keywordIdeaMetrics": {
                        "title": "Keyword metrics",
                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.KeywordIdeaMetrics"
                    },
                    "text": {
                        "title": "keyword",
                        "type": "string"
                    }
                },
                "required": [
                    "keywordIdeaMetrics",
                    "text"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.KeywordIdeaMetrics": {
                "properties": {
                    "competition": {
                        "title": "Competition level for search terms",
                        "oneOf": [
                            {
                                "title": "낮음",
                                "description": "낮은 경쟁률 경쟁 지수 범위는 [0, 33]입니다.",
                                "const": "LOW"
                            },
                            {
                                "title": "중간",
                                "description": "경쟁이 보통입니다. 이에 대한 경쟁 지수의 범위는 [34, 66]입니다.",
                                "const": "MEDIUM"
                            },
                            {
                                "title": "높음",
                                "description": "경쟁이 치열합니다. 경쟁 지수 범위는 [67, 100]입니다.",
                                "const": "HIGH"
                            }
                        ]
                    },
                    "monthlySearchVolumes": {
                        "title": "Approximate number of searches this search term has been run on in the last 12 months",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.MonthlySearchVolumes"
                        },
                        "type": "array"
                    },
                    "avgMonthlySearches": {
                        "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                        "title": "Approximate monthly searches for this search term over the past 12 months",
                        "type": "string"
                    },
                    "competitionIndex": {
                        "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                        "title": "Competition Index",
                        "type": "string"
                    },
                    "lowTopOfPageBidMicros": {
                        "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                        "title": "Keyword Micro Top Page Bid Subrange (20th Percentile)",
                        "type": "string"
                    },
                    "highTopOfPageBidMicros": {
                        "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                        "title": "keyword detail page top bid (80th percentile)",
                        "type": "string"
                    }
                },
                "required": [
                    "monthlySearchVolumes",
                    "avgMonthlySearches"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.MonthlySearchVolumes": {
                "properties": {
                    "month": {
                        "title": "The month in which the search volume occurred",
                        "oneOf": [
                            {
                                "title": "January",
                                "const": "JANUARY"
                            },
                            {
                                "title": "February",
                                "const": "FEBRUARY"
                            },
                            {
                                "title": "March",
                                "const": "MARCH"
                            },
                            {
                                "title": "April",
                                "const": "APRIL"
                            },
                            {
                                "title": "May",
                                "const": "MAY"
                            },
                            {
                                "title": "June",
                                "const": "JUNE"
                            },
                            {
                                "title": "July",
                                "const": "JULY"
                            },
                            {
                                "title": "August",
                                "const": "AUGUST"
                            },
                            {
                                "title": "September",
                                "const": "SEPTEMBER"
                            },
                            {
                                "title": "October",
                                "const": "OCTOBER"
                            },
                            {
                                "title": "November",
                                "const": "NOVEMBER"
                            },
                            {
                                "title": "December",
                                "const": "DECEMBER"
                            }
                        ]
                    },
                    "year": {
                        "title": "Year in which search volume occurred",
                        "type": "string"
                    },
                    "monthlySearches": {
                        "description": "A null value indicates that search volume for the month is not available.",
                        "title": "Approximate number of searches for the month",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "month",
                    "year",
                    "monthlySearches"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.IGenerateKeywordIdeaByKeywordsAndUrlInput": {
                "properties": {
                    "keywords": {
                        "minItems": 1,
                        "title": "Search keywords for keyword generation",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "pageSize": {
                        "minimum": 1,
                        "maximum": 10000,
                        "title": "Number of results per page",
                        "type": "integer"
                    },
                    "pageToken": {
                        "title": "Next Page Token",
                        "description": "Use the page token that can be received from the previous request.",
                        "type": "string"
                    },
                    "customerId": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Customer Resource ID",
                        "description": "This is the customer's resource ID.\n\nIt means the remaining number format after removing 'customers/' from the `customers/${number}` format.\n\n`Wrtn`'s `google ads`-related connectors must receive the `customerId` property to determine which advertising account the customer has, that is, which advertising account among the customers, to use.\n\nSince most users have only one advertising account, if `customerId` is not provided as an argument, the advertising account that is retrieved as number 0 is used unconditionally.\n\nIf a user with two or more advertising accounts does not provide `customerId`, it is always considered a failure.",
                        "x-wrtn-placeholder": "1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-customers"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/adwords"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "url": {
                        "title": "URL to reference when generating advertising keyword ideas",
                        "type": "string"
                    }
                },
                "required": [
                    "keywords",
                    "secretKey",
                    "url"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.IGenerateKeywordIdeaByKeywordsInput": {
                "properties": {
                    "keywords": {
                        "minItems": 1,
                        "title": "Search keywords for keyword generation",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "pageSize": {
                        "minimum": 1,
                        "maximum": 10000,
                        "title": "Number of results per page",
                        "type": "integer"
                    },
                    "pageToken": {
                        "title": "Next Page Token",
                        "description": "Use the page token that can be received from the previous request.",
                        "type": "string"
                    },
                    "customerId": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Customer Resource ID",
                        "description": "This is the customer's resource ID.\n\nIt means the remaining number format after removing 'customers/' from the `customers/${number}` format.\n\n`Wrtn`'s `google ads`-related connectors must receive the `customerId` property to determine which advertising account the customer has, that is, which advertising account among the customers, to use.\n\nSince most users have only one advertising account, if `customerId` is not provided as an argument, the advertising account that is retrieved as number 0 is used unconditionally.\n\nIf a user with two or more advertising accounts does not provide `customerId`, it is always considered a failure.",
                        "x-wrtn-placeholder": "1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-customers"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/adwords"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "keywords",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.IGenerateKeywordIdeaByURLInput": {
                "properties": {
                    "url": {
                        "title": "URL to reference when generating advertising keyword ideas",
                        "type": "string"
                    },
                    "pageSize": {
                        "minimum": 1,
                        "maximum": 10000,
                        "title": "Number of results per page",
                        "type": "integer"
                    },
                    "pageToken": {
                        "title": "Next Page Token",
                        "description": "Use the page token that can be received from the previous request.",
                        "type": "string"
                    },
                    "customerId": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Customer Resource ID",
                        "description": "This is the customer's resource ID.\n\nIt means the remaining number format after removing 'customers/' from the `customers/${number}` format.\n\n`Wrtn`'s `google ads`-related connectors must receive the `customerId` property to determine which advertising account the customer has, that is, which advertising account among the customers, to use.\n\nSince most users have only one advertising account, if `customerId` is not provided as an argument, the advertising account that is retrieved as number 0 is used unconditionally.\n\nIf a user with two or more advertising accounts does not provide `customerId`, it is always considered a failure.",
                        "x-wrtn-placeholder": "1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-customers"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/adwords"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "url",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.ISecret": {
                "properties": {
                    "customerId": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Customer Resource ID",
                        "description": "This is the customer's resource ID.\n\nIt means the remaining number format after removing 'customers/' from the `customers/${number}` format.\n\n`Wrtn`'s `google ads`-related connectors must receive the `customerId` property to determine which advertising account the customer has, that is, which advertising account among the customers, to use.\n\nSince most users have only one advertising account, if `customerId` is not provided as an argument, the advertising account that is retrieved as number 0 is used unconditionally.\n\nIf a user with two or more advertising accounts does not provide `customerId`, it is always considered a failure.",
                        "x-wrtn-placeholder": "1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-customers"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/adwords"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.CustomerClient": {
                "properties": {
                    "id": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Customer ID",
                        "description": "Each customer has a unique value.",
                        "x-wrtn-placeholder": "1",
                        "type": "string"
                    },
                    "resourceName": {
                        "pattern": "^(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/customerClients\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                        "title": "Customer Resource Name",
                        "type": "string"
                    },
                    "descriptiveName": {
                        "title": "Specified name",
                        "type": "string"
                    },
                    "currencyCode": {
                        "title": "Currency unit, currency code",
                        "description": "Means 'USD', 'EUR', 'KRW', etc.",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "resourceName",
                    "currencyCode"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.IGetCustomerInput": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/adwords"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.IGetCampaignsOutputResult": {
                "properties": {
                    "campaign": {
                        "title": "Campaign Information",
                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.Campaign"
                    },
                    "campaignBudget": {
                        "title": "Campaign Budget Information",
                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.CampaignBudget"
                    }
                },
                "required": [
                    "campaign",
                    "campaignBudget"
                ],
                "title": "Campaign Information",
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.Campaign": {
                "properties": {
                    "resourceName": {
                        "pattern": "(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaigns\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Campaign Resource Name",
                        "x-wrtn-placeholder": "customers/1/campaigns/1",
                        "type": "string"
                    },
                    "status": {
                        "title": "Campaign Status",
                        "oneOf": [
                            {
                                "title": "ENABLED",
                                "const": "ENABLED"
                            },
                            {
                                "title": "PAUSED",
                                "const": "PAUSED"
                            },
                            {
                                "title": "REMOVED",
                                "const": "REMOVED"
                            },
                            {
                                "title": "UNKNOWN",
                                "const": "UNKNOWN"
                            },
                            {
                                "title": "UNSPECIFIED",
                                "const": "UNSPECIFIED"
                            }
                        ]
                    },
                    "advertisingChannelType": {
                        "title": "Campaign Advertising Channel",
                        "oneOf": [
                            {
                                "title": "DEMAND_GEN",
                                "const": "DEMAND_GEN"
                            },
                            {
                                "title": "DISPLAY",
                                "const": "DISPLAY"
                            },
                            {
                                "title": "HOTEL",
                                "const": "HOTEL"
                            },
                            {
                                "title": "LOCAL",
                                "const": "LOCAL"
                            },
                            {
                                "title": "LOCAL_SERVICES",
                                "const": "LOCAL_SERVICES"
                            },
                            {
                                "title": "MULTI_CHANNEL",
                                "const": "MULTI_CHANNEL"
                            },
                            {
                                "title": "PERFORMANCE_MAX",
                                "const": "PERFORMANCE_MAX"
                            },
                            {
                                "title": "SEARCH",
                                "const": "SEARCH"
                            },
                            {
                                "title": "SHOPPING",
                                "const": "SHOPPING"
                            },
                            {
                                "title": "SMART",
                                "const": "SMART"
                            },
                            {
                                "title": "TRAVEL",
                                "const": "TRAVEL"
                            },
                            {
                                "title": "UNKNOWN",
                                "const": "UNKNOWN"
                            },
                            {
                                "title": "UNSPECIFIED",
                                "const": "UNSPECIFIED"
                            },
                            {
                                "title": "VIDEO",
                                "const": "VIDEO"
                            }
                        ]
                    },
                    "name": {
                        "title": "Campaign Name",
                        "type": "string"
                    },
                    "id": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Campaign ID",
                        "x-wrtn-placeholder": "1",
                        "type": "string"
                    },
                    "startDate": {
                        "format": "date",
                        "title": "Campaign start date",
                        "type": "string"
                    },
                    "endDate": {
                        "format": "date",
                        "title": "Campaign End Date",
                        "type": "string"
                    }
                },
                "required": [
                    "resourceName",
                    "status",
                    "advertisingChannelType",
                    "name",
                    "id",
                    "startDate",
                    "endDate"
                ],
                "title": "Google Ads Campaign",
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.CampaignBudget": {
                "properties": {
                    "resourceName": {
                        "pattern": "^(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaignBudgets\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                        "title": "Campaign Budget Resource Name",
                        "type": "string"
                    },
                    "amountMicros": {
                        "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                        "title": "Budget (micro units)",
                        "type": "string"
                    }
                },
                "required": [
                    "resourceName",
                    "amountMicros"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.IGetAdGroupsOutputResult": {
                "properties": {
                    "campaign": {
                        "title": "campaign",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIGoogleAds.CampaignstatusidresourceName"
                    },
                    "adGroup": {
                        "title": "Ad Group",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIGoogleAds.AdGrouptypeidresourceName"
                    },
                    "adGroupAds": {
                        "title": "List of ads in ad group",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.MyPickIGoogleAds.AdGroupAdresourceNamepolicySummary"
                        },
                        "type": "array"
                    },
                    "keywords": {
                        "title": "Keyword List",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.DeepStrictMergeHelperIGoogleAds.KeywordMyPickIGoogleAds.AdGroupCriterionresourceNamecriterionId"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "campaign",
                    "adGroup",
                    "adGroupAds",
                    "keywords"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIGoogleAds.CampaignstatusidresourceName": {
                "properties": {
                    "status": {
                        "title": "Campaign Status",
                        "oneOf": [
                            {
                                "title": "ENABLED",
                                "const": "ENABLED"
                            },
                            {
                                "title": "PAUSED",
                                "const": "PAUSED"
                            },
                            {
                                "title": "REMOVED",
                                "const": "REMOVED"
                            },
                            {
                                "title": "UNKNOWN",
                                "const": "UNKNOWN"
                            },
                            {
                                "title": "UNSPECIFIED",
                                "const": "UNSPECIFIED"
                            }
                        ]
                    },
                    "id": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Campaign ID",
                        "x-wrtn-placeholder": "1",
                        "type": "string"
                    },
                    "resourceName": {
                        "pattern": "(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaigns\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Campaign Resource Name",
                        "x-wrtn-placeholder": "customers/1/campaigns/1",
                        "type": "string"
                    }
                },
                "required": [
                    "status",
                    "id",
                    "resourceName"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIGoogleAds.AdGrouptypeidresourceName": {
                "properties": {
                    "type": {
                        "title": "Type of ad group",
                        "oneOf": [
                            {
                                "title": "검색 광고",
                                "const": "SEARCH_STANDARD"
                            },
                            {
                                "title": "디스플레이 광고",
                                "const": "DISPLAY_STANDARD"
                            }
                        ]
                    },
                    "id": {
                        "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                        "title": "ID of the advertising group",
                        "type": "string"
                    },
                    "resourceName": {
                        "pattern": "(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroups\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Ad Group Resource Name",
                        "description": "`customers/${number}/adGroups/${number}` format",
                        "x-wrtn-placeholder": "customers/1/adGroups/1",
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "id",
                    "resourceName"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIGoogleAds.AdGroupAdresourceNamepolicySummary": {
                "properties": {
                    "resourceName": {
                        "pattern": "(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroupAds\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Resource name of the ad group ad",
                        "description": "`customers/${number}/adGroupAds/${number}~${number}` format",
                        "x-wrtn-placeholder": "customers/1/adGroupAds/1~1",
                        "type": "string"
                    },
                    "policySummary": {
                        "properties": {
                            "approvalStatus": {
                                "description": "This is Google's decision on whether or not the ad can be sent.",
                                "title": "Ad approval status",
                                "oneOf": [
                                    {
                                        "title": "승인됨",
                                        "const": "APPROVED"
                                    },
                                    {
                                        "title": "제한된 승인",
                                        "const": "APPROVED_LIMITED"
                                    },
                                    {
                                        "title": "특정 영역에 대한 허용",
                                        "const": "AREA_OF_INTEREST_ONLY"
                                    },
                                    {
                                        "title": "비승인",
                                        "const": "DISAPPROVED"
                                    },
                                    {
                                        "title": "알 수 없음",
                                        "const": "UNKNOWN"
                                    },
                                    {
                                        "title": "명시되지 않음",
                                        "const": "UNSPECIFIED"
                                    }
                                ]
                            },
                            "reviewStatus": {
                                "description": "Only ads that have been reviewed can see whether they have been approved or disapproved.",
                                "title": "Ad Review Status",
                                "oneOf": [
                                    {
                                        "title": "자격을 갖춤",
                                        "const": "ELIGIBLE_MAY_SERVE"
                                    },
                                    {
                                        "title": "검토되었음",
                                        "const": "REVIEWED"
                                    },
                                    {
                                        "title": "검토 중임",
                                        "const": "REVIEW_IN_PROGRESS"
                                    },
                                    {
                                        "title": "심사 중임",
                                        "const": "UNDER_APPEAL"
                                    },
                                    {
                                        "title": "알 수 없음",
                                        "const": "UNKNOWN"
                                    },
                                    {
                                        "title": "명시되지 않음",
                                        "const": "UNSPECIFIED"
                                    }
                                ]
                            }
                        },
                        "required": [
                            "approvalStatus",
                            "reviewStatus"
                        ],
                        "title": "Evaluation of advertising review and policies",
                        "type": "object"
                    }
                },
                "required": [
                    "resourceName",
                    "policySummary"
                ],
                "type": "object"
            },
            "_namespace_swagger.DeepStrictMergeHelperIGoogleAds.KeywordMyPickIGoogleAds.AdGroupCriterionresourceNamecriterionId": {
                "properties": {
                    "text": {
                        "type": "string"
                    },
                    "resourceName": {
                        "pattern": "(customers\\/(.*)\\/adGroupCriteria\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "x-wrtn-placeholder": "customers/1/adGroupCriteria/1",
                        "type": "string"
                    },
                    "criterionId": {
                        "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                        "type": "string"
                    },
                    "matchType": {
                        "oneOf": [
                            {
                                "title": "명시되지 않음",
                                "const": "UNSPECIFIED"
                            },
                            {
                                "title": "알 수 없음",
                                "const": "UNKNOWN"
                            },
                            {
                                "title": "완전일치",
                                "const": "EXACT"
                            },
                            {
                                "title": "구문일치",
                                "const": "PHRASE"
                            },
                            {
                                "title": "확장검색",
                                "const": "BROAD"
                            }
                        ]
                    }
                },
                "required": [
                    "text",
                    "resourceName",
                    "criterionId",
                    "matchType"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.IGetAdGroupInput": {
                "properties": {
                    "campaignId": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "ID of the parent campaign",
                        "description": "If you only want to search for the ID of the campaign",
                        "x-wrtn-placeholder": "1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].campaign.{value:name, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-campaigns"
                        },
                        "type": "string"
                    },
                    "adGroupResourceName": {
                        "pattern": "(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroups\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Resource name of the ad group",
                        "description": "If you want to search only by the ad group resource name",
                        "x-wrtn-placeholder": "customers/1/adGroups/1",
                        "type": "string"
                    },
                    "customerId": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Customer Resource ID",
                        "description": "This is the customer's resource ID.\n\nIt means the remaining number format after removing 'customers/' from the `customers/${number}` format.\n\n`Wrtn`'s `google ads`-related connectors must receive the `customerId` property to determine which advertising account the customer has, that is, which advertising account among the customers, to use.\n\nSince most users have only one advertising account, if `customerId` is not provided as an argument, the advertising account that is retrieved as number 0 is used unconditionally.\n\nIf a user with two or more advertising accounts does not provide `customerId`, it is always considered a failure.",
                        "x-wrtn-placeholder": "1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-customers"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/adwords"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIGoogleAds.AdGroupAdstatusresourceNamepolicySummary": {
                "properties": {
                    "status": {
                        "title": "Status of the ad",
                        "oneOf": [
                            {
                                "title": "ENABLED",
                                "const": "ENABLED"
                            },
                            {
                                "title": "PAUSED",
                                "const": "PAUSED"
                            },
                            {
                                "title": "REMOVED",
                                "const": "REMOVED"
                            },
                            {
                                "title": "UNKNOWN",
                                "const": "UNKNOWN"
                            },
                            {
                                "title": "UNSPECIFIED",
                                "const": "UNSPECIFIED"
                            }
                        ]
                    },
                    "resourceName": {
                        "pattern": "(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroupAds\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Resource name of the ad group ad",
                        "description": "`customers/${number}/adGroupAds/${number}~${number}` format",
                        "x-wrtn-placeholder": "customers/1/adGroupAds/1~1",
                        "type": "string"
                    },
                    "policySummary": {
                        "properties": {
                            "approvalStatus": {
                                "description": "This is Google's decision on whether or not the ad can be sent.",
                                "title": "Ad approval status",
                                "oneOf": [
                                    {
                                        "title": "승인됨",
                                        "const": "APPROVED"
                                    },
                                    {
                                        "title": "제한된 승인",
                                        "const": "APPROVED_LIMITED"
                                    },
                                    {
                                        "title": "특정 영역에 대한 허용",
                                        "const": "AREA_OF_INTEREST_ONLY"
                                    },
                                    {
                                        "title": "비승인",
                                        "const": "DISAPPROVED"
                                    },
                                    {
                                        "title": "알 수 없음",
                                        "const": "UNKNOWN"
                                    },
                                    {
                                        "title": "명시되지 않음",
                                        "const": "UNSPECIFIED"
                                    }
                                ]
                            },
                            "reviewStatus": {
                                "description": "Only ads that have been reviewed can see whether they have been approved or disapproved.",
                                "title": "Ad Review Status",
                                "oneOf": [
                                    {
                                        "title": "자격을 갖춤",
                                        "const": "ELIGIBLE_MAY_SERVE"
                                    },
                                    {
                                        "title": "검토되었음",
                                        "const": "REVIEWED"
                                    },
                                    {
                                        "title": "검토 중임",
                                        "const": "REVIEW_IN_PROGRESS"
                                    },
                                    {
                                        "title": "심사 중임",
                                        "const": "UNDER_APPEAL"
                                    },
                                    {
                                        "title": "알 수 없음",
                                        "const": "UNKNOWN"
                                    },
                                    {
                                        "title": "명시되지 않음",
                                        "const": "UNSPECIFIED"
                                    }
                                ]
                            }
                        },
                        "required": [
                            "approvalStatus",
                            "reviewStatus"
                        ],
                        "title": "Evaluation of advertising review and policies",
                        "type": "object"
                    }
                },
                "required": [
                    "status",
                    "resourceName",
                    "policySummary"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.IGetAdGroupAdInput": {
                "properties": {
                    "adGroupAdResourceName": {
                        "pattern": "(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroupAds\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Resource name of the ad group ad",
                        "x-wrtn-placeholder": "customers/1/adGroupAds/1~1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:resourceName, label:resourceName}",
                            "method": "post",
                            "path": "connector/google-ads/get-ads"
                        },
                        "type": "string"
                    },
                    "customerId": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Customer Resource ID",
                        "description": "This is the customer's resource ID.\n\nIt means the remaining number format after removing 'customers/' from the `customers/${number}` format.\n\n`Wrtn`'s `google ads`-related connectors must receive the `customerId` property to determine which advertising account the customer has, that is, which advertising account among the customers, to use.\n\nSince most users have only one advertising account, if `customerId` is not provided as an argument, the advertising account that is retrieved as number 0 is used unconditionally.\n\nIf a user with two or more advertising accounts does not provide `customerId`, it is always considered a failure.",
                        "x-wrtn-placeholder": "1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-customers"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/adwords"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.IGetMetricOutputResult": {
                "properties": {
                    "metrics": {
                        "properties": {
                            "impressions": {
                                "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                                "title": "Number of exposures",
                                "type": "string"
                            },
                            "clicks": {
                                "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                                "title": "Clicks",
                                "type": "string"
                            },
                            "costMicros": {
                                "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                                "title": "Advertising Spend (in micro units)",
                                "description": "KRW value expressed in 1/1,000,000",
                                "type": "string"
                            },
                            "videoViews": {
                                "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                                "title": "Video View",
                                "type": "string"
                            },
                            "averagePageViews": {
                                "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                                "title": "Average Page Views",
                                "type": "string"
                            },
                            "videoQuartileP25Rate": {
                                "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                                "title": "25% of the videos were viewed",
                                "type": "string"
                            },
                            "videoQuartileP50Rate": {
                                "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                                "title": "50% of the video was viewed",
                                "type": "string"
                            },
                            "videoQuartileP75Rate": {
                                "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                                "title": "75% of the videos were viewed",
                                "type": "string"
                            },
                            "videoQuartileP100Rate": {
                                "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                                "title": "100% of the video has been viewed",
                                "type": "string"
                            }
                        },
                        "required": [
                            "impressions",
                            "clicks",
                            "costMicros",
                            "videoViews"
                        ],
                        "type": "object"
                    },
                    "adGroupAd": {
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIGoogleAds.AdGroupAdresourceName"
                    }
                },
                "required": [
                    "metrics",
                    "adGroupAd"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIGoogleAds.AdGroupAdresourceName": {
                "properties": {
                    "resourceName": {
                        "pattern": "(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroupAds\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Resource name of the ad group ad",
                        "description": "`customers/${number}/adGroupAds/${number}~${number}` format",
                        "x-wrtn-placeholder": "customers/1/adGroupAds/1~1",
                        "type": "string"
                    }
                },
                "required": [
                    "resourceName"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.IGetMetricInput": {
                "properties": {
                    "date": {
                        "format": "date",
                        "title": "Statistics query date",
                        "type": "string"
                    },
                    "customerId": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Customer Resource ID",
                        "description": "This is the customer's resource ID.\n\nIt means the remaining number format after removing 'customers/' from the `customers/${number}` format.\n\n`Wrtn`'s `google ads`-related connectors must receive the `customerId` property to determine which advertising account the customer has, that is, which advertising account among the customers, to use.\n\nSince most users have only one advertising account, if `customerId` is not provided as an argument, the advertising account that is retrieved as number 0 is used unconditionally.\n\nIf a user with two or more advertising accounts does not provide `customerId`, it is always considered a failure.",
                        "x-wrtn-placeholder": "1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-customers"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/adwords"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "date",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.IGetKeywordsOutputResult": {
                "properties": {
                    "adGroupCriterion": {
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickAdGroupCriteriontypestatuskeywordresourceNamecriterionIdKeyword"
                    }
                },
                "required": [
                    "adGroupCriterion"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickAdGroupCriteriontypestatuskeywordresourceNamecriterionIdKeyword": {
                "properties": {
                    "type": {
                        "title": "type",
                        "const": "KEYWORD"
                    },
                    "status": {
                        "title": "Ad Group Standard Status",
                        "oneOf": [
                            {
                                "title": "ENABLED",
                                "const": "ENABLED"
                            },
                            {
                                "title": "PAUSED",
                                "const": "PAUSED"
                            },
                            {
                                "title": "REMOVED",
                                "const": "REMOVED"
                            },
                            {
                                "title": "UNKNOWN",
                                "const": "UNKNOWN"
                            },
                            {
                                "title": "UNSPECIFIED",
                                "const": "UNSPECIFIED"
                            }
                        ]
                    },
                    "keyword": {
                        "title": "keyword",
                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.Keyword"
                    },
                    "resourceName": {
                        "pattern": "(customers\\/(.*)\\/adGroupCriteria\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Ad Group Standard Resource Name\n\nFormat: `customers/${number}/adGroupCriteria/number~${number}`",
                        "x-wrtn-placeholder": "customers/1/adGroupCriteria/1",
                        "type": "string"
                    },
                    "criterionId": {
                        "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                        "title": "Ad Group Standard ID",
                        "type": "string"
                    },
                    "text": {
                        "title": "Keyword Text",
                        "type": "string"
                    },
                    "matchType": {
                        "title": "Keyword Match Type",
                        "oneOf": [
                            {
                                "title": "명시되지 않음",
                                "const": "UNSPECIFIED"
                            },
                            {
                                "title": "알 수 없음",
                                "const": "UNKNOWN"
                            },
                            {
                                "title": "완전일치",
                                "const": "EXACT"
                            },
                            {
                                "title": "구문일치",
                                "const": "PHRASE"
                            },
                            {
                                "title": "확장검색",
                                "const": "BROAD"
                            }
                        ]
                    }
                },
                "required": [
                    "type",
                    "status",
                    "keyword",
                    "resourceName",
                    "criterionId",
                    "text",
                    "matchType"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.Keyword": {
                "properties": {
                    "text": {
                        "title": "Keyword Text",
                        "type": "string"
                    },
                    "matchType": {
                        "title": "Keyword Match Type",
                        "oneOf": [
                            {
                                "title": "명시되지 않음",
                                "const": "UNSPECIFIED"
                            },
                            {
                                "title": "알 수 없음",
                                "const": "UNKNOWN"
                            },
                            {
                                "title": "완전일치",
                                "const": "EXACT"
                            },
                            {
                                "title": "구문일치",
                                "const": "PHRASE"
                            },
                            {
                                "title": "확장검색",
                                "const": "BROAD"
                            }
                        ]
                    }
                },
                "required": [
                    "text",
                    "matchType"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.IGetKeywordsInput": {
                "properties": {
                    "adGroupResourceName": {
                        "pattern": "(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroups\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Ad Group Resource Name",
                        "x-wrtn-placeholder": "customers/1/adGroups/1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].adGroup.{value:resourceName, label:resourceName}",
                            "method": "post",
                            "path": "connector/google-ads/get-ad-groups"
                        },
                        "type": "string"
                    },
                    "customerId": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Customer Resource ID",
                        "description": "This is the customer's resource ID.\n\nIt means the remaining number format after removing 'customers/' from the `customers/${number}` format.\n\n`Wrtn`'s `google ads`-related connectors must receive the `customerId` property to determine which advertising account the customer has, that is, which advertising account among the customers, to use.\n\nSince most users have only one advertising account, if `customerId` is not provided as an argument, the advertising account that is retrieved as number 0 is used unconditionally.\n\nIf a user with two or more advertising accounts does not provide `customerId`, it is always considered a failure.",
                        "x-wrtn-placeholder": "1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-customers"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/adwords"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "adGroupResourceName",
                    "secretKey"
                ],
                "title": "Keyword search conditions",
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.ISetOnOffInput": {
                "properties": {
                    "adGroupAdResourceName": {
                        "pattern": "(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroupAds\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Resource name of the ad group ad",
                        "x-wrtn-placeholder": "customers/1/adGroupAds/1~1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:resourceName, label:resourceName}",
                            "method": "post",
                            "path": "connector/google-ads/get-ads"
                        },
                        "type": "string"
                    },
                    "status": {
                        "title": "Ad Status",
                        "oneOf": [
                            {
                                "title": "ENABLED",
                                "const": "ENABLED"
                            },
                            {
                                "title": "PAUSED",
                                "const": "PAUSED"
                            }
                        ]
                    },
                    "customerId": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Customer Resource ID",
                        "description": "This is the customer's resource ID.\n\nIt means the remaining number format after removing 'customers/' from the `customers/${number}` format.\n\n`Wrtn`'s `google ads`-related connectors must receive the `customerId` property to determine which advertising account the customer has, that is, which advertising account among the customers, to use.\n\nSince most users have only one advertising account, if `customerId` is not provided as an argument, the advertising account that is retrieved as number 0 is used unconditionally.\n\nIf a user with two or more advertising accounts does not provide `customerId`, it is always considered a failure.",
                        "x-wrtn-placeholder": "1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-customers"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/adwords"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "adGroupAdResourceName",
                    "status",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.IDeleteAdGroupCriteriaInput": {
                "properties": {
                    "resourceNames": {
                        "title": "ID of the keyword to be deleted",
                        "items": {
                            "pattern": "(customers\\/(.*)\\/adGroupCriteria\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                            "x-wrtn-placeholder": "customers/1/adGroupCriteria/1",
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].adGroupCriterion.{value:resourceName, label:text}",
                                "method": "post",
                                "path": "connector/google-ads/get-keywords"
                            },
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "customerId": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Customer Resource ID",
                        "description": "This is the customer's resource ID.\n\nIt means the remaining number format after removing 'customers/' from the `customers/${number}` format.\n\n`Wrtn`'s `google ads`-related connectors must receive the `customerId` property to determine which advertising account the customer has, that is, which advertising account among the customers, to use.\n\nSince most users have only one advertising account, if `customerId` is not provided as an argument, the advertising account that is retrieved as number 0 is used unconditionally.\n\nIf a user with two or more advertising accounts does not provide `customerId`, it is always considered a failure.",
                        "x-wrtn-placeholder": "1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-customers"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/adwords"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "resourceNames",
                    "secretKey"
                ],
                "title": "Keyword deletion condition",
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.ICreateAdGroupCriteriaInput": {
                "properties": {
                    "adGroupResourceName": {
                        "pattern": "(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroups\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Resource name of the ad group to which you want to add the keyword",
                        "x-wrtn-placeholder": "customers/1/adGroups/1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].adGroup.{value:resourceName, label:resourceName}",
                            "method": "post",
                            "path": "connector/google-ads/get-ad-groups"
                        },
                        "type": "string"
                    },
                    "keywords": {
                        "title": "Keyword to generate",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "customerId": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Customer Resource ID",
                        "description": "This is the customer's resource ID.\n\nIt means the remaining number format after removing 'customers/' from the `customers/${number}` format.\n\n`Wrtn`'s `google ads`-related connectors must receive the `customerId` property to determine which advertising account the customer has, that is, which advertising account among the customers, to use.\n\nSince most users have only one advertising account, if `customerId` is not provided as an argument, the advertising account that is retrieved as number 0 is used unconditionally.\n\nIf a user with two or more advertising accounts does not provide `customerId`, it is always considered a failure.",
                        "x-wrtn-placeholder": "1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-customers"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/adwords"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "adGroupResourceName",
                    "keywords",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.IGetAdGroupAdDetailOutput": {
                "properties": {
                    "resourceName": {
                        "pattern": "(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroupAds\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Resource name of the ad group ad",
                        "x-wrtn-placeholder": "customers/1/adGroupAds/1~1",
                        "type": "string"
                    },
                    "status": {
                        "title": "Current status of advertising",
                        "oneOf": [
                            {
                                "title": "ENABLED",
                                "const": "ENABLED"
                            },
                            {
                                "title": "PAUSED",
                                "const": "PAUSED"
                            },
                            {
                                "title": "REMOVED",
                                "const": "REMOVED"
                            },
                            {
                                "title": "UNKNOWN",
                                "const": "UNKNOWN"
                            },
                            {
                                "title": "UNSPECIFIED",
                                "const": "UNSPECIFIED"
                            }
                        ]
                    },
                    "ad": {
                        "properties": {
                            "resourceName": {
                                "pattern": "^(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/ads\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
                                "title": "Resource name of the advertisement",
                                "type": "string"
                            },
                            "detail": {
                                "title": "Advertising material information",
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.ResponsiveSearchAd"
                                    },
                                    {
                                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.ResponsiveDisplayAd"
                                    }
                                ]
                            }
                        },
                        "required": [
                            "resourceName",
                            "detail"
                        ],
                        "title": "Viewed Ad History",
                        "type": "object"
                    }
                },
                "required": [
                    "resourceName",
                    "status",
                    "ad"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.ResponsiveSearchAd": {
                "properties": {
                    "descriptions": {
                        "title": "Description List",
                        "items": {
                            "properties": {
                                "text": {
                                    "title": "Registered description",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "text"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "headlines": {
                        "title": "List of titles",
                        "items": {
                            "properties": {
                                "text": {
                                    "title": "Registered title",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "text"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "descriptions",
                    "headlines"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.ResponsiveDisplayAd": {
                "properties": {
                    "longHeadline": {
                        "title": "long title"
                    },
                    "businessName": {
                        "title": "Brand Name"
                    },
                    "marketingImages": {},
                    "squareMarketingImages": {},
                    "squareLogoImages": {},
                    "descriptions": {
                        "title": "Description List",
                        "items": {
                            "properties": {
                                "text": {
                                    "title": "Registered description",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "text"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "headlines": {
                        "title": "List of titles",
                        "items": {
                            "properties": {
                                "text": {
                                    "title": "Registered title",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "text"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "longHeadline",
                    "businessName",
                    "marketingImages",
                    "squareMarketingImages",
                    "squareLogoImages",
                    "descriptions",
                    "headlines"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.IGetAdGroupAdDetailInput": {
                "properties": {
                    "adGroupAdResourceName": {
                        "pattern": "(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroupAds\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Resource name of the ad group ad",
                        "x-wrtn-placeholder": "customers/1/adGroupAds/1~1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:resourceName, label:resourceName}",
                            "method": "post",
                            "path": "connector/google-ads/get-ads"
                        },
                        "type": "string"
                    },
                    "customerId": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Customer Resource ID",
                        "description": "This is the customer's resource ID.\n\nIt means the remaining number format after removing 'customers/' from the `customers/${number}` format.\n\n`Wrtn`'s `google ads`-related connectors must receive the `customerId` property to determine which advertising account the customer has, that is, which advertising account among the customers, to use.\n\nSince most users have only one advertising account, if `customerId` is not provided as an argument, the advertising account that is retrieved as number 0 is used unconditionally.\n\nIf a user with two or more advertising accounts does not provide `customerId`, it is always considered a failure.",
                        "x-wrtn-placeholder": "1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-customers"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/adwords"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "adGroupAdResourceName",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISecretICreateAdGroupSearchAdInput": {
                "properties": {
                    "customerId": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Customer Resource ID",
                        "description": "This is the customer's resource ID.\n\nIt means the remaining number format after removing 'customers/' from the `customers/${number}` format.\n\n`Wrtn`'s `google ads`-related connectors must receive the `customerId` property to determine which advertising account the customer has, that is, which advertising account among the customers, to use.\n\nSince most users have only one advertising account, if `customerId` is not provided as an argument, the advertising account that is retrieved as number 0 is used unconditionally.\n\nIf a user with two or more advertising accounts does not provide `customerId`, it is always considered a failure.",
                        "x-wrtn-placeholder": "1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-customers"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/adwords"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "finalUrl": {
                        "format": "iri",
                        "title": "Homepage that is the target of the advertisement",
                        "type": "string"
                    },
                    "headlines": {
                        "minItems": 1,
                        "maxItems": 15,
                        "title": "title list",
                        "items": {
                            "minLength": 1,
                            "maxLength": 30,
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "descriptions": {
                        "minItems": 1,
                        "maxItems": 4,
                        "title": "Description List",
                        "items": {
                            "minLength": 1,
                            "maxLength": 90,
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "type": {
                        "title": "Ad Group Type",
                        "const": "SEARCH_STANDARD"
                    },
                    "campaignResourceName": {
                        "pattern": "(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaigns\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Campaign Resource Name",
                        "x-wrtn-placeholder": "customers/1/campaigns/1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].campaign.{value:name, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-campaigns"
                        },
                        "type": "string"
                    },
                    "keywords": {
                        "title": "Keyword to generate",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "customerId",
                    "secretKey",
                    "finalUrl",
                    "headlines",
                    "descriptions",
                    "type",
                    "campaignResourceName",
                    "keywords"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISecretICreateAdGroupDisplayAdInput": {
                "properties": {
                    "customerId": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Customer Resource ID",
                        "description": "This is the customer's resource ID.\n\nIt means the remaining number format after removing 'customers/' from the `customers/${number}` format.\n\n`Wrtn`'s `google ads`-related connectors must receive the `customerId` property to determine which advertising account the customer has, that is, which advertising account among the customers, to use.\n\nSince most users have only one advertising account, if `customerId` is not provided as an argument, the advertising account that is retrieved as number 0 is used unconditionally.\n\nIf a user with two or more advertising accounts does not provide `customerId`, it is always considered a failure.",
                        "x-wrtn-placeholder": "1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-customers"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/adwords"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "finalUrl": {
                        "format": "iri",
                        "title": "Homepage that is the target of the advertisement",
                        "type": "string"
                    },
                    "headlines": {
                        "minItems": 1,
                        "maxItems": 5,
                        "title": "List of short titles",
                        "items": {
                            "minLength": 1,
                            "maxLength": 30,
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "longHeadline": {
                        "minLength": 1,
                        "maxLength": 90,
                        "title": "long title",
                        "type": "string"
                    },
                    "descriptions": {
                        "minItems": 1,
                        "maxItems": 5,
                        "title": "Description List",
                        "items": {
                            "minLength": 1,
                            "maxLength": 90,
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "businessName": {
                        "minLength": 1,
                        "maxLength": 25,
                        "title": "Business and Brand Name",
                        "type": "string"
                    },
                    "landscapeImages": {
                        "minItems": 1,
                        "maxItems": 15,
                        "title": "Landscape image",
                        "description": "Landscape image with 1.91:1 resolution, recommended 5 frames",
                        "items": {
                            "format": "uri",
                            "contentMediaType": "image/*",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "logoImages": {
                        "minItems": 1,
                        "maxItems": 5,
                        "title": "Logo image",
                        "description": "Square image, minimum size 128x128px, recommended 1200x1200px",
                        "items": {
                            "format": "uri",
                            "contentMediaType": "image/*",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "squareImages": {
                        "minItems": 1,
                        "maxItems": 15,
                        "title": "Square image",
                        "description": "A landscape image with a 1.91:1 aspect ratio, with a minimum size of 300x300px, and a recommended size of 600x600px.",
                        "items": {
                            "format": "uri",
                            "contentMediaType": "image/*",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "type": {
                        "title": "Ad Group Type",
                        "const": "DISPLAY_STANDARD"
                    },
                    "campaignResourceName": {
                        "pattern": "(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaigns\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Campaign Resource Name",
                        "x-wrtn-placeholder": "customers/1/campaigns/1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].campaign.{value:name, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-campaigns"
                        },
                        "type": "string"
                    },
                    "keywords": {
                        "title": "Keyword to generate",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "customerId",
                    "secretKey",
                    "finalUrl",
                    "headlines",
                    "longHeadline",
                    "descriptions",
                    "businessName",
                    "landscapeImages",
                    "logoImages",
                    "squareImages",
                    "type",
                    "campaignResourceName",
                    "keywords"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.IUpdateCampaignInput": {
                "properties": {
                    "campaignResourceName": {
                        "pattern": "(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaigns\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Resource ID of the campaign to be modified",
                        "x-wrtn-placeholder": "customers/1/campaigns/1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].campaign.{value:name, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-campaigns"
                        },
                        "type": "string"
                    },
                    "campaignName": {
                        "title": "Campaign Name\n\nIf the name is left blank, a random name will be generated. The name must not be the same as a previously created campaign.",
                        "type": "string"
                    },
                    "campaignBudget": {
                        "maximum": 100000,
                        "title": "Advertising Budget",
                        "description": "Korean currency unit, Won\n\nOriginally, there is no limit on the amount, but in preparation for an emergency, the function is currently limited to 100,000 won per campaign.",
                        "type": "number"
                    },
                    "endDate": {
                        "format": "date",
                        "title": "Campaign End Time",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/adwords"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "customerId": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Customer Resource ID",
                        "description": "This is the customer's resource ID.\n\nIt means the remaining number format after removing 'customers/' from the `customers/${number}` format.\n\n`Wrtn`'s `google ads`-related connectors must receive the `customerId` property to determine which advertising account the customer has, that is, which advertising account among the customers, to use.\n\nSince most users have only one advertising account, if `customerId` is not provided as an argument, the advertising account that is retrieved as number 0 is used unconditionally.\n\nIf a user with two or more advertising accounts does not provide `customerId`, it is always considered a failure.",
                        "x-wrtn-placeholder": "1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-customers"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "campaignResourceName",
                    "secretKey"
                ],
                "title": "Campaign Modification Conditions",
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.ICreateCampaignInput": {
                "properties": {
                    "advertisingChannelType": {
                        "title": "Campaign Type",
                        "oneOf": [
                            {
                                "title": "검색 광고",
                                "description": "Google 검색에서 구매 의도가 높은 고객에게 적시에 노출",
                                "const": "SEARCH"
                            },
                            {
                                "title": "디스플레이 광고",
                                "description": "눈에 잘 띄는 광고 소재로 3백만 사이트와 앱에서 고객에게 도달",
                                "const": "DISPLAY"
                            }
                        ]
                    },
                    "campaignName": {
                        "title": "Campaign Name\n\nIf the name is left blank, a random name will be generated. The name must not be the same as a previously created campaign.",
                        "type": "string"
                    },
                    "startDate": {
                        "format": "date",
                        "title": "Campaign start time",
                        "type": "string"
                    },
                    "endDate": {
                        "format": "date",
                        "title": "Campaign End Time",
                        "type": "string"
                    },
                    "campaignBudget": {
                        "maximum": 100000,
                        "title": "Advertising Budget",
                        "description": "Korean currency unit, Won\n\nOriginally, there is no limit on the amount, but in preparation for an emergency, the function is currently limited to 100,000 won per campaign.",
                        "type": "number"
                    },
                    "customerId": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Customer Resource ID",
                        "description": "This is the customer's resource ID.\n\nIt means the remaining number format after removing 'customers/' from the `customers/${number}` format.\n\n`Wrtn`'s `google ads`-related connectors must receive the `customerId` property to determine which advertising account the customer has, that is, which advertising account among the customers, to use.\n\nSince most users have only one advertising account, if `customerId` is not provided as an argument, the advertising account that is retrieved as number 0 is used unconditionally.\n\nIf a user with two or more advertising accounts does not provide `customerId`, it is always considered a failure.",
                        "x-wrtn-placeholder": "1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-customers"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/adwords"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "advertisingChannelType",
                    "campaignBudget",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.DeepStrictMergeHelperIGoogleAds.IGetCampaignsOutputResultIGoogleAds.AdWrapper": {
                "properties": {
                    "ad": {
                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.IGetAdGroupsOutputResult"
                    },
                    "campaignBudget": {
                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.CampaignBudget"
                    },
                    "campaign": {
                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleAds.Campaign"
                    }
                },
                "required": [
                    "ad",
                    "campaignBudget",
                    "campaign"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.ICreateAdGroupSearchAdAtOnceInput": {
                "properties": {
                    "ad": {
                        "title": "Ad Creation Conditions",
                        "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGoogleAds.ICreateAdGroupSearchAdInputtypecustomerIdcampaignResourceName"
                    },
                    "campaign": {
                        "title": "Campaign Creation Conditions",
                        "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGoogleAds.ICreateCampaignInputsecretKeycustomerId"
                    },
                    "customerId": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Customer Resource ID",
                        "description": "This is the customer's resource ID.\n\nIt means the remaining number format after removing 'customers/' from the `customers/${number}` format.\n\n`Wrtn`'s `google ads`-related connectors must receive the `customerId` property to determine which advertising account the customer has, that is, which advertising account among the customers, to use.\n\nSince most users have only one advertising account, if `customerId` is not provided as an argument, the advertising account that is retrieved as number 0 is used unconditionally.\n\nIf a user with two or more advertising accounts does not provide `customerId`, it is always considered a failure.",
                        "x-wrtn-placeholder": "1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-customers"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/adwords"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "ad",
                    "campaign",
                    "secretKey"
                ],
                "title": "Request conditions for creating Google search campaigns and ads all at once",
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGoogleAds.ICreateAdGroupSearchAdInputtypecustomerIdcampaignResourceName": {
                "properties": {
                    "descriptions": {
                        "minItems": 1,
                        "maxItems": 4,
                        "title": "Description List",
                        "items": {
                            "minLength": 1,
                            "maxLength": 90,
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "headlines": {
                        "minItems": 1,
                        "maxItems": 15,
                        "title": "title list",
                        "items": {
                            "minLength": 1,
                            "maxLength": 30,
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "finalUrl": {
                        "format": "iri",
                        "title": "Homepage that is the target of the advertisement",
                        "type": "string"
                    },
                    "keywords": {
                        "title": "Keyword to generate",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "descriptions",
                    "headlines",
                    "finalUrl",
                    "keywords"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGoogleAds.ICreateCampaignInputsecretKeycustomerId": {
                "properties": {
                    "campaignName": {
                        "title": "Campaign Name\n\nIf the name is left blank, a random name will be generated. The name must not be the same as a previously created campaign.",
                        "type": "string"
                    },
                    "campaignBudget": {
                        "maximum": 100000,
                        "title": "Advertising Budget",
                        "description": "Korean currency unit, Won\n\nOriginally, there is no limit on the amount, but in preparation for an emergency, the function is currently limited to 100,000 won per campaign.",
                        "type": "number"
                    },
                    "endDate": {
                        "format": "date",
                        "title": "Campaign End Time",
                        "type": "string"
                    },
                    "advertisingChannelType": {
                        "title": "Campaign Type",
                        "oneOf": [
                            {
                                "title": "검색 광고",
                                "description": "Google 검색에서 구매 의도가 높은 고객에게 적시에 노출",
                                "const": "SEARCH"
                            },
                            {
                                "title": "디스플레이 광고",
                                "description": "눈에 잘 띄는 광고 소재로 3백만 사이트와 앱에서 고객에게 도달",
                                "const": "DISPLAY"
                            }
                        ]
                    },
                    "startDate": {
                        "format": "date",
                        "title": "Campaign start time",
                        "type": "string"
                    }
                },
                "required": [
                    "campaignBudget",
                    "advertisingChannelType"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleAds.ICreateAdGroupDisplayAdAtOnceInput": {
                "properties": {
                    "ad": {
                        "title": "Ad Creation Conditions",
                        "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGoogleAds.ICreateAdGroupDisplayAdInputtypecustomerIdcampaignResourceName"
                    },
                    "campaign": {
                        "title": "Campaign Creation Conditions",
                        "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGoogleAds.ICreateCampaignInputsecretKeycustomerId"
                    },
                    "customerId": {
                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                        "title": "Customer Resource ID",
                        "description": "This is the customer's resource ID.\n\nIt means the remaining number format after removing 'customers/' from the `customers/${number}` format.\n\n`Wrtn`'s `google ads`-related connectors must receive the `customerId` property to determine which advertising account the customer has, that is, which advertising account among the customers, to use.\n\nSince most users have only one advertising account, if `customerId` is not provided as an argument, the advertising account that is retrieved as number 0 is used unconditionally.\n\nIf a user with two or more advertising accounts does not provide `customerId`, it is always considered a failure.",
                        "x-wrtn-placeholder": "1",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:id}",
                            "method": "post",
                            "path": "connector/google-ads/get-customers"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "google",
                        "x-wrtn-secret-scopes": [
                            "https://www.googleapis.com/auth/adwords"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "ad",
                    "campaign",
                    "secretKey"
                ],
                "title": "Request conditions for creating ads from Google display campaigns at once",
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGoogleAds.ICreateAdGroupDisplayAdInputtypecustomerIdcampaignResourceName": {
                "properties": {
                    "descriptions": {
                        "minItems": 1,
                        "maxItems": 5,
                        "title": "Description List",
                        "items": {
                            "minLength": 1,
                            "maxLength": 90,
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "headlines": {
                        "minItems": 1,
                        "maxItems": 5,
                        "title": "List of short titles",
                        "items": {
                            "minLength": 1,
                            "maxLength": 30,
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "finalUrl": {
                        "format": "iri",
                        "title": "Homepage that is the target of the advertisement",
                        "type": "string"
                    },
                    "keywords": {
                        "title": "Keyword to generate",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "longHeadline": {
                        "minLength": 1,
                        "maxLength": 90,
                        "title": "long title",
                        "type": "string"
                    },
                    "businessName": {
                        "minLength": 1,
                        "maxLength": 25,
                        "title": "Business and Brand Name",
                        "type": "string"
                    },
                    "landscapeImages": {
                        "minItems": 1,
                        "maxItems": 15,
                        "title": "Landscape image",
                        "description": "Landscape image with 1.91:1 resolution, recommended 5 frames",
                        "items": {
                            "format": "uri",
                            "contentMediaType": "image/*",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "logoImages": {
                        "minItems": 1,
                        "maxItems": 5,
                        "title": "Logo image",
                        "description": "Square image, minimum size 128x128px, recommended 1200x1200px",
                        "items": {
                            "format": "uri",
                            "contentMediaType": "image/*",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "squareImages": {
                        "minItems": 1,
                        "maxItems": 15,
                        "title": "Square image",
                        "description": "A landscape image with a 1.91:1 aspect ratio, with a minimum size of 300x300px, and a recommended size of 600x600px.",
                        "items": {
                            "format": "uri",
                            "contentMediaType": "image/*",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "descriptions",
                    "headlines",
                    "finalUrl",
                    "keywords",
                    "longHeadline",
                    "businessName",
                    "landscapeImages",
                    "logoImages",
                    "squareImages"
                ],
                "type": "object"
            },
            "_namespace_swagger.IConnector.ISearchOutput": {
                "properties": {
                    "references": {
                        "title": "Output Information",
                        "description": "Contains output information for search results",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IConnector.IReferenceContent"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "references"
                ],
                "title": "Search Results",
                "type": "object"
            },
            "_namespace_swagger.IConnector.ISearchInput": {
                "properties": {
                    "num_results": {
                        "title": "Number of search results",
                        "description": "Sets how many search results to retrieve",
                        "x-wrtn-placeholder": "10",
                        "type": "integer"
                    },
                    "from_date": {
                        "format": "date",
                        "title": "Start date for search results",
                        "description": "Set the start date for search results",
                        "type": "string"
                    },
                    "to_date": {
                        "format": "date",
                        "title": "End date for the search results",
                        "description": "Set the end date for the search results",
                        "type": "string"
                    },
                    "and_keywords": {
                        "title": "Must be included keywords",
                        "description": "Keywords that must be included in search results",
                        "items": {
                            "minLength": 1,
                            "x-wrtn-placeholder": "biology",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "or_keywords": {
                        "title": "Keywords that you would like to see included",
                        "description": "Keywords that you would like to see included in your search results",
                        "items": {
                            "minLength": 1,
                            "x-wrtn-placeholder": "ecosystem",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "not_keywords": {
                        "title": "Keywords that should not be included",
                        "description": "Keywords that should not be included in search results",
                        "items": {
                            "minLength": 1,
                            "x-wrtn-placeholder": "pollution",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "and_keywords"
                ],
                "title": "Search criteria",
                "description": "Enter your search criteria",
                "type": "object"
            },
            "_namespace_swagger.IDaum.IBlogDaumOutput": {
                "properties": {
                    "meta": {
                        "properties": {
                            "totalCount": {
                                "title": "Number of searched contents",
                                "description": "Total number of documents searched.",
                                "type": "number"
                            },
                            "pageableCount": {
                                "title": "The number of content that can be exposed among the searched documents",
                                "description": "The number of content that can be exposed among the searched documents.",
                                "type": "number"
                            },
                            "isEnd": {
                                "title": "Whether the current page is the last page",
                                "description": "If the value is false, you can request the next page by incrementing page.",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "totalCount",
                            "pageableCount",
                            "isEnd"
                        ],
                        "type": "object"
                    },
                    "documents": {
                        "items": {
                            "properties": {
                                "title": {
                                    "title": "The title of the document",
                                    "description": "The title of the document searched.",
                                    "type": "string"
                                },
                                "contents": {
                                    "title": "Part of the text of the document",
                                    "description": "This is part of the text of the document that was searched.",
                                    "type": "string"
                                },
                                "url": {
                                    "title": "Document URL",
                                    "description": "The URL of the document being searched.",
                                    "type": "string"
                                },
                                "blogName": {
                                    "title": "The name of the blog",
                                    "description": "The name of the blog searched.",
                                    "type": "string"
                                },
                                "thumbnail": {
                                    "contentMediaType": "image/*",
                                    "title": "Thumbnail image URL",
                                    "description": "Representative preview image URL extracted from the search system.",
                                    "type": "string"
                                },
                                "dateTime": {
                                    "title": "Document Creation Time",
                                    "description": "The time the document was created.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "title",
                                "contents",
                                "url",
                                "blogName",
                                "thumbnail",
                                "dateTime"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "meta",
                    "documents"
                ],
                "title": "Next blog search results",
                "type": "object"
            },
            "_namespace_swagger.IDaum.ISearchDaumInput": {
                "properties": {
                    "andKeywords": {
                        "title": "Must-include keywords",
                        "description": "Set keywords that must be included in the following search results.",
                        "x-wrtn-placeholder": "뤼튼",
                        "type": "string"
                    },
                    "orKeywords": {
                        "title": "Good keywords to enter",
                        "description": "Set good keywords to enter the following search results.",
                        "x-wrtn-placeholder": "스튜디오",
                        "type": "string"
                    },
                    "notKeywords": {
                        "title": "Keywords that should not be included",
                        "description": "Set keywords that should not be included in the following search results.",
                        "x-wrtn-placeholder": "폭력",
                        "type": "string"
                    },
                    "sort": {
                        "description": "- accuracy: accuracy order (default)\n- recency: most recent order",
                        "title": "Sorting method for result documents",
                        "oneOf": [
                            {
                                "x-wrtn-placeholder": "accuracy",
                                "const": "accuracy"
                            },
                            {
                                "x-wrtn-placeholder": "accuracy",
                                "const": "recency"
                            }
                        ]
                    },
                    "page": {
                        "default": 1,
                        "minimum": 1,
                        "maximum": 50,
                        "title": "Results page number",
                        "description": "The number of the results page.",
                        "type": "number"
                    },
                    "size": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 50,
                        "title": "The number of documents to be displayed on one page",
                        "description": "The number of documents to be displayed on one page.",
                        "type": "number"
                    }
                },
                "required": [
                    "andKeywords"
                ],
                "title": "Information needed for the next search",
                "type": "object"
            },
            "_namespace_swagger.IDaum.ICafeDaumOutput": {
                "properties": {
                    "meta": {
                        "properties": {
                            "totalCount": {
                                "title": "Number of searched cafe contents",
                                "description": "Total number of searched cafes.",
                                "type": "number"
                            },
                            "pageableCount": {
                                "title": "The number of contents that can be exposed among the searched cafe contents",
                                "description": "The number of contents that can be exposed among the searched cafe contents.",
                                "type": "number"
                            },
                            "isEnd": {
                                "title": "Whether the current page is the last page",
                                "description": "If the value is false, you can request the next page by incrementing page.",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "totalCount",
                            "pageableCount",
                            "isEnd"
                        ],
                        "type": "object"
                    },
                    "documents": {
                        "items": {
                            "properties": {
                                "title": {
                                    "title": "The title of the document",
                                    "description": "The title of the document searched.",
                                    "type": "string"
                                },
                                "contents": {
                                    "title": "Part of the text of the document",
                                    "description": "This is part of the text of the document that was searched.",
                                    "type": "string"
                                },
                                "url": {
                                    "title": "Document URL",
                                    "description": "The URL of the document being searched.",
                                    "type": "string"
                                },
                                "cafeName": {
                                    "title": "Cafe Name",
                                    "description": "The following cafe name is searched.",
                                    "type": "string"
                                },
                                "thumbnail": {
                                    "contentMediaType": "image/*",
                                    "title": "Thumbnail image URL",
                                    "description": "Representative preview image URL extracted from the search system.",
                                    "type": "string"
                                },
                                "dateTime": {
                                    "title": "Document Creation Time",
                                    "description": "The time the document was created.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "title",
                                "contents",
                                "url",
                                "cafeName",
                                "thumbnail",
                                "dateTime"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "meta",
                    "documents"
                ],
                "title": "Next Cafe Search Results",
                "type": "object"
            },
            "_namespace_swagger.INaver.ICafeNaverOutput": {
                "properties": {
                    "data": {
                        "properties": {
                            "lastBuildDate": {
                                "title": "The time the search results were generated",
                                "description": "The time the search results were generated.",
                                "type": "string"
                            },
                            "total": {
                                "title": "Total number of search results",
                                "description": "Total number of search results.",
                                "type": "number"
                            },
                            "start": {
                                "title": "The starting position of the search",
                                "description": "The starting position of the search results.",
                                "type": "number"
                            },
                            "display": {
                                "title": "The number of search results to display at one time",
                                "description": "The number of search results to display at one time.",
                                "type": "number"
                            },
                            "items": {
                                "title": "Individual search results",
                                "description": "Individual search results.",
                                "items": {
                                    "$ref": "#/components/schemas/_namespace_swagger.INaver.ICafeNaverItemOutput"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "lastBuildDate",
                            "total",
                            "start",
                            "display",
                            "items"
                        ],
                        "title": "Naver Cafe search result data",
                        "description": "Naver Cafe search result data.",
                        "type": "object"
                    }
                },
                "required": [
                    "data"
                ],
                "title": "Naver Cafe Search Results",
                "type": "object"
            },
            "_namespace_swagger.INaver.ICafeNaverItemOutput": {
                "properties": {
                    "title": {
                        "title": "Post title",
                        "description": "Title of Naver Cafe post.",
                        "type": "string"
                    },
                    "link": {
                        "title": "Post link",
                        "description": "Link to Naver Cafe post.",
                        "type": "string"
                    },
                    "description": {
                        "title": "Summary of post",
                        "description": "Summary of Naver Cafe post.",
                        "type": "string"
                    },
                    "cafename": {
                        "title": "The name of the cafe where the post is located",
                        "description": "The name of the cafe where the Naver Cafe post is located.",
                        "type": "string"
                    },
                    "cafeurl": {
                        "title": "Link to the cafe where the post is located",
                        "description": "Link to the cafe where the Naver Cafe post is located.",
                        "type": "string"
                    }
                },
                "required": [
                    "title",
                    "link",
                    "description",
                    "cafename",
                    "cafeurl"
                ],
                "title": "Naver Cafe Search Data",
                "type": "object"
            },
            "_namespace_swagger.INaver.INaverKeywordInput": {
                "properties": {
                    "andKeywords": {
                        "title": "Must-include keywords",
                        "description": "Keywords that must be included in search results.",
                        "x-wrtn-placeholder": "뤼튼",
                        "type": "string"
                    },
                    "orKeywords": {
                        "title": "Keywords that would be good to include",
                        "description": "Keywords that you would like to see included in the search results.",
                        "x-wrtn-placeholder": "스튜디오",
                        "type": "string"
                    },
                    "notKeywords": {
                        "title": "Keywords that should not be included",
                        "description": "Keywords that should not be included in search results.",
                        "x-wrtn-placeholder": "폭력",
                        "type": "string"
                    },
                    "display": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100,
                        "title": "Number to search",
                        "description": "Set how many search results to retrieve.\nMinimum 1, maximum 100, default 10.",
                        "x-wrtn-placeholder": "10",
                        "type": "number"
                    },
                    "sort": {
                        "description": "Indicates how to sort.\n\n- sim: Sort by accuracy descending (default).\n- date: Sort by date descending.",
                        "title": "Sort by",
                        "oneOf": [
                            {
                                "title": "sim",
                                "description": "정확도 순 내림착순 정렬",
                                "x-wrtn-placeholder": "sim",
                                "const": "sim"
                            },
                            {
                                "title": "date",
                                "description": "날짜순 내림차수 정렬",
                                "x-wrtn-placeholder": "sim",
                                "const": "date"
                            }
                        ]
                    }
                },
                "required": [
                    "andKeywords"
                ],
                "title": "Search Conditions",
                "type": "object"
            },
            "_namespace_swagger.INaver.IBlogNaverOutput": {
                "properties": {
                    "lastBuildDate": {
                        "title": "The time the search results were generated",
                        "description": "The time the search results were generated.",
                        "type": "string"
                    },
                    "total": {
                        "title": "Total number of search results",
                        "description": "Total number of search results.",
                        "type": "number"
                    },
                    "start": {
                        "title": "The starting position of the search",
                        "description": "The starting position of the search results.",
                        "type": "number"
                    },
                    "display": {
                        "title": "The number of search results to display at one time",
                        "description": "The number of search results to display at one time.",
                        "type": "number"
                    },
                    "items": {
                        "title": "Individual search results",
                        "description": "Individual search results.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.INaver.IBlogNaverItemOutput"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "lastBuildDate",
                    "total",
                    "start",
                    "display",
                    "items"
                ],
                "title": "Naver blog search results",
                "type": "object"
            },
            "_namespace_swagger.INaver.IBlogNaverItemOutput": {
                "properties": {
                    "title": {
                        "title": "Post title",
                        "description": "Title of Naver blog post.",
                        "type": "string"
                    },
                    "link": {
                        "title": "Post link",
                        "description": "Link to Naver blog post.",
                        "type": "string"
                    },
                    "description": {
                        "title": "Summary of post",
                        "description": "Summary of Naver blog post.",
                        "type": "string"
                    },
                    "bloggername": {
                        "title": "The name of the blog that contains the blog post",
                        "description": "The name of the blog that contains the Naver blog post.",
                        "type": "string"
                    },
                    "bloggerlink": {
                        "title": "Address of the blog that contains the blog post",
                        "description": "Address of the blog that contains the Naver blog post.",
                        "type": "string"
                    },
                    "postdate": {
                        "title": "The date the blog post was created",
                        "description": "The date the Naver blog post was created.",
                        "type": "string"
                    }
                },
                "required": [
                    "title",
                    "link",
                    "description",
                    "bloggername",
                    "bloggerlink",
                    "postdate"
                ],
                "title": "Naver blog search data",
                "type": "object"
            },
            "_namespace_swagger.INaver.INewsNaverOutput": {
                "properties": {
                    "lastBuildDate": {
                        "title": "The time the search results were generated",
                        "description": "The time the search results were generated.",
                        "type": "string"
                    },
                    "total": {
                        "title": "Total number of search results",
                        "description": "Total number of search results.",
                        "type": "number"
                    },
                    "start": {
                        "title": "The starting position of the search",
                        "description": "The starting position of the search results.",
                        "type": "number"
                    },
                    "display": {
                        "title": "The number of search results to display at one time",
                        "description": "The number of search results to display at one time.",
                        "type": "number"
                    },
                    "items": {
                        "title": "Individual search results",
                        "description": "Individual search results.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.INaver.INewsNaverItemOutput"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "lastBuildDate",
                    "total",
                    "start",
                    "display",
                    "items"
                ],
                "type": "object"
            },
            "_namespace_swagger.INaver.INewsNaverItemOutput": {
                "properties": {
                    "title": {
                        "title": "Title",
                        "description": "News Title.",
                        "type": "string"
                    },
                    "link": {
                        "format": "iri",
                        "title": "Naver News URL",
                        "description": "Naver News URL.",
                        "type": "string"
                    },
                    "originallink": {
                        "format": "iri",
                        "title": "Original URL",
                        "description": "Original URL of news article.",
                        "type": "string"
                    },
                    "description": {
                        "title": "Summary of the news article</b>",
                        "description": "The part that matches the search term <b>is wrapped in tags.",
                        "type": "string"
                    },
                    "pubDate": {
                        "title": "News article publication time",
                        "description": "The time the news article was provided to Naver.",
                        "type": "string"
                    }
                },
                "required": [
                    "title",
                    "link",
                    "originallink",
                    "description",
                    "pubDate"
                ],
                "title": "Naver News Search Data",
                "type": "object"
            },
            "_namespace_swagger.IYoutubeSearch.ISearchInput": {
                "properties": {
                    "and_keywords": {
                        "minItems": 1,
                        "title": "Must be included keywords",
                        "description": "Keywords that must be included in search results.",
                        "items": {
                            "minLength": 1,
                            "x-wrtn-placeholder": "뤼튼",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "or_keywords": {
                        "title": "Keywords that you would like to see included",
                        "description": "Keywords that you would like to see included in your search results.",
                        "items": {
                            "minLength": 1,
                            "x-wrtn-placeholder": "스튜디오",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "not_keywords": {
                        "title": "Keywords that should not be included",
                        "description": "Keywords that should not be included in search results.",
                        "items": {
                            "minLength": 1,
                            "x-wrtn-placeholder": "폭력",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "and_keywords"
                ],
                "title": "YouTube search conditions",
                "type": "object"
            },
            "_namespace_swagger.IGoogleScholar.ISearchOutput": {
                "properties": {
                    "id": {
                        "title": "Unique id of search result data",
                        "description": "Unique id of search result data.",
                        "type": "string"
                    },
                    "title": {
                        "title": "Title of the paper searched",
                        "description": "This is the title of the paper searched.",
                        "type": "string"
                    },
                    "link": {
                        "description": "Here is the link to the searched paper.",
                        "title": "Link to the searched paper",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    },
                    "snippet": {
                        "title": "Snippet of the search results",
                        "description": "Here is a snippet of the search results.",
                        "type": "string"
                    },
                    "publication_info": {
                        "title": "Publication Summary Information",
                        "description": "Here is the publication summary information for the searched paper.",
                        "type": "string"
                    },
                    "resource": {
                        "description": "Here is the reference information for the searched paper.",
                        "title": "Reference information",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IGoogleScholar.IResource"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "citation_count": {
                        "title": "Number of times cited",
                        "description": "The number of times the searched paper was cited.",
                        "type": "integer"
                    },
                    "related_pages_link": {
                        "format": "iri",
                        "title": "Links to related academic materials",
                        "description": "Here are links to academic materials related to the searched paper.",
                        "type": "string"
                    },
                    "version_info": {
                        "title": "Version information",
                        "description": "Here is the version information for the searched paper.",
                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleScholar.IVersion"
                    }
                },
                "required": [
                    "id",
                    "title",
                    "link",
                    "snippet",
                    "publication_info",
                    "resource",
                    "citation_count",
                    "related_pages_link",
                    "version_info"
                ],
                "title": "Search Results",
                "type": "object"
            },
            "_namespace_swagger.IGoogleScholar.IResource": {
                "properties": {
                    "title": {
                        "title": "Title of the reference material",
                        "description": "Title of the reference material.",
                        "type": "string"
                    },
                    "file_format": {
                        "title": "Reference file format",
                        "description": "This is the format of the reference file.",
                        "type": "string"
                    },
                    "link": {
                        "format": "iri",
                        "title": "Link to the reference material",
                        "description": "Here is a link to the reference material.",
                        "type": "string"
                    }
                },
                "required": [
                    "title",
                    "link"
                ],
                "title": "References",
                "type": "object"
            },
            "_namespace_swagger.IGoogleScholar.IVersion": {
                "properties": {
                    "version": {
                        "description": "Here is the version information.",
                        "title": "Version information",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "integer"
                            }
                        ]
                    },
                    "link": {
                        "description": "Here are the version-related links.",
                        "title": "Version-related links",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "version",
                    "link"
                ],
                "title": "version",
                "type": "object"
            },
            "_namespace_swagger.IGoogleScholar.ISearchInput": {
                "properties": {
                    "andKeyword": {
                        "title": "Keywords that must be included",
                        "description": "Keywords that must be included in search results.",
                        "items": {
                            "x-wrtn-placeholder": "biology",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "orKeyword": {
                        "title": "Keywords that you would like to see included",
                        "description": "Keywords that you would like to see included in your search results.",
                        "items": {
                            "x-wrtn-placeholder": "ecosystem",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "notKeyword": {
                        "title": "Keywords to exclude",
                        "description": "Keywords that should not be included in search results.",
                        "items": {
                            "x-wrtn-placeholder": "pollution",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "max_results": {
                        "title": "Number of search results",
                        "description": "Sets how many search results to retrieve.",
                        "x-wrtn-placeholder": "10",
                        "type": "integer"
                    }
                },
                "required": [
                    "andKeyword",
                    "max_results"
                ],
                "title": "Search Conditions",
                "type": "object"
            },
            "_namespace_swagger.ICsv.IReadOutput": {
                "properties": {
                    "data": {
                        "title": "csv data list",
                        "description": "Read csv file data.",
                        "items": {
                            "properties": {},
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "data"
                ],
                "title": "Csv file reading result",
                "type": "object"
            },
            "_namespace_swagger.ICsv.IReadInput": {
                "properties": {
                    "s3Url": {
                        "format": "iri",
                        "contentMediaType": "text/csv",
                        "title": "file",
                        "description": "This is the Csv file to read.",
                        "type": "string"
                    },
                    "delimiter": {
                        "title": "delimiter",
                        "description": "This is the CSV file delimiter to read.",
                        "x-wrtn-placeholder": ",",
                        "type": "string"
                    }
                },
                "required": [
                    "s3Url",
                    "delimiter"
                ],
                "title": "Csv file information",
                "type": "object"
            },
            "_namespace_swagger.ICsv.IWriteOutput": {
                "properties": {
                    "s3Url": {
                        "format": "iri",
                        "contentMediaType": "text/csv",
                        "title": "csv file",
                        "description": "This is the s3 url of the csv file that was created.",
                        "type": "string"
                    }
                },
                "required": [
                    "s3Url"
                ],
                "title": "Csv file creation result",
                "type": "object"
            },
            "_namespace_swagger.ICsv.IWriteInput": {
                "properties": {
                    "fileName": {
                        "title": "File name",
                        "description": "The name of the Csv file to be created.",
                        "x-wrtn-placeholder": "example.csv",
                        "type": "string"
                    },
                    "delimiter": {
                        "title": "delimiter",
                        "description": "The Csv file delimiter to be generated.",
                        "x-wrtn-placeholder": ",",
                        "type": "string"
                    },
                    "values": {
                        "title": "File data values",
                        "description": "These are the data values to be placed in the Csv file to be created.",
                        "items": {
                            "properties": {},
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "fileName",
                    "delimiter",
                    "values"
                ],
                "title": "Information required to create a CSV file",
                "type": "object"
            },
            "_namespace_swagger.ICsv.ICsvToExcelOutput": {
                "properties": {
                    "url": {
                        "format": "iri",
                        "contentMediaType": "text/csv",
                        "title": "s3 url",
                        "description": "Here is the s3 url of the converted excel file.",
                        "type": "string"
                    }
                },
                "required": [
                    "url"
                ],
                "title": "Csv file to Excel file conversion result",
                "type": "object"
            },
            "_namespace_swagger.ICsv.ICsvToExcelInput": {
                "properties": {
                    "s3Url": {
                        "format": "iri",
                        "contentMediaType": "text/csv",
                        "title": "file",
                        "description": "This is the file to convert from csv to excel.",
                        "type": "string"
                    },
                    "delimiter": {
                        "title": "delimiter",
                        "description": "This is the file delimiter to convert from csv to excel.",
                        "x-wrtn-placeholder": ",",
                        "type": "string"
                    }
                },
                "required": [
                    "s3Url",
                    "delimiter"
                ],
                "title": "Information needed to convert a Csv file to an Excel file",
                "type": "object"
            },
            "_namespace_swagger.INotion.IDeleteBlockInput": {
                "properties": {
                    "block_id": {
                        "description": "Indicates the ID of the page or block within the page to be deleted.\nIf you delete the page, it will go to the trash, so recovery is possible.",
                        "title": "block_id",
                        "oneOf": [
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:pageId, label:title}",
                                    "method": "post",
                                    "path": "/connector/notion/get/page"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:id}",
                                    "method": "post",
                                    "path": "/connector/notion/page"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "block_id",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.INotion.IAppendPageByMarkdownOutput": {
                "properties": {
                    "link": {
                        "format": "iri",
                        "title": "page link",
                        "type": "string"
                    },
                    "id": {
                        "title": "page id",
                        "description": "Unique id of the generated page",
                        "type": "string"
                    }
                },
                "required": [
                    "link",
                    "id"
                ],
                "type": "object"
            },
            "_namespace_swagger.INotion.IAppendPageByMarkdownInput": {
                "properties": {
                    "pageId": {
                        "description": "Indicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance.",
                        "title": "pageId",
                        "oneOf": [
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:pageId, label:title}",
                                    "method": "post",
                                    "path": "/connector/notion/get/page"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:id}",
                                    "method": "post",
                                    "path": "/connector/notion/page"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "markdown": {
                        "title": "markdown",
                        "description": "If you add a markdown string, it will be converted appropriately according to the Notion's block.\nTherefore, you don't have to use Unicode symbols to implement lists or decorate documents using letters.\nOf course, this depends on the user, and there is no problem using the character string you want, such as inserting an emoji as well as Unicode.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "pageId",
                    "markdown",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.INotion.ICreateChildContentTypeFileInput": {
                "properties": {
                    "file": {
                        "properties": {
                            "external": {
                                "properties": {
                                    "url": {
                                        "format": "iri",
                                        "title": "url\n\nYou can enter the path of the file you want to upload.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "url"
                                ],
                                "title": "external",
                                "type": "object"
                            },
                            "name": {
                                "title": "filename",
                                "type": "string"
                            },
                            "caption": {
                                "minItems": 1,
                                "maxItems": 1,
                                "title": "caption for this file",
                                "items": {
                                    "properties": {
                                        "text": {
                                            "properties": {
                                                "content": {
                                                    "type": "string"
                                                },
                                                "link": {
                                                    "properties": {
                                                        "url": {
                                                            "format": "iri",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "url"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "content"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "text"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "external"
                        ],
                        "title": "file",
                        "type": "object"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "pageId": {
                        "description": "Indicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance.",
                        "title": "pageId",
                        "oneOf": [
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:pageId, label:title}",
                                    "method": "post",
                                    "path": "/connector/notion/get/page"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:id}",
                                    "method": "post",
                                    "path": "/connector/notion/page"
                                },
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "file",
                    "secretKey",
                    "pageId"
                ],
                "type": "object"
            },
            "_namespace_swagger.INotion.ICreateChildContentTypeEmbedInput": {
                "properties": {
                    "embed": {
                        "properties": {
                            "url": {
                                "format": "iri",
                                "title": "url\n\nYou can enter the path of the file you want to embed.",
                                "type": "string"
                            },
                            "caption": {
                                "minItems": 1,
                                "maxItems": 1,
                                "title": "caption of this embed",
                                "items": {
                                    "properties": {
                                        "text": {
                                            "properties": {
                                                "content": {
                                                    "type": "string"
                                                },
                                                "link": {
                                                    "properties": {
                                                        "url": {
                                                            "format": "iri",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "url"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "content"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "text"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "url"
                        ],
                        "title": "embed",
                        "type": "object"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "pageId": {
                        "description": "Indicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance.",
                        "title": "pageId",
                        "oneOf": [
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:pageId, label:title}",
                                    "method": "post",
                                    "path": "/connector/notion/get/page"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:id}",
                                    "method": "post",
                                    "path": "/connector/notion/page"
                                },
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "embed",
                    "secretKey",
                    "pageId"
                ],
                "type": "object"
            },
            "_namespace_swagger.INotion.ICreateChildContentTypeBookmarkInput": {
                "properties": {
                    "bookmark": {
                        "properties": {
                            "url": {
                                "format": "iri",
                                "title": "url\n\nYou can enter the path of the file you want to bookmark.",
                                "type": "string"
                            },
                            "caption": {
                                "minItems": 1,
                                "maxItems": 1,
                                "title": "caption of this bookmark",
                                "items": {
                                    "properties": {
                                        "text": {
                                            "properties": {
                                                "content": {
                                                    "type": "string"
                                                },
                                                "link": {
                                                    "properties": {
                                                        "url": {
                                                            "format": "iri",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "url"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "content"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "text"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "url"
                        ],
                        "title": "bookmark",
                        "type": "object"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "pageId": {
                        "description": "Indicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance.",
                        "title": "pageId",
                        "oneOf": [
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:pageId, label:title}",
                                    "method": "post",
                                    "path": "/connector/notion/get/page"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:id}",
                                    "method": "post",
                                    "path": "/connector/notion/page"
                                },
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "bookmark",
                    "secretKey",
                    "pageId"
                ],
                "type": "object"
            },
            "_namespace_swagger.INotion.ICreateChildContentTypeImageInput": {
                "properties": {
                    "image": {
                        "properties": {
                            "external": {
                                "properties": {
                                    "url": {
                                        "format": "uri",
                                        "pattern": ".*\\.(bmp|gif|heic|jpe?g|png|svg|tiff?)(\\?.*)?",
                                        "title": "url\n\nimage file's extension is one of: 'bmp', 'gif', 'heic', 'jpg', 'jpeg', 'png', 'svg', 'tif', 'tiff'.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "url"
                                ],
                                "title": "external",
                                "type": "object"
                            },
                            "caption": {
                                "minItems": 1,
                                "maxItems": 1,
                                "title": "caption of this image",
                                "items": {
                                    "properties": {
                                        "text": {
                                            "properties": {
                                                "content": {
                                                    "type": "string"
                                                },
                                                "link": {
                                                    "properties": {
                                                        "url": {
                                                            "format": "iri",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "url"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "content"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "text"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "external"
                        ],
                        "title": "image",
                        "type": "object"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "pageId": {
                        "description": "Indicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance.",
                        "title": "pageId",
                        "oneOf": [
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:pageId, label:title}",
                                    "method": "post",
                                    "path": "/connector/notion/get/page"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:id}",
                                    "method": "post",
                                    "path": "/connector/notion/page"
                                },
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "image",
                    "secretKey",
                    "pageId"
                ],
                "type": "object"
            },
            "_namespace_swagger.INotion.ICreateChildContentTypeVideoInput": {
                "properties": {
                    "video": {
                        "properties": {
                            "external": {
                                "properties": {
                                    "url": {
                                        "format": "iri",
                                        "title": "url",
                                        "description": "video file must be one of: 'amv' ,'asf' ,'avi' ,'f4v' ,'flv' ,'gifv' ,'mkv' ,'mov' ,'mpg' ,'mpeg' ,'mpv' ,'mp4' ,'m4v' ,'qt' ,'wmv'\nOR\nYouTube video links that include embed or watch.\nE.g. https://www.youtube.com/watch?v=[id], https://www.youtube.com/embed/[id]",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "url"
                                ],
                                "type": "object"
                            },
                            "caption": {
                                "minItems": 1,
                                "maxItems": 1,
                                "title": "caption of this embed",
                                "items": {
                                    "properties": {
                                        "text": {
                                            "properties": {
                                                "content": {
                                                    "type": "string"
                                                },
                                                "link": {
                                                    "properties": {
                                                        "url": {
                                                            "format": "iri",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "url"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "content"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "text"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "external"
                        ],
                        "type": "object"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "pageId": {
                        "description": "Indicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance.",
                        "title": "pageId",
                        "oneOf": [
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:pageId, label:title}",
                                    "method": "post",
                                    "path": "/connector/notion/get/page"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:id}",
                                    "method": "post",
                                    "path": "/connector/notion/page"
                                },
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "video",
                    "secretKey",
                    "pageId"
                ],
                "type": "object"
            },
            "_namespace_swagger.INotion.ICreateChildContentTypePdfInput": {
                "properties": {
                    "pdf": {
                        "properties": {
                            "external": {
                                "properties": {
                                    "url": {
                                        "format": "iri",
                                        "pattern": ".*\\.(pdf)(\\?.*)?",
                                        "title": "url",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "url"
                                ],
                                "title": "external",
                                "type": "object"
                            },
                            "caption": {
                                "minItems": 1,
                                "maxItems": 1,
                                "title": "caption of this pdf",
                                "items": {
                                    "properties": {
                                        "text": {
                                            "properties": {
                                                "content": {
                                                    "type": "string"
                                                },
                                                "link": {
                                                    "properties": {
                                                        "url": {
                                                            "format": "iri",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "url"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "content"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "text"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "external"
                        ],
                        "title": "pdf",
                        "type": "object"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "pageId": {
                        "description": "Indicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance.",
                        "title": "pageId",
                        "oneOf": [
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:pageId, label:title}",
                                    "method": "post",
                                    "path": "/connector/notion/get/page"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:id}",
                                    "method": "post",
                                    "path": "/connector/notion/page"
                                },
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "pdf",
                    "secretKey",
                    "pageId"
                ],
                "type": "object"
            },
            "_namespace_swagger.INotion.ICreateChildContentTypeCodeInput": {
                "properties": {
                    "code": {
                        "properties": {
                            "language": {
                                "title": "programming language name",
                                "oneOf": [
                                    {
                                        "const": "c"
                                    },
                                    {
                                        "const": "reason"
                                    },
                                    {
                                        "const": "json"
                                    },
                                    {
                                        "const": "html"
                                    },
                                    {
                                        "const": "r"
                                    },
                                    {
                                        "const": "markdown"
                                    },
                                    {
                                        "const": "abap"
                                    },
                                    {
                                        "const": "agda"
                                    },
                                    {
                                        "const": "arduino"
                                    },
                                    {
                                        "const": "assembly"
                                    },
                                    {
                                        "const": "bash"
                                    },
                                    {
                                        "const": "basic"
                                    },
                                    {
                                        "const": "bnf"
                                    },
                                    {
                                        "const": "c#"
                                    },
                                    {
                                        "const": "c++"
                                    },
                                    {
                                        "const": "clojure"
                                    },
                                    {
                                        "const": "coffeescript"
                                    },
                                    {
                                        "const": "coq"
                                    },
                                    {
                                        "const": "css"
                                    },
                                    {
                                        "const": "dart"
                                    },
                                    {
                                        "const": "dhall"
                                    },
                                    {
                                        "const": "diff"
                                    },
                                    {
                                        "const": "docker"
                                    },
                                    {
                                        "const": "ebnf"
                                    },
                                    {
                                        "const": "elixir"
                                    },
                                    {
                                        "const": "elm"
                                    },
                                    {
                                        "const": "erlang"
                                    },
                                    {
                                        "const": "f#"
                                    },
                                    {
                                        "const": "flow"
                                    },
                                    {
                                        "const": "fortran"
                                    },
                                    {
                                        "const": "gherkin"
                                    },
                                    {
                                        "const": "glsl"
                                    },
                                    {
                                        "const": "go"
                                    },
                                    {
                                        "const": "graphql"
                                    },
                                    {
                                        "const": "groovy"
                                    },
                                    {
                                        "const": "haskell"
                                    },
                                    {
                                        "const": "idris"
                                    },
                                    {
                                        "const": "java"
                                    },
                                    {
                                        "const": "javascript"
                                    },
                                    {
                                        "const": "julia"
                                    },
                                    {
                                        "const": "kotlin"
                                    },
                                    {
                                        "const": "latex"
                                    },
                                    {
                                        "const": "less"
                                    },
                                    {
                                        "const": "lisp"
                                    },
                                    {
                                        "const": "livescript"
                                    },
                                    {
                                        "const": "llvm ir"
                                    },
                                    {
                                        "const": "lua"
                                    },
                                    {
                                        "const": "makefile"
                                    },
                                    {
                                        "const": "markup"
                                    },
                                    {
                                        "const": "matlab"
                                    },
                                    {
                                        "const": "mathematica"
                                    },
                                    {
                                        "const": "mermaid"
                                    },
                                    {
                                        "const": "nix"
                                    },
                                    {
                                        "const": "notion formula"
                                    },
                                    {
                                        "const": "objective-c"
                                    },
                                    {
                                        "const": "ocaml"
                                    },
                                    {
                                        "const": "pascal"
                                    },
                                    {
                                        "const": "perl"
                                    },
                                    {
                                        "const": "php"
                                    },
                                    {
                                        "const": "plain text"
                                    },
                                    {
                                        "const": "powershell"
                                    },
                                    {
                                        "const": "prolog"
                                    },
                                    {
                                        "const": "protobuf"
                                    },
                                    {
                                        "const": "purescript"
                                    },
                                    {
                                        "const": "python"
                                    },
                                    {
                                        "const": "racket"
                                    },
                                    {
                                        "const": "ruby"
                                    },
                                    {
                                        "const": "rust"
                                    },
                                    {
                                        "const": "sass"
                                    },
                                    {
                                        "const": "scala"
                                    },
                                    {
                                        "const": "scheme"
                                    },
                                    {
                                        "const": "scss"
                                    },
                                    {
                                        "const": "shell"
                                    },
                                    {
                                        "const": "solidity"
                                    },
                                    {
                                        "const": "sql"
                                    },
                                    {
                                        "const": "swift"
                                    },
                                    {
                                        "const": "toml"
                                    },
                                    {
                                        "const": "typescript"
                                    },
                                    {
                                        "const": "vb.net"
                                    },
                                    {
                                        "const": "verilog"
                                    },
                                    {
                                        "const": "vhdl"
                                    },
                                    {
                                        "const": "visual basic"
                                    },
                                    {
                                        "const": "webassembly"
                                    },
                                    {
                                        "const": "xml"
                                    },
                                    {
                                        "const": "yaml"
                                    },
                                    {
                                        "const": "java/c/c++/c#"
                                    }
                                ]
                            },
                            "rich_text": {
                                "maxItems": 1,
                                "title": "rich text for this codebox",
                                "items": {
                                    "properties": {
                                        "text": {
                                            "properties": {
                                                "content": {
                                                    "type": "string"
                                                },
                                                "link": {
                                                    "properties": {
                                                        "url": {
                                                            "format": "iri",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "url"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "content"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "text"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "language",
                            "rich_text"
                        ],
                        "type": "object"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "pageId": {
                        "description": "Indicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance.",
                        "title": "pageId",
                        "oneOf": [
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:pageId, label:title}",
                                    "method": "post",
                                    "path": "/connector/notion/get/page"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:id}",
                                    "method": "post",
                                    "path": "/connector/notion/page"
                                },
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "code",
                    "secretKey",
                    "pageId"
                ],
                "type": "object"
            },
            "_namespace_swagger.INotion.ICreateChildContentTypeEquationInput": {
                "properties": {
                    "equation": {
                        "properties": {
                            "expression": {
                                "title": "expression\n\nan equation in mathematics",
                                "const": "y = 2x"
                            }
                        },
                        "required": [
                            "expression"
                        ],
                        "title": "equation",
                        "type": "object"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "pageId": {
                        "description": "Indicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance.",
                        "title": "pageId",
                        "oneOf": [
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:pageId, label:title}",
                                    "method": "post",
                                    "path": "/connector/notion/get/page"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:id}",
                                    "method": "post",
                                    "path": "/connector/notion/page"
                                },
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "equation",
                    "secretKey",
                    "pageId"
                ],
                "type": "object"
            },
            "_namespace_swagger.INotion.ICreateChildContentTypeDividerInput": {
                "properties": {
                    "divider": {
                        "title": "divider",
                        "$ref": "#/components/schemas/_namespace_swagger.Recordstringnever"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "pageId": {
                        "description": "Indicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance.",
                        "title": "pageId",
                        "oneOf": [
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:pageId, label:title}",
                                    "method": "post",
                                    "path": "/connector/notion/get/page"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:id}",
                                    "method": "post",
                                    "path": "/connector/notion/page"
                                },
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "divider",
                    "secretKey",
                    "pageId"
                ],
                "type": "object"
            },
            "_namespace_swagger.Recordstringnever": {
                "properties": {},
                "description": "Construct a type with a set of properties K of type T",
                "type": "object"
            },
            "_namespace_swagger.INotion.ICreateChildContentTypeBreadcrumbInput": {
                "properties": {
                    "breadcrumb": {
                        "title": "breadcrumb\n\nYou only need to match the key name correctly, so you just need to pass on an empty object.",
                        "$ref": "#/components/schemas/_namespace_swagger.Recordstringnever"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "pageId": {
                        "description": "Indicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance.",
                        "title": "pageId",
                        "oneOf": [
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:pageId, label:title}",
                                    "method": "post",
                                    "path": "/connector/notion/get/page"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:id}",
                                    "method": "post",
                                    "path": "/connector/notion/page"
                                },
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "breadcrumb",
                    "secretKey",
                    "pageId"
                ],
                "type": "object"
            },
            "_namespace_swagger.INotion.ICreateChildContentTypeTableOfContentsInput": {
                "properties": {
                    "table_of_contents": {
                        "properties": {
                            "color": {
                                "description": "It must be one of :\n\"default\", \"gray\", \"brown\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\", \"pink\", \"red\", \"gray_background\", \"brown_background\", \"orange_background\", \"yellow_background\", \"green_background\", \"blue_background\", \"purple_background\", \"pink_background\", \"red_background\"",
                                "title": "color",
                                "oneOf": [
                                    {
                                        "const": "default"
                                    },
                                    {
                                        "const": "red"
                                    },
                                    {
                                        "const": "green"
                                    },
                                    {
                                        "const": "blue"
                                    },
                                    {
                                        "const": "gray"
                                    },
                                    {
                                        "const": "brown"
                                    },
                                    {
                                        "const": "orange"
                                    },
                                    {
                                        "const": "yellow"
                                    },
                                    {
                                        "const": "purple"
                                    },
                                    {
                                        "const": "pink"
                                    },
                                    {
                                        "const": "gray_background"
                                    },
                                    {
                                        "const": "brown_background"
                                    },
                                    {
                                        "const": "orange_background"
                                    },
                                    {
                                        "const": "yellow_background"
                                    },
                                    {
                                        "const": "green_background"
                                    },
                                    {
                                        "const": "blue_background"
                                    },
                                    {
                                        "const": "purple_background"
                                    },
                                    {
                                        "const": "pink_background"
                                    },
                                    {
                                        "const": "red_background"
                                    }
                                ]
                            }
                        },
                        "required": [
                            "color"
                        ],
                        "title": "table_of_contents",
                        "type": "object"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "pageId": {
                        "description": "Indicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance.",
                        "title": "pageId",
                        "oneOf": [
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:pageId, label:title}",
                                    "method": "post",
                                    "path": "/connector/notion/get/page"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:id}",
                                    "method": "post",
                                    "path": "/connector/notion/page"
                                },
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table_of_contents",
                    "secretKey",
                    "pageId"
                ],
                "type": "object"
            },
            "_namespace_swagger.INotion.ICreateChildContentTypeLinkToPageInput": {
                "properties": {
                    "link_to_page": {
                        "properties": {
                            "page_id": {
                                "description": "You can look up the page by passing the page ID as a parameter at the end of the notion link.\nFor example, in the format 'https://www.notion.so/ :pageId'.",
                                "title": "page_id",
                                "oneOf": [
                                    {
                                        "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                        "x-wrtn-prerequisite": {
                                            "jmesPath": "[].{value:pageId, label:title}",
                                            "method": "post",
                                            "path": "/connector/notion/get/page"
                                        },
                                        "type": "string"
                                    },
                                    {
                                        "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                        "x-wrtn-prerequisite": {
                                            "jmesPath": "[].{value:id, label:id}",
                                            "method": "post",
                                            "path": "/connector/notion/page"
                                        },
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "required": [
                            "page_id"
                        ],
                        "title": "link_to_page",
                        "type": "object"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "pageId": {
                        "description": "Indicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance.",
                        "title": "pageId",
                        "oneOf": [
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:pageId, label:title}",
                                    "method": "post",
                                    "path": "/connector/notion/get/page"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:id}",
                                    "method": "post",
                                    "path": "/connector/notion/page"
                                },
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "link_to_page",
                    "secretKey",
                    "pageId"
                ],
                "type": "object"
            },
            "_namespace_swagger.INotion.ICreateChildContentTypeToggleInput": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "pageId": {
                        "description": "Indicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance.",
                        "title": "pageId",
                        "oneOf": [
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:pageId, label:title}",
                                    "method": "post",
                                    "path": "/connector/notion/get/page"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:id}",
                                    "method": "post",
                                    "path": "/connector/notion/page"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "toggle": {
                        "title": "toggle",
                        "$ref": "#/components/schemas/_namespace_swagger.rich_textMultipleTextLinecolorApiColorundefinedRecordchildren(togglerich_textMultipleTextLinecolorApiColorundefinedRecord...)"
                    }
                },
                "required": [
                    "secretKey",
                    "pageId",
                    "toggle"
                ],
                "type": "object"
            },
            "_namespace_swagger.rich_textMultipleTextLinecolorApiColorundefinedRecordchildren(togglerich_textMultipleTextLinecolorApiColorundefinedRecord...)": {
                "properties": {
                    "rich_text": {
                        "maxItems": 1,
                        "title": "rich_text",
                        "items": {
                            "properties": {
                                "text": {
                                    "properties": {
                                        "content": {
                                            "type": "string"
                                        },
                                        "link": {
                                            "properties": {
                                                "url": {
                                                    "format": "iri",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "url"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ],
                                    "type": "object"
                                }
                            },
                            "required": [
                                "text"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "color": {
                        "title": "color",
                        "oneOf": [
                            {
                                "const": "default"
                            },
                            {
                                "const": "red"
                            },
                            {
                                "const": "green"
                            },
                            {
                                "const": "blue"
                            },
                            {
                                "const": "gray"
                            },
                            {
                                "const": "brown"
                            },
                            {
                                "const": "orange"
                            },
                            {
                                "const": "yellow"
                            },
                            {
                                "const": "purple"
                            },
                            {
                                "const": "pink"
                            },
                            {
                                "const": "gray_background"
                            },
                            {
                                "const": "brown_background"
                            },
                            {
                                "const": "orange_background"
                            },
                            {
                                "const": "yellow_background"
                            },
                            {
                                "const": "green_background"
                            },
                            {
                                "const": "blue_background"
                            },
                            {
                                "const": "purple_background"
                            },
                            {
                                "const": "pink_background"
                            },
                            {
                                "const": "red_background"
                            }
                        ]
                    },
                    "children": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.togglerich_textMultipleTextLinecolorApiColorundefinedRecordtoggleRecordchildren(togglerich_textMultipleTextLinecolorApiColorundefinedRecord...)"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "rich_text",
                    "children"
                ],
                "type": "object"
            },
            "_namespace_swagger.togglerich_textMultipleTextLinecolorApiColorundefinedRecordtoggleRecordchildren(togglerich_textMultipleTextLinecolorApiColorundefinedRecord...)": {
                "properties": {
                    "toggle": {
                        "title": "toggle",
                        "$ref": "#/components/schemas/_namespace_swagger.rich_textMultipleTextLinecolorApiColorundefinedRecordchildren(togglerich_textMultipleTextLinecolorApiColorundefinedRecord...).o1"
                    }
                },
                "required": [
                    "toggle"
                ],
                "type": "object"
            },
            "_namespace_swagger.rich_textMultipleTextLinecolorApiColorundefinedRecordchildren(togglerich_textMultipleTextLinecolorApiColorundefinedRecord...).o1": {
                "properties": {
                    "rich_text": {
                        "maxItems": 1,
                        "title": "rich_text",
                        "items": {
                            "properties": {
                                "text": {
                                    "properties": {
                                        "content": {
                                            "type": "string"
                                        },
                                        "link": {
                                            "properties": {
                                                "url": {
                                                    "format": "iri",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "url"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ],
                                    "type": "object"
                                }
                            },
                            "required": [
                                "text"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "color": {
                        "title": "color",
                        "oneOf": [
                            {
                                "const": "default"
                            },
                            {
                                "const": "red"
                            },
                            {
                                "const": "green"
                            },
                            {
                                "const": "blue"
                            },
                            {
                                "const": "gray"
                            },
                            {
                                "const": "brown"
                            },
                            {
                                "const": "orange"
                            },
                            {
                                "const": "yellow"
                            },
                            {
                                "const": "purple"
                            },
                            {
                                "const": "pink"
                            },
                            {
                                "const": "gray_background"
                            },
                            {
                                "const": "brown_background"
                            },
                            {
                                "const": "orange_background"
                            },
                            {
                                "const": "yellow_background"
                            },
                            {
                                "const": "green_background"
                            },
                            {
                                "const": "blue_background"
                            },
                            {
                                "const": "purple_background"
                            },
                            {
                                "const": "pink_background"
                            },
                            {
                                "const": "red_background"
                            }
                        ]
                    },
                    "children": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.togglerich_textMultipleTextLinecolorApiColorundefinedRecordtoggleRecordchildrentogglerich_textMultipleTextLinecolorApiColorundefined"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "rich_text",
                    "children"
                ],
                "type": "object"
            },
            "_namespace_swagger.togglerich_textMultipleTextLinecolorApiColorundefinedRecordtoggleRecordchildrentogglerich_textMultipleTextLinecolorApiColorundefined": {
                "properties": {
                    "toggle": {
                        "title": "toggle",
                        "$ref": "#/components/schemas/_namespace_swagger.rich_textMultipleTextLinecolorApiColorundefinedRecordchildrentogglerich_textMultipleTextLinecolorApiColorundefined"
                    }
                },
                "required": [
                    "toggle"
                ],
                "type": "object"
            },
            "_namespace_swagger.rich_textMultipleTextLinecolorApiColorundefinedRecordchildrentogglerich_textMultipleTextLinecolorApiColorundefined": {
                "properties": {
                    "rich_text": {
                        "maxItems": 1,
                        "title": "rich_text",
                        "items": {
                            "properties": {
                                "text": {
                                    "properties": {
                                        "content": {
                                            "type": "string"
                                        },
                                        "link": {
                                            "properties": {
                                                "url": {
                                                    "format": "iri",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "url"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ],
                                    "type": "object"
                                }
                            },
                            "required": [
                                "text"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "color": {
                        "title": "color",
                        "oneOf": [
                            {
                                "const": "default"
                            },
                            {
                                "const": "red"
                            },
                            {
                                "const": "green"
                            },
                            {
                                "const": "blue"
                            },
                            {
                                "const": "gray"
                            },
                            {
                                "const": "brown"
                            },
                            {
                                "const": "orange"
                            },
                            {
                                "const": "yellow"
                            },
                            {
                                "const": "purple"
                            },
                            {
                                "const": "pink"
                            },
                            {
                                "const": "gray_background"
                            },
                            {
                                "const": "brown_background"
                            },
                            {
                                "const": "orange_background"
                            },
                            {
                                "const": "yellow_background"
                            },
                            {
                                "const": "green_background"
                            },
                            {
                                "const": "blue_background"
                            },
                            {
                                "const": "purple_background"
                            },
                            {
                                "const": "pink_background"
                            },
                            {
                                "const": "red_background"
                            }
                        ]
                    },
                    "children": {
                        "items": {
                            "properties": {
                                "toggle": {
                                    "properties": {
                                        "rich_text": {
                                            "maxItems": 1,
                                            "title": "rich_text",
                                            "items": {
                                                "properties": {
                                                    "text": {
                                                        "properties": {
                                                            "content": {
                                                                "type": "string"
                                                            },
                                                            "link": {
                                                                "properties": {
                                                                    "url": {
                                                                        "format": "iri",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "url"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "content"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "text"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "color": {
                                            "title": "color",
                                            "oneOf": [
                                                {
                                                    "const": "default"
                                                },
                                                {
                                                    "const": "red"
                                                },
                                                {
                                                    "const": "green"
                                                },
                                                {
                                                    "const": "blue"
                                                },
                                                {
                                                    "const": "gray"
                                                },
                                                {
                                                    "const": "brown"
                                                },
                                                {
                                                    "const": "orange"
                                                },
                                                {
                                                    "const": "yellow"
                                                },
                                                {
                                                    "const": "purple"
                                                },
                                                {
                                                    "const": "pink"
                                                },
                                                {
                                                    "const": "gray_background"
                                                },
                                                {
                                                    "const": "brown_background"
                                                },
                                                {
                                                    "const": "orange_background"
                                                },
                                                {
                                                    "const": "yellow_background"
                                                },
                                                {
                                                    "const": "green_background"
                                                },
                                                {
                                                    "const": "blue_background"
                                                },
                                                {
                                                    "const": "purple_background"
                                                },
                                                {
                                                    "const": "pink_background"
                                                },
                                                {
                                                    "const": "red_background"
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "rich_text"
                                    ],
                                    "title": "toggle",
                                    "type": "object"
                                }
                            },
                            "required": [
                                "toggle"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "rich_text",
                    "children"
                ],
                "type": "object"
            },
            "_namespace_swagger.INotion.ICreatePageOutput": {
                "properties": {
                    "id": {
                        "title": "page id",
                        "description": "Unique id of the generated page",
                        "type": "string"
                    },
                    "title": {
                        "title": "tilte\n\nTitle of the document you just created",
                        "type": "string"
                    },
                    "link": {
                        "format": "iri",
                        "title": "page link",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "title",
                    "link"
                ],
                "title": "Page creation result",
                "type": "object"
            },
            "_namespace_swagger.INotion.ICreatePageInput": {
                "properties": {
                    "parentPageId": {
                        "oneOf": [
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:pageId, label:title}",
                                    "method": "post",
                                    "path": "/connector/notion/get/page"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:id}",
                                    "method": "post",
                                    "path": "/connector/notion/page"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "title": {
                        "title": "Page title",
                        "description": "New page title to be created",
                        "x-wrtn-placeholder": "테스트 페이지.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "parentPageId",
                    "title",
                    "secretKey"
                ],
                "title": "Conditions required to create a page",
                "type": "object"
            },
            "_namespace_swagger.INotion.IMarkdownBlock": {
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "hasChild": {
                        "type": "boolean"
                    },
                    "children": {
                        "items": {},
                        "type": "array"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            },
            "_namespace_swagger.INotion.IReadPageContentInput": {
                "properties": {
                    "block_id": {
                        "description": "Indicates the ID of the page.\nyou can put the block ID back into this factor and use it to look up the child blocks.",
                        "title": "block_id",
                        "oneOf": [
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:pageId, label:title}",
                                    "method": "post",
                                    "path": "/connector/notion/get/page"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:id}",
                                    "method": "post",
                                    "path": "/connector/notion/page"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "block_id",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.INotion.IReadPageOutput": {
                "properties": {
                    "pageId": {
                        "title": "id",
                        "description": "페이지 고유 id\n\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:pageId, label:title}",
                            "method": "post",
                            "path": "/connector/notion/get/page"
                        },
                        "type": "string"
                    },
                    "title": {
                        "title": "Title",
                        "description": "Page Title",
                        "type": "string"
                    },
                    "link": {
                        "format": "iri",
                        "title": "page link",
                        "type": "string"
                    }
                },
                "required": [
                    "pageId",
                    "title",
                    "link"
                ],
                "title": "Page list query results",
                "type": "object"
            },
            "_namespace_swagger.INotion.ISecret": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.INotion.IUserOutput": {
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "User unique id",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Username",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name"
                ],
                "title": "User list query results",
                "type": "object"
            },
            "_namespace_swagger.INotion.IDatabaseInfo": {
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "database unique id",
                        "type": "string"
                    },
                    "title": {
                        "title": "TitleP",
                        "description": "Database Title",
                        "type": "string"
                    },
                    "properties": {
                        "title": "property",
                        "description": "Database property information",
                        "$ref": "#/components/schemas/_namespace_swagger.RecordstringINotion.DatabaseProperty"
                    }
                },
                "required": [
                    "id",
                    "title",
                    "properties"
                ],
                "title": "Database Information",
                "type": "object"
            },
            "_namespace_swagger.RecordstringINotion.DatabaseProperty": {
                "properties": {},
                "additionalProperties": {
                    "discriminator": {
                        "mapping": {
                            "number": "#/components/schemas/INotion.NumberDatabaseProperty",
                            "formula": "#/components/schemas/INotion.FormulaDatabaseProperty",
                            "select": "#/components/schemas/INotion.SelectDatabaseProperty",
                            "multi_select": "#/components/schemas/INotion.MultiSelectDatabaseProperty",
                            "status": "#/components/schemas/INotion.StatusDatabaseProperty",
                            "relation": "#/components/schemas/INotion.RelationDatabaseProperty",
                            "rollup": "#/components/schemas/INotion.RollupDatabaseProperty",
                            "title": "#/components/schemas/INotion.TitleDatabaseProperty",
                            "rich_text": "#/components/schemas/INotion.RichTextDatabaseProperty",
                            "url": "#/components/schemas/INotion.UrlDatabaseProperty",
                            "people": "#/components/schemas/INotion.PeopleDatabaseProperty",
                            "files": "#/components/schemas/INotion.FilesDatabaseProperty",
                            "email": "#/components/schemas/INotion.EmailDatabaseProperty",
                            "phone_number": "#/components/schemas/INotion.PhoneNumberDatabaseProperty",
                            "date": "#/components/schemas/INotion.DateDatabaseProperty",
                            "checkbox": "#/components/schemas/INotion.CheckboxDatabaseProperty",
                            "created_by": "#/components/schemas/INotion.CreatedByDatabaseProperty",
                            "created_time": "#/components/schemas/INotion.CreatedTimeDatabaseProperty",
                            "last_edited_by": "#/components/schemas/INotion.LastEditedByDatabaseProperty",
                            "last_edited_time": "#/components/schemas/INotion.LastEditedTimeDatabaseProperty"
                        },
                        "propertyName": "type"
                    },
                    "oneOf": [
                        {
                            "$ref": "#/components/schemas/_namespace_swagger.INotion.NumberDatabaseProperty"
                        },
                        {
                            "$ref": "#/components/schemas/_namespace_swagger.INotion.FormulaDatabaseProperty"
                        },
                        {
                            "$ref": "#/components/schemas/_namespace_swagger.INotion.SelectDatabaseProperty"
                        },
                        {
                            "$ref": "#/components/schemas/_namespace_swagger.INotion.MultiSelectDatabaseProperty"
                        },
                        {
                            "$ref": "#/components/schemas/_namespace_swagger.INotion.StatusDatabaseProperty"
                        },
                        {
                            "$ref": "#/components/schemas/_namespace_swagger.INotion.RelationDatabaseProperty"
                        },
                        {
                            "$ref": "#/components/schemas/_namespace_swagger.INotion.RollupDatabaseProperty"
                        },
                        {
                            "$ref": "#/components/schemas/_namespace_swagger.INotion.TitleDatabaseProperty"
                        },
                        {
                            "$ref": "#/components/schemas/_namespace_swagger.INotion.RichTextDatabaseProperty"
                        },
                        {
                            "$ref": "#/components/schemas/_namespace_swagger.INotion.UrlDatabaseProperty"
                        },
                        {
                            "$ref": "#/components/schemas/_namespace_swagger.INotion.PeopleDatabaseProperty"
                        },
                        {
                            "$ref": "#/components/schemas/_namespace_swagger.INotion.FilesDatabaseProperty"
                        },
                        {
                            "$ref": "#/components/schemas/_namespace_swagger.INotion.EmailDatabaseProperty"
                        },
                        {
                            "$ref": "#/components/schemas/_namespace_swagger.INotion.PhoneNumberDatabaseProperty"
                        },
                        {
                            "$ref": "#/components/schemas/_namespace_swagger.INotion.DateDatabaseProperty"
                        },
                        {
                            "$ref": "#/components/schemas/_namespace_swagger.INotion.CheckboxDatabaseProperty"
                        },
                        {
                            "$ref": "#/components/schemas/_namespace_swagger.INotion.CreatedByDatabaseProperty"
                        },
                        {
                            "$ref": "#/components/schemas/_namespace_swagger.INotion.CreatedTimeDatabaseProperty"
                        },
                        {
                            "$ref": "#/components/schemas/_namespace_swagger.INotion.LastEditedByDatabaseProperty"
                        },
                        {
                            "$ref": "#/components/schemas/_namespace_swagger.INotion.LastEditedTimeDatabaseProperty"
                        }
                    ]
                },
                "description": "Construct a type with a set of properties K of type T",
                "type": "object"
            },
            "_namespace_swagger.INotion.NumberDatabaseProperty": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "const": "number"
                    },
                    "number": {
                        "properties": {
                            "format": {
                                "oneOf": [
                                    {
                                        "const": "number"
                                    },
                                    {
                                        "const": "percent"
                                    },
                                    {
                                        "const": "number_with_commas"
                                    },
                                    {
                                        "const": "dollar"
                                    },
                                    {
                                        "const": "canadian_dollar"
                                    },
                                    {
                                        "const": "singapore_dollar"
                                    },
                                    {
                                        "const": "euro"
                                    },
                                    {
                                        "const": "pound"
                                    },
                                    {
                                        "const": "yen"
                                    },
                                    {
                                        "const": "ruble"
                                    },
                                    {
                                        "const": "rupee"
                                    },
                                    {
                                        "const": "won"
                                    },
                                    {
                                        "const": "yuan"
                                    },
                                    {
                                        "const": "real"
                                    },
                                    {
                                        "const": "lira"
                                    },
                                    {
                                        "const": "rupiah"
                                    },
                                    {
                                        "const": "franc"
                                    },
                                    {
                                        "const": "hong_kong_dollar"
                                    },
                                    {
                                        "const": "new_zealand_dollar"
                                    },
                                    {
                                        "const": "krona"
                                    },
                                    {
                                        "const": "norwegian_krone"
                                    },
                                    {
                                        "const": "mexican_peso"
                                    },
                                    {
                                        "const": "rand"
                                    },
                                    {
                                        "const": "new_taiwan_dollar"
                                    },
                                    {
                                        "const": "danish_krone"
                                    },
                                    {
                                        "const": "zloty"
                                    },
                                    {
                                        "const": "baht"
                                    },
                                    {
                                        "const": "forint"
                                    },
                                    {
                                        "const": "koruna"
                                    },
                                    {
                                        "const": "shekel"
                                    },
                                    {
                                        "const": "chilean_peso"
                                    },
                                    {
                                        "const": "philippine_peso"
                                    },
                                    {
                                        "const": "dirham"
                                    },
                                    {
                                        "const": "colombian_peso"
                                    },
                                    {
                                        "const": "riyal"
                                    },
                                    {
                                        "const": "ringgit"
                                    },
                                    {
                                        "const": "leu"
                                    },
                                    {
                                        "const": "argentine_peso"
                                    },
                                    {
                                        "const": "uruguayan_peso"
                                    },
                                    {
                                        "const": "peruvian_sol"
                                    }
                                ]
                            }
                        },
                        "required": [
                            "format"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type",
                    "number"
                ],
                "title": "Database numeric properties",
                "type": "object"
            },
            "_namespace_swagger.INotion.FormulaDatabaseProperty": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "const": "formula"
                    },
                    "formula": {
                        "properties": {
                            "expression": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "expression"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type",
                    "formula"
                ],
                "title": "Database official properties",
                "type": "object"
            },
            "_namespace_swagger.INotion.SelectDatabaseProperty": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "const": "select"
                    },
                    "select": {
                        "properties": {
                            "options": {
                                "items": {
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "color": {
                                            "oneOf": [
                                                {
                                                    "const": "default"
                                                },
                                                {
                                                    "const": "red"
                                                },
                                                {
                                                    "const": "green"
                                                },
                                                {
                                                    "const": "blue"
                                                },
                                                {
                                                    "const": "gray"
                                                },
                                                {
                                                    "const": "brown"
                                                },
                                                {
                                                    "const": "orange"
                                                },
                                                {
                                                    "const": "yellow"
                                                },
                                                {
                                                    "const": "purple"
                                                },
                                                {
                                                    "const": "pink"
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "name",
                                        "color"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "options"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type",
                    "select"
                ],
                "title": "Database Selection Attributes",
                "type": "object"
            },
            "_namespace_swagger.INotion.MultiSelectDatabaseProperty": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "const": "multi_select"
                    },
                    "multi_select": {
                        "properties": {
                            "options": {
                                "items": {
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "color": {
                                            "oneOf": [
                                                {
                                                    "const": "default"
                                                },
                                                {
                                                    "const": "red"
                                                },
                                                {
                                                    "const": "green"
                                                },
                                                {
                                                    "const": "blue"
                                                },
                                                {
                                                    "const": "gray"
                                                },
                                                {
                                                    "const": "brown"
                                                },
                                                {
                                                    "const": "orange"
                                                },
                                                {
                                                    "const": "yellow"
                                                },
                                                {
                                                    "const": "purple"
                                                },
                                                {
                                                    "const": "pink"
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "name",
                                        "color"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "options"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type",
                    "multi_select"
                ],
                "title": "Database Multi-Select Attribute",
                "type": "object"
            },
            "_namespace_swagger.INotion.StatusDatabaseProperty": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "const": "status"
                    },
                    "status": {
                        "properties": {
                            "options": {
                                "items": {
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "color": {
                                            "oneOf": [
                                                {
                                                    "const": "default"
                                                },
                                                {
                                                    "const": "red"
                                                },
                                                {
                                                    "const": "green"
                                                },
                                                {
                                                    "const": "blue"
                                                },
                                                {
                                                    "const": "gray"
                                                },
                                                {
                                                    "const": "brown"
                                                },
                                                {
                                                    "const": "orange"
                                                },
                                                {
                                                    "const": "yellow"
                                                },
                                                {
                                                    "const": "purple"
                                                },
                                                {
                                                    "const": "pink"
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "name",
                                        "color"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "groups": {
                                "items": {
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "color": {
                                            "oneOf": [
                                                {
                                                    "const": "default"
                                                },
                                                {
                                                    "const": "red"
                                                },
                                                {
                                                    "const": "green"
                                                },
                                                {
                                                    "const": "blue"
                                                },
                                                {
                                                    "const": "gray"
                                                },
                                                {
                                                    "const": "brown"
                                                },
                                                {
                                                    "const": "orange"
                                                },
                                                {
                                                    "const": "yellow"
                                                },
                                                {
                                                    "const": "purple"
                                                },
                                                {
                                                    "const": "pink"
                                                }
                                            ]
                                        },
                                        "option_ids": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "name",
                                        "color",
                                        "option_ids"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "options",
                            "groups"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type",
                    "status"
                ],
                "title": "Database status properties",
                "type": "object"
            },
            "_namespace_swagger.INotion.RelationDatabaseProperty": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "const": "relation"
                    },
                    "relation": {
                        "properties": {
                            "database_id": {
                                "type": "string"
                            },
                            "synced_property_id": {
                                "type": "string"
                            },
                            "synced_property_name": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "database_id",
                            "synced_property_id",
                            "synced_property_name"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type",
                    "relation"
                ],
                "title": "Database Relationship Properties",
                "type": "object"
            },
            "_namespace_swagger.INotion.RollupDatabaseProperty": {
                "properties": {
                    "type": {
                        "const": "rollup"
                    },
                    "rollup": {
                        "properties": {
                            "rollup_property_name": {
                                "type": "string"
                            },
                            "relation_property_name": {
                                "type": "string"
                            },
                            "rollup_property_id": {
                                "type": "string"
                            },
                            "relation_property_id": {
                                "type": "string"
                            },
                            "function": {
                                "oneOf": [
                                    {
                                        "const": "count"
                                    },
                                    {
                                        "const": "date_range"
                                    },
                                    {
                                        "const": "range"
                                    },
                                    {
                                        "const": "average"
                                    },
                                    {
                                        "const": "unique"
                                    },
                                    {
                                        "const": "count_values"
                                    },
                                    {
                                        "const": "empty"
                                    },
                                    {
                                        "const": "not_empty"
                                    },
                                    {
                                        "const": "show_unique"
                                    },
                                    {
                                        "const": "percent_empty"
                                    },
                                    {
                                        "const": "percent_not_empty"
                                    },
                                    {
                                        "const": "sum"
                                    },
                                    {
                                        "const": "median"
                                    },
                                    {
                                        "const": "min"
                                    },
                                    {
                                        "const": "max"
                                    },
                                    {
                                        "const": "earliest_date"
                                    },
                                    {
                                        "const": "latest_date"
                                    },
                                    {
                                        "const": "checked"
                                    },
                                    {
                                        "const": "unchecked"
                                    },
                                    {
                                        "const": "percent_checked"
                                    },
                                    {
                                        "const": "percent_unchecked"
                                    },
                                    {
                                        "const": "count_per_group"
                                    },
                                    {
                                        "const": "percent_per_group"
                                    },
                                    {
                                        "const": "show_original"
                                    }
                                ]
                            }
                        },
                        "required": [
                            "rollup_property_name",
                            "relation_property_name",
                            "rollup_property_id",
                            "relation_property_id",
                            "function"
                        ],
                        "type": "object"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "rollup",
                    "id",
                    "name"
                ],
                "title": "Database Aggregate Properties",
                "type": "object"
            },
            "_namespace_swagger.INotion.TitleDatabaseProperty": {
                "properties": {
                    "type": {
                        "const": "title"
                    },
                    "title": {
                        "$ref": "#/components/schemas/_namespace_swagger.Recordstringnever"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "title",
                    "id",
                    "name"
                ],
                "title": "Database title property",
                "type": "object"
            },
            "_namespace_swagger.INotion.RichTextDatabaseProperty": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "const": "rich_text"
                    },
                    "rich_text": {
                        "$ref": "#/components/schemas/_namespace_swagger.Recordstringnever"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type",
                    "rich_text"
                ],
                "title": "database text property",
                "type": "object"
            },
            "_namespace_swagger.INotion.UrlDatabaseProperty": {
                "properties": {
                    "type": {
                        "const": "url"
                    },
                    "url": {
                        "$ref": "#/components/schemas/_namespace_swagger.Recordstringnever"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "url",
                    "id",
                    "name"
                ],
                "title": "Database Url property",
                "type": "object"
            },
            "_namespace_swagger.INotion.PeopleDatabaseProperty": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "const": "people"
                    },
                    "people": {
                        "$ref": "#/components/schemas/_namespace_swagger.Recordstringnever"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type",
                    "people"
                ],
                "title": "database people properties",
                "type": "object"
            },
            "_namespace_swagger.INotion.FilesDatabaseProperty": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "const": "files"
                    },
                    "files": {
                        "$ref": "#/components/schemas/_namespace_swagger.Recordstringnever"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type",
                    "files"
                ],
                "title": "Database File Properties",
                "type": "object"
            },
            "_namespace_swagger.INotion.EmailDatabaseProperty": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "const": "email"
                    },
                    "email": {
                        "$ref": "#/components/schemas/_namespace_swagger.Recordstringnever"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type",
                    "email"
                ],
                "title": "Database Email Attributes",
                "type": "object"
            },
            "_namespace_swagger.INotion.PhoneNumberDatabaseProperty": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "const": "phone_number"
                    },
                    "phone_number": {
                        "$ref": "#/components/schemas/_namespace_swagger.Recordstringnever"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type",
                    "phone_number"
                ],
                "title": "Database Phone Number Attribute",
                "type": "object"
            },
            "_namespace_swagger.INotion.DateDatabaseProperty": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "const": "date"
                    },
                    "date": {
                        "$ref": "#/components/schemas/_namespace_swagger.Recordstringnever"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type",
                    "date"
                ],
                "title": "Database Date Attribute",
                "type": "object"
            },
            "_namespace_swagger.INotion.CheckboxDatabaseProperty": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "const": "checkbox"
                    },
                    "checkbox": {
                        "$ref": "#/components/schemas/_namespace_swagger.Recordstringnever"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type",
                    "checkbox"
                ],
                "title": "Database Checkbox Properties",
                "type": "object"
            },
            "_namespace_swagger.INotion.CreatedByDatabaseProperty": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "const": "created_by"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type"
                ],
                "title": "Database Creator Attributes",
                "type": "object"
            },
            "_namespace_swagger.INotion.CreatedTimeDatabaseProperty": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "const": "created_time"
                    },
                    "created_time": {
                        "$ref": "#/components/schemas/_namespace_swagger.Recordstringnever"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type",
                    "created_time"
                ],
                "title": "Database Creation Time Attribute",
                "type": "object"
            },
            "_namespace_swagger.INotion.LastEditedByDatabaseProperty": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "const": "last_edited_by"
                    },
                    "last_edited_by": {
                        "$ref": "#/components/schemas/_namespace_swagger.Recordstringnever"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type",
                    "last_edited_by"
                ],
                "title": "Database Last Modified Attribute",
                "type": "object"
            },
            "_namespace_swagger.INotion.LastEditedTimeDatabaseProperty": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "const": "last_edited_time"
                    },
                    "last_edited_time": {
                        "$ref": "#/components/schemas/_namespace_swagger.Recordstringnever"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type",
                    "last_edited_time"
                ],
                "title": "Database Modification Time Attribute",
                "type": "object"
            },
            "_namespace_swagger.INotion.IDatabaseItemOutput": {
                "properties": {
                    "parent": {
                        "properties": {
                            "type": {
                                "title": "type",
                                "description": "Parent database item object type",
                                "type": "string"
                            },
                            "database_id": {
                                "title": "database id",
                                "description": "database item parent id",
                                "type": "string"
                            }
                        },
                        "required": [
                            "type",
                            "database_id"
                        ],
                        "title": "Parent Database Item",
                        "description": "Parent Database Item Information",
                        "type": "object"
                    },
                    "properties": {
                        "title": "Property",
                        "description": "Database Item Properties"
                    },
                    "object": {
                        "description": "Type of page object",
                        "title": "Object Type",
                        "oneOf": [
                            {
                                "const": "user"
                            },
                            {
                                "const": "page"
                            },
                            {
                                "const": "list"
                            },
                            {
                                "const": "database"
                            },
                            {
                                "const": "block"
                            },
                            {
                                "const": "property_item"
                            },
                            {
                                "const": "comment"
                            }
                        ]
                    },
                    "created_time": {
                        "title": "Date created",
                        "description": "Date the page was created",
                        "type": "string"
                    },
                    "last_edited_time": {
                        "title": "Last modified",
                        "description": "Date the page was last modified",
                        "type": "string"
                    },
                    "created_by": {
                        "properties": {
                            "object": {
                                "description": "The type of the object that created the page",
                                "title": "Object Type",
                                "oneOf": [
                                    {
                                        "const": "user"
                                    },
                                    {
                                        "const": "page"
                                    },
                                    {
                                        "const": "list"
                                    },
                                    {
                                        "const": "database"
                                    },
                                    {
                                        "const": "block"
                                    },
                                    {
                                        "const": "property_item"
                                    },
                                    {
                                        "const": "comment"
                                    }
                                ]
                            },
                            "id": {
                                "title": "id",
                                "description": "Unique id of the person who created the page",
                                "type": "string"
                            }
                        },
                        "required": [
                            "object",
                            "id"
                        ],
                        "title": "Created by",
                        "description": "Information about who created the page",
                        "type": "object"
                    },
                    "last_edited_by": {
                        "properties": {
                            "object": {
                                "description": "The type of object that last modified the page",
                                "title": "Object Type",
                                "oneOf": [
                                    {
                                        "const": "user"
                                    },
                                    {
                                        "const": "page"
                                    },
                                    {
                                        "const": "list"
                                    },
                                    {
                                        "const": "database"
                                    },
                                    {
                                        "const": "block"
                                    },
                                    {
                                        "const": "property_item"
                                    },
                                    {
                                        "const": "comment"
                                    }
                                ]
                            },
                            "id": {
                                "title": "id",
                                "description": "Unique id of the last person to edit the page",
                                "type": "string"
                            }
                        },
                        "required": [
                            "object",
                            "id"
                        ],
                        "title": "Last modified by",
                        "description": "Information about who last modified the page",
                        "type": "object"
                    },
                    "cover": {
                        "description": "Page Background Image Information",
                        "title": "Background Image",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.IPageCover"
                            }
                        ]
                    },
                    "icon": {
                        "description": "Page Icon Information",
                        "title": "Icon",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.IPageIcon"
                            }
                        ]
                    },
                    "archived": {
                        "title": "Whether to archive the page",
                        "description": "Whether to archive the page",
                        "type": "boolean"
                    },
                    "url": {
                        "format": "iri",
                        "title": "url",
                        "description": "Page url",
                        "type": "string"
                    },
                    "public_url": {
                        "description": "Page public url",
                        "title": "public url",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    },
                    "id": {
                        "title": "page id",
                        "description": "Unique id of the generated page",
                        "type": "string"
                    },
                    "title": {
                        "title": "tilte\n\nTitle of the document you just created",
                        "type": "string"
                    },
                    "link": {
                        "format": "iri",
                        "title": "page link",
                        "type": "string"
                    }
                },
                "required": [
                    "parent",
                    "properties",
                    "object",
                    "created_time",
                    "last_edited_time",
                    "created_by",
                    "last_edited_by",
                    "cover",
                    "icon",
                    "archived",
                    "url",
                    "public_url",
                    "id",
                    "title",
                    "link"
                ],
                "title": "Database item creation result",
                "type": "object"
            },
            "_namespace_swagger.INotion.IPageCover": {
                "properties": {
                    "type": {
                        "title": "Type",
                        "description": "Image Type",
                        "type": "string"
                    },
                    "external": {
                        "title": "Image",
                        "description": "Image information",
                        "$ref": "#/components/schemas/_namespace_swagger.INotion.IExternalImage"
                    }
                },
                "required": [
                    "type",
                    "external"
                ],
                "title": "Page background image information",
                "type": "object"
            },
            "_namespace_swagger.INotion.IExternalImage": {
                "properties": {
                    "url": {
                        "format": "iri",
                        "title": "url",
                        "description": "image url",
                        "type": "string"
                    }
                },
                "required": [
                    "url"
                ],
                "title": "External image information",
                "type": "object"
            },
            "_namespace_swagger.INotion.IPageIcon": {
                "properties": {
                    "type": {
                        "description": "Icon Type",
                        "title": "Type",
                        "oneOf": [
                            {
                                "const": "file"
                            },
                            {
                                "const": "external"
                            },
                            {
                                "const": "emoji"
                            }
                        ]
                    },
                    "emoji": {
                        "description": "Icon information when the icon type is emoji",
                        "title": "Emoji icon",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "external": {
                        "description": "Icon information when the icon type is icon",
                        "title": "Icon",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.IExternalImage"
                            }
                        ]
                    },
                    "file": {
                        "properties": {
                            "url": {
                                "format": "iri",
                                "title": "url",
                                "description": "file url",
                                "type": "string"
                            },
                            "expiry_time": {
                                "title": "expiration time",
                                "description": "Image file expiration time",
                                "type": "string"
                            }
                        },
                        "required": [
                            "url",
                            "expiry_time"
                        ],
                        "title": "Icon file",
                        "description": "Icon information when the icon type is file",
                        "type": "object"
                    }
                },
                "required": [
                    "type"
                ],
                "title": "Page Icon Information",
                "type": "object"
            },
            "_namespace_swagger.INotion.ICreateDatabaseItemInput": {
                "properties": {
                    "value": {
                        "title": "property value",
                        "description": "Value to add to database property",
                        "type": "string"
                    },
                    "content": {
                        "title": "page",
                        "description": "What to put on the database item page you want to create\n\nWhat to put on the",
                        "type": "string"
                    },
                    "contentType": {
                        "description": "Database item page content type to create",
                        "title": "Page content type",
                        "oneOf": [
                            {
                                "const": "markdown"
                            },
                            {
                                "const": "plainText"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "additionalProperties": {},
                "required": [
                    "secretKey"
                ],
                "title": "Information required to add an item to the database",
                "type": "object"
            },
            "_namespace_swagger.INotion.IUpdateDatabaseItemInput": {
                "properties": {
                    "pageId": {
                        "title": "Page",
                        "description": "Page to update",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:pageId, label:title}",
                            "method": "post",
                            "path": "/connector/notion/get/page"
                        },
                        "type": "string"
                    },
                    "content": {
                        "title": "Content",
                        "description": "Database page content to update",
                        "type": "string"
                    },
                    "value": {
                        "title": "property value",
                        "description": "Database property value to update",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "additionalProperties": {},
                "required": [
                    "pageId",
                    "secretKey"
                ],
                "title": "Information required to modify an item that exists in the database",
                "type": "object"
            },
            "_namespace_swagger.INotion.IFindPageByTitleOutput": {
                "properties": {
                    "parent": {
                        "properties": {
                            "type": {
                                "title": "Type",
                                "description": "Parent Page Object Type",
                                "type": "string"
                            },
                            "workspace": {
                                "title": "Whether the workspace is",
                                "description": "Whether the parent page is a workspace",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "type",
                            "workspace"
                        ],
                        "title": "Parent Page",
                        "description": "Parent Page Information",
                        "type": "object"
                    },
                    "properties": {
                        "title": "property",
                        "description": "Page Properties Information",
                        "$ref": "#/components/schemas/_namespace_swagger.INotion.IFindPageProperty"
                    },
                    "object": {
                        "description": "Type of page object",
                        "title": "Object Type",
                        "oneOf": [
                            {
                                "const": "user"
                            },
                            {
                                "const": "page"
                            },
                            {
                                "const": "list"
                            },
                            {
                                "const": "database"
                            },
                            {
                                "const": "block"
                            },
                            {
                                "const": "property_item"
                            },
                            {
                                "const": "comment"
                            }
                        ]
                    },
                    "created_time": {
                        "title": "Date created",
                        "description": "Date the page was created",
                        "type": "string"
                    },
                    "last_edited_time": {
                        "title": "Last modified",
                        "description": "Date the page was last modified",
                        "type": "string"
                    },
                    "created_by": {
                        "properties": {
                            "object": {
                                "description": "The type of the object that created the page",
                                "title": "Object Type",
                                "oneOf": [
                                    {
                                        "const": "user"
                                    },
                                    {
                                        "const": "page"
                                    },
                                    {
                                        "const": "list"
                                    },
                                    {
                                        "const": "database"
                                    },
                                    {
                                        "const": "block"
                                    },
                                    {
                                        "const": "property_item"
                                    },
                                    {
                                        "const": "comment"
                                    }
                                ]
                            },
                            "id": {
                                "title": "id",
                                "description": "Unique id of the person who created the page",
                                "type": "string"
                            }
                        },
                        "required": [
                            "object",
                            "id"
                        ],
                        "title": "Created by",
                        "description": "Information about who created the page",
                        "type": "object"
                    },
                    "last_edited_by": {
                        "properties": {
                            "object": {
                                "description": "The type of object that last modified the page",
                                "title": "Object Type",
                                "oneOf": [
                                    {
                                        "const": "user"
                                    },
                                    {
                                        "const": "page"
                                    },
                                    {
                                        "const": "list"
                                    },
                                    {
                                        "const": "database"
                                    },
                                    {
                                        "const": "block"
                                    },
                                    {
                                        "const": "property_item"
                                    },
                                    {
                                        "const": "comment"
                                    }
                                ]
                            },
                            "id": {
                                "title": "id",
                                "description": "Unique id of the last person to edit the page",
                                "type": "string"
                            }
                        },
                        "required": [
                            "object",
                            "id"
                        ],
                        "title": "Last modified by",
                        "description": "Information about who last modified the page",
                        "type": "object"
                    },
                    "cover": {
                        "description": "Page Background Image Information",
                        "title": "Background Image",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.IPageCover"
                            }
                        ]
                    },
                    "icon": {
                        "description": "Page Icon Information",
                        "title": "Icon",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.INotion.IPageIcon"
                            }
                        ]
                    },
                    "archived": {
                        "title": "Whether to archive the page",
                        "description": "Whether to archive the page",
                        "type": "boolean"
                    },
                    "url": {
                        "format": "iri",
                        "title": "url",
                        "description": "Page url",
                        "type": "string"
                    },
                    "public_url": {
                        "description": "Page public url",
                        "title": "public url",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    },
                    "id": {
                        "title": "page id",
                        "description": "Unique id of the generated page",
                        "type": "string"
                    },
                    "title": {
                        "title": "tilte\n\nTitle of the document you just created",
                        "type": "string"
                    },
                    "link": {
                        "format": "iri",
                        "title": "page link",
                        "type": "string"
                    }
                },
                "required": [
                    "parent",
                    "properties",
                    "object",
                    "created_time",
                    "last_edited_time",
                    "created_by",
                    "last_edited_by",
                    "cover",
                    "icon",
                    "archived",
                    "url",
                    "public_url",
                    "id",
                    "title",
                    "link"
                ],
                "type": "object"
            },
            "_namespace_swagger.INotion.IFindPageProperty": {
                "properties": {
                    "title": {
                        "properties": {
                            "id": {
                                "title": "id",
                                "description": "Page property id",
                                "type": "string"
                            },
                            "type": {
                                "title": "Property Type",
                                "description": "Page Property Type",
                                "type": "string"
                            },
                            "title": {
                                "title": "Title Attribute",
                                "description": "Page Title Attribute Information",
                                "items": {
                                    "$ref": "#/components/schemas/_namespace_swagger.INotion.IFindPageTitleProperty"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "id",
                            "type",
                            "title"
                        ],
                        "title": "Title attribute",
                        "description": "Information about the title attribute",
                        "type": "object"
                    }
                },
                "required": [
                    "title"
                ],
                "title": "Page property information",
                "type": "object"
            },
            "_namespace_swagger.INotion.IFindPageTitleProperty": {
                "properties": {
                    "type": {
                        "title": "type",
                        "description": "Title property type",
                        "type": "string"
                    },
                    "text": {
                        "title": "Text Information",
                        "description": "Page Title Text Information",
                        "$ref": "#/components/schemas/_namespace_swagger.INotion.IPageTitleText"
                    },
                    "annotations": {
                        "title": "Additional Information",
                        "description": "Page Title Additional Information",
                        "$ref": "#/components/schemas/_namespace_swagger.INotion.IPageTitleAnnotation"
                    },
                    "plain_text": {
                        "title": "Original",
                        "description": "Page Title Original Text",
                        "type": "string"
                    },
                    "href": {
                        "description": "Page Link",
                        "title": "Link",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "type",
                    "text",
                    "annotations",
                    "plain_text",
                    "href"
                ],
                "title": "Page title attribute",
                "type": "object"
            },
            "_namespace_swagger.INotion.IPageTitleText": {
                "properties": {
                    "content": {
                        "title": "Content",
                        "description": "Title Text Content",
                        "type": "string"
                    },
                    "link": {
                        "description": "Page Title Link",
                        "title": "Link",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "content",
                    "link"
                ],
                "title": "Page title text information",
                "type": "object"
            },
            "_namespace_swagger.INotion.IPageTitleAnnotation": {
                "properties": {
                    "bold": {
                        "title": "Bold",
                        "description": "Title Text Bold",
                        "type": "boolean"
                    },
                    "italic": {
                        "title": "italicized",
                        "description": "Title text italicized",
                        "type": "boolean"
                    },
                    "strikethrough": {
                        "title": "strikethrough",
                        "description": "Title text strikethrough",
                        "type": "boolean"
                    },
                    "underline": {
                        "title": "underline",
                        "description": "Title text underline",
                        "type": "boolean"
                    },
                    "code": {
                        "title": "Whether the title text is wrapped in code",
                        "description": "Whether the title text is wrapped in code",
                        "type": "boolean"
                    },
                    "color": {
                        "title": "Color",
                        "description": "Title Text Color",
                        "type": "string"
                    }
                },
                "required": [
                    "bold",
                    "italic",
                    "strikethrough",
                    "underline",
                    "code",
                    "color"
                ],
                "title": "Page title Additional information",
                "type": "object"
            },
            "_namespace_swagger.INotion.IFindPageOrDatabaseItemInput": {
                "properties": {
                    "title": {
                        "title": "Title",
                        "description": "Page Title",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "title",
                    "secretKey"
                ],
                "title": "Information needed to search the page",
                "type": "object"
            },
            "_namespace_swagger.INotion.IFindDatabaseItemInput": {
                "properties": {
                    "title": {
                        "title": "Title",
                        "description": "The title of the item in the database item",
                        "type": "string"
                    },
                    "number": {
                        "title": "Number",
                        "description": "Number in database item",
                        "type": "integer"
                    },
                    "url": {
                        "format": "iri",
                        "title": "url",
                        "description": "url in database item",
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "title": "Email address",
                        "description": "Email address in database item",
                        "type": "string"
                    },
                    "rich_text": {
                        "title": "text",
                        "description": "Text in database item",
                        "type": "string"
                    },
                    "phone_number": {
                        "title": "Phone number",
                        "description": "Phone number in database item",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "additionalProperties": {},
                "required": [
                    "secretKey"
                ],
                "title": "Information needed to find an item in the database",
                "type": "object"
            },
            "_namespace_swagger.INotion.ICreatePageByMarkdownInput": {
                "properties": {
                    "parentPageId": {
                        "oneOf": [
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:pageId, label:title}",
                                    "method": "post",
                                    "path": "/connector/notion/get/page"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-placeholder": "부모 페이지를 선택하세요.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:id}",
                                    "method": "post",
                                    "path": "/connector/notion/page"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "title": {
                        "title": "Page title",
                        "description": "New page title to be created",
                        "x-wrtn-placeholder": "테스트 페이지.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "notion",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "markdown": {
                        "title": "markdown",
                        "description": "If you add a markdown string, it will be converted appropriately according to the Notion's block.\nTherefore, you don't have to use Unicode symbols to implement lists or decorate documents using letters.\nOf course, this depends on the user, and there is no problem using the character string you want, such as inserting an emoji as well as Unicode.",
                        "type": "string"
                    }
                },
                "required": [
                    "parentPageId",
                    "title",
                    "secretKey",
                    "markdown"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleHotel.IResponse": {
                "properties": {
                    "name": {
                        "title": "Accommodation Name",
                        "description": "Accommodation Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Property Description",
                        "description": "Property Description",
                        "type": "string"
                    },
                    "link": {
                        "title": "Accommodation Link",
                        "description": "Accommodation Link",
                        "type": "string"
                    },
                    "check_in_time": {
                        "title": "Check-in time",
                        "description": "Accommodation check-in time",
                        "type": "string"
                    },
                    "check_out_time": {
                        "title": "Check-out Time",
                        "description": "Accommodation Check-out Time",
                        "type": "string"
                    },
                    "price": {
                        "title": "Accommodation prices",
                        "description": "Accommodation prices",
                        "type": "string"
                    },
                    "nearby_place": {
                        "title": "Facilities around the property",
                        "description": "Facilities around the property",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGoogleHotel.INearbyPlace"
                        },
                        "type": "array"
                    },
                    "hotel_class": {
                        "title": "Accommodation rating",
                        "description": "Accommodation rating",
                        "type": "string"
                    },
                    "thumbnails": {
                        "title": "thumbnail",
                        "description": "Accommodation thumbnail image",
                        "items": {
                            "format": "iri",
                            "contentMediaType": "image/*",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "rating": {
                        "title": "rating",
                        "description": "Accommodation rating",
                        "type": "string"
                    },
                    "review_count": {
                        "title": "Number of reviews",
                        "description": "Number of reviews",
                        "type": "string"
                    },
                    "amenities": {
                        "description": "Amenities provided by the property",
                        "title": "Amenities",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "excluded_amenities": {
                        "title": "Amenities not provided",
                        "description": "Amenities not provided by the property",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "price",
                    "thumbnails",
                    "amenities"
                ],
                "title": "Accommodation search results",
                "type": "object"
            },
            "_namespace_swagger.IGoogleHotel.INearbyPlace": {
                "properties": {
                    "name": {
                        "title": "Surrounding facility name",
                        "description": "Surrounding facility name",
                        "type": "string"
                    },
                    "transportations": {
                        "title": "Transportation",
                        "description": "Transportation to nearby facilities",
                        "items": {
                            "properties": {
                                "type": {
                                    "title": "Types of Transportation",
                                    "description": "Types of Transportation",
                                    "type": "string"
                                },
                                "duration": {
                                    "title": "Time required",
                                    "description": "Time required to reach surrounding facilities",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "type",
                                "duration"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name"
                ],
                "title": "Surrounding facilities",
                "type": "object"
            },
            "_namespace_swagger.IGoogleHotel.IRequest": {
                "properties": {
                    "keyword": {
                        "title": "Search term",
                        "description": "Enter the keyword you want to search for.",
                        "type": "string"
                    },
                    "check_in_date": {
                        "format": "date",
                        "title": "Check-in date",
                        "description": "Set your check-in date.\n\nPlease enter a date after today's date.",
                        "type": "string"
                    },
                    "check_out_date": {
                        "format": "date",
                        "title": "Checkout Date",
                        "description": "Set a checkout date.\n\nPlease enter a date after today's date.",
                        "type": "string"
                    },
                    "adults": {
                        "default": 2,
                        "title": "Number of adults",
                        "description": "Set the number of adults staying. The default is 2.",
                        "type": "integer"
                    },
                    "children": {
                        "default": 0,
                        "title": "Number of children",
                        "description": "Set the number of children staying. The default is 0.",
                        "type": "integer"
                    },
                    "sort_by": {
                        "description": "Please select the desired sort criteria.\n\nOnly 3, 8, and 13 are possible values.",
                        "title": "Sort criteria",
                        "oneOf": [
                            {
                                "title": "낮은 가격 순",
                                "const": "3"
                            },
                            {
                                "title": "평점 높은 순",
                                "const": "8"
                            },
                            {
                                "title": "리뷰 많은 순",
                                "const": "13"
                            }
                        ]
                    },
                    "min_price": {
                        "title": "Minimum price",
                        "description": "Please set the minimum price for the price range.",
                        "type": "integer"
                    },
                    "max_price": {
                        "title": "Maximum price",
                        "description": "Please set the maximum price for the price range.",
                        "type": "integer"
                    },
                    "rating": {
                        "description": "Search only properties with a selected rating or higher.\n\nOnly possible values are 7, 8, and 9.",
                        "title": "Rating",
                        "oneOf": [
                            {
                                "title": "평점 3.5 이상",
                                "const": "7"
                            },
                            {
                                "title": "평점 4.0 이상",
                                "const": "8"
                            },
                            {
                                "title": "평점 4.5 이상",
                                "const": "9"
                            }
                        ]
                    },
                    "type": {
                        "title": "Accommodation type",
                        "description": "Please select the accommodation type.\n\nOnly 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 are possible values.",
                        "items": {
                            "oneOf": [
                                {
                                    "title": "비치 호텔",
                                    "const": "12"
                                },
                                {
                                    "title": "부티크 호텔",
                                    "const": "13"
                                },
                                {
                                    "title": "호스텔",
                                    "const": "14"
                                },
                                {
                                    "title": "여관",
                                    "const": "15"
                                },
                                {
                                    "title": "모텔",
                                    "const": "16"
                                },
                                {
                                    "title": "리조트",
                                    "const": "17"
                                },
                                {
                                    "title": "스파 호텔",
                                    "const": "18"
                                },
                                {
                                    "title": "아침 식사를 제공하는 숙소(B&B)",
                                    "const": "19"
                                },
                                {
                                    "title": "기타",
                                    "const": "20"
                                },
                                {
                                    "title": "아파트 호텔",
                                    "const": "21"
                                },
                                {
                                    "title": "민박",
                                    "const": "22"
                                },
                                {
                                    "title": "일본식 비즈니스 호텔",
                                    "const": "23"
                                },
                                {
                                    "title": "료칸",
                                    "const": "24"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "hotel_class": {
                        "title": "Accommodation class",
                        "description": "Please select your accommodation class.'\n\nOnly 1, 2, 3, 4, 5 are possible values.",
                        "items": {
                            "oneOf": [
                                {
                                    "title": "1성급",
                                    "const": "1"
                                },
                                {
                                    "title": "2성급",
                                    "const": "2"
                                },
                                {
                                    "title": "3성급",
                                    "const": "3"
                                },
                                {
                                    "title": "4성급",
                                    "const": "4"
                                },
                                {
                                    "title": "5성급",
                                    "const": "5"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "free_cancellation": {
                        "default": false,
                        "title": "Is free cancellation possible?",
                        "description": "Search only properties with free cancellation.",
                        "type": "boolean"
                    },
                    "max_results": {
                        "title": "Number of search results",
                        "description": "Set the number of search results.",
                        "type": "integer"
                    }
                },
                "required": [
                    "keyword",
                    "check_in_date",
                    "check_out_date",
                    "max_results"
                ],
                "title": "Accommodation search criteria",
                "type": "object"
            },
            "_namespace_swagger.IAirportInformation.IResponse": {
                "properties": {
                    "country_name": {
                        "title": "Country",
                        "description": "Country Name",
                        "type": "string"
                    },
                    "city_name": {
                        "title": "City",
                        "description": "City Name",
                        "type": "string"
                    },
                    "airport_name": {
                        "title": "Airport",
                        "description": "Airport Name",
                        "type": "string"
                    },
                    "airport_code": {
                        "title": "Airport Code",
                        "description": "Airport Code",
                        "type": "string"
                    }
                },
                "required": [
                    "country_name",
                    "city_name",
                    "airport_name",
                    "airport_code"
                ],
                "title": "Airport information search results",
                "type": "object"
            },
            "_namespace_swagger.IAirportInformation.IRequest": {
                "properties": {
                    "keyword": {
                        "title": "Search term",
                        "description": "Enter the name of the country or city you want to search for.",
                        "type": "string"
                    }
                },
                "required": [
                    "keyword"
                ],
                "title": "Airport information search conditions",
                "type": "object"
            },
            "_namespace_swagger.IGoogleFlight.IFinalResponse": {
                "properties": {
                    "flight": {
                        "title": "Final selected flight information",
                        "description": "Here is the final selected flight information.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGoogleFlight.ISearchOutput"
                        },
                        "type": "array"
                    },
                    "booking_options": {
                        "title": "Reservation Information",
                        "description": "Here is the information you need to book your chosen flight.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGoogleFlight.IBookingOption"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "flight",
                    "booking_options"
                ],
                "title": "Final flight selection results",
                "description": "Here are the final flight selection results.",
                "type": "object"
            },
            "_namespace_swagger.IGoogleFlight.ISearchOutput": {
                "properties": {
                    "flight": {
                        "title": "Flight Information",
                        "description": "Here is the flight information.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGoogleFlight.IFlight"
                        },
                        "type": "array"
                    },
                    "total_duration": {
                        "title": "Total flight time",
                        "description": "Total flight time.",
                        "type": "string"
                    },
                    "price": {
                        "title": "Flight prices",
                        "description": "Flight prices.",
                        "type": "string"
                    },
                    "layover": {
                        "title": "Transfer Information",
                        "description": "Here is the flight transfer information.",
                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleFlight.ILayover"
                    },
                    "departure_token": {
                        "title": "Return flight search token",
                        "description": "Token for return flight search",
                        "type": "string"
                    },
                    "booking_token": {
                        "title": "Final confirmation token for flight",
                        "description": "Token for final confirmation of flight",
                        "type": "string"
                    }
                },
                "required": [
                    "flight",
                    "total_duration",
                    "price"
                ],
                "title": "Flight search results",
                "description": "Here are the flight search results.",
                "type": "object"
            },
            "_namespace_swagger.IGoogleFlight.IFlight": {
                "properties": {
                    "departure_airport": {
                        "title": "Departure Information",
                        "description": "Here is the flight departure information.",
                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleFlight.IAirport"
                    },
                    "arrival_airport": {
                        "title": "Arrival Information",
                        "description": "Here is the flight arrival information.",
                        "$ref": "#/components/schemas/_namespace_swagger.IGoogleFlight.IAirport"
                    },
                    "duration": {
                        "title": "Flight time",
                        "description": "This is the time it takes to fly.",
                        "type": "string"
                    },
                    "airplane": {
                        "title": "Airplane type",
                        "description": "Here is the aircraft type information.",
                        "type": "string"
                    },
                    "airline": {
                        "title": "Airline",
                        "description": "Here is the airline information.",
                        "type": "string"
                    },
                    "airline_logo": {
                        "format": "uri",
                        "contentMediaType": "image/*",
                        "title": "Airline Logo",
                        "description": "This is an image of an airline logo.",
                        "type": "string"
                    },
                    "travel_class": {
                        "title": "Seat Class",
                        "description": "Here is the seat class information.",
                        "type": "string"
                    },
                    "flight_number": {
                        "title": "Flight number",
                        "description": "Flight number is.",
                        "type": "string"
                    }
                },
                "required": [
                    "departure_airport",
                    "arrival_airport",
                    "duration",
                    "airplane",
                    "airline",
                    "airline_logo",
                    "travel_class",
                    "flight_number"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleFlight.IAirport": {
                "properties": {
                    "name": {
                        "title": "Airport name",
                        "description": "Airport name.",
                        "type": "string"
                    },
                    "code": {
                        "title": "Airport Code",
                        "description": "This is a three-digit airport code.",
                        "type": "string"
                    },
                    "time": {
                        "title": "Flight Departure Date / Time",
                        "description": "The date and time of the flight departure.",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "code",
                    "time"
                ],
                "title": "Flight Information",
                "type": "object"
            },
            "_namespace_swagger.IGoogleFlight.ILayover": {
                "properties": {
                    "duration": {
                        "title": "Transfer time",
                        "description": "It's transfer time.",
                        "type": "string"
                    },
                    "name": {
                        "title": "Airport name",
                        "description": "Airport name.",
                        "type": "string"
                    },
                    "code": {
                        "title": "Airport Code",
                        "description": "This is a three-digit airport code.",
                        "type": "string"
                    }
                },
                "required": [
                    "duration",
                    "name",
                    "code"
                ],
                "title": "Transfer information",
                "type": "object"
            },
            "_namespace_swagger.IGoogleFlight.IBookingOption": {
                "properties": {
                    "book_with": {
                        "title": "Reservation site",
                        "description": "This is a site where you can book flights of your choice.",
                        "type": "string"
                    },
                    "price": {
                        "title": "Price",
                        "description": "The price of the selected flight.",
                        "type": "string"
                    },
                    "book_link": {
                        "description": "Here is a link to book your selected flight.",
                        "title": "Reservation Link",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.Formaturi"
                            }
                        ]
                    }
                },
                "required": [
                    "book_with",
                    "price",
                    "book_link"
                ],
                "title": "Reservation options",
                "description": "Reservation options.",
                "type": "object"
            },
            "_namespace_swagger.Formaturi": {
                "properties": {
                    "typia.tag": {
                        "properties": {
                            "target": {
                                "const": "string"
                            },
                            "kind": {
                                "const": "format"
                            },
                            "value": {
                                "const": "uri"
                            },
                            "validate": {
                                "const": "/\\/|:/.test($input) && /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i.test($input)"
                            },
                            "exclusive": {
                                "additionalItems": false,
                                "prefixItems": [
                                    {
                                        "const": "format"
                                    },
                                    {
                                        "const": "pattern"
                                    }
                                ],
                                "type": "array"
                            },
                            "schema": {
                                "properties": {
                                    "format": {
                                        "const": "uri"
                                    }
                                },
                                "required": [
                                    "format"
                                ],
                                "type": "object"
                            }
                        },
                        "required": [
                            "target",
                            "kind",
                            "value",
                            "validate",
                            "exclusive",
                            "schema"
                        ],
                        "title": "This is a dummy property for compilation",
                        "description": "This is a dummy property for compilation.\n\nIt does not mean anything in runtime.",
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IGoogleFlight.IRequest": {
                "properties": {
                    "departure_id": {
                        "title": "Departure",
                        "description": "Please enter the code of the departure airport.\n\nThe departure code must be the same even if it is a round trip (type \"1\").\n\nWhen calling connector/google-flight/arrival for a round trip (type \"1\"), the departure_id must be the same as when calling connector/google-flight/departure.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:airport_code, label: [country_name, city_name, airport_name, airport_code].join('-', @)}",
                            "method": "post",
                            "path": "/connector/airport-information/search"
                        },
                        "type": "string"
                    },
                    "arrival_id": {
                        "title": "Destination",
                        "description": "Please enter the destination airport code.\n\nEven if it is a round trip (type \"1\"), the destination code must be the same.\n\nWhen calling connector/google-flight/arrival for a round trip (type \"1\"), the arrival_id must be the same as when calling connector/google-flight/departure.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:airport_code, label: [country_name, city_name, airport_name, airport_code].join('-', @)}",
                            "method": "post",
                            "path": "/connector/airport-information/search"
                        },
                        "type": "string"
                    },
                    "type": {
                        "description": "Please select whether it is round trip or one way.\n\nPossible values are 1 and 2.\n\nPlease select \"1\" for round trip and \"2\" for one way.",
                        "title": "Round trip or one way",
                        "oneOf": [
                            {
                                "title": "왕복",
                                "const": "1"
                            },
                            {
                                "title": "편도",
                                "const": "2"
                            }
                        ]
                    },
                    "outbound_date": {
                        "format": "date",
                        "title": "Departure date",
                        "description": "Please enter your departure date.\n\nPlease enter a date after today's date.",
                        "type": "string"
                    },
                    "return_date": {
                        "format": "date",
                        "title": "Date of arrival",
                        "description": "Please enter the date of arrival.\n\nIf type is \"1\", it must be entered.\n\nIf type is \"2\", it must not be entered.\n\nPlease enter a date after today's date.",
                        "type": "string"
                    },
                    "adults": {
                        "title": "Number of adults",
                        "description": "Please enter the number of adults.",
                        "type": "integer"
                    },
                    "children": {
                        "title": "Number of children",
                        "description": "Please enter the number of children.",
                        "type": "integer"
                    },
                    "stop": {
                        "description": "Please select whether it is a direct flight.\n\nPossible values are 0, 1, 2, 3.",
                        "title": "Whether it is a direct flight",
                        "oneOf": [
                            {
                                "title": "상관 없음",
                                "const": "0"
                            },
                            {
                                "title": "직항",
                                "const": "1"
                            },
                            {
                                "title": "1번 경유",
                                "const": "2"
                            },
                            {
                                "title": "2번 이상 경유",
                                "const": "3"
                            }
                        ]
                    },
                    "max_price": {
                        "title": "Maximum Price",
                        "description": "Please enter the maximum price for your flight.\n\nYou must search for flights that do not exceed the maximum price you entered.",
                        "type": "integer"
                    }
                },
                "required": [
                    "departure_id",
                    "arrival_id",
                    "type",
                    "outbound_date",
                    "adults",
                    "stop"
                ],
                "title": "Information needed to search for airline tickets",
                "type": "object"
            },
            "_namespace_swagger.ISlack.Payload": {
                "properties": {
                    "payload": {
                        "type": "string"
                    }
                },
                "required": [
                    "payload"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.IHoldVoteOutput": {
                "properties": {
                    "blocks": {
                        "title": "title blocks",
                        "items": {},
                        "type": "array"
                    },
                    "ts": {
                        "title": "timestamp",
                        "description": "for example, `1721804246.083609`.\nThis is the time value expression method used by Slack.",
                        "x-wrtn-placeholder": "1234567890.123456",
                        "type": "string"
                    }
                },
                "required": [
                    "ts"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.IHoldVoteInput": {
                "properties": {
                    "channel": {
                        "title": "channel id",
                        "oneOf": [
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name}",
                                    "method": "post",
                                    "path": "/connector/slack/get-public-channels"
                                },
                                "type": "string"
                            },
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name}",
                                    "method": "post",
                                    "path": "/connector/slack/get-private-channels"
                                },
                                "type": "string"
                            },
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name || '개인 채널'}",
                                    "method": "post",
                                    "path": "/connector/slack/get-im-channels"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "title": {
                        "title": "Title of vote to be held\n\nIt should be written as a simple one-line markdown and can include Slack emojis.",
                        "type": "string"
                    },
                    "items": {
                        "title": "options available for voting\n\nIt refers to the options available for voting.",
                        "items": {
                            "properties": {
                                "text": {
                                    "title": "option title",
                                    "type": "string"
                                },
                                "link": {
                                    "title": "option's link",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "text"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "slack",
                        "x-wrtn-secret-scopes": [
                            "channels:read",
                            "channels:history",
                            "users.profile:read",
                            "im:read",
                            "groups:history",
                            "groups:read",
                            "chat:write",
                            "users:read",
                            "files:read"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "channel",
                    "title",
                    "items",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.IMarkInput": {
                "properties": {
                    "channel": {
                        "description": "It refers to the channel on which you want to mark the conversation history.\nIf you don't know the channel's ID, You need to view the channel first.",
                        "title": "channel id",
                        "oneOf": [
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name}",
                                    "method": "post",
                                    "path": "/connector/slack/get-public-channels"
                                },
                                "type": "string"
                            },
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name}",
                                    "method": "post",
                                    "path": "/connector/slack/get-private-channels"
                                },
                                "type": "string"
                            },
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name || '개인 채널'}",
                                    "method": "post",
                                    "path": "/connector/slack/get-im-channels"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "ts": {
                        "title": "ts",
                        "description": "It means the 'ts' value of the chat you want to mark",
                        "x-wrtn-placeholder": "1234567890.123456",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "messages[].{value: ts, label: text}",
                            "method": "post",
                            "path": "/connector/slack/get-channel-histories"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "slack",
                        "x-wrtn-secret-scopes": [
                            "channels:read",
                            "channels:history",
                            "users.profile:read",
                            "im:read",
                            "groups:history",
                            "groups:read",
                            "chat:write",
                            "users:read",
                            "files:read"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "channel",
                    "ts",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickISlack.ScheduledMessagepost_at": {
                "properties": {
                    "post_at": {
                        "title": "timestamp",
                        "description": "for example, `1721804246.083609`.\nThis is the time value expression method used by Slack.",
                        "x-wrtn-placeholder": "1234567890.123456",
                        "type": "string"
                    }
                },
                "required": [
                    "post_at"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.ISCheduleMessageInput": {
                "properties": {
                    "post_at": {
                        "title": "Transfer Schedule Time",
                        "description": "You can schedule the time you want to send the message in advance.\nThe scheduled time must be in the same form as the ts property in the Message.",
                        "x-wrtn-placeholder": "1234567890.123456",
                        "type": "string"
                    },
                    "thread_ts": {
                        "title": "thread ts\n\nIf the message you want to schedule is within a specific thread, you must pass the ts value of the parent message.",
                        "x-wrtn-placeholder": "1234567890.123456",
                        "type": "string"
                    },
                    "channel": {
                        "description": "It refers to the channel on which you want to view the conversation history.\nIf you don't know the channel's ID, You need to view the channel first.",
                        "title": "channel id",
                        "oneOf": [
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name}",
                                    "method": "post",
                                    "path": "/connector/slack/get-public-channels"
                                },
                                "type": "string"
                            },
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name}",
                                    "method": "post",
                                    "path": "/connector/slack/get-private-channels"
                                },
                                "type": "string"
                            },
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name || '개인 채널'}",
                                    "method": "post",
                                    "path": "/connector/slack/get-im-channels"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "text": {
                        "title": "message to send",
                        "description": "When a user enters a markdown format string, the internal function modifies it to the format of the slack.\nUsers can put text in accordance with the usual markdown grammar.\nFor user readability, it is recommended that the string be sent with appropriate new-line characters.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "slack",
                        "x-wrtn-secret-scopes": [
                            "channels:read",
                            "channels:history",
                            "users.profile:read",
                            "im:read",
                            "groups:history",
                            "groups:read",
                            "chat:write",
                            "users:read",
                            "files:read"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "post_at",
                    "channel",
                    "text",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.IDeleteSCheduleMessageInput": {
                "properties": {
                    "channel": {
                        "description": "It refers to the channel on which you want to delete the scheduled message.\nIf you don't know the channel's ID, You need to view the channel first.",
                        "title": "channel id",
                        "oneOf": [
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name}",
                                    "method": "post",
                                    "path": "/connector/slack/get-public-channels"
                                },
                                "type": "string"
                            },
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name}",
                                    "method": "post",
                                    "path": "/connector/slack/get-private-channels"
                                },
                                "type": "string"
                            },
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name || '개인 채널'}",
                                    "method": "post",
                                    "path": "/connector/slack/get-im-channels"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "scheduled_message_id": {
                        "title": "scheduled message id to delete",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "scheduled_messages[].{value:id, label:text}",
                            "method": "post",
                            "path": "/connector/slack/get-scheduled-messages"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "slack",
                        "x-wrtn-secret-scopes": [
                            "channels:read",
                            "channels:history",
                            "users.profile:read",
                            "im:read",
                            "groups:history",
                            "groups:read",
                            "chat:write",
                            "users:read",
                            "files:read"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "channel",
                    "scheduled_message_id",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickISlack.Messagets": {
                "properties": {
                    "ts": {
                        "title": "timestamp",
                        "description": "for example, `1721804246.083609`.\nThis is the time value expression method used by Slack.",
                        "x-wrtn-placeholder": "1234567890.123456",
                        "type": "string"
                    }
                },
                "required": [
                    "ts"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.IPostMessageToMyselfInput": {
                "properties": {
                    "text": {
                        "title": "message to send",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "slack",
                        "x-wrtn-secret-scopes": [
                            "channels:read",
                            "channels:history",
                            "users.profile:read",
                            "im:read",
                            "groups:history",
                            "groups:read",
                            "chat:write",
                            "users:read",
                            "files:read"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "text",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.IPostMessageReplyInput": {
                "properties": {
                    "ts": {
                        "title": "ts",
                        "description": "It means the 'ts' value of the chat you want to reply",
                        "x-wrtn-placeholder": "1234567890.123456",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "messages[].{value: ts, label: text}",
                            "method": "post",
                            "path": "/connector/slack/get-channel-histories"
                        },
                        "type": "string"
                    },
                    "channel": {
                        "description": "It refers to the channel on which you want to view the conversation history.\nIf you don't know the channel's ID, You need to view the channel first.",
                        "title": "channel id",
                        "oneOf": [
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name}",
                                    "method": "post",
                                    "path": "/connector/slack/get-public-channels"
                                },
                                "type": "string"
                            },
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name}",
                                    "method": "post",
                                    "path": "/connector/slack/get-private-channels"
                                },
                                "type": "string"
                            },
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name || '개인 채널'}",
                                    "method": "post",
                                    "path": "/connector/slack/get-im-channels"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "text": {
                        "title": "message to send",
                        "description": "When a user enters a markdown format string, the internal function modifies it to the format of the slack.\nUsers can put text in accordance with the usual markdown grammar.\nFor user readability, it is recommended that the string be sent with appropriate new-line characters.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "slack",
                        "x-wrtn-secret-scopes": [
                            "channels:read",
                            "channels:history",
                            "users.profile:read",
                            "im:read",
                            "groups:history",
                            "groups:read",
                            "chat:write",
                            "users:read",
                            "files:read"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "ts",
                    "channel",
                    "text",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.IPostMessageInput": {
                "properties": {
                    "channel": {
                        "description": "It refers to the channel on which you want to view the conversation history.\nIf you don't know the channel's ID, You need to view the channel first.",
                        "title": "channel id",
                        "oneOf": [
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name}",
                                    "method": "post",
                                    "path": "/connector/slack/get-public-channels"
                                },
                                "type": "string"
                            },
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name}",
                                    "method": "post",
                                    "path": "/connector/slack/get-private-channels"
                                },
                                "type": "string"
                            },
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name || '개인 채널'}",
                                    "method": "post",
                                    "path": "/connector/slack/get-im-channels"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "text": {
                        "title": "message to send",
                        "description": "When a user enters a markdown format string, the internal function modifies it to the format of the slack.\nUsers can put text in accordance with the usual markdown grammar.\nFor user readability, it is recommended that the string be sent with appropriate new-line characters.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "slack",
                        "x-wrtn-secret-scopes": [
                            "channels:read",
                            "channels:history",
                            "users.profile:read",
                            "im:read",
                            "groups:history",
                            "groups:read",
                            "chat:write",
                            "users:read",
                            "files:read"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "channel",
                    "text",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.IGetScheduledMessageListOutput": {
                "properties": {
                    "scheduled_messages": {
                        "title": "scheduled messages",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ScheduledMessageidstringpost_at_datestring"
                        },
                        "type": "array"
                    },
                    "next_cursor": {
                        "description": "If the following data exist, the cursor value exists.\nIf you want to see the next data from these data,\nyou can pass this value to the next request condition, `cursor`.",
                        "title": "next_cursor",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "scheduled_messages",
                    "next_cursor"
                ],
                "type": "object"
            },
            "_namespace_swagger.ScheduledMessageidstringpost_at_datestring": {
                "properties": {
                    "post_at": {
                        "title": "timestamp",
                        "description": "for example, `1721804246.083609`.\nThis is the time value expression method used by Slack.",
                        "x-wrtn-placeholder": "1234567890.123456",
                        "type": "string"
                    },
                    "date_created": {
                        "title": "when the user scheduled the message",
                        "x-wrtn-placeholder": "1234567890.123456",
                        "type": "string"
                    },
                    "text": {
                        "title": "message contents",
                        "description": "When users occasionally call others, they can be called in the form of '@USERNAME', which is called a tag.\nIn the conversation history, the link and code box are abbreviated to <LINK/> and <CODE/>, respectively.\nFor users, it is replaced by a user name, Like <@USERNAME>.\n<@USERNAME> is about calling someone else, and it's not the name of the person who started the conversation, so be careful.\nif you want to find who started this conversation, check 'user' property.",
                        "type": "string"
                    },
                    "attachments": {
                        "title": "Attachments",
                        "description": "Attachement contains all types of files and can sometimes be an external link.\nIt is not the type that can be confirmed because the internal properties can vary depending on the type of block it is making up.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.MyPickISlack.Attachmenttitleid"
                        },
                        "type": "array"
                    },
                    "channel": {
                        "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                        "title": "channel id",
                        "type": "string"
                    },
                    "id": {
                        "title": "id of scheduled message",
                        "type": "string"
                    },
                    "post_at_date": {
                        "title": "date-time format of post_at",
                        "type": "string"
                    }
                },
                "required": [
                    "post_at",
                    "date_created",
                    "text",
                    "channel",
                    "id",
                    "post_at_date"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickISlack.Attachmenttitleid": {
                "properties": {
                    "title": {
                        "title": "title\n\nLarge title text near the top of the attachment.",
                        "type": "string"
                    },
                    "id": {
                        "title": "id",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.ISlack.IGetScheduledMessageListInput": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "slack",
                        "x-wrtn-secret-scopes": [
                            "channels:read",
                            "channels:history",
                            "users.profile:read",
                            "im:read",
                            "groups:history",
                            "groups:read",
                            "chat:write",
                            "users:read",
                            "files:read"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "limit": {
                        "minimum": 1,
                        "maximum": 1000,
                        "title": "limit",
                        "description": "Indicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details, it is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user.",
                        "x-wrtn-placeholder": "200",
                        "type": "integer"
                    },
                    "cursor": {
                        "title": "cursor",
                        "description": "If you pass the cursor value received from the previous inquiry, you can inquire from the data after the cursor.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.IGetUserDetailOutput": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "fields": {
                        "title": "custom fields",
                        "$ref": "#/components/schemas/_namespace_swagger.Recordstringstring"
                    },
                    "display_name": {
                        "description": "The user has a separate display name.\nA display name is a name that the user has chosen to show.\nTherefore, it would be best to use this name as a courtesy.",
                        "title": "display name",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "real_name": {
                        "description": "The user's first and last name.\nUpdating this field will update first_name and last_name.\nIf only one name is provided, the value of last_name will be cleared.",
                        "title": "real_name",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "status_text": {
                        "title": "status",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "id",
                    "fields",
                    "display_name",
                    "real_name"
                ],
                "title": "profile",
                "description": "User information will usually include user's directories, start date, email, phone number, and status information.\nThe start date usually records when this member joined Slack or when he joined the team, but all the information here is written by the individual user and not by the HR person.",
                "type": "object"
            },
            "_namespace_swagger.Recordstringstring": {
                "properties": {},
                "additionalProperties": {
                    "type": "string"
                },
                "description": "Construct a type with a set of properties K of type T",
                "type": "object"
            },
            "_namespace_swagger.ISlack.IGetUserDetailInput": {
                "properties": {
                    "userIds": {
                        "minItems": 1,
                        "title": "userIds\n\nYou can enter the ID value of the user who wants to look up the details.",
                        "items": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "users[].{value: id, label: display_name}",
                                "method": "post",
                                "path": "/connector/slack/get-users"
                            },
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "slack",
                        "x-wrtn-secret-scopes": [
                            "channels:read",
                            "channels:history",
                            "users.profile:read",
                            "im:read",
                            "groups:history",
                            "groups:read",
                            "chat:write",
                            "users:read",
                            "files:read"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "userIds",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.IGetUserListOutput": {
                "properties": {
                    "users": {
                        "title": "user list",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.StrictOmitISlack.IGetUserOutputfields"
                        },
                        "type": "array"
                    },
                    "next_cursor": {
                        "description": "If the following data exist, the cursor value exists.\nIf you want to see the next data from these data,\nyou can pass this value to the next request condition, `cursor`.",
                        "title": "next_cursor",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "users",
                    "next_cursor"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitISlack.IGetUserOutputfields": {
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "This is the name of the user,\nbut in some countries,\nit may not be possible to call the user's name carelessly,\nand the company should refrain from using it because the position exists.",
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "profile_image": {
                        "description": "There are several profile images for each image quality,\nbut here we provide them based on the first image uploaded by the user.",
                        "title": "profile image",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "contentMediaType": "image/*",
                                "type": "string"
                            }
                        ]
                    },
                    "display_name": {
                        "description": "The user has a separate display name.\nA display name is a name that the user has chosen to show.\nTherefore, it would be best to use this name as a courtesy.",
                        "title": "display name",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "real_name": {
                        "description": "The user's first and last name.\nUpdating this field will update first_name and last_name.\nIf only one name is provided, the value of last_name will be cleared.",
                        "title": "real_name",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "deleted": {
                        "title": "deleted",
                        "description": "This value is used to distinguish between deleted users.",
                        "type": "boolean"
                    },
                    "status_text": {
                        "title": "status",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "id",
                    "profile_image",
                    "display_name",
                    "real_name",
                    "deleted"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.IGetUserListInput": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "slack",
                        "x-wrtn-secret-scopes": [
                            "channels:read",
                            "channels:history",
                            "users.profile:read",
                            "im:read",
                            "groups:history",
                            "groups:read",
                            "chat:write",
                            "users:read",
                            "files:read"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "limit": {
                        "minimum": 1,
                        "maximum": 1000,
                        "title": "limit",
                        "description": "Indicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details, it is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user.",
                        "x-wrtn-placeholder": "200",
                        "type": "integer"
                    },
                    "cursor": {
                        "title": "cursor",
                        "description": "If you pass the cursor value received from the previous inquiry, you can inquire from the data after the cursor.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.IGetReplyOutput": {
                "properties": {
                    "replies": {
                        "title": "replies",
                        "description": "This value refers to replies that depend on the currently viewed thread.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ISlack.Reply"
                        },
                        "type": "array"
                    },
                    "members": {
                        "title": "members\n\nThis is a list of people who participated in the conversation in this conversation list.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.MyPickISlack.IGetUserOutputiddisplay_name"
                        },
                        "type": "array"
                    },
                    "next_cursor": {
                        "description": "If the following data exist, the cursor value exists.\nIf you want to see the next data from these data,\nyou can pass this value to the next request condition, `cursor`.",
                        "title": "next_cursor",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "replies",
                    "members",
                    "next_cursor"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.Reply": {
                "properties": {
                    "thread_ts": {
                        "title": "thread ts",
                        "x-wrtn-placeholder": "1234567890.123456",
                        "type": "string"
                    },
                    "parent_user_id": {
                        "description": "If this Reply has been published from thread to thread,\noutside of thread, and also as a channel,\nthere is no parent_user_id.",
                        "title": "ID of the person who made parent message of this message",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "links": {
                        "title": "links\n\nLinks from the chat",
                        "items": {
                            "format": "iri",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "link": {
                        "format": "iri",
                        "title": "shortcut link",
                        "description": "Link to view the conversation history immediately.\nWe can provide you with a shortcut link if user want, but you don't have to expose it to them in normal times.",
                        "type": "string"
                    },
                    "type": {
                        "title": "type",
                        "const": "message"
                    },
                    "text": {
                        "title": "message contents",
                        "description": "When users occasionally call others, they can be called in the form of '@USERNAME', which is called a tag.\nIn the conversation history, the link and code box are abbreviated to <LINK/> and <CODE/>, respectively.\nFor users, it is replaced by a user name, Like <@USERNAME>.\n<@USERNAME> is about calling someone else, and it's not the name of the person who started the conversation, so be careful.\nif you want to find who started this conversation, check 'user' property.",
                        "type": "string"
                    },
                    "user": {
                        "title": "ID of the person who made this message\n\nIf not a user, message does not have an ID.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "attachments": {
                        "title": "Attachments",
                        "description": "Attachement contains all types of files and can sometimes be an external link.\nIt is not the type that can be confirmed because the internal properties can vary depending on the type of block it is making up.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.MyPickISlack.Attachmenttitleid"
                        },
                        "type": "array"
                    },
                    "ts": {
                        "title": "timestamp",
                        "description": "for example, `1721804246.083609`.\nThis is the time value expression method used by Slack.",
                        "x-wrtn-placeholder": "1234567890.123456",
                        "type": "string"
                    },
                    "ts_date": {
                        "title": "date format of `ts`\n\nThis is the value changed to ISO String to make it easier to recognize the current time value by separating 'ts'.",
                        "type": "string"
                    }
                },
                "required": [
                    "thread_ts",
                    "parent_user_id",
                    "links",
                    "link",
                    "type",
                    "text",
                    "user",
                    "ts",
                    "ts_date"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickISlack.IGetUserOutputiddisplay_name": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "display_name": {
                        "description": "The user has a separate display name.\nA display name is a name that the user has chosen to show.\nTherefore, it would be best to use this name as a courtesy.",
                        "title": "display name",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "id",
                    "display_name"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.IGetReplyInput": {
                "properties": {
                    "ts": {
                        "title": "ts",
                        "description": "It means the 'ts' value of the chat you want to look up.",
                        "x-wrtn-placeholder": "1234567890.123456",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "messages[].{value: ts, label: text}",
                            "method": "post",
                            "path": "/connector/slack/get-channel-histories"
                        },
                        "type": "string"
                    },
                    "channel": {
                        "description": "It refers to the channel on which you want to view the conversation history.\nYou need to view the channel first.\nThis is a string that always begins with a capital letter 'C' or 'D'.",
                        "title": "channel id",
                        "oneOf": [
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name}",
                                    "method": "post",
                                    "path": "/connector/slack/get-public-channels"
                                },
                                "type": "string"
                            },
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name}",
                                    "method": "post",
                                    "path": "/connector/slack/get-private-channels"
                                },
                                "type": "string"
                            },
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name || '개인 채널'}",
                                    "method": "post",
                                    "path": "/connector/slack/get-im-channels"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "latestDateTime": {
                        "format": "date-time",
                        "title": "latestDateTime",
                        "description": "Only messages before this date-time will be included in results. Default is the current time.\nIt is a value that takes precedence over 'latest', 'latestTimestamp'.",
                        "type": "string"
                    },
                    "oldestDateTime": {
                        "format": "date-time",
                        "title": "oldestDateTime",
                        "description": "Only messages after this date-time will be included in results.\nIt is a value that takes precedence over 'oldest', 'oldestTimestamp'.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "slack",
                        "x-wrtn-secret-scopes": [
                            "channels:read",
                            "channels:history",
                            "users.profile:read",
                            "im:read",
                            "groups:history",
                            "groups:read",
                            "chat:write",
                            "users:read",
                            "files:read"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "limit": {
                        "minimum": 1,
                        "maximum": 1000,
                        "title": "limit",
                        "description": "Indicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details, it is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user.",
                        "x-wrtn-placeholder": "200",
                        "type": "integer"
                    },
                    "cursor": {
                        "title": "cursor",
                        "description": "If you pass the cursor value received from the previous inquiry, you can inquire from the data after the cursor.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties.",
                        "type": "string"
                    }
                },
                "required": [
                    "ts",
                    "channel",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.IGetChannelLinkHistoryOutput": {
                "properties": {
                    "messages": {
                        "title": "message",
                        "description": "This refers to the history of conversations made on the channel.\nThe closer you are to the 0th in the array, the more recent it is.\nHowever, Slack's message can be modified, so just because it is the 0th, it may not be the last writing/modified.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.StrictOmitISlack.LinkMessagetypeattachments"
                        },
                        "type": "array"
                    },
                    "members": {
                        "title": "members\n\nThis is a list of people who participated in the conversation in this conversation list.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.MyPickISlack.IGetUserOutputiddisplay_name"
                        },
                        "type": "array"
                    },
                    "next_cursor": {
                        "description": "If the following data exist, the cursor value exists.\nIf you want to see the next data from these data,\nyou can pass this value to the next request condition, `cursor`.",
                        "title": "next_cursor",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "messages",
                    "members",
                    "next_cursor"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitISlack.LinkMessagetypeattachments": {
                "properties": {
                    "link": {
                        "format": "iri",
                        "title": "shortcut link",
                        "description": "Link to view the conversation history immediately.\nWe can provide you with a shortcut link if user want, but you don't have to expose it to them in normal times.",
                        "type": "string"
                    },
                    "text": {
                        "title": "message contents",
                        "description": "When users occasionally call others, they can be called in the form of '@USERNAME', which is called a tag.\nIn the conversation history, the link and code box are abbreviated to <LINK/> and <CODE/>, respectively.\nFor users, it is replaced by a user name, Like <@USERNAME>.\n<@USERNAME> is about calling someone else, and it's not the name of the person who started the conversation, so be careful.\nif you want to find who started this conversation, check 'user' property.",
                        "type": "string"
                    },
                    "user": {
                        "title": "ID of the person who made this message\n\nIf not a user, message does not have an ID.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "channel": {
                        "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                        "title": "channel id",
                        "type": "string"
                    },
                    "ts": {
                        "title": "timestamp",
                        "description": "for example, `1721804246.083609`.\nThis is the time value expression method used by Slack.",
                        "x-wrtn-placeholder": "1234567890.123456",
                        "type": "string"
                    },
                    "reply_count": {
                        "title": "reply_count",
                        "description": "Indicates the number of replies on this thread.\nIf there are many replies, active discussions are underway.",
                        "type": "number"
                    },
                    "reply_users_count": {
                        "title": "reply_users_count",
                        "description": "This means the person who has one or more Replys in this thread.\nThe number of unique people discussing in the thread.",
                        "type": "number"
                    },
                    "ts_date": {
                        "title": "date format of `ts`\n\nThis is the value changed to ISO String to make it easier to recognize the current time value by separating 'ts'.",
                        "type": "string"
                    },
                    "links": {
                        "title": "links\n\nLinks from the chat",
                        "items": {
                            "format": "iri",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "link",
                    "text",
                    "user",
                    "channel",
                    "ts",
                    "reply_count",
                    "reply_users_count",
                    "ts_date",
                    "links"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.IGetChannelHistoryInput": {
                "properties": {
                    "channel": {
                        "description": "It refers to the channel on which you want to view the conversation history.\nYou need to view the channel first.\nThis is a string that always begins with a capital letter 'C' or 'D'.",
                        "title": "channel id",
                        "oneOf": [
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name}",
                                    "method": "post",
                                    "path": "/connector/slack/get-public-channels"
                                },
                                "type": "string"
                            },
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name}",
                                    "method": "post",
                                    "path": "/connector/slack/get-private-channels"
                                },
                                "type": "string"
                            },
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name || '개인 채널'}",
                                    "method": "post",
                                    "path": "/connector/slack/get-im-channels"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "latestDateTime": {
                        "format": "date-time",
                        "title": "latestDateTime",
                        "description": "Only messages before this date-time will be included in results. Default is the current time.\nIt is a value that takes precedence over 'latest', 'latestTimestamp'.",
                        "type": "string"
                    },
                    "oldestDateTime": {
                        "format": "date-time",
                        "title": "oldestDateTime",
                        "description": "Only messages after this date-time will be included in results.\nIt is a value that takes precedence over 'oldest', 'oldestTimestamp'.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "slack",
                        "x-wrtn-secret-scopes": [
                            "channels:read",
                            "channels:history",
                            "users.profile:read",
                            "im:read",
                            "groups:history",
                            "groups:read",
                            "chat:write",
                            "users:read",
                            "files:read"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "limit": {
                        "minimum": 1,
                        "maximum": 1000,
                        "title": "limit",
                        "description": "Indicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details, it is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user.",
                        "x-wrtn-placeholder": "200",
                        "type": "integer"
                    },
                    "cursor": {
                        "title": "cursor",
                        "description": "If you pass the cursor value received from the previous inquiry, you can inquire from the data after the cursor.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties.",
                        "type": "string"
                    }
                },
                "required": [
                    "channel",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.IGetChannelHistoryOutput": {
                "properties": {
                    "messages": {
                        "title": "message",
                        "description": "This refers to the history of conversations made on the channel.\nThe closer you are to the 0th in the array, the more recent it is.\nHowever, Slack's message can be modified, so just because it is the 0th, it may not be the last writing/modified.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.StrictOmitISlack.Messagetypeattachments"
                        },
                        "type": "array"
                    },
                    "members": {
                        "title": "members\n\nThis is a list of people who participated in the conversation in this conversation list.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.MyPickISlack.IGetUserOutputiddisplay_name"
                        },
                        "type": "array"
                    },
                    "next_cursor": {
                        "description": "If the following data exist, the cursor value exists.\nIf you want to see the next data from these data,\nyou can pass this value to the next request condition, `cursor`.",
                        "title": "next_cursor",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "messages",
                    "members",
                    "next_cursor"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitISlack.Messagetypeattachments": {
                "properties": {
                    "link": {
                        "format": "iri",
                        "title": "shortcut link",
                        "description": "Link to view the conversation history immediately.\nWe can provide you with a shortcut link if user want, but you don't have to expose it to them in normal times.",
                        "type": "string"
                    },
                    "text": {
                        "title": "message contents",
                        "description": "When users occasionally call others, they can be called in the form of '@USERNAME', which is called a tag.\nIn the conversation history, the link and code box are abbreviated to <LINK/> and <CODE/>, respectively.\nFor users, it is replaced by a user name, Like <@USERNAME>.\n<@USERNAME> is about calling someone else, and it's not the name of the person who started the conversation, so be careful.\nif you want to find who started this conversation, check 'user' property.",
                        "type": "string"
                    },
                    "user": {
                        "title": "ID of the person who made this message\n\nIf not a user, message does not have an ID.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "channel": {
                        "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                        "title": "channel id",
                        "type": "string"
                    },
                    "ts": {
                        "title": "timestamp",
                        "description": "for example, `1721804246.083609`.\nThis is the time value expression method used by Slack.",
                        "x-wrtn-placeholder": "1234567890.123456",
                        "type": "string"
                    },
                    "reply_count": {
                        "title": "reply_count",
                        "description": "Indicates the number of replies on this thread.\nIf there are many replies, active discussions are underway.",
                        "type": "number"
                    },
                    "reply_users_count": {
                        "title": "reply_users_count",
                        "description": "This means the person who has one or more Replys in this thread.\nThe number of unique people discussing in the thread.",
                        "type": "number"
                    },
                    "ts_date": {
                        "title": "date format of `ts`\n\nThis is the value changed to ISO String to make it easier to recognize the current time value by separating 'ts'.",
                        "type": "string"
                    }
                },
                "required": [
                    "link",
                    "text",
                    "user",
                    "channel",
                    "ts",
                    "reply_count",
                    "reply_users_count",
                    "ts_date"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.PrivateChannel": {
                "properties": {
                    "name": {
                        "title": "channel name",
                        "type": "string"
                    },
                    "id": {
                        "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                        "title": "channel id",
                        "description": "The channel ID starts with 'C' and 'D', and for a private DM channel, 'D'.\nBut Sometimes there are channel names that start with a G.",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "id"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.IGetChannelInput": {
                "properties": {
                    "limit": {
                        "minimum": 1,
                        "maximum": 1000,
                        "title": "limit",
                        "deprecated": true,
                        "x-wrtn-placeholder": "200",
                        "type": "integer"
                    },
                    "cursor": {
                        "title": "cursor",
                        "deprecated": true,
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "slack",
                        "x-wrtn-secret-scopes": [
                            "channels:read",
                            "channels:history",
                            "users.profile:read",
                            "im:read",
                            "groups:history",
                            "groups:read",
                            "chat:write",
                            "users:read",
                            "files:read"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "title": "request condition",
                "type": "object"
            },
            "_namespace_swagger.ISlack.PublicChannel": {
                "properties": {
                    "name": {
                        "title": "channel name",
                        "type": "string"
                    },
                    "id": {
                        "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                        "title": "channel id",
                        "description": "The channel ID starts with 'C' and 'D', and for a private DM channel, 'D'.\nBut Sometimes there are channel names that start with a G.",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "id"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.ImChannel": {
                "properties": {
                    "created": {
                        "title": "created time",
                        "type": "integer"
                    },
                    "is_im": {
                        "title": "Is it the `im` type or not",
                        "const": true
                    },
                    "is_org_shared": {
                        "title": "is org shared",
                        "type": "boolean"
                    },
                    "is_user_deleted": {
                        "title": "is user deleted",
                        "type": "boolean"
                    },
                    "priority": {
                        "title": "priority",
                        "type": "number"
                    },
                    "user": {
                        "title": "channel owner's id",
                        "type": "string"
                    },
                    "id": {
                        "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                        "title": "channel id",
                        "description": "The channel ID starts with 'C' and 'D', and for a private DM channel, 'D'.\nBut Sometimes there are channel names that start with a G.",
                        "type": "string"
                    }
                },
                "required": [
                    "created",
                    "is_im",
                    "is_org_shared",
                    "is_user_deleted",
                    "priority",
                    "user",
                    "id"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.IGetFileOutput": {
                "properties": {
                    "ok": {
                        "type": "boolean"
                    },
                    "files": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.MyPickISlack.Filenameusersizeidcreatedchannelscomments_countmimetypeurl_privateurl_private_downloadthumb_1024"
                        },
                        "type": "array"
                    },
                    "paging": {
                        "properties": {
                            "count": {
                                "title": "current file count",
                                "type": "number"
                            },
                            "total": {
                                "title": "total page",
                                "type": "number"
                            },
                            "page": {
                                "title": "current page",
                                "type": "number"
                            },
                            "pages": {
                                "title": "total page",
                                "type": "number"
                            }
                        },
                        "required": [
                            "count",
                            "total",
                            "page",
                            "pages"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "ok",
                    "files",
                    "paging"
                ],
                "title": "File Lookup Results",
                "type": "object"
            },
            "_namespace_swagger.MyPickISlack.Filenameusersizeidcreatedchannelscomments_countmimetypeurl_privateurl_private_downloadthumb_1024": {
                "properties": {
                    "name": {
                        "title": "name",
                        "type": "string"
                    },
                    "user": {
                        "title": "user",
                        "type": "string"
                    },
                    "size": {
                        "title": "size",
                        "type": "integer"
                    },
                    "id": {
                        "title": "id",
                        "type": "string"
                    },
                    "created": {
                        "title": "created",
                        "type": "number"
                    },
                    "channels": {
                        "title": "channels",
                        "items": {
                            "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "comments_count": {
                        "title": "comments_count",
                        "type": "integer"
                    },
                    "mimetype": {
                        "title": "mimetype",
                        "type": "string"
                    },
                    "url_private": {
                        "format": "iri",
                        "title": "url_private",
                        "type": "string"
                    },
                    "url_private_download": {
                        "format": "iri",
                        "title": "url_private_download",
                        "type": "string"
                    },
                    "thumb_1024": {
                        "format": "iri",
                        "title": "thumb_1024",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "user",
                    "size",
                    "id",
                    "created",
                    "channels",
                    "comments_count",
                    "mimetype"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISlack.IGetFileInput": {
                "properties": {
                    "page": {
                        "default": 1,
                        "title": "page",
                        "type": "number"
                    },
                    "channel": {
                        "title": "Channel ID to browse the file\n\nIf not specified, the entire Slack workspace will be explored.",
                        "oneOf": [
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name}",
                                    "method": "post",
                                    "path": "/connector/slack/get-public-channels"
                                },
                                "type": "string"
                            },
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name}",
                                    "method": "post",
                                    "path": "/connector/slack/get-private-channels"
                                },
                                "type": "string"
                            },
                            {
                                "pattern": "^((C(.*))|(D(.*))|(G(.*)))",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:id, label:name || '개인 채널'}",
                                    "method": "post",
                                    "path": "/connector/slack/get-im-channels"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "user": {
                        "title": "user id\n\nIf you only want to check files sent by a particular user, enter your ID.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "users[].{value: id, label: display_name}",
                            "method": "post",
                            "path": "/connector/slack/get-users"
                        },
                        "type": "string"
                    },
                    "types": {
                        "properties": {
                            "spaces": {
                                "title": "spaces",
                                "description": "Slack's Post is a feature that allows users to write and share long forms of documents or writings.\nIt is more formatting free than regular messages and can contain code blocks or sections, which are useful for creating structured documents.\nSlack often categorizes these documented files into spaces, helping to share knowledge or information easily within the team.",
                                "type": "boolean"
                            },
                            "snippets": {
                                "title": "snippets",
                                "description": "Snippets are used to share short code or text snippets.\nThey are usually useful when programmers share short code blocks or snippets of log files with their teams.\nSnippets quickly uploads text or code, and allows others to refer to or copy the content. In Slack, these files are classified into a file type called snippets.",
                                "type": "boolean"
                            },
                            "images": {
                                "title": "images",
                                "type": "boolean"
                            },
                            "gdocs": {
                                "title": "gdocs\n\nGoogle docs",
                                "type": "boolean"
                            },
                            "zips": {
                                "title": "zips",
                                "type": "boolean"
                            },
                            "pdfs": {
                                "title": "pdfs",
                                "type": "boolean"
                            }
                        },
                        "title": "file types to include",
                        "description": "The file types you may encounter include (but are not limited to):\nIf you want to look up all of them regardless of the file type, you can ignore the properties.\nIf the file type is important, you can specify the file type property as true inside the object.",
                        "type": "object"
                    },
                    "latestDateTime": {
                        "format": "date-time",
                        "title": "latestDateTime",
                        "description": "Only files before this date-time will be included in results. Default is the current time.\nIt is a value that takes precedence over 'latest', 'latestTimestamp'.",
                        "type": "string"
                    },
                    "oldestDateTime": {
                        "format": "date-time",
                        "title": "oldestDateTime",
                        "description": "Only files after this date-time will be included in results.\nIt is a value that takes precedence over 'oldest', 'oldestTimestamp'.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "slack",
                        "x-wrtn-secret-scopes": [
                            "channels:read",
                            "channels:history",
                            "users.profile:read",
                            "im:read",
                            "groups:history",
                            "groups:read",
                            "chat:write",
                            "users:read",
                            "files:read"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "limit": {
                        "minimum": 1,
                        "maximum": 1000,
                        "title": "limit",
                        "description": "Indicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details, it is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user.",
                        "x-wrtn-placeholder": "200",
                        "type": "integer"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIDeleteCommentInputemaildomaintokenIBasicSecret": {
                "properties": {
                    "issueIdOrKey": {
                        "description": "This connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up.",
                        "title": "issue id or key",
                        "oneOf": [
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "issues[].{value:id, label:key}",
                                    "method": "post",
                                    "path": "/connector/jira/get-issues"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "issues[].{value:key, label:key}",
                                    "method": "post",
                                    "path": "/connector/jira/get-issues"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "commentId": {
                        "title": "ID of comment to delete",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "atlassian",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "issueIdOrKey",
                    "commentId",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.IUpdateCommentByMarkdownInput": {
                "properties": {
                    "body": {
                        "title": "body of comment",
                        "$ref": "#/components/schemas/_namespace_swagger.StrictOmittypedocversion1contentTopLevelBlockNodecontentcontentstring"
                    },
                    "issueIdOrKey": {
                        "description": "This connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up.",
                        "title": "issue id or key",
                        "oneOf": [
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "issues[].{value:id, label:key}",
                                    "method": "post",
                                    "path": "/connector/jira/get-issues"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "issues[].{value:key, label:key}",
                                    "method": "post",
                                    "path": "/connector/jira/get-issues"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "commentId": {
                        "title": "ID of comment to update",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "atlassian",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "body",
                    "issueIdOrKey",
                    "commentId",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmittypedocversion1contentTopLevelBlockNodecontentcontentstring": {
                "properties": {
                    "version": {
                        "const": 1
                    },
                    "type": {
                        "const": "doc"
                    },
                    "content": {
                        "title": "contents of description",
                        "description": "You must use markdown format string.\n\nIt is recommended to contain as much detail as possible on the issue raised by the user,\nso that the next person who reads this issue can see the summary and description of this issue to resolve the issue.",
                        "type": "string"
                    }
                },
                "required": [
                    "version",
                    "type",
                    "content"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.ICreateCommentOutput": {
                "properties": {
                    "id": {
                        "title": "ID of comment",
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.ICreateCommentByMarkdownInput": {
                "properties": {
                    "body": {
                        "title": "body of comment",
                        "$ref": "#/components/schemas/_namespace_swagger.StrictOmittypedocversion1contentTopLevelBlockNodecontentcontentstring.o1"
                    },
                    "issueIdOrKey": {
                        "description": "This connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up.",
                        "title": "issue id or key",
                        "oneOf": [
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "issues[].{value:id, label:key}",
                                    "method": "post",
                                    "path": "/connector/jira/get-issues"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "issues[].{value:key, label:key}",
                                    "method": "post",
                                    "path": "/connector/jira/get-issues"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "atlassian",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "body",
                    "issueIdOrKey",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmittypedocversion1contentTopLevelBlockNodecontentcontentstring.o1": {
                "properties": {
                    "version": {
                        "const": 1
                    },
                    "type": {
                        "const": "doc"
                    },
                    "content": {
                        "title": "contents of description",
                        "description": "You must use markdown format string.\n\nIt is recommended to contain as much detail as possible on the issue raised by the user,\nso that the next person who reads this issue can see the summary and description of this issue to resolve the issue.",
                        "type": "string"
                    }
                },
                "required": [
                    "version",
                    "type",
                    "content"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.IGetCommentOutput": {
                "properties": {
                    "comments": {
                        "title": "comments",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.MyPickIJira.CommentidbodyauthorcreatedupdatedupdateAuthor"
                        },
                        "type": "array"
                    },
                    "isLast": {
                        "title": "Wheather is last page",
                        "type": "boolean"
                    },
                    "total": {
                        "title": "total count",
                        "type": "integer"
                    },
                    "startAt": {
                        "default": 0,
                        "title": "page offset",
                        "description": "The index of the first item to return in a page of results (page offset).",
                        "type": "integer"
                    },
                    "maxResults": {
                        "default": 50,
                        "title": "max results",
                        "description": "The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time.",
                        "type": "integer"
                    }
                },
                "required": [
                    "comments",
                    "total"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIJira.CommentidbodyauthorcreatedupdatedupdateAuthor": {
                "properties": {
                    "id": {
                        "title": "id of comment",
                        "type": "string"
                    },
                    "body": {
                        "properties": {
                            "type": {
                                "const": "doc"
                            },
                            "version": {
                                "const": 1
                            },
                            "content": {
                                "title": "A document in Jira is a combination of several blocks, so a single comment appears in the form of an array",
                                "description": "A document in Jira is a combination of several blocks, so a single comment appears in the form of an array.\nBy combining each element in the array, you can understand the entire comment content.",
                                "items": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.BlockquoteNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.ListNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.CodeBlockNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.HeadingNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.MediaSingleNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.PanelNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.ParagraphNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.TableNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.MediaGroupNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.RuleNode"
                                        }
                                    ]
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "type",
                            "version",
                            "content"
                        ],
                        "title": "body of comment",
                        "type": "object"
                    },
                    "author": {
                        "title": "author of this comment",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIJira.UseractiveaccountIddisplayName"
                    },
                    "created": {
                        "title": "created time of this comment",
                        "type": "string"
                    },
                    "updated": {
                        "title": "updated time of this comment",
                        "type": "string"
                    },
                    "updateAuthor": {
                        "title": "who updates this comment",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIJira.UseractiveaccountIddisplayName"
                    }
                },
                "required": [
                    "id",
                    "body",
                    "author",
                    "created",
                    "updated",
                    "updateAuthor"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.BlockquoteNode": {
                "properties": {
                    "type": {
                        "title": "blockquote type",
                        "const": "blockquote"
                    },
                    "content": {
                        "minItems": 1,
                        "description": "content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList",
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.ListNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.ParagraphContentWithoutNoMarks"
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "type",
                    "content"
                ],
                "title": "Blockquote node",
                "description": "The blockquote node is a container for quotes.\nblockquote is a top-level block node.",
                "type": "object"
            },
            "_namespace_swagger.ListNode": {
                "properties": {
                    "type": {
                        "oneOf": [
                            {
                                "const": "bulletList"
                            },
                            {
                                "const": "orderedList"
                            }
                        ]
                    },
                    "content": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ListItemNode_1"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "type",
                    "content"
                ],
                "type": "object"
            },
            "_namespace_swagger.ListItemNode_1": {
                "properties": {
                    "type": {
                        "const": "listItem"
                    },
                    "content": {
                        "title": "content",
                        "description": "content must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks",
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.CodeBlockNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.MediaSingleNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.ParagraphContentWithoutNoMarks"
                                },
                                {
                                    "properties": {
                                        "type": {
                                            "oneOf": [
                                                {
                                                    "const": "bulletList"
                                                },
                                                {
                                                    "const": "orderedList"
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ],
                                    "type": "object"
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "type",
                    "content"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.CodeBlockNode": {
                "properties": {
                    "type": {
                        "const": "codeBlock"
                    },
                    "attrs": {
                        "properties": {
                            "language": {
                                "title": "programming language name",
                                "x-wrtn-placeholder": "TypeScript",
                                "type": "string"
                            }
                        },
                        "title": "attrs\n\nIf you do not specify a programming language, this property may not exist.",
                        "type": "object"
                    },
                    "content": {
                        "additionalItems": false,
                        "title": "code content\n\ncontent takes an array of one or more text nodes without marks.",
                        "prefixItems": [
                            {
                                "properties": {
                                    "type": {
                                        "const": "text"
                                    },
                                    "text": {
                                        "title": "text includeing code",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "type",
                                    "text"
                                ],
                                "type": "object"
                            }
                        ],
                        "type": "array"
                    }
                },
                "required": [
                    "type"
                ],
                "title": "code block",
                "type": "object"
            },
            "_namespace_swagger.IJira.MediaSingleNode": {
                "properties": {
                    "type": {
                        "title": "mediaSingle type",
                        "const": "mediaSingle"
                    },
                    "attrs": {
                        "properties": {
                            "layout": {
                                "description": "layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page.",
                                "title": "layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page",
                                "oneOf": [
                                    {
                                        "const": "center"
                                    },
                                    {
                                        "const": "wrap-left"
                                    },
                                    {
                                        "const": "wrap-right"
                                    },
                                    {
                                        "const": "wide"
                                    },
                                    {
                                        "const": "full-width"
                                    },
                                    {
                                        "const": "align-start"
                                    },
                                    {
                                        "const": "align-end"
                                    }
                                ]
                            },
                            "width": {
                                "minimum": 0,
                                "maximum": 100,
                                "title": "width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width",
                                "description": "width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width.",
                                "type": "number"
                            },
                            "widthType": {
                                "description": "widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage.",
                                "title": "widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage",
                                "oneOf": [
                                    {
                                        "const": "pixel"
                                    },
                                    {
                                        "const": "percentage"
                                    }
                                ]
                            }
                        },
                        "required": [
                            "layout"
                        ],
                        "type": "object"
                    },
                    "content": {
                        "additionalItems": false,
                        "title": "media\n\nonly single of media node type",
                        "prefixItems": [
                            {
                                "oneOf": [
                                    {
                                        "properties": {
                                            "type": {
                                                "const": "media"
                                            },
                                            "attrs": {
                                                "properties": {
                                                    "width": {
                                                        "title": "width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed",
                                                        "description": "width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed.",
                                                        "type": "number"
                                                    },
                                                    "height": {
                                                        "title": "height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed",
                                                        "description": "height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed.",
                                                        "type": "number"
                                                    },
                                                    "id": {
                                                        "title": "id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API",
                                                        "description": "id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API.",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "There are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links.",
                                                        "title": "type",
                                                        "oneOf": [
                                                            {
                                                                "const": "link"
                                                            },
                                                            {
                                                                "const": "file"
                                                            }
                                                        ]
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "title": "Attributes",
                                                "type": "object"
                                            },
                                            "marks": {
                                                "properties": {
                                                    "type": {
                                                        "const": "link"
                                                    },
                                                    "attrs": {
                                                        "properties": {
                                                            "href": {
                                                                "format": "iri",
                                                                "title": "link",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "href"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "attrs"
                                                ],
                                                "title": "marks",
                                                "type": "object"
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "attrs",
                                            "marks"
                                        ],
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "type": {
                                                "const": "media"
                                            },
                                            "attrs": {
                                                "properties": {
                                                    "width": {
                                                        "title": "width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed",
                                                        "description": "width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed.",
                                                        "type": "number"
                                                    },
                                                    "height": {
                                                        "title": "height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed",
                                                        "description": "height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed.",
                                                        "type": "number"
                                                    },
                                                    "id": {
                                                        "title": "id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API",
                                                        "description": "id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API.",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "title": "type",
                                                        "description": "There are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links.",
                                                        "const": "external"
                                                    },
                                                    "url": {
                                                        "format": "iri",
                                                        "title": "url",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "url"
                                                ],
                                                "title": "Attributes",
                                                "type": "object"
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "attrs"
                                        ],
                                        "type": "object"
                                    }
                                ]
                            }
                        ],
                        "type": "array"
                    }
                },
                "required": [
                    "type",
                    "attrs",
                    "content"
                ],
                "description": "The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a",
                "type": "object"
            },
            "_namespace_swagger.IJira.ParagraphContentWithoutNoMarks": {
                "properties": {
                    "type": {
                        "title": "paragraph type",
                        "const": "paragraph"
                    },
                    "attrs": {
                        "$ref": "#/components/schemas/_namespace_swagger.Recordstringnever"
                    },
                    "content": {
                        "title": "content\n\nIf you want to make a new line, there will be an empty array.",
                        "items": {
                            "discriminator": {
                                "mapping": {
                                    "emoji": "#/components/schemas/IJira.EmojiNode",
                                    "hardBreak": "#/components/schemas/IJira.HardBreakNode",
                                    "inlineCard": "#/components/schemas/IJira.InlineCardNode",
                                    "mention": "#/components/schemas/IJira.MentionNode",
                                    "text": "#/components/schemas/StrictOmitIJira.TextContentmarks"
                                },
                                "propertyName": "type"
                            },
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.EmojiNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.HardBreakNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.InlineCardNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.MentionNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIJira.TextContentmarks"
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "type",
                    "content"
                ],
                "title": "paragraph type",
                "type": "object"
            },
            "_namespace_swagger.IJira.EmojiNode": {
                "properties": {
                    "type": {
                        "title": "emoji type",
                        "const": "emoji"
                    },
                    "attrs": {
                        "properties": {
                            "id": {
                                "description": "Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID.",
                                "type": "string"
                            },
                            "shortName": {
                                "pattern": "^(:(.*):)$",
                                "title": "icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji.",
                                "type": "string"
                            },
                            "text": {
                                "title": "emoji icon",
                                "type": "string"
                            }
                        },
                        "required": [
                            "shortName"
                        ],
                        "title": "attributes of emoji node",
                        "type": "object"
                    }
                },
                "required": [
                    "type",
                    "attrs"
                ],
                "title": "emoji node",
                "type": "object"
            },
            "_namespace_swagger.IJira.HardBreakNode": {
                "properties": {
                    "type": {
                        "title": "hardBreak type",
                        "const": "hardBreak"
                    },
                    "attrs": {
                        "properties": {
                            "text": {
                                "title": "text\n\nIt can be only `\\n` text for braking.",
                                "const": "\n"
                            }
                        },
                        "title": "attributes of hard break node",
                        "type": "object"
                    }
                },
                "required": [
                    "type"
                ],
                "title": "hard break node",
                "type": "object"
            },
            "_namespace_swagger.IJira.InlineCardNode": {
                "properties": {
                    "type": {
                        "title": "inline card type",
                        "const": "inlineCard"
                    },
                    "attrs": {
                        "properties": {
                            "url": {
                                "format": "iri",
                                "title": "url",
                                "description": "Indicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance.",
                                "type": "string"
                            },
                            "data": {
                                "title": "representation of the link",
                                "$ref": "#/components/schemas/_namespace_swagger.object"
                            }
                        },
                        "required": [
                            "url"
                        ],
                        "title": "attributes of inline card node",
                        "type": "object"
                    }
                },
                "required": [
                    "type",
                    "attrs"
                ],
                "title": "inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link.",
                "type": "object"
            },
            "_namespace_swagger.object": {
                "properties": {},
                "type": "object"
            },
            "_namespace_swagger.IJira.MentionNode": {
                "properties": {
                    "type": {
                        "title": "mention type",
                        "const": "mention"
                    },
                    "attrs": {
                        "properties": {
                            "id": {
                                "title": "id\n\nadd any string like as uuid",
                                "type": "string"
                            },
                            "text": {
                                "pattern": "^(@(.*))",
                                "title": "Who is mentioned\n\nIt means a string that connects @ and the user's name",
                                "type": "string"
                            },
                            "accessLevel": {
                                "title": "accessLevel",
                                "type": "string"
                            }
                        },
                        "required": [
                            "text"
                        ],
                        "title": "content of this mention content",
                        "type": "object"
                    }
                },
                "required": [
                    "type",
                    "attrs"
                ],
                "title": "content with mention",
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIJira.TextContentmarks": {
                "properties": {
                    "type": {
                        "title": "text type",
                        "const": "text"
                    },
                    "text": {
                        "title": "content of this text content",
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "text"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.HeadingNode": {
                "properties": {
                    "type": {
                        "title": "heading type",
                        "const": "heading"
                    },
                    "content": {
                        "title": "content\n\nHeading node's content can be combined with only inline nodes.",
                        "items": {
                            "discriminator": {
                                "mapping": {
                                    "emoji": "#/components/schemas/IJira.EmojiNode",
                                    "hardBreak": "#/components/schemas/IJira.HardBreakNode",
                                    "inlineCard": "#/components/schemas/IJira.InlineCardNode",
                                    "mention": "#/components/schemas/IJira.MentionNode",
                                    "text": "#/components/schemas/IJira.TextContent"
                                },
                                "propertyName": "type"
                            },
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.EmojiNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.HardBreakNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.InlineCardNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.MentionNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.TextContent"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "attrs": {
                        "properties": {
                            "level": {
                                "description": "level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>.",
                                "title": "level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>",
                                "oneOf": [
                                    {
                                        "const": 1
                                    },
                                    {
                                        "const": 2
                                    },
                                    {
                                        "const": 3
                                    },
                                    {
                                        "const": 4
                                    },
                                    {
                                        "const": 5
                                    },
                                    {
                                        "const": 6
                                    }
                                ]
                            }
                        },
                        "required": [
                            "level"
                        ],
                        "title": "attributes of heading node",
                        "type": "object"
                    }
                },
                "required": [
                    "type",
                    "content",
                    "attrs"
                ],
                "title": "heading node\n\nIt means h1, h2, h3, h4, h5, h6 node.",
                "type": "object"
            },
            "_namespace_swagger.IJira.TextContent": {
                "properties": {
                    "type": {
                        "title": "text type",
                        "const": "text"
                    },
                    "text": {
                        "title": "content of this text content",
                        "type": "string"
                    },
                    "marks": {
                        "title": "marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks.",
                        "items": {
                            "oneOf": [
                                {
                                    "properties": {
                                        "type": {
                                            "const": "backgroundColor"
                                        },
                                        "attrs": {
                                            "properties": {
                                                "color": {
                                                    "pattern": "^#([0-9A-Fa-f]{6})$",
                                                    "title": "color\n\nColor can be expressed using symbols('#') and RGB values.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "color"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attrs"
                                    ],
                                    "type": "object"
                                },
                                {
                                    "properties": {
                                        "type": {
                                            "const": "code"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ],
                                    "type": "object"
                                },
                                {
                                    "properties": {
                                        "type": {
                                            "const": "em"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ],
                                    "type": "object"
                                },
                                {
                                    "properties": {
                                        "type": {
                                            "const": "strike"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ],
                                    "type": "object"
                                },
                                {
                                    "properties": {
                                        "type": {
                                            "const": "strong"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ],
                                    "type": "object"
                                },
                                {
                                    "properties": {
                                        "type": {
                                            "const": "underline"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ],
                                    "type": "object"
                                },
                                {
                                    "properties": {
                                        "type": {
                                            "const": "link"
                                        },
                                        "attrs": {
                                            "properties": {
                                                "href": {
                                                    "format": "iri",
                                                    "title": "link",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "href"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attrs"
                                    ],
                                    "type": "object"
                                },
                                {
                                    "properties": {
                                        "type": {
                                            "const": "subsup"
                                        },
                                        "attrs": {
                                            "properties": {
                                                "type": {
                                                    "oneOf": [
                                                        {
                                                            "const": "sub"
                                                        },
                                                        {
                                                            "const": "sup"
                                                        }
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "type"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attrs"
                                    ],
                                    "type": "object"
                                },
                                {
                                    "properties": {
                                        "type": {
                                            "const": "textColor"
                                        },
                                        "attrs": {
                                            "properties": {
                                                "color": {
                                                    "pattern": "^#([0-9A-Fa-f]{6})$",
                                                    "title": "color\n\nColor can be expressed using symbols('#') and RGB values.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "color"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attrs"
                                    ],
                                    "type": "object"
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "type",
                    "text"
                ],
                "title": "content with only text",
                "type": "object"
            },
            "_namespace_swagger.IJira.PanelNode": {
                "properties": {
                    "type": {
                        "const": "panel"
                    },
                    "attrs": {
                        "properties": {
                            "panelType": {
                                "oneOf": [
                                    {
                                        "const": "info"
                                    },
                                    {
                                        "const": "error"
                                    },
                                    {
                                        "const": "note"
                                    },
                                    {
                                        "const": "warning"
                                    },
                                    {
                                        "const": "success"
                                    }
                                ]
                            }
                        },
                        "required": [
                            "panelType"
                        ],
                        "type": "object"
                    },
                    "content": {
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.ListNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.ParagraphContentWithoutNoMarks"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.HeadingNodeWithoutMarks"
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "type",
                    "attrs",
                    "content"
                ],
                "description": "The panel node is a container that highlights content.",
                "type": "object"
            },
            "_namespace_swagger.IJira.HeadingNodeWithoutMarks": {
                "properties": {
                    "type": {
                        "title": "heading type",
                        "const": "heading"
                    },
                    "content": {
                        "title": "content",
                        "description": "Heading node's content can be combined with only inline nodes.\nA property called marks is not available here.",
                        "items": {
                            "discriminator": {
                                "mapping": {
                                    "emoji": "#/components/schemas/IJira.EmojiNode",
                                    "hardBreak": "#/components/schemas/IJira.HardBreakNode",
                                    "inlineCard": "#/components/schemas/IJira.InlineCardNode",
                                    "mention": "#/components/schemas/IJira.MentionNode",
                                    "text": "#/components/schemas/StrictOmitIJira.TextContentmarks"
                                },
                                "propertyName": "type"
                            },
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.EmojiNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.HardBreakNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.InlineCardNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.MentionNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIJira.TextContentmarks"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "attrs": {
                        "properties": {
                            "level": {
                                "title": "level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>.",
                                "oneOf": [
                                    {
                                        "title": "1",
                                        "description": "level",
                                        "const": 1
                                    },
                                    {
                                        "title": "2",
                                        "description": "level",
                                        "const": 2
                                    },
                                    {
                                        "title": "3",
                                        "description": "level",
                                        "const": 3
                                    },
                                    {
                                        "title": "4",
                                        "description": "level",
                                        "const": 4
                                    },
                                    {
                                        "title": "5",
                                        "description": "level",
                                        "const": 5
                                    },
                                    {
                                        "title": "6",
                                        "description": "level",
                                        "const": 6
                                    }
                                ]
                            }
                        },
                        "required": [
                            "level"
                        ],
                        "title": "attributes of heading node",
                        "type": "object"
                    }
                },
                "required": [
                    "type",
                    "content",
                    "attrs"
                ],
                "title": "heading node without `marks` property",
                "type": "object"
            },
            "_namespace_swagger.IJira.ParagraphNode": {
                "properties": {
                    "type": {
                        "title": "paragraph type",
                        "const": "paragraph"
                    },
                    "attrs": {
                        "$ref": "#/components/schemas/_namespace_swagger.Recordstringnever"
                    },
                    "content": {
                        "title": "content\n\nIf you want to make a new line, there will be an empty array.",
                        "items": {
                            "discriminator": {
                                "mapping": {
                                    "emoji": "#/components/schemas/IJira.EmojiNode",
                                    "hardBreak": "#/components/schemas/IJira.HardBreakNode",
                                    "inlineCard": "#/components/schemas/IJira.InlineCardNode",
                                    "mention": "#/components/schemas/IJira.MentionNode",
                                    "text": "#/components/schemas/IJira.TextContent"
                                },
                                "propertyName": "type"
                            },
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.EmojiNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.HardBreakNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.InlineCardNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.MentionNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.TextContent"
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "type",
                    "content"
                ],
                "title": "paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag.",
                "type": "object"
            },
            "_namespace_swagger.IJira.TableNode": {
                "properties": {
                    "type": {
                        "const": "table"
                    },
                    "content": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IJira.TableRowNode"
                        },
                        "type": "array"
                    },
                    "attrs": {
                        "properties": {
                            "isNumberColumnEnabled": {
                                "default": true,
                                "title": "When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows",
                                "description": "When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows.",
                                "type": "boolean"
                            },
                            "width": {
                                "minimum": 0,
                                "title": "width sets the length (in pixels) of the table on the page",
                                "description": "width sets the length (in pixels) of the table on the page.\nThis value is independent of the table's column width, this allows control of the table's overflow.\nIt supersedes the existing layout attribute and will be used instead of it at runtime.\nIf width is not provided the editor will convert layout to pixels (default=760, wide=960 and full-width=1800).\nAlthough no minimum and maximum width is enforced it is recommended to follow these guidelines:\n\n- Minimum width\n\n- 1 column table = 48px\n- 2 column table = 96px\n- 3 column table = 144px\n- > 3 column table = 144px\n- Maximum width\n- 1800",
                                "type": "number"
                            },
                            "layout": {
                                "description": "layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported.\nThe layout values are mapped as follows:\n- 'center' : will align the table to the center of page, its width can be larger than the line length\n- 'align-start' : will align the table left of the line length, its width cannot be larger than the line length",
                                "title": "layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported",
                                "oneOf": [
                                    {
                                        "const": "center"
                                    },
                                    {
                                        "const": "align-start"
                                    }
                                ]
                            },
                            "displayMode": {
                                "description": "displayMode attribute controls how tables adapt to narrow screens:\nWhen displayMode is set to 'default' or left unset, the table's columns will automatically scale down to accommodate narrow screens, with a maximum reduction of up to 40%.\nWhen displayMode is set to 'fixed', the table's columns will maintain their original width, regardless of screen size.",
                                "oneOf": [
                                    {
                                        "const": "default"
                                    },
                                    {
                                        "const": "fixed"
                                    }
                                ]
                            }
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "type",
                    "content"
                ],
                "description": "The table node provides a container for the nodes that define a table.\n\nNote: only supported on web and desktop. Mobile rendering support for tables is not available.",
                "type": "object"
            },
            "_namespace_swagger.IJira.TableRowNode": {
                "properties": {
                    "type": {
                        "const": "tableRow"
                    },
                    "content": {
                        "title": "content takes an array of one or more tableHeader or tableCell nodes",
                        "description": "content takes an array of one or more tableHeader or tableCell nodes.",
                        "items": {
                            "discriminator": {
                                "mapping": {
                                    "tableHeader": "#/components/schemas/IJira.TableHeaderNode",
                                    "tableCell": "#/components/schemas/IJira.TableCellNode"
                                },
                                "propertyName": "type"
                            },
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.TableHeaderNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.TableCellNode"
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "type",
                    "content"
                ],
                "description": "The tableRow node defines rows within a table and is a container for table heading and table cell nodes.\ntableRow is a child block node of the table node.",
                "type": "object"
            },
            "_namespace_swagger.IJira.TableHeaderNode": {
                "properties": {
                    "type": {
                        "const": "tableHeader"
                    },
                    "content": {
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.BlockquoteNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.ListNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.CodeBlockNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.HeadingNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.PanelNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.ParagraphNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.MediaGroupNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.RuleNode"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "attrs": {
                        "properties": {
                            "background": {
                                "description": "Short or long hex color code or HTML color name",
                                "type": "string"
                            },
                            "colspan": {
                                "default": 1,
                                "title": "colspan\ncolspan defines the number of columns the cell spans.",
                                "type": "integer"
                            },
                            "colwidth": {
                                "additionalItems": false,
                                "description": "defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].",
                                "prefixItems": [
                                    {
                                        "type": "integer"
                                    },
                                    {
                                        "type": "integer"
                                    },
                                    {
                                        "type": "integer"
                                    }
                                ],
                                "type": "array"
                            },
                            "rowspan": {
                                "default": 1,
                                "title": "rowspan\nrowspan defines the number of rows a cell spans.",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "type",
                    "content"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.MediaGroupNode": {
                "properties": {
                    "type": {
                        "const": "mediaGroup"
                    },
                    "content": {
                        "title": "content\ncontent must contain one or more media nodes.",
                        "items": {
                            "oneOf": [
                                {
                                    "properties": {
                                        "type": {
                                            "const": "media"
                                        },
                                        "attrs": {
                                            "properties": {
                                                "width": {
                                                    "title": "width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed",
                                                    "description": "width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed.",
                                                    "type": "number"
                                                },
                                                "height": {
                                                    "title": "height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed",
                                                    "description": "height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed.",
                                                    "type": "number"
                                                },
                                                "id": {
                                                    "title": "id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API",
                                                    "description": "id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API.",
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "There are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links.",
                                                    "title": "type",
                                                    "oneOf": [
                                                        {
                                                            "const": "link"
                                                        },
                                                        {
                                                            "const": "file"
                                                        }
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "type"
                                            ],
                                            "title": "Attributes",
                                            "type": "object"
                                        },
                                        "marks": {
                                            "properties": {
                                                "type": {
                                                    "const": "link"
                                                },
                                                "attrs": {
                                                    "properties": {
                                                        "href": {
                                                            "format": "iri",
                                                            "title": "link",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "href"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "attrs"
                                            ],
                                            "title": "marks",
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attrs",
                                        "marks"
                                    ],
                                    "type": "object"
                                },
                                {
                                    "properties": {
                                        "type": {
                                            "const": "media"
                                        },
                                        "attrs": {
                                            "properties": {
                                                "width": {
                                                    "title": "width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed",
                                                    "description": "width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed.",
                                                    "type": "number"
                                                },
                                                "height": {
                                                    "title": "height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed",
                                                    "description": "height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed.",
                                                    "type": "number"
                                                },
                                                "id": {
                                                    "title": "id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API",
                                                    "description": "id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API.",
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "title": "type",
                                                    "description": "There are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links.",
                                                    "const": "external"
                                                },
                                                "url": {
                                                    "format": "iri",
                                                    "title": "url",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "url"
                                            ],
                                            "title": "Attributes",
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attrs"
                                    ],
                                    "type": "object"
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "type",
                    "content"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.RuleNode": {
                "properties": {
                    "type": {
                        "const": "rule"
                    }
                },
                "required": [
                    "type"
                ],
                "description": "The rule node represents a divider, it is equivalent to the HTML <hr/> tag.",
                "type": "object"
            },
            "_namespace_swagger.IJira.TableCellNode": {
                "properties": {
                    "type": {
                        "const": "tableCell"
                    },
                    "content": {
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.BlockquoteNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.ListNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.CodeBlockNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.HeadingNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.PanelNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.ParagraphNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.MediaGroupNode"
                                },
                                {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.RuleNode"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "attrs": {
                        "properties": {
                            "background": {
                                "description": "Short or long hex color code or HTML color name",
                                "type": "string"
                            },
                            "colspan": {
                                "default": 1,
                                "title": "colspan\ncolspan defines the number of columns the cell spans.",
                                "type": "integer"
                            },
                            "colwidth": {
                                "additionalItems": false,
                                "description": "defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].",
                                "prefixItems": [
                                    {
                                        "type": "integer"
                                    },
                                    {
                                        "type": "integer"
                                    },
                                    {
                                        "type": "integer"
                                    }
                                ],
                                "type": "array"
                            },
                            "rowspan": {
                                "default": 1,
                                "title": "rowspan\nrowspan defines the number of rows a cell spans.",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "type",
                    "content"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIJira.UseractiveaccountIddisplayName": {
                "properties": {
                    "active": {
                        "title": "Whether is user active",
                        "type": "boolean"
                    },
                    "accountId": {
                        "title": "id of this user account",
                        "type": "string"
                    },
                    "displayName": {
                        "title": "creator's name",
                        "type": "string"
                    }
                },
                "required": [
                    "active",
                    "accountId",
                    "displayName"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGetCommentInputemaildomaintokenIBasicSecret": {
                "properties": {
                    "maxResults": {
                        "default": 50,
                        "title": "max results",
                        "description": "The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time.",
                        "type": "integer"
                    },
                    "issueIdOrKey": {
                        "description": "This connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up.",
                        "title": "issue id or key",
                        "oneOf": [
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "issues[].{value:id, label:key}",
                                    "method": "post",
                                    "path": "/connector/jira/get-issues"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "issues[].{value:key, label:key}",
                                    "method": "post",
                                    "path": "/connector/jira/get-issues"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "startAt": {
                        "default": 0,
                        "title": "page offset",
                        "description": "The index of the first item to return in a page of results (page offset).",
                        "type": "integer"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "atlassian",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "issueIdOrKey",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.IGetTransitionOutput": {
                "properties": {
                    "transitions": {
                        "title": "transition list of this jira issue",
                        "items": {
                            "properties": {
                                "id": {
                                    "title": "id of transition",
                                    "type": "string"
                                },
                                "to": {
                                    "title": "to",
                                    "description": "StatusDetail.\nDetails of the issue status after the transition.",
                                    "$ref": "#/components/schemas/_namespace_swagger.MyPickIJira.StatusdescriptionnameidstatusCategory"
                                }
                            },
                            "required": [
                                "id",
                                "to"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "transitions"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIJira.StatusdescriptionnameidstatusCategory": {
                "properties": {
                    "description": {
                        "title": "status description",
                        "type": "string"
                    },
                    "name": {
                        "title": "status name",
                        "x-wrtn-placeholder": "해야 할 일",
                        "type": "string"
                    },
                    "id": {
                        "title": "status id",
                        "type": "string"
                    },
                    "statusCategory": {
                        "properties": {
                            "id": {
                                "title": "category id",
                                "type": "number"
                            },
                            "key": {
                                "title": "category key",
                                "x-wrtn-placeholder": "new",
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "key"
                        ],
                        "title": "status category",
                        "type": "object"
                    }
                },
                "required": [
                    "description",
                    "name",
                    "id",
                    "statusCategory"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGetTransitionInputemaildomaintokenIBasicSecret": {
                "properties": {
                    "issueIdOrKey": {
                        "description": "This connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up.",
                        "title": "issue id or key",
                        "oneOf": [
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "issues[].{value:id, label:key}",
                                    "method": "post",
                                    "path": "/connector/jira/get-issues"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "issues[].{value:key, label:key}",
                                    "method": "post",
                                    "path": "/connector/jira/get-issues"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "atlassian",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "issueIdOrKey",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIUnAssignInputemaildomaintokenIBasicSecret": {
                "properties": {
                    "issueId": {
                        "title": "ID of issue",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "atlassian",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "issueId",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIAssignInputemaildomaintokenIBasicSecret": {
                "properties": {
                    "asigneeId": {
                        "description": "If you want to designate a person in charge, you need that user's ID. Therefore, you need to look up the user first. There are connectors that look up who can be assigned to a project or issue. You can find the ID of the person in charge by choosing what you want.\nThe person in charge is inevitably one of Jira's users.",
                        "title": "accountId of the user you want to designate as the person in charge",
                        "oneOf": [
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:accountId, label:displayName}",
                                    "method": "post",
                                    "path": "/connector/jira/issues/get-users-assignable"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{value:accountId, label:displayName}",
                                    "method": "post",
                                    "path": "/connector/jira/project/get-users-assignable"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "issueId": {
                        "title": "ID of issue",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "atlassian",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "asigneeId",
                    "issueId",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIUpdateStatusInputemaildomaintokenIBasicSecret": {
                "properties": {
                    "issueIdOrKey": {
                        "description": "This connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up.",
                        "title": "issue id or key",
                        "oneOf": [
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "issues[].{value:id, label:key}",
                                    "method": "post",
                                    "path": "/connector/jira/get-issues"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "issues[].{value:key, label:key}",
                                    "method": "post",
                                    "path": "/connector/jira/get-issues"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "transitionId": {
                        "title": "ID of transition",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "transitions[].{value:id, label: to.name}",
                            "method": "post",
                            "path": "/connector/jira/issue-get-transitions"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "atlassian",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "issueIdOrKey",
                    "transitionId",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIUpdateIssueInputemaildomaintokenIBasicSecret": {
                "properties": {
                    "fields": {
                        "title": "fields to update",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPartial__type"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "atlassian",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "fields",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPartial__type": {
                "properties": {
                    "assignee": {
                        "properties": {
                            "id": {
                                "description": "If you want to designate a person in charge, you need that user's ID. Therefore, you need to look up the user first. There are connectors that look up who can be assigned to a project or issue. You can find the ID of the person in charge by choosing what you want.\nThe person in charge is inevitably one of Jira's users.",
                                "title": "accountId of the user you want to designate as the person in charge",
                                "oneOf": [
                                    {
                                        "type": "null"
                                    },
                                    {
                                        "x-wrtn-prerequisite": {
                                            "jmesPath": "[].{value:accountId, label:displayName}",
                                            "method": "post",
                                            "path": "/connector/jira/issues/get-users-assignable"
                                        },
                                        "type": "string"
                                    },
                                    {
                                        "x-wrtn-prerequisite": {
                                            "jmesPath": "[].{value:accountId, label:displayName}",
                                            "method": "post",
                                            "path": "/connector/jira/project/get-users-assignable"
                                        },
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "required": [
                            "id"
                        ],
                        "title": "Specify a representative at the same time as you create",
                        "type": "object"
                    },
                    "description": {
                        "properties": {
                            "type": {
                                "title": "type of description\n\nAllow doc type only Now",
                                "const": "doc"
                            },
                            "version": {
                                "title": "version",
                                "const": 1
                            },
                            "content": {
                                "title": "contents of description",
                                "description": "You must use node types that are configured with TopLevelBlockNodes.\n\nIt is recommended to contain as much detail as possible on the issue raised by the user,\nso that the next person who reads this issue can see the summary and description of this issue to resolve the issue.",
                                "items": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.BlockquoteNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.ListNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.CodeBlockNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.HeadingNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.MediaSingleNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.PanelNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.ParagraphNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.TableNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.MediaGroupNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.RuleNode"
                                        }
                                    ]
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "type",
                            "version",
                            "content"
                        ],
                        "title": "description\n\nThe content of the Jira issue consists of a combination of various contents.",
                        "type": "object"
                    },
                    "duedate": {
                        "format": "date",
                        "title": "due date",
                        "description": "date format type.\nIndicates the schedule you want to be closed.Of course, it will be good to create a date or today.",
                        "type": "string"
                    },
                    "issuetype": {
                        "properties": {
                            "id": {
                                "description": "The ID of the issue.\nSometimes the user can say the name of the issue type,\nsuch as 'bug' or 'story', but you cannot specify the issue type with the name of the issue type.\nBecause there can be types with the same name.\nTherefore, you must check the issue type with a different connector to verify that it is an issue type that can be used in the project.\n\nHowever, if you handed over the number string type from the beginning, it could be the ID of the issue type.",
                                "title": "id of issue type",
                                "oneOf": [
                                    {
                                        "x-wrtn-prerequisite": {
                                            "jmesPath": "issuetypes[].{value:id, label:name}",
                                            "method": "post",
                                            "path": "/connector/jira/get-issue-types"
                                        },
                                        "type": "number"
                                    },
                                    {
                                        "pattern": "^(0|[1-9]\\d*)$",
                                        "x-wrtn-prerequisite": {
                                            "jmesPath": "issuetypes[].{value:id, label:name}",
                                            "method": "post",
                                            "path": "/connector/jira/get-issue-types"
                                        },
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "required": [
                            "id"
                        ],
                        "title": "issuetype",
                        "type": "object"
                    },
                    "labels": {
                        "title": "labels",
                        "description": "You can add labels to make it easier to read issues.\nLabels are simply strings, which can be added immediately without having to look up using other connectors.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "parent": {
                        "properties": {
                            "key": {
                                "title": "key of parent issue",
                                "description": "Sometimes an issue can be a sub-issue of another issue.\nIn this case, you need to specify the key for the parent issue.\nIf you want to know the key, use an issue list query or another connector to look up the details of the issue.",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "issues[].{value:key, label:key}",
                                    "method": "post",
                                    "path": "/connector/jira/get-issues"
                                },
                                "type": "string"
                            }
                        },
                        "required": [
                            "key"
                        ],
                        "title": "parent of this issue",
                        "type": "object"
                    },
                    "priority": {
                        "properties": {
                            "id": {
                                "description": "You can prioritize issues.\nUsers can also prioritize issues in natural languages such as Low, Medium, High, and so on,\nbut when creating issues, ID values for these priorities are required.\nTherefore, you should first call a connector that looks up what priorities are available for the project and issue.",
                                "title": "id of proirity",
                                "oneOf": [
                                    {
                                        "x-wrtn-prerequisite": {
                                            "jmesPath": "[].{value:id, label:name}",
                                            "method": "post",
                                            "path": "/connector/jira/get-issue-priorities"
                                        },
                                        "type": "number"
                                    },
                                    {
                                        "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                                        "x-wrtn-prerequisite": {
                                            "jmesPath": "[].{value:id, label:name}",
                                            "method": "post",
                                            "path": "/connector/jira/get-issue-priorities"
                                        },
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "required": [
                            "id"
                        ],
                        "title": "priority",
                        "type": "object"
                    },
                    "project": {
                        "description": "Issues must inevitably belong to the project.\nAt this point, the project can be specified by receiving an ID or key.\nIf you do not know the key or ID of the project, you should first look up the project.",
                        "title": "project",
                        "oneOf": [
                            {
                                "properties": {
                                    "id": {
                                        "title": "id of project",
                                        "oneOf": [
                                            {
                                                "x-wrtn-prerequisite": {
                                                    "jmesPath": "[].{value:id, label:name}",
                                                    "method": "post",
                                                    "path": "/connector/jira/get-projects"
                                                },
                                                "type": "number"
                                            },
                                            {
                                                "pattern": "^(0|[1-9]\\d*)$",
                                                "x-wrtn-prerequisite": {
                                                    "jmesPath": "[].{value:id, label:name}",
                                                    "method": "post",
                                                    "path": "/connector/jira/get-projects"
                                                },
                                                "type": "string"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "key": {
                                        "title": "key of project",
                                        "x-wrtn-prerequisite": {
                                            "jmesPath": "[].{value:key, label:name}",
                                            "method": "post",
                                            "path": "/connector/jira/get-project"
                                        },
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "key"
                                ],
                                "type": "object"
                            }
                        ]
                    },
                    "summary": {
                        "title": "summary",
                        "description": "Meaning the title of the issue.\nMake sure you write a sentence that best represents this issue.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IJira.ICreateIssueOutput": {
                "properties": {
                    "id": {
                        "title": "ID of the issue that was created just now",
                        "type": "string"
                    },
                    "key": {
                        "title": "Key of the issue that was created just now",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "key"
                ],
                "title": "output of creation of issue",
                "type": "object"
            },
            "_namespace_swagger.IJira.ICreateIssueByMarkdownInput": {
                "properties": {
                    "fields": {
                        "properties": {
                            "assignee": {
                                "properties": {
                                    "id": {
                                        "description": "If you want to designate a person in charge, you need that user's ID. Therefore, you need to look up the user first. There are connectors that look up who can be assigned to a project or issue. You can find the ID of the person in charge by choosing what you want.\nThe person in charge is inevitably one of Jira's users.",
                                        "title": "accountId of the user you want to designate as the person in charge",
                                        "oneOf": [
                                            {
                                                "type": "null"
                                            },
                                            {
                                                "x-wrtn-prerequisite": {
                                                    "jmesPath": "[].{value:accountId, label:displayName}",
                                                    "method": "post",
                                                    "path": "/connector/jira/issues/get-users-assignable"
                                                },
                                                "type": "string"
                                            },
                                            {
                                                "x-wrtn-prerequisite": {
                                                    "jmesPath": "[].{value:accountId, label:displayName}",
                                                    "method": "post",
                                                    "path": "/connector/jira/project/get-users-assignable"
                                                },
                                                "type": "string"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Specify a representative at the same time as you create",
                                "type": "object"
                            },
                            "description": {
                                "properties": {
                                    "type": {
                                        "title": "type of description\n\nAllow doc type only Now",
                                        "const": "doc"
                                    },
                                    "version": {
                                        "title": "version\n\nversion only can be number 1",
                                        "const": 1
                                    },
                                    "content": {
                                        "title": "contents of description",
                                        "description": "You must use markdown format string.\n\nIt is recommended to contain as much detail as possible on the issue raised by the user,\nso that the next person who reads this issue can see the summary and description of this issue to resolve the issue.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "type",
                                    "version",
                                    "content"
                                ],
                                "title": "description\n\nThe content of the Jira issue consists of a combination of various contents.",
                                "type": "object"
                            },
                            "duedate": {
                                "format": "date",
                                "title": "due date",
                                "description": "date format type.\nIndicates the schedule you want to be closed.Of course, it will be good to create a date or today.",
                                "type": "string"
                            },
                            "issuetype": {
                                "properties": {
                                    "id": {
                                        "description": "The ID of the issue.\nSometimes the user can say the name of the issue type,\nsuch as 'bug' or 'story', but you cannot specify the issue type with the name of the issue type.\nBecause there can be types with the same name.\nTherefore, you must check the issue type with a different connector to verify that it is an issue type that can be used in the project.\n\nHowever, if you handed over the number string type from the beginning, it could be the ID of the issue type.",
                                        "title": "id of issue type",
                                        "oneOf": [
                                            {
                                                "x-wrtn-prerequisite": {
                                                    "jmesPath": "issuetypes[].{value:id, label:name}",
                                                    "method": "post",
                                                    "path": "/connector/jira/get-issue-types"
                                                },
                                                "type": "number"
                                            },
                                            {
                                                "pattern": "^(0|[1-9]\\d*)$",
                                                "x-wrtn-prerequisite": {
                                                    "jmesPath": "issuetypes[].{value:id, label:name}",
                                                    "method": "post",
                                                    "path": "/connector/jira/get-issue-types"
                                                },
                                                "type": "string"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "issuetype",
                                "type": "object"
                            },
                            "labels": {
                                "title": "labels",
                                "description": "You can add labels to make it easier to read issues.\nLabels are simply strings, which can be added immediately without having to look up using other connectors.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "parent": {
                                "properties": {
                                    "key": {
                                        "title": "key of parent issue",
                                        "description": "Sometimes an issue can be a sub-issue of another issue.\nIn this case, you need to specify the key for the parent issue.\nIf you want to know the key, use an issue list query or another connector to look up the details of the issue.",
                                        "x-wrtn-prerequisite": {
                                            "jmesPath": "issues[].{value:key, label:key}",
                                            "method": "post",
                                            "path": "/connector/jira/get-issues"
                                        },
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "key"
                                ],
                                "title": "parent of this issue",
                                "type": "object"
                            },
                            "priority": {
                                "properties": {
                                    "id": {
                                        "description": "You can prioritize issues.\nUsers can also prioritize issues in natural languages such as Low, Medium, High, and so on,\nbut when creating issues, ID values for these priorities are required.\nTherefore, you should first call a connector that looks up what priorities are available for the project and issue.",
                                        "title": "id of proirity",
                                        "oneOf": [
                                            {
                                                "x-wrtn-prerequisite": {
                                                    "jmesPath": "[].{value:id, label:name}",
                                                    "method": "post",
                                                    "path": "/connector/jira/get-issue-priorities"
                                                },
                                                "type": "number"
                                            },
                                            {
                                                "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                                                "x-wrtn-prerequisite": {
                                                    "jmesPath": "[].{value:id, label:name}",
                                                    "method": "post",
                                                    "path": "/connector/jira/get-issue-priorities"
                                                },
                                                "type": "string"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "priority",
                                "type": "object"
                            },
                            "project": {
                                "description": "Issues must inevitably belong to the project.\nAt this point, the project can be specified by receiving an ID or key.\nIf you do not know the key or ID of the project, you should first look up the project.\n\nproject's id is number or number string type and project's key type is only string.",
                                "title": "project",
                                "oneOf": [
                                    {
                                        "properties": {
                                            "id": {
                                                "title": "id of project",
                                                "oneOf": [
                                                    {
                                                        "x-wrtn-prerequisite": {
                                                            "jmesPath": "[].{value:id, label:name}",
                                                            "method": "post",
                                                            "path": "/connector/jira/get-projects"
                                                        },
                                                        "type": "number"
                                                    },
                                                    {
                                                        "pattern": "^(0|[1-9]\\d*)$",
                                                        "x-wrtn-prerequisite": {
                                                            "jmesPath": "[].{value:id, label:name}",
                                                            "method": "post",
                                                            "path": "/connector/jira/get-projects"
                                                        },
                                                        "type": "string"
                                                    }
                                                ]
                                            }
                                        },
                                        "required": [
                                            "id"
                                        ],
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "key": {
                                                "title": "key of project",
                                                "x-wrtn-prerequisite": {
                                                    "jmesPath": "[].{value:key, label:name}",
                                                    "method": "post",
                                                    "path": "/connector/jira/get-project"
                                                },
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "key"
                                        ],
                                        "type": "object"
                                    }
                                ]
                            },
                            "summary": {
                                "title": "summary",
                                "description": "Meaning the title of the issue.\nMake sure you write a sentence that best represents this issue.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "issuetype",
                            "project",
                            "summary"
                        ],
                        "title": "fields\n\nIndicates the fields that you need to fill in when you want to create an issue.",
                        "type": "object"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "atlassian",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "fields",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.IGetIssueDetailOutput": {
                "properties": {
                    "labels": {
                        "title": "labels attached to the issue",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "fields": {
                        "title": "Details of the issue",
                        "$ref": "#/components/schemas/_namespace_swagger.IJira.DetailedIssueField"
                    },
                    "id": {
                        "title": "The ID of the issue",
                        "type": "string"
                    },
                    "key": {
                        "title": "The key of the issue",
                        "type": "string"
                    }
                },
                "required": [
                    "fields",
                    "id",
                    "key"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.DetailedIssueField": {
                "properties": {
                    "comment": {
                        "properties": {
                            "maxResults": {
                                "title": "Number of comments viewed at one time",
                                "type": "number"
                            },
                            "total": {
                                "title": "Total count of comments",
                                "type": "number"
                            },
                            "startAt": {
                                "title": "page offset",
                                "description": "The index of the first item to return in a page of results (page offset).",
                                "type": "number"
                            },
                            "comments": {
                                "title": "list of comments",
                                "items": {
                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.Comment"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "maxResults",
                            "total",
                            "startAt",
                            "comments"
                        ],
                        "title": "comment infomation",
                        "type": "object"
                    },
                    "description": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "properties": {
                                    "content": {
                                        "items": {
                                            "oneOf": [
                                                {
                                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.BlockquoteNode"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/_namespace_swagger.ListNode"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.CodeBlockNode"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.HeadingNode"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.MediaSingleNode"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.PanelNode"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.ParagraphNode"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.TableNode"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.MediaGroupNode"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/_namespace_swagger.IJira.RuleNode"
                                                }
                                            ]
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "content"
                                ],
                                "type": "object"
                            }
                        ]
                    },
                    "statuscategorychangedate": {
                        "description": "The date and time when the status category of the issue was last changed.\n\nThis property indicates the most recent timestamp when the issue transitioned\nbetween status categories (e.g., from \"To Do\" to \"In Progress\" or from\n\"In Progress\" to \"Done\"). Status categories in Jira typically include:\n- \"To Do\": The issue is pending and not yet started.\n- \"In Progress\": The issue is currently being worked on.\n- \"Done\": The issue has been completed.",
                        "title": "statuscategorychangedate",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "reporter": {
                        "title": "reporter",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IJira.User"
                            }
                        ]
                    },
                    "creator": {
                        "title": "creator",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IJira.User"
                            }
                        ]
                    },
                    "assignee": {
                        "title": "assignee",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IJira.User"
                            }
                        ]
                    },
                    "summary": {
                        "title": "summary",
                        "type": "string"
                    },
                    "issuetype": {
                        "title": "issue type",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIJira.IssueTypenameid"
                    },
                    "status": {
                        "title": "status",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIJira.StatusdescriptionnameidstatusCategoryuntranslatedName"
                    },
                    "priority": {
                        "title": "priority",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIJira.Prioritynameid"
                    },
                    "parent": {
                        "title": "parent of this issue",
                        "$ref": "#/components/schemas/_namespace_swagger.IJira.Parent"
                    }
                },
                "required": [
                    "comment",
                    "description",
                    "status",
                    "priority"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.Comment": {
                "properties": {
                    "id": {
                        "title": "id of comment",
                        "type": "string"
                    },
                    "author": {
                        "title": "author of this comment",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIJira.UseractiveaccountIddisplayName"
                    },
                    "updateAuthor": {
                        "title": "who updates this comment",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIJira.UseractiveaccountIddisplayName"
                    },
                    "body": {
                        "properties": {
                            "type": {
                                "const": "doc"
                            },
                            "version": {
                                "const": 1
                            },
                            "content": {
                                "title": "A document in Jira is a combination of several blocks, so a single comment appears in the form of an array",
                                "description": "A document in Jira is a combination of several blocks, so a single comment appears in the form of an array.\nBy combining each element in the array, you can understand the entire comment content.",
                                "items": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.BlockquoteNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.ListNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.CodeBlockNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.HeadingNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.MediaSingleNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.PanelNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.ParagraphNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.TableNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.MediaGroupNode"
                                        },
                                        {
                                            "$ref": "#/components/schemas/_namespace_swagger.IJira.RuleNode"
                                        }
                                    ]
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "type",
                            "version",
                            "content"
                        ],
                        "title": "body of comment",
                        "type": "object"
                    },
                    "created": {
                        "title": "created time of this comment",
                        "type": "string"
                    },
                    "updated": {
                        "title": "updated time of this comment",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "author",
                    "updateAuthor",
                    "body",
                    "created",
                    "updated"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.User": {
                "properties": {
                    "accountId": {
                        "title": "id of this user account",
                        "type": "string"
                    },
                    "displayName": {
                        "title": "creator's name",
                        "type": "string"
                    },
                    "active": {
                        "title": "Whether is user active",
                        "type": "boolean"
                    }
                },
                "required": [
                    "accountId",
                    "displayName",
                    "active"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIJira.IssueTypenameid": {
                "properties": {
                    "name": {
                        "title": "issue type name\n\nIt may be name, bug, story or etc.",
                        "x-wrtn-placeholder": "스토리",
                        "type": "string"
                    },
                    "id": {
                        "title": "issuetype's id",
                        "oneOf": [
                            {
                                "type": "number"
                            },
                            {
                                "pattern": "^(0|[1-9]\\d*)$",
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "id"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIJira.StatusdescriptionnameidstatusCategoryuntranslatedName": {
                "properties": {
                    "description": {
                        "title": "status description",
                        "type": "string"
                    },
                    "name": {
                        "title": "status name",
                        "x-wrtn-placeholder": "해야 할 일",
                        "type": "string"
                    },
                    "id": {
                        "title": "status id",
                        "type": "string"
                    },
                    "statusCategory": {
                        "properties": {
                            "id": {
                                "title": "category id",
                                "type": "number"
                            },
                            "key": {
                                "title": "category key",
                                "x-wrtn-placeholder": "new",
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "key"
                        ],
                        "title": "status category",
                        "type": "object"
                    },
                    "untranslatedName": {
                        "title": "untranslated name",
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "name",
                    "id",
                    "statusCategory"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIJira.Prioritynameid": {
                "properties": {
                    "name": {
                        "title": "priority name\n\nIt may be Low, Medium, High.",
                        "type": "string"
                    },
                    "id": {
                        "title": "id",
                        "oneOf": [
                            {
                                "type": "number"
                            },
                            {
                                "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "id"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.Parent": {
                "properties": {
                    "id": {
                        "title": "The ID of the parent issue",
                        "type": "string"
                    },
                    "key": {
                        "title": "The key of the parent issue",
                        "type": "string"
                    },
                    "fields": {
                        "properties": {
                            "summary": {
                                "title": "summary",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "id",
                    "key",
                    "fields"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGetIssueDetailInputemaildomaintokenIBasicSecret": {
                "properties": {
                    "issueIdOrKey": {
                        "description": "This connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up.",
                        "title": "issue id or key",
                        "oneOf": [
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "issues[].{value:id, label:key}",
                                    "method": "post",
                                    "path": "/connector/jira/get-issues"
                                },
                                "type": "string"
                            },
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "issues[].{value:key, label:key}",
                                    "method": "post",
                                    "path": "/connector/jira/get-issues"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "atlassian",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "issueIdOrKey",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.IGetIssueOutput": {
                "properties": {
                    "issues": {
                        "title": "Jira issue list",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.MyPickIJira.Issuekeyidfields"
                        },
                        "type": "array"
                    },
                    "isLast": {
                        "title": "Wheather is last page",
                        "type": "boolean"
                    },
                    "total": {
                        "title": "total count",
                        "type": "integer"
                    },
                    "startAt": {
                        "default": 0,
                        "title": "page offset",
                        "description": "The index of the first item to return in a page of results (page offset).",
                        "type": "integer"
                    },
                    "maxResults": {
                        "default": 50,
                        "title": "max results",
                        "description": "The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time.",
                        "type": "integer"
                    }
                },
                "required": [
                    "issues",
                    "total"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIJira.Issuekeyidfields": {
                "properties": {
                    "key": {
                        "title": "The key of the issue",
                        "type": "string"
                    },
                    "id": {
                        "title": "The ID of the issue",
                        "type": "string"
                    },
                    "fields": {
                        "title": "fields",
                        "$ref": "#/components/schemas/_namespace_swagger.IJira.IssueField"
                    }
                },
                "required": [
                    "key",
                    "id",
                    "fields"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.IssueField": {
                "properties": {
                    "statuscategorychangedate": {
                        "description": "The date and time when the status category of the issue was last changed.\n\nThis property indicates the most recent timestamp when the issue transitioned\nbetween status categories (e.g., from \"To Do\" to \"In Progress\" or from\n\"In Progress\" to \"Done\"). Status categories in Jira typically include:\n- \"To Do\": The issue is pending and not yet started.\n- \"In Progress\": The issue is currently being worked on.\n- \"Done\": The issue has been completed.",
                        "title": "statuscategorychangedate",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "reporter": {
                        "title": "reporter",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IJira.User"
                            }
                        ]
                    },
                    "creator": {
                        "title": "creator",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IJira.User"
                            }
                        ]
                    },
                    "assignee": {
                        "title": "assignee",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IJira.User"
                            }
                        ]
                    },
                    "summary": {
                        "title": "summary",
                        "type": "string"
                    },
                    "issuetype": {
                        "title": "issue type",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIJira.IssueTypenameid"
                    },
                    "status": {
                        "title": "status",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIJira.StatusdescriptionnameidstatusCategoryuntranslatedName"
                    },
                    "priority": {
                        "title": "priority",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIJira.Prioritynameid"
                    },
                    "parent": {
                        "title": "parent of this issue",
                        "$ref": "#/components/schemas/_namespace_swagger.IJira.Parent"
                    }
                },
                "required": [
                    "status",
                    "priority"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGetIssueInputByBasicAuthemaildomaintokenIBasicSecret": {
                "properties": {
                    "status": {
                        "title": "status",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:untranslatedName}",
                            "method": "post",
                            "path": "/connector/jira/get-statuses"
                        },
                        "type": "string"
                    },
                    "keyword": {
                        "title": "search keyword\n\nIt is a keyword you want to find in the title or explanation of an issue, which is useful when searching.",
                        "type": "string"
                    },
                    "labels": {
                        "title": "label titles\n\nComplex searches are possible using various labels.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "assignee": {
                        "title": "name of assignee",
                        "type": "string"
                    },
                    "maxResults": {
                        "default": 50,
                        "title": "max results",
                        "description": "The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time.",
                        "type": "integer"
                    },
                    "startAt": {
                        "default": 0,
                        "title": "page offset",
                        "description": "The index of the first item to return in a page of results (page offset).",
                        "type": "integer"
                    },
                    "project_key": {
                        "title": "key of project",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "values[].{value:key, label:name}",
                            "method": "post",
                            "path": "/connector/jira/get-projects"
                        },
                        "type": "string"
                    },
                    "issuetype": {
                        "title": "issue type",
                        "oneOf": [
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{label:untranslatedName, value:untranslatedName}",
                                    "method": "post",
                                    "path": "/connector/jira/get-issue-types"
                                },
                                "type": "number"
                            },
                            {
                                "pattern": "^(0|[1-9]\\d*)$",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "[].{label:untranslatedName, value:untranslatedName}",
                                    "method": "post",
                                    "path": "/connector/jira/get-issue-types"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "reporter": {
                        "title": "name of reporter",
                        "type": "string"
                    },
                    "created_start_date": {
                        "format": "date",
                        "title": "Search for issues created after this date",
                        "type": "string"
                    },
                    "created_end_date": {
                        "format": "date",
                        "title": "Search for issues created after this date",
                        "type": "string"
                    },
                    "priority": {
                        "title": "priority name",
                        "description": "If you want to search based on priority, deliver the name of the priority.\nThere are five priorities: 'Highest', 'High', 'Medium', 'Low', and 'Lowest'.\nAlthough it is a Deprecated feature, you can still query the priority level that can be assigned to an issue with the API.\nIt also exists as our connector, so use it if necessary.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:name, label:name}",
                            "method": "post",
                            "path": "/connector/jira/get-issue-priorities"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "atlassian",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "project_key",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.IGetProjectOutput": {
                "properties": {
                    "values": {
                        "title": "Jira project list",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IJira.Project"
                        },
                        "type": "array"
                    },
                    "isLast": {
                        "title": "Wheather is last page",
                        "type": "boolean"
                    },
                    "total": {
                        "title": "total count",
                        "type": "integer"
                    },
                    "startAt": {
                        "default": 0,
                        "title": "page offset",
                        "description": "The index of the first item to return in a page of results (page offset).",
                        "type": "integer"
                    },
                    "maxResults": {
                        "default": 50,
                        "title": "max results",
                        "description": "The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time.",
                        "type": "integer"
                    }
                },
                "required": [
                    "values",
                    "total"
                ],
                "title": "output of getting Jira projects",
                "type": "object"
            },
            "_namespace_swagger.IJira.Project": {
                "properties": {
                    "id": {
                        "title": "id",
                        "oneOf": [
                            {
                                "type": "number"
                            },
                            {
                                "pattern": "^(0|[1-9]\\d*)$",
                                "type": "string"
                            }
                        ]
                    },
                    "key": {
                        "title": "key of project\n\nKey properties used to query the inside of a project.",
                        "type": "string"
                    },
                    "name": {
                        "title": "name of this project",
                        "type": "string"
                    },
                    "projectCategory": {
                        "properties": {
                            "description": {
                                "title": "description",
                                "type": "string"
                            },
                            "id": {
                                "title": "id",
                                "type": "string"
                            },
                            "name": {
                                "title": "name",
                                "type": "string"
                            }
                        },
                        "required": [
                            "description",
                            "id",
                            "name"
                        ],
                        "title": "project category info",
                        "type": "object"
                    }
                },
                "required": [
                    "id",
                    "key",
                    "name"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGetProjectInputByBasicAuthemaildomaintokenIBasicSecret": {
                "properties": {
                    "maxResults": {
                        "default": 50,
                        "title": "max results",
                        "description": "The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time.",
                        "type": "integer"
                    },
                    "orderBy": {
                        "description": "Order the results by a field.\n\n- issueCount : Sorts by the total number of issues in each project.\n- lastIssueUpdatedTime : Sorts by the last issue update time.\n- name : Sorts by project name.",
                        "title": "order by",
                        "oneOf": [
                            {
                                "title": "issueCount",
                                "description": "Sorts by the total number of issues in each project.",
                                "const": "issueCount"
                            },
                            {
                                "title": "lastIssueUpdatedTime",
                                "description": "Sorts by the last issue update time.",
                                "const": "lastIssueUpdatedTime"
                            },
                            {
                                "title": "name",
                                "description": "Sorts by project name.",
                                "const": "name"
                            }
                        ]
                    },
                    "startAt": {
                        "default": 0,
                        "title": "page offset",
                        "description": "The index of the first item to return in a page of results (page offset).",
                        "type": "integer"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "atlassian",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.IGetIssueLabelOutput": {
                "properties": {
                    "values": {
                        "title": "label list",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "isLast": {
                        "title": "Wheather is last page",
                        "type": "boolean"
                    },
                    "total": {
                        "title": "total count",
                        "type": "integer"
                    },
                    "startAt": {
                        "default": 0,
                        "title": "page offset",
                        "description": "The index of the first item to return in a page of results (page offset).",
                        "type": "integer"
                    },
                    "maxResults": {
                        "default": 50,
                        "title": "max results",
                        "description": "The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time.",
                        "type": "integer"
                    }
                },
                "required": [
                    "values",
                    "total"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGetIssueLabelInputemaildomaintokenIBasicSecret": {
                "properties": {
                    "maxResults": {
                        "default": 50,
                        "title": "max results",
                        "description": "The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time.",
                        "type": "integer"
                    },
                    "startAt": {
                        "default": 0,
                        "title": "page offset",
                        "description": "The index of the first item to return in a page of results (page offset).",
                        "type": "integer"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "atlassian",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.IGetIssueTypeOutput": {
                "properties": {
                    "issuetypes": {
                        "title": "issue types in this projects",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IJira.IssueType"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "issuetypes"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.IssueType": {
                "properties": {
                    "id": {
                        "title": "issuetype's id",
                        "oneOf": [
                            {
                                "type": "number"
                            },
                            {
                                "pattern": "^(0|[1-9]\\d*)$",
                                "type": "string"
                            }
                        ]
                    },
                    "name": {
                        "title": "issue type name\n\nIt may be name, bug, story or etc.",
                        "x-wrtn-placeholder": "스토리",
                        "type": "string"
                    },
                    "description": {
                        "title": "description",
                        "type": "string"
                    },
                    "subtask": {
                        "title": "whether is for substask issue type",
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "description",
                    "subtask"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGetIssueTypeInputemaildomaintokenIBasicSecret": {
                "properties": {
                    "projectId": {
                        "title": "id of project",
                        "oneOf": [
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "values[].{value:id,label:name}",
                                    "method": "post",
                                    "path": "/connectors/jira/get-projects"
                                },
                                "type": "number"
                            },
                            {
                                "pattern": "^(0|[1-9]\\d*)$",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "values[].{value:id,label:name}",
                                    "method": "post",
                                    "path": "/connectors/jira/get-projects"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "atlassian",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "projectId",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.IGetIssueStatusOutput": {
                "properties": {
                    "statuses": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.MyPickStatusnameiduntranslatedNameprojectIdstringundefined"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "statuses"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickStatusnameiduntranslatedNameprojectIdstringundefined": {
                "properties": {
                    "name": {
                        "title": "status name",
                        "x-wrtn-placeholder": "해야 할 일",
                        "type": "string"
                    },
                    "id": {
                        "title": "status id",
                        "type": "string"
                    },
                    "untranslatedName": {
                        "title": "untranslated name",
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "id"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGetIssueStatusInputemaildomaintokenIBasicSecret": {
                "properties": {
                    "projectId": {
                        "description": "If the status does not have the project ID,\nit means this status is beyond the scope of the project and can be selected by the entire team.\nIt can also be the default status created from the beginning by Jira.",
                        "title": "id of project",
                        "oneOf": [
                            {
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "values[].{value:id,label:name}",
                                    "method": "post",
                                    "path": "/connectors/jira/get-projects"
                                },
                                "type": "number"
                            },
                            {
                                "pattern": "^(0|[1-9]\\d*)$",
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "values[].{value:id,label:name}",
                                    "method": "post",
                                    "path": "/connectors/jira/get-projects"
                                },
                                "type": "string"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "atlassian",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitBasicAuthorizationemaildomaintokenIBasicSecret": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "atlassian",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGetIssueAssignableInputemaildomaintokenIBasicSecret": {
                "properties": {
                    "maxResults": {
                        "default": 50,
                        "title": "max results",
                        "description": "The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time.",
                        "type": "integer"
                    },
                    "startAt": {
                        "default": 0,
                        "title": "page offset",
                        "description": "The index of the first item to return in a page of results (page offset).",
                        "type": "integer"
                    },
                    "project": {
                        "title": "key of project\n\nIt refers to the key of the project to search for the user to be assigned.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "values[].{value:key, label:name}",
                            "method": "post",
                            "path": "/connector/jira/get-projects"
                        },
                        "type": "string"
                    },
                    "issueKey": {
                        "title": "key of issue\n\nIt refers to the key of the issue to search for the user to be assigned.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "issues[].{value:key, label:key}",
                            "method": "post",
                            "path": "connectors/jira/get-issues"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "atlassian",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "project",
                    "issueKey",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGetProjectAssignableInputemaildomaintokenIBasicSecret": {
                "properties": {
                    "maxResults": {
                        "default": 50,
                        "title": "max results",
                        "description": "The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time.",
                        "type": "integer"
                    },
                    "startAt": {
                        "default": 0,
                        "title": "page offset",
                        "description": "The index of the first item to return in a page of results (page offset).",
                        "type": "integer"
                    },
                    "project_key": {
                        "title": "key of project\n\nIt refers to the key of the project to search for the user to be assigned.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "values[].{value:key, label:name}",
                            "method": "post",
                            "path": "/connector/jira/get-projects"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "atlassian",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "project_key",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IJira.StatusCategory": {
                "properties": {
                    "colorName": {
                        "title": "name of color",
                        "type": "string"
                    },
                    "id": {
                        "title": "The ID of status category",
                        "type": "number"
                    },
                    "key": {
                        "title": "The key of status category",
                        "type": "string"
                    },
                    "name": {
                        "title": "name of the status category",
                        "type": "string"
                    }
                },
                "required": [
                    "colorName",
                    "id",
                    "key",
                    "name"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGoogleTrend.IResponse": {
                "properties": {
                    "date": {
                        "title": "날짜",
                        "description": "트렌드 조회 날짜입니다.",
                        "type": "string"
                    },
                    "query": {
                        "title": "검색어",
                        "description": "데일리 트렌드로 조회된 검색어입니다.",
                        "type": "string"
                    },
                    "related_queries": {
                        "title": "연관 검색어",
                        "description": "데일리 트렌드로 조회된 검색어와 연관된 검색어 목록입니다.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "traffic": {
                        "title": "트래픽 수",
                        "description": "해당 키워드가 검색된 트래픽 수입니다.",
                        "type": "string"
                    }
                },
                "required": [
                    "date",
                    "query",
                    "related_queries",
                    "traffic"
                ],
                "title": "구글 데일리 트렌드 조회 결과",
                "description": "데일리 트렌드 조회 결과입니다.",
                "type": "object"
            },
            "_namespace_swagger.IGoogleTrend.IRequest": {
                "properties": {
                    "date": {
                        "format": "date",
                        "title": "날짜",
                        "description": "데일리 트렌드를 조회할 날짜 입니다.\n\n입력되지 않으면 오늘 날짜를 기준으로 조회합니다.\nyear-month-day 형식의 date 타입 문자열을 제공해주어야 한다.",
                        "type": "string"
                    }
                },
                "title": "구글 데일리 트렌드 조회를 위한 정보",
                "description": "입력한 날짜의 트렌드를 조회합니다.\n\n입력하지 않으면 오늘 날짜를 기준으로 조회합니다.\n\n날짜 형식은 \"20241231\" 형식입니다.",
                "type": "object"
            },
            "_namespace_swagger.IGoogleMap.IResponse": {
                "properties": {
                    "title": {
                        "title": "Name",
                        "description": "It's the name of a restaurant.",
                        "type": "string"
                    },
                    "place_id": {
                        "title": "unique ID",
                        "description": "This is the unique ID of the restaurant.\n\nThis is the information needed to search for reviews.",
                        "type": "string"
                    },
                    "gps_coordinate": {
                        "properties": {
                            "latitude": {
                                "title": "Latitude",
                                "description": "This is the latitude of the restaurant's coordinates.",
                                "type": "number"
                            },
                            "longitude": {
                                "title": "Longitude",
                                "description": "This is the coordinates of the restaurant.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "latitude",
                            "longitude"
                        ],
                        "title": "Coordinates",
                        "description": "Here are the coordinates for the restaurant.",
                        "type": "object"
                    },
                    "rating": {
                        "title": "ratings",
                        "description": "Here are the restaurant ratings.",
                        "type": "number"
                    },
                    "reviews": {
                        "title": "Number of reviews",
                        "description": "This is the number of restaurant reviews.",
                        "type": "number"
                    },
                    "address": {
                        "title": "Address",
                        "description": "Here is the address of the restaurant.",
                        "type": "string"
                    },
                    "open_state": {
                        "title": "Operation Information",
                        "description": "Information about whether the restaurant is currently operating.",
                        "type": "string"
                    },
                    "operating_hours": {
                        "properties": {},
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Information on operating hours",
                        "description": "Here is the information on the restaurant's operating hours.",
                        "type": "object"
                    },
                    "phone_number": {
                        "title": "Phone number",
                        "description": "This is the phone number for the restaurant.",
                        "type": "string"
                    },
                    "service_options": {
                        "properties": {},
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "title": "Service options",
                        "description": "Service options provided by the restaurant.",
                        "type": "object"
                    },
                    "user_review": {
                        "title": "User Review",
                        "description": "This is a user review of a delicious restaurant.",
                        "type": "string"
                    },
                    "thumbnail": {
                        "description": "This is a thumbnail image of a delicious restaurant.",
                        "title": "image",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "contentMediaType": "image/*",
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "title",
                    "place_id",
                    "gps_coordinate",
                    "address"
                ],
                "title": "Google Maps Restaurant Search Results",
                "type": "object"
            },
            "_namespace_swagger.IGoogleMap.IRequest": {
                "properties": {
                    "keyword": {
                        "minLength": 1,
                        "title": "Search term",
                        "description": "Please enter your search term",
                        "x-wrtn-placeholder": "강남역 맛집",
                        "type": "string"
                    }
                },
                "required": [
                    "keyword"
                ],
                "title": "Information for searching restaurants on Google Maps",
                "type": "object"
            },
            "_namespace_swagger.IGoogleMap.IReviewResponse": {
                "properties": {
                    "username": {
                        "title": "Author's name",
                        "description": "Reviewer's name.",
                        "type": "string"
                    },
                    "rating": {
                        "title": "Review ratings",
                        "description": "Here are the review ratings.",
                        "type": "number"
                    },
                    "description": {
                        "title": "Review content",
                        "description": "Here is the review content.",
                        "type": "string"
                    },
                    "link": {
                        "format": "iri",
                        "title": "Review Link",
                        "description": "Here is the review link.",
                        "type": "string"
                    },
                    "images": {
                        "title": "Review Image",
                        "description": "This is the image registered in the review.",
                        "items": {
                            "format": "iri",
                            "contentMediaType": "image/*",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "date": {
                        "title": "Review Date",
                        "description": "The date the review was written.",
                        "type": "string"
                    }
                },
                "required": [
                    "username",
                    "rating",
                    "description",
                    "link",
                    "images",
                    "date"
                ],
                "title": "Review search results",
                "type": "object"
            },
            "_namespace_swagger.IGoogleMap.IReviewRequest": {
                "properties": {
                    "place_id": {
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:place_id, label:place_id}",
                            "method": "post",
                            "path": "/connector/google-map/search"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "place_id"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetEventOutput": {
                "properties": {
                    "result": {
                        "items": {
                            "properties": {
                                "id": {
                                    "title": "id",
                                    "type": "string"
                                },
                                "type": {
                                    "title": "event type\nThere are various events such as `WatchEvent`, `CreateEvent`, `ForkEvent`.",
                                    "oneOf": [
                                        {
                                            "type": "null"
                                        },
                                        {
                                            "title": "CommitCommentEvent",
                                            "description": "Triggered when a comment is added to a commit.",
                                            "const": "CommitCommentEvent"
                                        },
                                        {
                                            "title": "CreateEvent",
                                            "description": "Triggered when a new branch, tag, or repository is created.",
                                            "const": "CreateEvent"
                                        },
                                        {
                                            "title": "DeleteEvent",
                                            "description": "Triggered when a branch or tag is deleted.",
                                            "const": "DeleteEvent"
                                        },
                                        {
                                            "title": "ForkEvent",
                                            "description": "Triggered when a user forks a repository.",
                                            "const": "ForkEvent"
                                        },
                                        {
                                            "title": "GollumEvent",
                                            "description": "Triggered when a Wiki page is created or updated.",
                                            "const": "GollumEvent"
                                        },
                                        {
                                            "title": "IssueCommentEvent",
                                            "description": "Triggered when a comment is added to an issue.",
                                            "const": "IssueCommentEvent"
                                        },
                                        {
                                            "title": "IssuesEvent",
                                            "description": "Triggered when an issue is opened, edited, or closed.",
                                            "const": "IssuesEvent"
                                        },
                                        {
                                            "title": "MemberEvent",
                                            "description": "Triggered when a user is added as a collaborator to a repository.",
                                            "const": "MemberEvent"
                                        },
                                        {
                                            "title": "PublicEvent",
                                            "description": "Triggered when a private repository is made public.",
                                            "const": "PublicEvent"
                                        },
                                        {
                                            "title": "PullRequestEvent",
                                            "description": "Triggered when a pull request is opened, edited, merged, or closed.",
                                            "const": "PullRequestEvent"
                                        },
                                        {
                                            "title": "PullRequestReviewEvent",
                                            "description": "Triggered when a review is submitted for a pull request.",
                                            "const": "PullRequestReviewEvent"
                                        },
                                        {
                                            "title": "PullRequestReviewCommentEvent",
                                            "description": "Triggered when a comment is added to a pull request's review.",
                                            "const": "PullRequestReviewCommentEvent"
                                        },
                                        {
                                            "title": "PullRequestReviewThreadEvent",
                                            "description": "Triggered when a review thread in a pull request has a change.",
                                            "const": "PullRequestReviewThreadEvent"
                                        },
                                        {
                                            "title": "PushEvent",
                                            "description": "Triggered when commits are pushed to a repository.",
                                            "const": "PushEvent"
                                        },
                                        {
                                            "title": "ReleaseEvent",
                                            "description": "Triggered when a release is published.",
                                            "const": "ReleaseEvent"
                                        },
                                        {
                                            "title": "SponsorshipEvent",
                                            "description": "Triggered when a sponsorship is started or modified.",
                                            "const": "SponsorshipEvent"
                                        },
                                        {
                                            "title": "WatchEvent",
                                            "description": "Triggered when a user stars a repository.",
                                            "const": "WatchEvent"
                                        }
                                    ]
                                },
                                "actor": {
                                    "title": "user",
                                    "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Useridlogin"
                                },
                                "repo": {
                                    "title": "repo",
                                    "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Repositorynameid"
                                },
                                "org": {
                                    "title": "org",
                                    "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Organizationidlogindisplay_login"
                                },
                                "payload": {
                                    "title": "payload",
                                    "$ref": "#/components/schemas/_namespace_swagger.IGithub.Payload"
                                },
                                "public": {
                                    "title": "whather is public",
                                    "type": "boolean"
                                },
                                "created_at": {
                                    "title": "created_at",
                                    "oneOf": [
                                        {
                                            "type": "null"
                                        },
                                        {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    ]
                                }
                            },
                            "required": [
                                "id",
                                "type",
                                "actor",
                                "repo",
                                "payload",
                                "public",
                                "created_at"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "true if there is a next page",
                        "description": "However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty.",
                        "type": "boolean"
                    },
                    "after": {
                        "title": "after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page.",
                        "type": "string"
                    },
                    "before": {
                        "title": "before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page.",
                        "type": "string"
                    },
                    "prev": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page.",
                        "title": "prev",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "next": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page.",
                        "title": "next",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "last": {
                        "title": "last",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page.",
                        "type": "number"
                    },
                    "first": {
                        "title": "first",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page.",
                        "type": "number"
                    }
                },
                "required": [
                    "result",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIGithub.Useridlogin": {
                "properties": {
                    "id": {
                        "title": "id\n\nThis means the user's ID.",
                        "type": "number"
                    },
                    "login": {
                        "title": "login",
                        "description": "This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname.",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "login"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIGithub.Repositorynameid": {
                "properties": {
                    "name": {
                        "title": "name",
                        "type": "string"
                    },
                    "id": {
                        "title": "id",
                        "type": "number"
                    }
                },
                "required": [
                    "name",
                    "id"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIGithub.Organizationidlogindisplay_login": {
                "properties": {
                    "id": {
                        "title": "id",
                        "type": "number"
                    },
                    "login": {
                        "title": "login",
                        "type": "string"
                    },
                    "display_login": {
                        "title": "display_login",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "login"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.Payload": {
                "properties": {
                    "action": {
                        "title": "action",
                        "description": "It means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc.",
                        "type": "string"
                    },
                    "issue": {
                        "title": "issue\n\nIf it is an event for an issue, contain the issue information.",
                        "$ref": "#/components/schemas/_namespace_swagger.IGithub.Issue"
                    },
                    "comment": {
                        "title": "comment\n\nIf it is an event for an comment, contain the comment information.",
                        "$ref": "#/components/schemas/_namespace_swagger.IGithub.Comment"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IGithub.Issue": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "html_url": {
                        "format": "iri",
                        "title": "html_url",
                        "description": "If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path.",
                        "type": "string"
                    },
                    "number": {
                        "title": "issue number\n\nNumber uniquely identifying the issue within its repository",
                        "type": "integer"
                    },
                    "state": {
                        "title": "state\n\nState of the issue; either 'open' or 'closed'",
                        "type": "string"
                    },
                    "state_reason": {
                        "description": "The reason for the current state",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "const": "completed"
                            },
                            {
                                "const": "reopened"
                            },
                            {
                                "const": "not_planned"
                            }
                        ]
                    },
                    "title": {
                        "description": "Title of the issue",
                        "type": "string"
                    },
                    "user": {
                        "title": "user",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Usertypeidlogin"
                    },
                    "body": {
                        "description": "Contents of the issue\n\nYou can also render this content because it is in a markdown format.",
                        "title": "body",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "labels": {
                        "title": "labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "url": {
                                            "format": "iri",
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "oneOf": [
                                                {
                                                    "type": "null"
                                                },
                                                {
                                                    "type": "string"
                                                }
                                            ]
                                        },
                                        "color": {
                                            "oneOf": [
                                                {
                                                    "type": "null"
                                                },
                                                {
                                                    "type": "string"
                                                }
                                            ]
                                        },
                                        "default": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "assignee": {
                        "title": "assignee",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Userlogin"
                            }
                        ]
                    },
                    "assignees": {
                        "title": "assignees\n\nIf there are many people in charge, you can be included in the array.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Userlogin"
                                },
                                "type": "array"
                            }
                        ]
                    }
                },
                "required": [
                    "id",
                    "html_url",
                    "number",
                    "state",
                    "title",
                    "user",
                    "labels",
                    "assignee"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIGithub.Usertypeidlogin": {
                "properties": {
                    "type": {
                        "title": "type",
                        "oneOf": [
                            {
                                "const": "User"
                            },
                            {
                                "const": "Bot"
                            },
                            {
                                "const": "Organization"
                            }
                        ]
                    },
                    "id": {
                        "title": "id\n\nThis means the user's ID.",
                        "type": "number"
                    },
                    "login": {
                        "title": "login",
                        "description": "This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname.",
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "id",
                    "login"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIGithub.Userlogin": {
                "properties": {
                    "login": {
                        "title": "login",
                        "description": "This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname.",
                        "type": "string"
                    }
                },
                "required": [
                    "login"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.Comment": {
                "properties": {
                    "id": {
                        "title": "id",
                        "type": "integer"
                    },
                    "body": {
                        "title": "body",
                        "type": "string"
                    },
                    "user": {
                        "title": "user",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Usertypeavatar_urlidloginhtml_url"
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "created_at",
                        "type": "string"
                    },
                    "updated_at": {
                        "format": "date-time",
                        "title": "updated_at",
                        "type": "string"
                    },
                    "pages": {
                        "title": "pages",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.Page"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "user",
                    "created_at",
                    "updated_at"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIGithub.Usertypeavatar_urlidloginhtml_url": {
                "properties": {
                    "type": {
                        "title": "type",
                        "oneOf": [
                            {
                                "const": "User"
                            },
                            {
                                "const": "Bot"
                            },
                            {
                                "const": "Organization"
                            }
                        ]
                    },
                    "avatar_url": {
                        "format": "iri",
                        "title": "avatar url\n\nThis means the user's profile image.",
                        "type": "string"
                    },
                    "id": {
                        "title": "id\n\nThis means the user's ID.",
                        "type": "number"
                    },
                    "login": {
                        "title": "login",
                        "description": "This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname.",
                        "type": "string"
                    },
                    "html_url": {
                        "format": "iri",
                        "title": "html_url\n\nIf you want to look up your profile, you can access this website.",
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "avatar_url",
                    "id",
                    "login",
                    "html_url"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.Page": {
                "properties": {
                    "page_name": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "summary": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "action": {
                        "type": "string"
                    },
                    "sha": {
                        "type": "string"
                    },
                    "html_url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetReceivedEventInput": {
                "properties": {
                    "username": {
                        "title": "user's nickname",
                        "type": "string"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "username",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetUserPinnedRepositoryInput": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "username": {
                        "title": "username\n\nThis refers to the nickname of the user who will look up the repository.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "items[].{value:login, label:login}",
                            "method": "post",
                            "path": "/connector/github/get-users"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey",
                    "username"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetUserRepositoryOutput": {
                "properties": {
                    "result": {
                        "title": "repositories",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.RepositoryWithReadmeFile"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "true if there is a next page",
                        "description": "However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty.",
                        "type": "boolean"
                    },
                    "after": {
                        "title": "after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page.",
                        "type": "string"
                    },
                    "before": {
                        "title": "before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page.",
                        "type": "string"
                    },
                    "prev": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page.",
                        "title": "prev",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "next": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page.",
                        "title": "next",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "last": {
                        "title": "last",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page.",
                        "type": "number"
                    },
                    "first": {
                        "title": "first",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page.",
                        "type": "number"
                    }
                },
                "required": [
                    "result",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.RepositoryWithReadmeFile": {
                "properties": {
                    "readme": {
                        "discriminator": {
                            "mapping": {
                                "file": "#/components/schemas/IGithub.RepositoryFile"
                            },
                            "propertyName": "type"
                        },
                        "title": "readme",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.RepositoryFile"
                            }
                        ]
                    },
                    "id": {
                        "title": "id",
                        "type": "number"
                    },
                    "name": {
                        "title": "name",
                        "type": "string"
                    },
                    "full_name": {
                        "title": "full_name\n\nThis is in the form '{username}/{reponame}'.",
                        "type": "string"
                    },
                    "private": {
                        "title": "private",
                        "type": "boolean"
                    },
                    "html_url": {
                        "format": "iri",
                        "title": "html_url",
                        "type": "string"
                    },
                    "description": {
                        "title": "description",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "fork": {
                        "title": "fork",
                        "type": "boolean"
                    },
                    "forks_count": {
                        "title": "forks_count",
                        "type": "integer"
                    },
                    "stargazers_count": {
                        "title": "stargazers_count",
                        "type": "integer"
                    },
                    "watchers_count": {
                        "title": "watchers_count",
                        "type": "integer"
                    },
                    "size": {
                        "title": "size",
                        "type": "number"
                    },
                    "default_branch": {
                        "title": "default_branch",
                        "type": "string"
                    },
                    "open_issues_count": {
                        "title": "open_issues_count",
                        "type": "integer"
                    },
                    "is_template": {
                        "title": "is_template",
                        "type": "boolean"
                    },
                    "topics": {
                        "title": "topics",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "has_issues": {
                        "title": "has_issues",
                        "type": "boolean"
                    },
                    "has_projects": {
                        "title": "has_projects",
                        "type": "boolean"
                    },
                    "has_wiki": {
                        "title": "has_wiki",
                        "type": "boolean"
                    },
                    "has_pages": {
                        "title": "has_pages",
                        "type": "boolean"
                    },
                    "has_downloads": {
                        "title": "has_downloads",
                        "type": "boolean"
                    },
                    "archived": {
                        "title": "archived",
                        "type": "boolean"
                    },
                    "disabled": {
                        "title": "disabled",
                        "type": "boolean"
                    },
                    "visibility": {
                        "title": "visibility",
                        "oneOf": [
                            {
                                "const": "private"
                            },
                            {
                                "const": "public"
                            }
                        ]
                    },
                    "pushed_at": {
                        "format": "date-time",
                        "title": "pushed_at",
                        "type": "string"
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "created_at",
                        "type": "string"
                    },
                    "updated_at": {
                        "format": "date-time",
                        "title": "updated_at",
                        "type": "string"
                    },
                    "permissions": {
                        "properties": {
                            "admin": {
                                "title": "admin",
                                "type": "boolean"
                            },
                            "push": {
                                "title": "push",
                                "type": "boolean"
                            },
                            "pull": {
                                "title": "pull",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "admin",
                            "push",
                            "pull"
                        ],
                        "type": "object"
                    },
                    "allow_rebase_merge": {
                        "title": "allow_rebase_merge",
                        "type": "boolean"
                    },
                    "allow_squash_merge": {
                        "title": "allow_squash_merge",
                        "type": "boolean"
                    },
                    "allow_auto_merge": {
                        "title": "allow_auto_merge",
                        "type": "boolean"
                    },
                    "delete_branch_on_merge": {
                        "title": "delete_branch_on_merge",
                        "type": "boolean"
                    },
                    "allow_merge_commit": {
                        "title": "allow_merge_commit",
                        "type": "boolean"
                    },
                    "subscribers_count": {
                        "title": "subscribers_count",
                        "type": "integer"
                    },
                    "network_count": {
                        "title": "network_count",
                        "type": "integer"
                    },
                    "license": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "properties": {
                                    "key": {
                                        "title": "key",
                                        "x-wrtn-placeholder": "mit",
                                        "type": "string"
                                    },
                                    "name": {
                                        "title": "name",
                                        "x-wrtn-placeholder": "MIT License",
                                        "type": "string"
                                    },
                                    "url": {
                                        "title": "url",
                                        "oneOf": [
                                            {
                                                "type": "null"
                                            },
                                            {
                                                "x-wrtn-placeholder": "https://api.github.com/licenses/mit",
                                                "type": "string"
                                            }
                                        ]
                                    },
                                    "spdx_id": {
                                        "title": "spdx_id",
                                        "x-wrtn-placeholder": "MIT",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "key",
                                    "name",
                                    "url",
                                    "spdx_id"
                                ],
                                "type": "object"
                            }
                        ]
                    },
                    "forks": {
                        "title": "forks",
                        "type": "integer"
                    },
                    "open_issues": {
                        "title": "open_issues",
                        "type": "integer"
                    },
                    "watchers": {
                        "title": "watchers",
                        "type": "integer"
                    }
                },
                "required": [
                    "readme",
                    "id",
                    "name",
                    "full_name",
                    "private",
                    "html_url",
                    "description",
                    "fork",
                    "forks_count",
                    "stargazers_count",
                    "watchers_count",
                    "size",
                    "default_branch",
                    "open_issues_count",
                    "is_template",
                    "topics",
                    "has_issues",
                    "has_projects",
                    "has_wiki",
                    "has_pages",
                    "has_downloads",
                    "archived",
                    "disabled",
                    "visibility",
                    "pushed_at",
                    "created_at",
                    "updated_at",
                    "license",
                    "forks",
                    "open_issues",
                    "watchers"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.RepositoryFile": {
                "properties": {
                    "type": {
                        "const": "file"
                    },
                    "encoding": {
                        "x-wrtn-placeholder": "base64",
                        "type": "string"
                    },
                    "size": {
                        "title": "Indicates the file size in bytes",
                        "type": "number"
                    },
                    "name": {
                        "title": "name of this file",
                        "type": "string"
                    },
                    "path": {
                        "title": "path\n\nIt must be unique as a path for identifying that file in the root folder.",
                        "type": "string"
                    },
                    "content": {
                        "title": "content",
                        "type": "string"
                    },
                    "sha": {
                        "title": "sha",
                        "type": "string"
                    },
                    "url": {
                        "title": "url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file.",
                        "type": "string"
                    },
                    "download_url": {
                        "title": "download_url\n\nThe url that allows you to download a file, which is useful if it is a media file containing an image.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "type",
                    "encoding",
                    "size",
                    "name",
                    "path",
                    "content",
                    "sha",
                    "url"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetUserRepositoryInput": {
                "properties": {
                    "username": {
                        "title": "username\n\nThis refers to the nickname of the user who will look up the repository.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "items[].{value:login, label:login}",
                            "method": "post",
                            "path": "/connector/github/get-users"
                        },
                        "type": "string"
                    },
                    "per_page": {
                        "default": 10,
                        "maximum": 10,
                        "title": "per_page",
                        "description": "The number of results per page (max 10).\n\nThe response capacity may be very large because it even comes out with the reedy of the repository.\nTherefore, it is recommended to check by cutting up to 10 pieces.",
                        "type": "integer"
                    },
                    "sort": {
                        "description": "The property to sort the results by.\nIt must be one of: \"created\" | \"updated\" | \"pushed\" | \"full_name\"",
                        "title": "sorting condition",
                        "oneOf": [
                            {
                                "const": "created"
                            },
                            {
                                "const": "updated"
                            },
                            {
                                "const": "pushed"
                            },
                            {
                                "const": "full_name"
                            }
                        ]
                    },
                    "direction": {
                        "description": "The order to sort by.\nDefault: asc when using full_name, otherwise desc.",
                        "title": "direction",
                        "oneOf": [
                            {
                                "const": "desc"
                            },
                            {
                                "const": "asc"
                            }
                        ]
                    },
                    "since": {
                        "format": "date-time",
                        "title": "since\nOnly show repositories updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                        "type": "string"
                    },
                    "before": {
                        "format": "date-time",
                        "title": "before\nOnly show repositories updated before the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                        "type": "string"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "username",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetOrganizationEventInput": {
                "properties": {
                    "organization": {
                        "title": "organization's name\n\nYou can also change it to your nickname.",
                        "type": "string"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "organization",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetOrganizationAuthenticationUserIssueOutput": {
                "properties": {
                    "result": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.Issue"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "true if there is a next page",
                        "description": "However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty.",
                        "type": "boolean"
                    },
                    "after": {
                        "title": "after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page.",
                        "type": "string"
                    },
                    "before": {
                        "title": "before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page.",
                        "type": "string"
                    },
                    "prev": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page.",
                        "title": "prev",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "next": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page.",
                        "title": "next",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "last": {
                        "title": "last",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page.",
                        "type": "number"
                    },
                    "first": {
                        "title": "first",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page.",
                        "type": "number"
                    }
                },
                "required": [
                    "result",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetOrganizationAuthenticationUserIssueInput": {
                "properties": {
                    "organization": {
                        "title": "organization\nThe organization name. The name is not case sensitive.",
                        "type": "string"
                    },
                    "direction": {
                        "description": "The order to sort by.\nDefault: asc when using full_name, otherwise desc.",
                        "title": "direction",
                        "oneOf": [
                            {
                                "const": "desc"
                            },
                            {
                                "const": "asc"
                            }
                        ]
                    },
                    "filter": {
                        "description": "It must be one of: \"assigned\", \"created\", \"mentioned\", \"subscribed\", \"repos\", \"all\"\n\nIndicates which sorts of issues to return.\nassigned means issues assigned to you.\ncreated means issues created by you.\nmentioned means issues mentioning you.\nsubscribed means issues you're subscribed to updates for.\nall or repos means all issues you can see, regardless of participation or creation.",
                        "title": "filter",
                        "oneOf": [
                            {
                                "title": "assigned",
                                "description": "Indicates which sorts of issues to return.",
                                "const": "assigned"
                            },
                            {
                                "title": "created",
                                "description": "assigned means issues assigned to you.",
                                "const": "created"
                            },
                            {
                                "title": "mentioned",
                                "description": "created means issues created by you.",
                                "const": "mentioned"
                            },
                            {
                                "title": "subscribed",
                                "description": "mentioned means issues mentioning you.",
                                "const": "subscribed"
                            },
                            {
                                "title": "repos",
                                "description": "subscribed means issues you're subscribed to updates for.",
                                "const": "repos"
                            },
                            {
                                "title": "all",
                                "description": "all or repos means all issues you can see, regardless of participation or creation.",
                                "const": "all"
                            }
                        ]
                    },
                    "state": {
                        "description": "Indicates the state of the issues to return.\nIt must be one of: 'open', 'closed', 'all'",
                        "title": "state",
                        "oneOf": [
                            {
                                "title": "open",
                                "const": "open"
                            },
                            {
                                "title": "closed",
                                "const": "closed"
                            },
                            {
                                "title": "all",
                                "const": "all"
                            }
                        ]
                    },
                    "labels": {
                        "title": "label\n\nA list of comma separated label names. Example: `bug,ui,@high`",
                        "type": "string"
                    },
                    "sort": {
                        "title": "sort\nIt must be 'created', 'updated', 'comments'",
                        "oneOf": [
                            {
                                "title": "created",
                                "const": "created"
                            },
                            {
                                "title": "updated",
                                "const": "updated"
                            },
                            {
                                "title": "comments",
                                "const": "comments"
                            }
                        ]
                    },
                    "owned": {
                        "title": "owned",
                        "type": "boolean"
                    },
                    "pulls": {
                        "title": "pulls",
                        "type": "boolean"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "user",
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    }
                },
                "required": [
                    "organization",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetOrganizationRepositoryOutput": {
                "properties": {
                    "result": {
                        "title": "repositories",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.Repository"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "true if there is a next page",
                        "description": "However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty.",
                        "type": "boolean"
                    },
                    "after": {
                        "title": "after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page.",
                        "type": "string"
                    },
                    "before": {
                        "title": "before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page.",
                        "type": "string"
                    },
                    "prev": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page.",
                        "title": "prev",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "next": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page.",
                        "title": "next",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "last": {
                        "title": "last",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page.",
                        "type": "number"
                    },
                    "first": {
                        "title": "first",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page.",
                        "type": "number"
                    }
                },
                "required": [
                    "result",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.Repository": {
                "properties": {
                    "id": {
                        "title": "id",
                        "type": "number"
                    },
                    "name": {
                        "title": "name",
                        "type": "string"
                    },
                    "full_name": {
                        "title": "full_name\n\nThis is in the form '{username}/{reponame}'.",
                        "type": "string"
                    },
                    "private": {
                        "title": "private",
                        "type": "boolean"
                    },
                    "html_url": {
                        "format": "iri",
                        "title": "html_url",
                        "type": "string"
                    },
                    "description": {
                        "title": "description",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "fork": {
                        "title": "fork",
                        "type": "boolean"
                    },
                    "forks_count": {
                        "title": "forks_count",
                        "type": "integer"
                    },
                    "stargazers_count": {
                        "title": "stargazers_count",
                        "type": "integer"
                    },
                    "watchers_count": {
                        "title": "watchers_count",
                        "type": "integer"
                    },
                    "size": {
                        "title": "size",
                        "type": "number"
                    },
                    "default_branch": {
                        "title": "default_branch",
                        "type": "string"
                    },
                    "open_issues_count": {
                        "title": "open_issues_count",
                        "type": "integer"
                    },
                    "is_template": {
                        "title": "is_template",
                        "type": "boolean"
                    },
                    "topics": {
                        "title": "topics",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "has_issues": {
                        "title": "has_issues",
                        "type": "boolean"
                    },
                    "has_projects": {
                        "title": "has_projects",
                        "type": "boolean"
                    },
                    "has_wiki": {
                        "title": "has_wiki",
                        "type": "boolean"
                    },
                    "has_pages": {
                        "title": "has_pages",
                        "type": "boolean"
                    },
                    "has_downloads": {
                        "title": "has_downloads",
                        "type": "boolean"
                    },
                    "archived": {
                        "title": "archived",
                        "type": "boolean"
                    },
                    "disabled": {
                        "title": "disabled",
                        "type": "boolean"
                    },
                    "visibility": {
                        "title": "visibility",
                        "oneOf": [
                            {
                                "const": "private"
                            },
                            {
                                "const": "public"
                            }
                        ]
                    },
                    "pushed_at": {
                        "format": "date-time",
                        "title": "pushed_at",
                        "type": "string"
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "created_at",
                        "type": "string"
                    },
                    "updated_at": {
                        "format": "date-time",
                        "title": "updated_at",
                        "type": "string"
                    },
                    "permissions": {
                        "properties": {
                            "admin": {
                                "title": "admin",
                                "type": "boolean"
                            },
                            "push": {
                                "title": "push",
                                "type": "boolean"
                            },
                            "pull": {
                                "title": "pull",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "admin",
                            "push",
                            "pull"
                        ],
                        "type": "object"
                    },
                    "allow_rebase_merge": {
                        "title": "allow_rebase_merge",
                        "type": "boolean"
                    },
                    "allow_squash_merge": {
                        "title": "allow_squash_merge",
                        "type": "boolean"
                    },
                    "allow_auto_merge": {
                        "title": "allow_auto_merge",
                        "type": "boolean"
                    },
                    "delete_branch_on_merge": {
                        "title": "delete_branch_on_merge",
                        "type": "boolean"
                    },
                    "allow_merge_commit": {
                        "title": "allow_merge_commit",
                        "type": "boolean"
                    },
                    "subscribers_count": {
                        "title": "subscribers_count",
                        "type": "integer"
                    },
                    "network_count": {
                        "title": "network_count",
                        "type": "integer"
                    },
                    "license": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "properties": {
                                    "key": {
                                        "title": "key",
                                        "x-wrtn-placeholder": "mit",
                                        "type": "string"
                                    },
                                    "name": {
                                        "title": "name",
                                        "x-wrtn-placeholder": "MIT License",
                                        "type": "string"
                                    },
                                    "url": {
                                        "title": "url",
                                        "oneOf": [
                                            {
                                                "type": "null"
                                            },
                                            {
                                                "x-wrtn-placeholder": "https://api.github.com/licenses/mit",
                                                "type": "string"
                                            }
                                        ]
                                    },
                                    "spdx_id": {
                                        "title": "spdx_id",
                                        "x-wrtn-placeholder": "MIT",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "key",
                                    "name",
                                    "url",
                                    "spdx_id"
                                ],
                                "type": "object"
                            }
                        ]
                    },
                    "forks": {
                        "title": "forks",
                        "type": "integer"
                    },
                    "open_issues": {
                        "title": "open_issues",
                        "type": "integer"
                    },
                    "watchers": {
                        "title": "watchers",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "full_name",
                    "private",
                    "html_url",
                    "description",
                    "fork",
                    "forks_count",
                    "stargazers_count",
                    "watchers_count",
                    "size",
                    "default_branch",
                    "open_issues_count",
                    "is_template",
                    "topics",
                    "has_issues",
                    "has_projects",
                    "has_wiki",
                    "has_pages",
                    "has_downloads",
                    "archived",
                    "disabled",
                    "visibility",
                    "pushed_at",
                    "created_at",
                    "updated_at",
                    "license",
                    "forks",
                    "open_issues",
                    "watchers"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetCollaboratorOutput": {
                "properties": {
                    "result": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.Collaborator"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "true if there is a next page",
                        "description": "However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty.",
                        "type": "boolean"
                    },
                    "after": {
                        "title": "after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page.",
                        "type": "string"
                    },
                    "before": {
                        "title": "before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page.",
                        "type": "string"
                    },
                    "prev": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page.",
                        "title": "prev",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "next": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page.",
                        "title": "next",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "last": {
                        "title": "last",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page.",
                        "type": "number"
                    },
                    "first": {
                        "title": "first",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page.",
                        "type": "number"
                    }
                },
                "required": [
                    "result",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.Collaborator": {
                "properties": {
                    "type": {
                        "title": "type",
                        "oneOf": [
                            {
                                "const": "User"
                            },
                            {
                                "const": "Bot"
                            },
                            {
                                "const": "Organization"
                            }
                        ]
                    },
                    "avatar_url": {
                        "format": "iri",
                        "title": "avatar url\n\nThis means the user's profile image.",
                        "type": "string"
                    },
                    "id": {
                        "title": "id\n\nThis means the user's ID.",
                        "type": "number"
                    },
                    "login": {
                        "title": "login",
                        "description": "This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname.",
                        "type": "string"
                    },
                    "html_url": {
                        "format": "iri",
                        "title": "html_url\n\nIf you want to look up your profile, you can access this website.",
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "avatar_url",
                    "id",
                    "login",
                    "html_url"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetCollaboratorInput": {
                "properties": {
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "affiliation": {
                        "description": "Filter collaborators returned by their affiliation.\noutside means all outside collaborators of an organization-owned repository. direct means all collaborators with permissions to an organization-owned repository, regardless of organization membership status. all means all collaborators the authenticated user can see.\nIt must be one of: \"outside\", \"direct\", \"all\".",
                        "title": "affiliation",
                        "oneOf": [
                            {
                                "title": "outside",
                                "const": "outside"
                            },
                            {
                                "title": "direct",
                                "const": "direct"
                            },
                            {
                                "title": "all",
                                "const": "all"
                            }
                        ]
                    },
                    "permission": {
                        "description": "Filter collaborators by the permissions they have on the repository. If not specified, all collaborators will be returned.\nIt must be one of: \"pull\", \"triage\", \"push\", \"maintain\", \"admin\".",
                        "title": "permission",
                        "oneOf": [
                            {
                                "title": "pull",
                                "const": "pull"
                            },
                            {
                                "title": "triage",
                                "const": "triage"
                            },
                            {
                                "title": "push",
                                "const": "push"
                            },
                            {
                                "title": "maintain",
                                "const": "maintain"
                            },
                            {
                                "title": "admin",
                                "const": "admin"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "admin:org",
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IDeleteFileContentInput": {
                "properties": {
                    "message": {
                        "title": "commit message\nMany repositories are working on commit conventions. Before committing, it's a good idea to look up the commit-list to see how you leave the commit message.",
                        "type": "string"
                    },
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "path": {
                        "title": "path parameters",
                        "description": "It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "sha": {
                        "title": "sha of file content",
                        "description": "As the sha value of the file to be modified, a conflict may occur if it is not the latest sha value among the sha values of the file.\nIt's safe when you look up a list of files through API to check sha and put in a value, or want to re-modify the sha value of a file you just created.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:sha, label:path} || {value:sha, label:path}",
                            "method": "post",
                            "path": "/connector/github/repos/get-contents"
                        },
                        "type": "string"
                    },
                    "author": {
                        "properties": {
                            "name": {
                                "title": "The name of the author or committer of the commit",
                                "type": "string"
                            },
                            "email": {
                                "title": "The email of the author or committer of the commit",
                                "type": "string"
                            },
                            "date": {
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "email",
                            "date"
                        ],
                        "title": "The author of the file",
                        "description": "If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: The committer or the authenticated user if you omit committer.",
                        "type": "object"
                    },
                    "committer": {
                        "properties": {
                            "name": {
                                "title": "The name of the author or committer of the commit",
                                "type": "string"
                            },
                            "email": {
                                "title": "The email of the author or committer of the commit",
                                "type": "string"
                            },
                            "date": {
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "email",
                            "date"
                        ],
                        "title": "The person that committed the file",
                        "description": "If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: the authenticated user.",
                        "type": "object"
                    },
                    "branch": {
                        "title": "branch name\n\nThe branch name. Default: the repository’s default branch",
                        "type": "string"
                    }
                },
                "required": [
                    "message",
                    "owner",
                    "secretKey",
                    "path",
                    "repo",
                    "sha"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IUpsertFileContentOutput": {
                "properties": {
                    "content": {
                        "properties": {
                            "name": {
                                "title": "file or folder name",
                                "type": "string"
                            },
                            "path": {
                                "title": "file or folder path",
                                "type": "string"
                            },
                            "sha": {
                                "title": "sha",
                                "type": "string"
                            },
                            "size": {
                                "title": "size",
                                "type": "number"
                            }
                        },
                        "required": [
                            "name",
                            "path",
                            "sha",
                            "size"
                        ],
                        "title": "content",
                        "type": "object"
                    },
                    "commit": {
                        "properties": {
                            "sha": {
                                "title": "sha",
                                "type": "string"
                            }
                        },
                        "required": [
                            "sha"
                        ],
                        "title": "commit",
                        "type": "object"
                    }
                },
                "required": [
                    "content",
                    "commit"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IUpdateFileContentInput": {
                "properties": {
                    "sha": {
                        "title": "sha of file content",
                        "description": "As the sha value of the file to be modified, a conflict may occur if it is not the latest sha value among the sha values of the file.\nIt's safe when you look up a list of files through API to check sha and put in a value, or want to re-modify the sha value of a file you just created.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:sha, label:path} || {value:sha, label:path}",
                            "method": "post",
                            "path": "/connector/github/repos/get-contents"
                        },
                        "type": "string"
                    },
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "path": {
                        "title": "path parameters",
                        "description": "It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'.",
                        "type": "string"
                    },
                    "message": {
                        "title": "commit message\nMany repositories are working on commit conventions. Before committing, it's a good idea to look up the commit-list to see how you leave the commit message.",
                        "type": "string"
                    },
                    "content": {
                        "title": "the new file content",
                        "description": "Meaning of the file is text and text.\nIf you want to create code content, you should write code content.\nSince it encodes with base64 internally, we need to deliver text here before encoding.",
                        "type": "string"
                    },
                    "branch": {
                        "title": "branch name\n\nThe branch name. Default: the repository’s default branch",
                        "type": "string"
                    },
                    "committer": {
                        "properties": {
                            "name": {
                                "title": "The name of the author or committer of the commit",
                                "type": "string"
                            },
                            "email": {
                                "title": "The email of the author or committer of the commit",
                                "type": "string"
                            },
                            "date": {
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "email",
                            "date"
                        ],
                        "title": "The person that committed the file",
                        "description": "If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: the authenticated user.",
                        "type": "object"
                    },
                    "author": {
                        "properties": {
                            "name": {
                                "title": "The name of the author or committer of the commit",
                                "type": "string"
                            },
                            "email": {
                                "title": "The email of the author or committer of the commit",
                                "type": "string"
                            },
                            "date": {
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "email",
                            "date"
                        ],
                        "title": "The author of the file",
                        "description": "If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: The committer or the authenticated user if you omit committer.",
                        "type": "object"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "sha",
                    "owner",
                    "repo",
                    "path",
                    "message",
                    "content",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.ICreateFileContentInput": {
                "properties": {
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "path": {
                        "title": "path parameters",
                        "description": "It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'.",
                        "type": "string"
                    },
                    "message": {
                        "title": "commit message\nMany repositories are working on commit conventions. Before committing, it's a good idea to look up the commit-list to see how you leave the commit message.",
                        "type": "string"
                    },
                    "content": {
                        "title": "the new file content",
                        "description": "Meaning of the file is text and text.\nIf you want to create code content, you should write code content.\nSince it encodes with base64 internally, we need to deliver text here before encoding.",
                        "type": "string"
                    },
                    "branch": {
                        "title": "branch name\n\nThe branch name. Default: the repository’s default branch",
                        "type": "string"
                    },
                    "committer": {
                        "properties": {
                            "name": {
                                "title": "The name of the author or committer of the commit",
                                "type": "string"
                            },
                            "email": {
                                "title": "The email of the author or committer of the commit",
                                "type": "string"
                            },
                            "date": {
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "email",
                            "date"
                        ],
                        "title": "The person that committed the file",
                        "description": "If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: the authenticated user.",
                        "type": "object"
                    },
                    "author": {
                        "properties": {
                            "name": {
                                "title": "The name of the author or committer of the commit",
                                "type": "string"
                            },
                            "email": {
                                "title": "The email of the author or committer of the commit",
                                "type": "string"
                            },
                            "date": {
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "email",
                            "date"
                        ],
                        "title": "The author of the file",
                        "description": "If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: The committer or the authenticated user if you omit committer.",
                        "type": "object"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "path",
                    "message",
                    "content",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.RepositoryFolderchildrenany": {
                "properties": {
                    "type": {
                        "title": "type",
                        "const": "dir"
                    },
                    "size": {
                        "title": "Indicates the file size in bytes",
                        "const": 0
                    },
                    "name": {
                        "title": "name of this folder",
                        "type": "string"
                    },
                    "path": {
                        "title": "path\n\nIt must be unique as a path for identifying that file in the root folder.",
                        "type": "string"
                    },
                    "sha": {
                        "title": "sha",
                        "type": "string"
                    },
                    "children": {
                        "title": "children",
                        "description": "For folders, you may have other files or folders inside.\nThis should also be a folder or file type object,\nbut here, we specify it as any type to prevent it because it can be recursively infinitely large.",
                        "items": {},
                        "type": "array"
                    }
                },
                "required": [
                    "type",
                    "size",
                    "name",
                    "path",
                    "sha",
                    "children"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGithub.RepositoryFilecontentencoding": {
                "properties": {
                    "url": {
                        "title": "url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file.",
                        "type": "string"
                    },
                    "name": {
                        "title": "name of this file",
                        "type": "string"
                    },
                    "type": {
                        "const": "file"
                    },
                    "path": {
                        "title": "path\n\nIt must be unique as a path for identifying that file in the root folder.",
                        "type": "string"
                    },
                    "size": {
                        "title": "Indicates the file size in bytes",
                        "type": "number"
                    },
                    "sha": {
                        "title": "sha",
                        "type": "string"
                    },
                    "download_url": {
                        "title": "download_url\n\nThe url that allows you to download a file, which is useful if it is a media file containing an image.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "url",
                    "name",
                    "type",
                    "path",
                    "size",
                    "sha"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetRepositoryFolderStructureInput": {
                "properties": {
                    "path": {
                        "default": "",
                        "title": "folder name",
                        "description": "The path delivered is treated like a Root folder and continues the navigation from this folder.\nBrowse by this folder, and it must be a folder, not a file.\nIf omitted, start the circuit based on the top Root folder.",
                        "type": "string"
                    },
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    }
                },
                "required": [
                    "owner",
                    "secretKey",
                    "repo"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.RepositoryFolder": {
                "properties": {
                    "type": {
                        "title": "type",
                        "const": "dir"
                    },
                    "size": {
                        "title": "Indicates the file size in bytes",
                        "const": 0
                    },
                    "name": {
                        "title": "name of this folder",
                        "type": "string"
                    },
                    "path": {
                        "title": "path\n\nIt must be unique as a path for identifying that file in the root folder.",
                        "type": "string"
                    },
                    "sha": {
                        "title": "sha",
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "size",
                    "name",
                    "path",
                    "sha"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetBulkFileContentInput": {
                "properties": {
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "paths": {
                        "title": "path parameters",
                        "description": "It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "branch": {
                        "title": "branch name",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetFileContentInput": {
                "properties": {
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "path": {
                        "title": "path parameters",
                        "description": "It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'.",
                        "type": "string"
                    },
                    "branch": {
                        "title": "branch name",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetReadmeFileContentInput": {
                "properties": {
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    }
                },
                "required": [
                    "owner",
                    "secretKey",
                    "repo"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetRepoEventInput": {
                "properties": {
                    "repo": {
                        "title": "The name of the repository",
                        "type": "string"
                    },
                    "username": {
                        "title": "user's nickname",
                        "type": "string"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "repo",
                    "username",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetUserEventInput": {
                "properties": {
                    "username": {
                        "title": "user's nickname",
                        "type": "string"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "username",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetUserOrganizationOutput": {
                "properties": {
                    "result": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.Organization"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "true if there is a next page",
                        "description": "However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty.",
                        "type": "boolean"
                    },
                    "after": {
                        "title": "after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page.",
                        "type": "string"
                    },
                    "before": {
                        "title": "before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page.",
                        "type": "string"
                    },
                    "prev": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page.",
                        "title": "prev",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "next": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page.",
                        "title": "next",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "last": {
                        "title": "last",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page.",
                        "type": "number"
                    },
                    "first": {
                        "title": "first",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page.",
                        "type": "number"
                    }
                },
                "required": [
                    "result",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.Organization": {
                "properties": {
                    "id": {
                        "title": "id",
                        "type": "number"
                    },
                    "login": {
                        "title": "login",
                        "type": "string"
                    },
                    "display_login": {
                        "title": "display_login",
                        "type": "string"
                    },
                    "description": {
                        "title": "description",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "login"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetUserOrganizationInput": {
                "properties": {
                    "username": {
                        "title": "user's nickname",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "user"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    }
                },
                "required": [
                    "username",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetEventInput": {
                "properties": {
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetRepositoryActivityOutput": {
                "properties": {
                    "result": {
                        "title": "result of repository activities",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.Activity"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "true if there is a next page",
                        "description": "However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty.",
                        "type": "boolean"
                    },
                    "after": {
                        "title": "after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page.",
                        "type": "string"
                    },
                    "before": {
                        "title": "before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page.",
                        "type": "string"
                    },
                    "prev": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page.",
                        "title": "prev",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "next": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page.",
                        "title": "next",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "last": {
                        "title": "last",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page.",
                        "type": "number"
                    },
                    "first": {
                        "title": "first",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page.",
                        "type": "number"
                    }
                },
                "required": [
                    "result",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.Activity": {
                "properties": {
                    "id": {
                        "title": "id",
                        "type": "number"
                    },
                    "ref": {
                        "title": "ref",
                        "x-wrtn-placeholder": "refs/heads/main",
                        "type": "string"
                    },
                    "timestamp": {
                        "format": "date-time",
                        "title": "timestamp",
                        "type": "string"
                    },
                    "activity_type": {
                        "title": "activity type",
                        "oneOf": [
                            {
                                "title": "push",
                                "const": "push"
                            },
                            {
                                "title": "force_push",
                                "const": "force_push"
                            },
                            {
                                "title": "branch_creation",
                                "const": "branch_creation"
                            },
                            {
                                "title": "branch_deletion",
                                "const": "branch_deletion"
                            },
                            {
                                "title": "pr_merge",
                                "const": "pr_merge"
                            },
                            {
                                "title": "merge_queue_merge",
                                "const": "merge_queue_merge"
                            }
                        ]
                    },
                    "actor": {
                        "title": "actor",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Usertypeavatar_urlidlogin"
                    }
                },
                "required": [
                    "id",
                    "ref",
                    "timestamp",
                    "activity_type",
                    "actor"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIGithub.Usertypeavatar_urlidlogin": {
                "properties": {
                    "type": {
                        "title": "type",
                        "oneOf": [
                            {
                                "const": "User"
                            },
                            {
                                "const": "Bot"
                            },
                            {
                                "const": "Organization"
                            }
                        ]
                    },
                    "avatar_url": {
                        "format": "iri",
                        "title": "avatar url\n\nThis means the user's profile image.",
                        "type": "string"
                    },
                    "id": {
                        "title": "id\n\nThis means the user's ID.",
                        "type": "number"
                    },
                    "login": {
                        "title": "login",
                        "description": "This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname.",
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "avatar_url",
                    "id",
                    "login"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetRepositoryActivityInput": {
                "properties": {
                    "direction": {
                        "description": "The order to sort by.\nDefault: asc when using full_name, otherwise desc.",
                        "title": "direction",
                        "oneOf": [
                            {
                                "const": "desc"
                            },
                            {
                                "const": "asc"
                            }
                        ]
                    },
                    "before": {
                        "title": "before",
                        "description": "A cursor, as given in the Link header.\nIf specified, the query only searches for results before this cursor.",
                        "type": "string"
                    },
                    "after": {
                        "title": "after",
                        "description": "A cursor, as given in the Link header.\nIf specified, the query only searches for results after this cursor.",
                        "type": "string"
                    },
                    "owner": {
                        "title": "user's nickname",
                        "type": "string"
                    },
                    "repo": {
                        "title": "The name of the repository",
                        "type": "string"
                    },
                    "ref": {
                        "title": "ref\n\nThe name of one of the branches of this repository.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "result[].{value:name, label:name}",
                            "method": "post",
                            "path": "/connector/github/get-branches"
                        },
                        "type": "string"
                    },
                    "actor": {
                        "title": "username",
                        "type": "string"
                    },
                    "time_period": {
                        "title": "time_period",
                        "oneOf": [
                            {
                                "const": "day"
                            },
                            {
                                "const": "week"
                            },
                            {
                                "const": "month"
                            },
                            {
                                "const": "quarter"
                            },
                            {
                                "const": "year"
                            }
                        ]
                    },
                    "activity_type": {
                        "title": "activity_type",
                        "oneOf": [
                            {
                                "title": "push",
                                "const": "push"
                            },
                            {
                                "title": "force_push",
                                "const": "force_push"
                            },
                            {
                                "title": "branch_creation",
                                "const": "branch_creation"
                            },
                            {
                                "title": "branch_deletion",
                                "const": "branch_deletion"
                            },
                            {
                                "title": "pr_merge",
                                "const": "pr_merge"
                            },
                            {
                                "title": "merge_queue_merge",
                                "const": "merge_queue_merge"
                            }
                        ]
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IUpdatePullRequestOutput": {
                "properties": {
                    "number": {
                        "title": "number of this pull request",
                        "type": "integer"
                    },
                    "title": {
                        "description": "Title of the issue",
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "number",
                    "title",
                    "id"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IUpdatePullRequestInput": {
                "properties": {
                    "pull_number": {
                        "title": "pull request number to update",
                        "oneOf": [
                            {
                                "minimum": 1,
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "pullRequests[].{value:number, label:title}",
                                    "method": "post",
                                    "path": "/connector/repositories/get-pull-requests"
                                },
                                "type": "integer"
                            },
                            {
                                "minimum": 1,
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "pullRequests[].{value:number, label:number}",
                                    "method": "post",
                                    "path": "/connector/repositories/pull-requests"
                                },
                                "type": "integer"
                            }
                        ]
                    },
                    "state": {
                        "description": "State of this Pull Request. Either open or closed.\nCan be one of: open, closed",
                        "title": "state",
                        "oneOf": [
                            {
                                "title": "open",
                                "const": "open"
                            },
                            {
                                "title": "closed",
                                "const": "closed"
                            }
                        ]
                    },
                    "base": {
                        "title": "base\n\nThe name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository.",
                        "type": "string"
                    },
                    "head": {
                        "title": "head\n\nThe name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace head with a user like this: username:branch.",
                        "type": "string"
                    },
                    "title": {
                        "title": "title\n\nThe title of the new pull request. Required unless issue is specified.",
                        "type": "string"
                    },
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "body": {
                        "title": "body\n\nThe contents of the pull request.",
                        "type": "string"
                    },
                    "head_repo": {
                        "title": "head_repo\n\nThe name of the repository where the changes in the pull request were made. This field is required for cross-repository pull requests if both repositories are owned by the same organization.",
                        "type": "string"
                    },
                    "maintainer_can_modify": {
                        "title": "maintainer_can_modify\n\nIndicates whether maintainers can modify the pull request.",
                        "type": "boolean"
                    },
                    "draft": {
                        "title": "draft\n\nIndicates whether the pull request is a draft. See \"Draft Pull Requests\" in the GitHub Help documentation to learn more.",
                        "type": "boolean"
                    },
                    "issue": {
                        "title": "issue\n\nAn issue in the repository to convert to a pull request. The issue title, body, and comments will become the title, body, and comments on the new pull request. Required unless title is specified.",
                        "type": "number"
                    },
                    "labels": {
                        "title": "labels",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "pull_number",
                    "owner",
                    "secretKey",
                    "repo"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.ICreatePullRequestOutput": {
                "properties": {
                    "number": {
                        "title": "number of this pull request",
                        "type": "integer"
                    },
                    "title": {
                        "description": "Title of the issue",
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "number",
                    "title",
                    "id"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.ICreatePullRequestInput": {
                "properties": {
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "title": {
                        "title": "title\n\nThe title of the new pull request. Required unless issue is specified.",
                        "type": "string"
                    },
                    "head": {
                        "title": "head\n\nThe name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace head with a user like this: username:branch.",
                        "type": "string"
                    },
                    "head_repo": {
                        "title": "head_repo\n\nThe name of the repository where the changes in the pull request were made. This field is required for cross-repository pull requests if both repositories are owned by the same organization.",
                        "type": "string"
                    },
                    "base": {
                        "title": "base\n\nThe name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository.",
                        "type": "string"
                    },
                    "body": {
                        "title": "body\n\nThe contents of the pull request.",
                        "type": "string"
                    },
                    "maintainer_can_modify": {
                        "title": "maintainer_can_modify\n\nIndicates whether maintainers can modify the pull request.",
                        "type": "boolean"
                    },
                    "draft": {
                        "title": "draft\n\nIndicates whether the pull request is a draft. See \"Draft Pull Requests\" in the GitHub Help documentation to learn more.",
                        "type": "boolean"
                    },
                    "issue": {
                        "title": "issue\n\nAn issue in the repository to convert to a pull request. The issue title, body, and comments will become the title, body, and comments on the new pull request. Required unless title is specified.",
                        "type": "number"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "head",
                    "base",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetIssueCommentsOutput": {
                "properties": {
                    "result": {
                        "title": "issue comments",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.IssueComment"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "true if there is a next page",
                        "description": "However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty.",
                        "type": "boolean"
                    },
                    "after": {
                        "title": "after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page.",
                        "type": "string"
                    },
                    "before": {
                        "title": "before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page.",
                        "type": "string"
                    },
                    "prev": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page.",
                        "title": "prev",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "next": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page.",
                        "title": "next",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "last": {
                        "title": "last",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page.",
                        "type": "number"
                    },
                    "first": {
                        "title": "first",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page.",
                        "type": "number"
                    }
                },
                "required": [
                    "result",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IssueComment": {
                "properties": {
                    "issue_url": {
                        "format": "iri",
                        "title": "issue_url",
                        "type": "string"
                    },
                    "author_association": {
                        "title": "author_association",
                        "oneOf": [
                            {
                                "const": "COLLABORATOR"
                            },
                            {
                                "const": "CONTRIBUTOR"
                            },
                            {
                                "const": "FIRST_TIMER"
                            },
                            {
                                "const": "FIRST_TIME_CONTRIBUTOR"
                            },
                            {
                                "const": "MANNEQUIN"
                            },
                            {
                                "const": "MEMBER"
                            },
                            {
                                "const": "NONE"
                            },
                            {
                                "const": "OWNER"
                            }
                        ]
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "created_at",
                        "type": "string"
                    },
                    "updated_at": {
                        "format": "date-time",
                        "title": "updated_at",
                        "type": "string"
                    },
                    "user": {
                        "title": "user",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Usertypeavatar_urlidloginhtml_url"
                    },
                    "id": {
                        "title": "id",
                        "type": "integer"
                    },
                    "body": {
                        "title": "body",
                        "type": "string"
                    }
                },
                "required": [
                    "issue_url",
                    "author_association",
                    "created_at",
                    "updated_at",
                    "user",
                    "id"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetPullRequestCommentsInput": {
                "properties": {
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "pull_number": {
                        "title": "pull request number to update",
                        "oneOf": [
                            {
                                "minimum": 1,
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "pullRequests[].{value:number, label:title}",
                                    "method": "post",
                                    "path": "/connector/repositories/get-pull-requests"
                                },
                                "type": "integer"
                            },
                            {
                                "minimum": 1,
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "pullRequests[].{value:number, label:number}",
                                    "method": "post",
                                    "path": "/connector/repositories/pull-requests"
                                },
                                "type": "integer"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "pull_number",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.ICreateIssueCommentInput": {
                "properties": {
                    "body": {
                        "title": "The contents of the comment",
                        "type": "string"
                    },
                    "issue_number": {
                        "title": "issue number to get detailed info",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "fetchedIssues[].{value:number, label:title}",
                            "method": "post",
                            "path": "/connector/github/repositories/get-issues"
                        },
                        "type": "integer"
                    },
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "body",
                    "issue_number",
                    "owner",
                    "repo",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IReadPullRequestRequestedReviewerOutput": {
                "properties": {
                    "users": {
                        "title": "requested reviewers",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.Collaborator"
                        },
                        "type": "array"
                    },
                    "teams": {
                        "title": "team",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Teamdescriptionnameslugidnotification_settingpermissionprivacy"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "users",
                    "teams"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIGithub.Teamdescriptionnameslugidnotification_settingpermissionprivacy": {
                "properties": {
                    "description": {
                        "title": "description",
                        "type": "string"
                    },
                    "name": {
                        "title": "name",
                        "type": "string"
                    },
                    "slug": {
                        "title": "slug",
                        "type": "string"
                    },
                    "id": {
                        "title": "id",
                        "type": "number"
                    },
                    "notification_setting": {
                        "title": "notification_setting",
                        "type": "string"
                    },
                    "permission": {
                        "title": "permission",
                        "type": "string"
                    },
                    "privacy": {
                        "title": "privacy",
                        "oneOf": [
                            {
                                "const": "closed"
                            },
                            {
                                "const": "open"
                            }
                        ]
                    }
                },
                "required": [
                    "description",
                    "name",
                    "slug",
                    "id",
                    "notification_setting",
                    "permission",
                    "privacy"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IReadPullRequestDetailInput": {
                "properties": {
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "pull_number": {
                        "title": "pull request number to update",
                        "oneOf": [
                            {
                                "minimum": 1,
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "pullRequests[].{value:number, label:title}",
                                    "method": "post",
                                    "path": "/connector/repositories/get-pull-requests"
                                },
                                "type": "integer"
                            },
                            {
                                "minimum": 1,
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "pullRequests[].{value:number, label:number}",
                                    "method": "post",
                                    "path": "/connector/repositories/pull-requests"
                                },
                                "type": "integer"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "pull_number",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IRequestReviewerInput": {
                "properties": {
                    "reviewers": {
                        "items": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "result[].{value:login, label:login}",
                                "method": "post",
                                "path": "/connector/github/repos/get-collaborators"
                            },
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "team_reviewers": {
                        "title": "team_reviewers\nAn array of team slugs that will be requested.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "pull_number": {
                        "title": "pull request number to update",
                        "oneOf": [
                            {
                                "minimum": 1,
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "pullRequests[].{value:number, label:title}",
                                    "method": "post",
                                    "path": "/connector/repositories/get-pull-requests"
                                },
                                "type": "integer"
                            },
                            {
                                "minimum": 1,
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "pullRequests[].{value:number, label:number}",
                                    "method": "post",
                                    "path": "/connector/repositories/pull-requests"
                                },
                                "type": "integer"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "pull_number",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetReviewCommentOutput": {
                "properties": {
                    "result": {
                        "title": "result",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.ReviewComment"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "true if there is a next page",
                        "description": "However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty.",
                        "type": "boolean"
                    },
                    "after": {
                        "title": "after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page.",
                        "type": "string"
                    },
                    "before": {
                        "title": "before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page.",
                        "type": "string"
                    },
                    "prev": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page.",
                        "title": "prev",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "next": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page.",
                        "title": "next",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "last": {
                        "title": "last",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page.",
                        "type": "number"
                    },
                    "first": {
                        "title": "first",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page.",
                        "type": "number"
                    }
                },
                "required": [
                    "result",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.ReviewComment": {
                "properties": {
                    "pull_request_review_id": {
                        "title": "pull_request_review_id",
                        "type": "integer"
                    },
                    "diff_hunk": {
                        "title": "diff_hunk",
                        "description": "diff_hunk is a form for representing a change in code in github.\nIt consists of strings, and the first line, based on the new line character,\nhas meta information about the change point between the symbols",
                        "type": "string"
                    },
                    "path": {
                        "title": "path",
                        "type": "string"
                    },
                    "position": {
                        "description": "The position in the diff where you want to add a review comment.\nNote this value is not the same as the line number in the file.\nThe position value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment.\nThe line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.\n\nPosition value, which is the number of rows based on diff_hunk.",
                        "title": "position",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "integer"
                            }
                        ]
                    },
                    "original_position": {
                        "title": "original_position\n\nOriginal position value, which is the number of rows based on diff_hunk.",
                        "type": "integer"
                    },
                    "commit_id": {
                        "title": "commit_id",
                        "type": "string"
                    },
                    "original_commit_id": {
                        "title": "original_commit_id",
                        "type": "string"
                    },
                    "in_reply_to_id": {
                        "title": "in_reply_to_id\n\nIn_reply_to_id is a field used by GitHub's review or comment API that is used to write a reply to a particular review or comment.",
                        "type": "integer"
                    },
                    "user": {
                        "title": "user",
                        "$ref": "#/components/schemas/_namespace_swagger.IGithub.Collaborator"
                    },
                    "html_url": {
                        "format": "iri",
                        "title": "html_url",
                        "type": "string"
                    },
                    "author_association": {
                        "title": "author_association",
                        "oneOf": [
                            {
                                "const": "COLLABORATOR"
                            },
                            {
                                "const": "CONTRIBUTOR"
                            },
                            {
                                "const": "FIRST_TIMER"
                            },
                            {
                                "const": "FIRST_TIME_CONTRIBUTOR"
                            },
                            {
                                "const": "MANNEQUIN"
                            },
                            {
                                "const": "MEMBER"
                            },
                            {
                                "const": "NONE"
                            },
                            {
                                "const": "OWNER"
                            }
                        ]
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "created_at",
                        "type": "string"
                    },
                    "updated_at": {
                        "format": "date-time",
                        "title": "updated_at",
                        "type": "string"
                    },
                    "id": {
                        "title": "id",
                        "type": "integer"
                    },
                    "body": {
                        "title": "body",
                        "type": "string"
                    }
                },
                "required": [
                    "pull_request_review_id",
                    "diff_hunk",
                    "path",
                    "position",
                    "original_position",
                    "commit_id",
                    "original_commit_id",
                    "user",
                    "html_url",
                    "author_association",
                    "created_at",
                    "updated_at",
                    "id"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetReviewCommentInput": {
                "properties": {
                    "review_id": {
                        "title": "review_id",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "result[].{value:id, label: join('', [user.login, ''s review'])}",
                            "method": "post",
                            "path": "/connector/repositories/pull-requests/get-reviews"
                        },
                        "type": "integer"
                    },
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "pull_number": {
                        "title": "pull request number to update",
                        "oneOf": [
                            {
                                "minimum": 1,
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "pullRequests[].{value:number, label:title}",
                                    "method": "post",
                                    "path": "/connector/repositories/get-pull-requests"
                                },
                                "type": "integer"
                            },
                            {
                                "minimum": 1,
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "pullRequests[].{value:number, label:number}",
                                    "method": "post",
                                    "path": "/connector/repositories/pull-requests"
                                },
                                "type": "integer"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    }
                },
                "required": [
                    "review_id",
                    "owner",
                    "repo",
                    "pull_number",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IReadPullRequestReviewOutput": {
                "properties": {
                    "result": {
                        "title": "commit list of this pull request",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.Review"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "true if there is a next page",
                        "description": "However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty.",
                        "type": "boolean"
                    },
                    "after": {
                        "title": "after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page.",
                        "type": "string"
                    },
                    "before": {
                        "title": "before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page.",
                        "type": "string"
                    },
                    "prev": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page.",
                        "title": "prev",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "next": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page.",
                        "title": "next",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "last": {
                        "title": "last",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page.",
                        "type": "number"
                    },
                    "first": {
                        "title": "first",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page.",
                        "type": "number"
                    }
                },
                "required": [
                    "result",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.Review": {
                "properties": {
                    "id": {
                        "title": "id",
                        "type": "integer"
                    },
                    "user": {
                        "title": "reviewer",
                        "$ref": "#/components/schemas/_namespace_swagger.IGithub.Collaborator"
                    },
                    "body": {
                        "title": "body",
                        "type": "string"
                    },
                    "state": {
                        "title": "state",
                        "x-wrtn-placeholder": "APPROVED",
                        "type": "string"
                    },
                    "html_url": {
                        "format": "iri",
                        "title": "html_url",
                        "type": "string"
                    },
                    "pull_request_url": {
                        "format": "iri",
                        "title": "pull_request_url",
                        "type": "string"
                    },
                    "submitted_at": {
                        "format": "date-time",
                        "title": "submitted_at",
                        "type": "string"
                    },
                    "commit_id": {
                        "description": "A commit SHA for the review.\nIf the commit object was garbage collected or forcibly deleted, then it no longer exists in Git and this value will be `null`.",
                        "title": "commit_id",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "author_association": {
                        "title": "author_association",
                        "oneOf": [
                            {
                                "const": "COLLABORATOR"
                            },
                            {
                                "const": "CONTRIBUTOR"
                            },
                            {
                                "const": "FIRST_TIMER"
                            },
                            {
                                "const": "FIRST_TIME_CONTRIBUTOR"
                            },
                            {
                                "const": "MANNEQUIN"
                            },
                            {
                                "const": "MEMBER"
                            },
                            {
                                "const": "NONE"
                            },
                            {
                                "const": "OWNER"
                            }
                        ]
                    }
                },
                "required": [
                    "id",
                    "user",
                    "body",
                    "state",
                    "html_url",
                    "pull_request_url",
                    "commit_id",
                    "author_association"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IReadPullRequestReviewInput": {
                "properties": {
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "pull_number": {
                        "title": "pull request number to update",
                        "oneOf": [
                            {
                                "minimum": 1,
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "pullRequests[].{value:number, label:title}",
                                    "method": "post",
                                    "path": "/connector/repositories/get-pull-requests"
                                },
                                "type": "integer"
                            },
                            {
                                "minimum": 1,
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "pullRequests[].{value:number, label:number}",
                                    "method": "post",
                                    "path": "/connector/repositories/pull-requests"
                                },
                                "type": "integer"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "pull_number",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IReviewPullRequestOutput": {
                "properties": {
                    "id": {
                        "title": "id",
                        "type": "integer"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IReviewPullRequestInput": {
                "properties": {
                    "commit_id": {
                        "title": "commit_id",
                        "description": "The SHA of the commit that needs a review.\nNot using the latest commit SHA may render your review comment outdated if a subsequent commit modifies the line you specify as the position.\nDefaults to the most recent commit in the pull request when you do not specify a value.",
                        "type": "string"
                    },
                    "body": {
                        "title": "body",
                        "description": "Required when using REQUEST_CHANGES or COMMENT for the event parameter.\nThe body text of the pull request review.",
                        "type": "string"
                    },
                    "event": {
                        "description": "The review action you want to perform.\nThe review actions include: APPROVE, REQUEST_CHANGES, or COMMENT.\nBy leaving this blank, you set the review action state to PENDING, which means you will need to submit the pull request review when you are ready.",
                        "title": "event",
                        "oneOf": [
                            {
                                "title": "APPROVE",
                                "const": "APPROVE"
                            },
                            {
                                "title": "REQUEST_CHANGES",
                                "const": "REQUEST_CHANGES"
                            },
                            {
                                "title": "COMMENT",
                                "const": "COMMENT"
                            }
                        ]
                    },
                    "comments": {
                        "title": "comments\n\nUse the following table to specify the location, destination, and contents of the draft review comment.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.IPullRequestComment"
                        },
                        "type": "array"
                    },
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "pull_number": {
                        "title": "pull request number to update",
                        "oneOf": [
                            {
                                "minimum": 1,
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "pullRequests[].{value:number, label:title}",
                                    "method": "post",
                                    "path": "/connector/repositories/get-pull-requests"
                                },
                                "type": "integer"
                            },
                            {
                                "minimum": 1,
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "pullRequests[].{value:number, label:number}",
                                    "method": "post",
                                    "path": "/connector/repositories/pull-requests"
                                },
                                "type": "integer"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "pull_number",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IPullRequestComment": {
                "properties": {
                    "line": {
                        "type": "integer"
                    },
                    "side": {
                        "type": "string"
                    },
                    "start_line": {
                        "type": "integer"
                    },
                    "start_side": {
                        "type": "string"
                    },
                    "position": {
                        "description": "The position in the diff where you want to add a review comment.\nNote this value is not the same as the line number in the file.\nThe position value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment.\nThe line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.\n\nPosition value, which is the number of rows based on diff_hunk.",
                        "title": "position",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "integer"
                            }
                        ]
                    },
                    "path": {
                        "title": "path",
                        "type": "string"
                    },
                    "body": {
                        "title": "body",
                        "type": "string"
                    }
                },
                "required": [
                    "line",
                    "side",
                    "start_line",
                    "start_side",
                    "position",
                    "path"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IReadPullRequestFileOutput": {
                "properties": {
                    "result": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.File"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "true if there is a next page",
                        "description": "However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty.",
                        "type": "boolean"
                    },
                    "after": {
                        "title": "after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page.",
                        "type": "string"
                    },
                    "before": {
                        "title": "before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page.",
                        "type": "string"
                    },
                    "prev": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page.",
                        "title": "prev",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "next": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page.",
                        "title": "next",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "last": {
                        "title": "last",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page.",
                        "type": "number"
                    },
                    "first": {
                        "title": "first",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page.",
                        "type": "number"
                    }
                },
                "required": [
                    "result",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.File": {
                "properties": {
                    "sha": {
                        "title": "hash of this file",
                        "type": "string"
                    },
                    "filename": {
                        "title": "filename",
                        "type": "string"
                    },
                    "status": {
                        "title": "status of file in this commit",
                        "oneOf": [
                            {
                                "const": "added"
                            },
                            {
                                "const": "removed"
                            },
                            {
                                "const": "modified"
                            },
                            {
                                "const": "renamed"
                            },
                            {
                                "const": "copied"
                            },
                            {
                                "const": "changed"
                            },
                            {
                                "const": "unchanged"
                            }
                        ]
                    },
                    "additions": {
                        "title": "additions",
                        "type": "integer"
                    },
                    "deletions": {
                        "title": "deletions",
                        "type": "integer"
                    },
                    "changes": {
                        "title": "changes",
                        "type": "integer"
                    },
                    "blob_url": {
                        "format": "iri",
                        "title": "blob_url\n\nThis is the path through which you can view the file through the github website.",
                        "type": "string"
                    },
                    "raw_url": {
                        "format": "iri",
                        "title": "raw_url\n\nThe API path through which the contents of the file can be viewed.",
                        "type": "string"
                    },
                    "patch": {
                        "title": "patch",
                        "description": "It means how much it has changed compared to previous commitments.\nIt gives you a text form to see what code has actually changed.",
                        "type": "string"
                    }
                },
                "required": [
                    "sha",
                    "filename",
                    "status",
                    "additions",
                    "deletions",
                    "changes",
                    "blob_url",
                    "raw_url"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IReadPullRequestFileInput": {
                "properties": {
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "pull_number": {
                        "title": "pull request number to update",
                        "oneOf": [
                            {
                                "minimum": 1,
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "pullRequests[].{value:number, label:title}",
                                    "method": "post",
                                    "path": "/connector/repositories/get-pull-requests"
                                },
                                "type": "integer"
                            },
                            {
                                "minimum": 1,
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "pullRequests[].{value:number, label:number}",
                                    "method": "post",
                                    "path": "/connector/repositories/pull-requests"
                                },
                                "type": "integer"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "pull_number",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IReadPullRequestCommitOutput": {
                "properties": {
                    "result": {
                        "title": "commit list of this pull request",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGithub.Commitsha"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "true if there is a next page",
                        "description": "However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty.",
                        "type": "boolean"
                    },
                    "after": {
                        "title": "after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page.",
                        "type": "string"
                    },
                    "before": {
                        "title": "before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page.",
                        "type": "string"
                    },
                    "prev": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page.",
                        "title": "prev",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "next": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page.",
                        "title": "next",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "last": {
                        "title": "last",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page.",
                        "type": "number"
                    },
                    "first": {
                        "title": "first",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page.",
                        "type": "number"
                    }
                },
                "required": [
                    "result",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGithub.Commitsha": {
                "properties": {
                    "message": {
                        "title": "commit message",
                        "type": "string"
                    },
                    "url": {
                        "format": "iri",
                        "title": "uri\n\nuri to look up details of commitment",
                        "type": "string"
                    },
                    "author": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "date": {
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "email",
                            "date"
                        ],
                        "title": "author",
                        "type": "object"
                    },
                    "committer": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "date": {
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "email",
                            "date"
                        ],
                        "title": "committer",
                        "type": "object"
                    },
                    "tree": {
                        "properties": {
                            "sha": {
                                "type": "string"
                            },
                            "url": {
                                "format": "iri",
                                "type": "string"
                            }
                        },
                        "required": [
                            "sha",
                            "url"
                        ],
                        "type": "object"
                    },
                    "comment_count": {
                        "type": "integer"
                    }
                },
                "required": [
                    "message",
                    "url",
                    "author",
                    "committer",
                    "tree",
                    "comment_count"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IReadPullRequestCommitInput": {
                "properties": {
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "pull_number": {
                        "title": "pull request number to update",
                        "oneOf": [
                            {
                                "minimum": 1,
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "pullRequests[].{value:number, label:title}",
                                    "method": "post",
                                    "path": "/connector/repositories/get-pull-requests"
                                },
                                "type": "integer"
                            },
                            {
                                "minimum": 1,
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "pullRequests[].{value:number, label:number}",
                                    "method": "post",
                                    "path": "/connector/repositories/pull-requests"
                                },
                                "type": "integer"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "pull_number",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.PullRequest": {
                "properties": {
                    "number": {
                        "title": "number of this pull request",
                        "type": "integer"
                    },
                    "milestone": {
                        "title": "milestone",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.MileStone"
                            }
                        ]
                    },
                    "head": {
                        "properties": {
                            "label": {
                                "title": "label",
                                "type": "string"
                            },
                            "ref": {
                                "title": "ref",
                                "type": "string"
                            },
                            "sha": {
                                "title": "sha",
                                "type": "string"
                            },
                            "user": {
                                "title": "user",
                                "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Usertypeidlogin"
                            },
                            "repo": {
                                "title": "repo",
                                "oneOf": [
                                    {
                                        "type": "null"
                                    },
                                    {
                                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Repositoryfull_name"
                                    }
                                ]
                            }
                        },
                        "required": [
                            "label",
                            "ref",
                            "sha",
                            "user",
                            "repo"
                        ],
                        "title": "head branch info",
                        "type": "object"
                    },
                    "base": {
                        "properties": {
                            "label": {
                                "title": "label",
                                "type": "string"
                            },
                            "ref": {
                                "title": "ref",
                                "type": "string"
                            },
                            "sha": {
                                "title": "sha",
                                "type": "string"
                            },
                            "user": {
                                "title": "user",
                                "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Usertypeidlogin"
                            },
                            "repo": {
                                "title": "repo",
                                "oneOf": [
                                    {
                                        "type": "null"
                                    },
                                    {
                                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Repositoryfull_name"
                                    }
                                ]
                            }
                        },
                        "required": [
                            "label",
                            "ref",
                            "sha",
                            "user",
                            "repo"
                        ],
                        "title": "base branch info",
                        "type": "object"
                    },
                    "author_association": {
                        "title": "author_association",
                        "oneOf": [
                            {
                                "const": "COLLABORATOR"
                            },
                            {
                                "const": "CONTRIBUTOR"
                            },
                            {
                                "const": "FIRST_TIMER"
                            },
                            {
                                "const": "FIRST_TIME_CONTRIBUTOR"
                            },
                            {
                                "const": "MANNEQUIN"
                            },
                            {
                                "const": "MEMBER"
                            },
                            {
                                "const": "NONE"
                            },
                            {
                                "const": "OWNER"
                            }
                        ]
                    },
                    "draft": {
                        "title": "draft\n\nIndicates whether or not the pull request is a draft.",
                        "type": "boolean"
                    },
                    "requested_reviewers": {
                        "title": "requested_reviewers",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Usertypeidlogin"
                        },
                        "type": "array"
                    },
                    "requested_teams": {
                        "title": "requested_teams",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.PartialIGithub.Team"
                        },
                        "type": "array"
                    },
                    "auto_merge": {
                        "title": "auto_merge"
                    },
                    "merged": {
                        "title": "merged",
                        "type": "boolean"
                    },
                    "mergeable": {
                        "title": "mergeable",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "boolean"
                            }
                        ]
                    },
                    "rebaseable": {
                        "title": "rebaseable",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "boolean"
                            }
                        ]
                    },
                    "mergeable_state": {
                        "title": "mergeable_state",
                        "type": "string"
                    },
                    "merged_by": {
                        "title": "merged_by",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Usertypeidlogin"
                            }
                        ]
                    },
                    "maintainer_can_modify": {
                        "title": "maintainer_can_modify",
                        "type": "boolean"
                    },
                    "comments": {
                        "minimum": 0,
                        "title": "comments",
                        "type": "integer"
                    },
                    "review_comments": {
                        "minimum": 0,
                        "title": "review_comments",
                        "type": "integer"
                    },
                    "commits": {
                        "minimum": 0,
                        "title": "commits",
                        "type": "integer"
                    },
                    "additions": {
                        "minimum": 0,
                        "title": "additions",
                        "type": "integer"
                    },
                    "deletions": {
                        "minimum": 0,
                        "title": "deletions",
                        "type": "integer"
                    },
                    "changed_files": {
                        "minimum": 0,
                        "title": "changed_files",
                        "type": "integer"
                    },
                    "locked": {
                        "title": "locked",
                        "type": "boolean"
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "created_at",
                        "type": "string"
                    },
                    "updated_at": {
                        "format": "date-time",
                        "title": "updated_at",
                        "type": "string"
                    },
                    "closed_at": {
                        "title": "closed_at",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "date-time",
                                "type": "string"
                            }
                        ]
                    },
                    "merged_at": {
                        "title": "merged_at",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "date-time",
                                "type": "string"
                            }
                        ]
                    },
                    "id": {
                        "type": "integer"
                    },
                    "html_url": {
                        "format": "iri",
                        "title": "html_url",
                        "description": "If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path.",
                        "type": "string"
                    },
                    "state": {
                        "title": "state\n\nState of the issue; either 'open' or 'closed'",
                        "type": "string"
                    },
                    "state_reason": {
                        "description": "The reason for the current state",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "const": "completed"
                            },
                            {
                                "const": "reopened"
                            },
                            {
                                "const": "not_planned"
                            }
                        ]
                    },
                    "title": {
                        "description": "Title of the issue",
                        "type": "string"
                    },
                    "user": {
                        "title": "user",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Usertypeidlogin"
                    },
                    "body": {
                        "description": "Contents of the issue\n\nYou can also render this content because it is in a markdown format.",
                        "title": "body",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "labels": {
                        "title": "labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "url": {
                                            "format": "iri",
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "oneOf": [
                                                {
                                                    "type": "null"
                                                },
                                                {
                                                    "type": "string"
                                                }
                                            ]
                                        },
                                        "color": {
                                            "oneOf": [
                                                {
                                                    "type": "null"
                                                },
                                                {
                                                    "type": "string"
                                                }
                                            ]
                                        },
                                        "default": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "assignee": {
                        "title": "assignee",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Userlogin"
                            }
                        ]
                    },
                    "assignees": {
                        "title": "assignees\n\nIf there are many people in charge, you can be included in the array.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Userlogin"
                                },
                                "type": "array"
                            }
                        ]
                    }
                },
                "required": [
                    "number",
                    "milestone",
                    "head",
                    "base",
                    "author_association",
                    "requested_reviewers",
                    "requested_teams",
                    "auto_merge",
                    "mergeable",
                    "rebaseable",
                    "mergeable_state",
                    "merged_by",
                    "maintainer_can_modify",
                    "comments",
                    "review_comments",
                    "commits",
                    "additions",
                    "deletions",
                    "changed_files",
                    "locked",
                    "created_at",
                    "updated_at",
                    "closed_at",
                    "merged_at",
                    "id",
                    "html_url",
                    "state",
                    "title",
                    "user",
                    "labels",
                    "assignee"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.MileStone": {
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "number": {
                        "type": "number"
                    },
                    "state": {
                        "oneOf": [
                            {
                                "const": "closed"
                            },
                            {
                                "const": "open"
                            }
                        ]
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Usertypeidlogin"
                    },
                    "open_issues": {
                        "minimum": 0,
                        "type": "integer"
                    },
                    "closed_issues": {
                        "minimum": 0,
                        "type": "integer"
                    },
                    "created_at": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updated_at": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "closed_at": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "due_on": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "number",
                    "state",
                    "title",
                    "description",
                    "creator",
                    "open_issues",
                    "closed_issues",
                    "created_at",
                    "updated_at",
                    "closed_at",
                    "due_on"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIGithub.Repositoryfull_name": {
                "properties": {
                    "full_name": {
                        "title": "full_name\n\nThis is in the form '{username}/{reponame}'.",
                        "type": "string"
                    }
                },
                "required": [
                    "full_name"
                ],
                "type": "object"
            },
            "_namespace_swagger.PartialIGithub.Team": {
                "properties": {
                    "id": {
                        "title": "id",
                        "type": "number"
                    },
                    "name": {
                        "title": "name",
                        "type": "string"
                    },
                    "slug": {
                        "title": "slug",
                        "type": "string"
                    },
                    "description": {
                        "title": "description",
                        "type": "string"
                    },
                    "privacy": {
                        "title": "privacy",
                        "oneOf": [
                            {
                                "const": "closed"
                            },
                            {
                                "const": "open"
                            }
                        ]
                    },
                    "notification_setting": {
                        "title": "notification_setting",
                        "type": "string"
                    },
                    "permission": {
                        "title": "permission",
                        "type": "string"
                    }
                },
                "description": "Make all properties in T optional",
                "type": "object"
            },
            "_namespace_swagger.IGithub.IFetchRepositoryPullRequestOutput": {
                "properties": {
                    "pullRequests": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.FetchedPullRequest"
                        },
                        "type": "array"
                    },
                    "pageInfo": {
                        "properties": {
                            "endCursor": {
                                "title": "Cursor to be used to look up the next page",
                                "type": "string"
                            },
                            "hasNextPage": {
                                "title": "hasNextPage\n\ntrue if there is a next page",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "hasNextPage"
                        ],
                        "title": "page info",
                        "type": "object"
                    }
                },
                "required": [
                    "pullRequests",
                    "pageInfo"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.FetchedPullRequest": {
                "properties": {
                    "id": {
                        "title": "issue id",
                        "type": "string"
                    },
                    "state": {
                        "title": "issue state",
                        "oneOf": [
                            {
                                "title": "OPEN",
                                "const": "OPEN"
                            },
                            {
                                "title": "CLOSED",
                                "const": "CLOSED"
                            },
                            {
                                "title": "MERGED",
                                "const": "MERGED"
                            }
                        ]
                    },
                    "number": {
                        "title": "number of pull request",
                        "type": "integer"
                    },
                    "title": {
                        "title": "Pull request title",
                        "type": "string"
                    },
                    "comments": {
                        "properties": {
                            "totalCount": {
                                "minimum": 0,
                                "title": "total count of comments",
                                "type": "number"
                            }
                        },
                        "required": [
                            "totalCount"
                        ],
                        "title": "comments",
                        "type": "object"
                    },
                    "reviews": {
                        "properties": {
                            "totalCount": {
                                "minimum": 0,
                                "title": "total counr of reviews",
                                "type": "number"
                            }
                        },
                        "required": [
                            "totalCount"
                        ],
                        "title": "reviews",
                        "type": "object"
                    },
                    "reactions": {
                        "properties": {
                            "totalCount": {
                                "minimum": 0,
                                "title": "total count of reactions",
                                "type": "number"
                            }
                        },
                        "required": [
                            "totalCount"
                        ],
                        "title": "reactions",
                        "type": "object"
                    },
                    "labels": {
                        "properties": {
                            "nodes": {
                                "items": {
                                    "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Labeldescriptionname"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "nodes"
                        ],
                        "title": "labels",
                        "type": "object"
                    },
                    "assignees": {
                        "properties": {
                            "nodes": {
                                "items": {
                                    "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Userlogin"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "nodes"
                        ],
                        "title": "assignees",
                        "type": "object"
                    },
                    "author": {
                        "title": "author",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Userlogin"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "title": "createdAt",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "title": "updatedAt",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "number",
                    "title",
                    "comments",
                    "reviews",
                    "reactions",
                    "labels",
                    "assignees",
                    "author",
                    "createdAt",
                    "updatedAt"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIGithub.Labeldescriptionname": {
                "properties": {
                    "description": {
                        "title": "description",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "name": {
                        "title": "label name",
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "name"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IFetchRepositoryPullRequestInput": {
                "properties": {
                    "sort": {
                        "title": "sort\nIt must be one of: \"CREATED_AT\", \"UPDATED_AT\".",
                        "oneOf": [
                            {
                                "title": "CREATED_AT",
                                "const": "CREATED_AT"
                            },
                            {
                                "title": "UPDATED_AT",
                                "const": "UPDATED_AT"
                            }
                        ]
                    },
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "type": "integer"
                    },
                    "after": {
                        "title": "after\ncursor of next page",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "state": {
                        "description": "If you don't want to filter, you don't put anything in.\nIt must be one of: \"OPEN\", \"CLOSED\", \"MERGED\".",
                        "title": "state",
                        "oneOf": [
                            {
                                "title": "OPEN",
                                "const": "OPEN"
                            },
                            {
                                "title": "CLOSED",
                                "const": "CLOSED"
                            },
                            {
                                "title": "MERGED",
                                "const": "MERGED"
                            }
                        ]
                    },
                    "labels": {
                        "title": "labels",
                        "description": "If you want to filter the issue by label, pass the string.\nIf it is an empty array, it is ignored.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "direction": {
                        "title": "direction\nIt must be one of: \"ASC\", \"DESC\".",
                        "oneOf": [
                            {
                                "title": "ASC",
                                "const": "ASC"
                            },
                            {
                                "title": "DESC",
                                "const": "DESC"
                            }
                        ]
                    }
                },
                "required": [
                    "sort",
                    "owner",
                    "secretKey",
                    "repo",
                    "direction"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.DetailedIssue": {
                "properties": {
                    "milestone": {
                        "title": "milestone",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.MileStone"
                            }
                        ]
                    },
                    "reactions": {
                        "properties": {
                            "total_count": {
                                "title": "total_count",
                                "type": "integer"
                            },
                            "+1": {
                                "title": "\"+1\"",
                                "type": "integer"
                            },
                            "-1": {
                                "title": "\"-1\"",
                                "type": "integer"
                            },
                            "laugh": {
                                "title": "laugh",
                                "type": "integer"
                            },
                            "hooray": {
                                "title": "hooray",
                                "type": "integer"
                            },
                            "confused": {
                                "title": "confused",
                                "type": "integer"
                            },
                            "heart": {
                                "title": "heart",
                                "type": "integer"
                            },
                            "rocket": {
                                "title": "rocket",
                                "type": "integer"
                            },
                            "eyes": {
                                "title": "eyes",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "total_count",
                            "+1",
                            "-1",
                            "laugh",
                            "hooray",
                            "confused",
                            "heart",
                            "rocket",
                            "eyes"
                        ],
                        "title": "reactions",
                        "type": "object"
                    },
                    "closed_by": {
                        "title": "closed_by",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Usertypeidlogin"
                            }
                        ]
                    },
                    "id": {
                        "type": "integer"
                    },
                    "html_url": {
                        "format": "iri",
                        "title": "html_url",
                        "description": "If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path.",
                        "type": "string"
                    },
                    "number": {
                        "title": "issue number\n\nNumber uniquely identifying the issue within its repository",
                        "type": "integer"
                    },
                    "state": {
                        "title": "state\n\nState of the issue; either 'open' or 'closed'",
                        "type": "string"
                    },
                    "state_reason": {
                        "description": "The reason for the current state",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "const": "completed"
                            },
                            {
                                "const": "reopened"
                            },
                            {
                                "const": "not_planned"
                            }
                        ]
                    },
                    "title": {
                        "description": "Title of the issue",
                        "type": "string"
                    },
                    "user": {
                        "title": "user",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Usertypeidlogin"
                    },
                    "body": {
                        "description": "Contents of the issue\n\nYou can also render this content because it is in a markdown format.",
                        "title": "body",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "labels": {
                        "title": "labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "url": {
                                            "format": "iri",
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "oneOf": [
                                                {
                                                    "type": "null"
                                                },
                                                {
                                                    "type": "string"
                                                }
                                            ]
                                        },
                                        "color": {
                                            "oneOf": [
                                                {
                                                    "type": "null"
                                                },
                                                {
                                                    "type": "string"
                                                }
                                            ]
                                        },
                                        "default": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "assignee": {
                        "title": "assignee",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Userlogin"
                            }
                        ]
                    },
                    "assignees": {
                        "title": "assignees\n\nIf there are many people in charge, you can be included in the array.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Userlogin"
                                },
                                "type": "array"
                            }
                        ]
                    }
                },
                "required": [
                    "milestone",
                    "reactions",
                    "id",
                    "html_url",
                    "number",
                    "state",
                    "title",
                    "user",
                    "labels",
                    "assignee"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetIssueDetailInput": {
                "properties": {
                    "issue_number": {
                        "title": "issue number to get detailed info",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "fetchedIssues[].{value:number, label:title}",
                            "method": "post",
                            "path": "/connector/github/repositories/get-issues"
                        },
                        "type": "integer"
                    },
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "issue_number",
                    "owner",
                    "repo",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetIssueCommentsInput": {
                "properties": {
                    "issue_number": {
                        "title": "issue number to get detailed info",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "fetchedIssues[].{value:number, label:title}",
                            "method": "post",
                            "path": "/connector/github/repositories/get-issues"
                        },
                        "type": "integer"
                    },
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    }
                },
                "required": [
                    "issue_number",
                    "owner",
                    "repo",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IFetchRepositoryOutput": {
                "properties": {
                    "fetchedIssues": {
                        "title": "issues",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGithub.FetchedIssuebody"
                        },
                        "type": "array"
                    },
                    "pageInfo": {
                        "properties": {
                            "endCursor": {
                                "title": "Cursor to be used to look up the next page",
                                "type": "string"
                            },
                            "hasNextPage": {
                                "title": "hasNextPage\n\ntrue if there is a next page",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "hasNextPage"
                        ],
                        "title": "page info",
                        "type": "object"
                    }
                },
                "required": [
                    "fetchedIssues",
                    "pageInfo"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGithub.FetchedIssuebody": {
                "properties": {
                    "number": {
                        "title": "issue number\n\nNumber uniquely identifying the issue within its repository",
                        "type": "integer"
                    },
                    "title": {
                        "title": "issue title",
                        "type": "string"
                    },
                    "id": {
                        "title": "issue id",
                        "type": "string"
                    },
                    "comments": {
                        "properties": {
                            "totalCount": {
                                "minimum": 0,
                                "title": "total count of comments",
                                "type": "number"
                            }
                        },
                        "required": [
                            "totalCount"
                        ],
                        "title": "comments",
                        "type": "object"
                    },
                    "author": {
                        "title": "author",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Userlogin"
                    },
                    "state": {
                        "title": "issue state",
                        "oneOf": [
                            {
                                "title": "OPEN",
                                "const": "OPEN"
                            },
                            {
                                "title": "CLOSED",
                                "const": "CLOSED"
                            },
                            {
                                "title": "MERGED",
                                "const": "MERGED"
                            }
                        ]
                    },
                    "labels": {
                        "properties": {
                            "nodes": {
                                "items": {
                                    "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Labeldescriptionname"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "nodes"
                        ],
                        "title": "labels",
                        "type": "object"
                    },
                    "stateReason": {
                        "title": "reason of state",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "reactions": {
                        "properties": {
                            "totalCount": {
                                "minimum": 0,
                                "title": "total count of reactions",
                                "type": "number"
                            }
                        },
                        "required": [
                            "totalCount"
                        ],
                        "title": "reactions",
                        "type": "object"
                    },
                    "assignees": {
                        "properties": {
                            "nodes": {
                                "items": {
                                    "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Userlogin"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "nodes"
                        ],
                        "title": "assignees",
                        "type": "object"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "title": "createdAt",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "title": "updatedAt",
                        "type": "string"
                    }
                },
                "required": [
                    "number",
                    "title",
                    "id",
                    "comments",
                    "author",
                    "labels",
                    "reactions",
                    "assignees",
                    "createdAt",
                    "updatedAt"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IFetchRepositoryInput": {
                "properties": {
                    "after": {
                        "title": "after\ncursor of next page",
                        "type": "string"
                    },
                    "labels": {
                        "title": "labels",
                        "description": "If you want to filter the issue by label, pass the string.\nIf it is an empty array, it is ignored.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "type": "integer"
                    },
                    "state": {
                        "description": "If you don't want to filter, you don't put anything in.\nIt must be one of: \"OPEN\", \"CLOSED\", \"MERGED\".",
                        "title": "state",
                        "oneOf": [
                            {
                                "title": "OPEN",
                                "const": "OPEN"
                            },
                            {
                                "title": "CLOSED",
                                "const": "CLOSED"
                            },
                            {
                                "title": "MERGED",
                                "const": "MERGED"
                            }
                        ]
                    },
                    "direction": {
                        "title": "direction\nIt must be one of: \"ASC\", \"DESC\".",
                        "oneOf": [
                            {
                                "title": "ASC",
                                "const": "ASC"
                            },
                            {
                                "title": "DESC",
                                "const": "DESC"
                            }
                        ]
                    },
                    "sort": {
                        "title": "condition of direction\nIt must be one of: \"CREATED_AT\", \"UPDATED_AT\", \"COMMENTS\".",
                        "oneOf": [
                            {
                                "title": "CREATED_AT",
                                "const": "CREATED_AT"
                            },
                            {
                                "title": "UPDATED_AT",
                                "const": "UPDATED_AT"
                            },
                            {
                                "title": "COMMENTS",
                                "const": "COMMENTS"
                            }
                        ]
                    },
                    "owner": {
                        "title": "owner's name",
                        "description": "The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "direction",
                    "sort",
                    "owner",
                    "repo",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.ISearchUserOutput": {
                "properties": {
                    "result": {
                        "title": "User Search Result Item\n\nUser Search Result Item",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.User"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "true if there is a next page",
                        "description": "However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty.",
                        "type": "boolean"
                    },
                    "after": {
                        "title": "after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page.",
                        "type": "string"
                    },
                    "before": {
                        "title": "before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page.",
                        "type": "string"
                    },
                    "prev": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page.",
                        "title": "prev",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "next": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page.",
                        "title": "next",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "last": {
                        "title": "last",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page.",
                        "type": "number"
                    },
                    "first": {
                        "title": "first",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page.",
                        "type": "number"
                    }
                },
                "required": [
                    "result",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.User": {
                "properties": {
                    "login": {
                        "title": "login",
                        "description": "This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname.",
                        "type": "string"
                    },
                    "id": {
                        "title": "id\n\nThis means the user's ID.",
                        "type": "number"
                    },
                    "avatar_url": {
                        "format": "iri",
                        "title": "avatar url\n\nThis means the user's profile image.",
                        "type": "string"
                    },
                    "html_url": {
                        "format": "iri",
                        "title": "html_url\n\nIf you want to look up your profile, you can access this website.",
                        "type": "string"
                    },
                    "type": {
                        "title": "type",
                        "oneOf": [
                            {
                                "const": "User"
                            },
                            {
                                "const": "Bot"
                            },
                            {
                                "const": "Organization"
                            }
                        ]
                    },
                    "score": {
                        "title": "score",
                        "type": "number"
                    }
                },
                "required": [
                    "login",
                    "id",
                    "avatar_url",
                    "html_url",
                    "type",
                    "score"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.ISearchUserInput": {
                "properties": {
                    "q": {
                        "title": "keyword",
                        "description": "The query contains one or more search keywords and qualifiers.\nQualifiers allow you to limit your search to specific areas of GitHub.\nThe REST API supports the same qualifiers as the web interface for GitHub.",
                        "type": "string"
                    },
                    "sort": {
                        "description": "Sorts the results of your query by number of followers or repositories, or when the person joined GitHub. Default: best match\nIt must be one of this: \"followers\" | \"repositories\" | \"joined\"",
                        "title": "sorting condition",
                        "oneOf": [
                            {
                                "const": "followers"
                            },
                            {
                                "const": "repositories"
                            },
                            {
                                "const": "joined"
                            }
                        ]
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "order": {
                        "description": "Determines whether the first search result returned is the highest number of matches (desc) or lowest number of matches (asc).\nThis parameter is ignored unless you provide sort.",
                        "title": "order",
                        "oneOf": [
                            {
                                "const": "desc"
                            },
                            {
                                "const": "asc"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "q",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetUserProfileOutput": {
                "properties": {
                    "name": {
                        "title": "name\nIt means the actual name that the user has written, not the user's nickname.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "company": {
                        "description": "As the name of the company,\nit cannot be said to be the exact name listed as the business operator because it was written by the user himself.\nAlso, we cannot guarantee that the user wrote the company name.\nSometimes the user jokingly writes down strange names.",
                        "title": "comany name",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "blog": {
                        "title": "blog\n\nIndicates the blog address.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "location": {
                        "description": "It means the location of the user.\nUsually, I write the country down, but the user can jokingly record the strange location.",
                        "title": "location",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "email": {
                        "title": "email address",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "bio": {
                        "title": "bio\n\nWrite down what the user wants to say or a history.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "twitter_username": {
                        "title": "twitter_username",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "public_repos": {
                        "title": "count of public repos",
                        "type": "integer"
                    },
                    "public_gists": {
                        "title": "count of public gists",
                        "type": "integer"
                    },
                    "followers": {
                        "title": "count of followers",
                        "type": "integer"
                    },
                    "following": {
                        "title": "count of follwing",
                        "type": "integer"
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "created_at",
                        "type": "string"
                    },
                    "updated_at": {
                        "format": "date-time",
                        "title": "updated_at",
                        "type": "string"
                    },
                    "profile_repository": {
                        "title": "profile_repo",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.RepositoryreadmeIGetReadmeFileContentOutput"
                            }
                        ]
                    },
                    "pinned_repositories": {
                        "title": "pinned_repositories\nIt is a repository where the user puts a pin on his profile, which is usually used to display his or her proud history.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "type": {
                        "title": "type",
                        "oneOf": [
                            {
                                "const": "User"
                            },
                            {
                                "const": "Bot"
                            },
                            {
                                "const": "Organization"
                            }
                        ]
                    },
                    "avatar_url": {
                        "format": "iri",
                        "title": "avatar url\n\nThis means the user's profile image.",
                        "type": "string"
                    },
                    "id": {
                        "title": "id\n\nThis means the user's ID.",
                        "type": "number"
                    },
                    "login": {
                        "title": "login",
                        "description": "This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname.",
                        "type": "string"
                    }
                },
                "required": [
                    "public_repos",
                    "public_gists",
                    "followers",
                    "following",
                    "created_at",
                    "updated_at",
                    "profile_repository",
                    "pinned_repositories",
                    "type",
                    "avatar_url",
                    "id",
                    "login"
                ],
                "type": "object"
            },
            "_namespace_swagger.RepositoryreadmeIGetReadmeFileContentOutput": {
                "properties": {
                    "id": {
                        "title": "id",
                        "type": "number"
                    },
                    "name": {
                        "title": "name",
                        "type": "string"
                    },
                    "full_name": {
                        "title": "full_name\n\nThis is in the form '{username}/{reponame}'.",
                        "type": "string"
                    },
                    "private": {
                        "title": "private",
                        "type": "boolean"
                    },
                    "html_url": {
                        "format": "iri",
                        "title": "html_url",
                        "type": "string"
                    },
                    "description": {
                        "title": "description",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "fork": {
                        "title": "fork",
                        "type": "boolean"
                    },
                    "forks_count": {
                        "title": "forks_count",
                        "type": "integer"
                    },
                    "stargazers_count": {
                        "title": "stargazers_count",
                        "type": "integer"
                    },
                    "watchers_count": {
                        "title": "watchers_count",
                        "type": "integer"
                    },
                    "size": {
                        "title": "size",
                        "type": "number"
                    },
                    "default_branch": {
                        "title": "default_branch",
                        "type": "string"
                    },
                    "open_issues_count": {
                        "title": "open_issues_count",
                        "type": "integer"
                    },
                    "is_template": {
                        "title": "is_template",
                        "type": "boolean"
                    },
                    "topics": {
                        "title": "topics",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "has_issues": {
                        "title": "has_issues",
                        "type": "boolean"
                    },
                    "has_projects": {
                        "title": "has_projects",
                        "type": "boolean"
                    },
                    "has_wiki": {
                        "title": "has_wiki",
                        "type": "boolean"
                    },
                    "has_pages": {
                        "title": "has_pages",
                        "type": "boolean"
                    },
                    "has_downloads": {
                        "title": "has_downloads",
                        "type": "boolean"
                    },
                    "archived": {
                        "title": "archived",
                        "type": "boolean"
                    },
                    "disabled": {
                        "title": "disabled",
                        "type": "boolean"
                    },
                    "visibility": {
                        "title": "visibility",
                        "oneOf": [
                            {
                                "const": "private"
                            },
                            {
                                "const": "public"
                            }
                        ]
                    },
                    "pushed_at": {
                        "format": "date-time",
                        "title": "pushed_at",
                        "type": "string"
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "created_at",
                        "type": "string"
                    },
                    "updated_at": {
                        "format": "date-time",
                        "title": "updated_at",
                        "type": "string"
                    },
                    "permissions": {
                        "properties": {
                            "admin": {
                                "title": "admin",
                                "type": "boolean"
                            },
                            "push": {
                                "title": "push",
                                "type": "boolean"
                            },
                            "pull": {
                                "title": "pull",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "admin",
                            "push",
                            "pull"
                        ],
                        "type": "object"
                    },
                    "allow_rebase_merge": {
                        "title": "allow_rebase_merge",
                        "type": "boolean"
                    },
                    "allow_squash_merge": {
                        "title": "allow_squash_merge",
                        "type": "boolean"
                    },
                    "allow_auto_merge": {
                        "title": "allow_auto_merge",
                        "type": "boolean"
                    },
                    "delete_branch_on_merge": {
                        "title": "delete_branch_on_merge",
                        "type": "boolean"
                    },
                    "allow_merge_commit": {
                        "title": "allow_merge_commit",
                        "type": "boolean"
                    },
                    "subscribers_count": {
                        "title": "subscribers_count",
                        "type": "integer"
                    },
                    "network_count": {
                        "title": "network_count",
                        "type": "integer"
                    },
                    "license": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "properties": {
                                    "key": {
                                        "title": "key",
                                        "x-wrtn-placeholder": "mit",
                                        "type": "string"
                                    },
                                    "name": {
                                        "title": "name",
                                        "x-wrtn-placeholder": "MIT License",
                                        "type": "string"
                                    },
                                    "url": {
                                        "title": "url",
                                        "oneOf": [
                                            {
                                                "type": "null"
                                            },
                                            {
                                                "x-wrtn-placeholder": "https://api.github.com/licenses/mit",
                                                "type": "string"
                                            }
                                        ]
                                    },
                                    "spdx_id": {
                                        "title": "spdx_id",
                                        "x-wrtn-placeholder": "MIT",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "key",
                                    "name",
                                    "url",
                                    "spdx_id"
                                ],
                                "type": "object"
                            }
                        ]
                    },
                    "forks": {
                        "title": "forks",
                        "type": "integer"
                    },
                    "open_issues": {
                        "title": "open_issues",
                        "type": "integer"
                    },
                    "watchers": {
                        "title": "watchers",
                        "type": "integer"
                    },
                    "readme": {
                        "discriminator": {
                            "mapping": {
                                "file": "#/components/schemas/IGithub.RepositoryFile"
                            },
                            "propertyName": "type"
                        },
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.RepositoryFile"
                            }
                        ]
                    }
                },
                "required": [
                    "id",
                    "name",
                    "full_name",
                    "private",
                    "html_url",
                    "description",
                    "fork",
                    "forks_count",
                    "stargazers_count",
                    "watchers_count",
                    "size",
                    "default_branch",
                    "open_issues_count",
                    "is_template",
                    "topics",
                    "has_issues",
                    "has_projects",
                    "has_wiki",
                    "has_pages",
                    "has_downloads",
                    "archived",
                    "disabled",
                    "visibility",
                    "pushed_at",
                    "created_at",
                    "updated_at",
                    "license",
                    "forks",
                    "open_issues",
                    "watchers",
                    "readme"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetUserProfileInput": {
                "properties": {
                    "username": {
                        "title": "username",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "username",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetAuthenticatedUserOrganizationOutput": {
                "properties": {
                    "result": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.Organization"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "true if there is a next page",
                        "description": "However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty.",
                        "type": "boolean"
                    },
                    "after": {
                        "title": "after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page.",
                        "type": "string"
                    },
                    "before": {
                        "title": "before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page.",
                        "type": "string"
                    },
                    "prev": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page.",
                        "title": "prev",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "next": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page.",
                        "title": "next",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "last": {
                        "title": "last",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page.",
                        "type": "number"
                    },
                    "first": {
                        "title": "first",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page.",
                        "type": "number"
                    }
                },
                "required": [
                    "result",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetAuthenticatedUserOrganizationInput": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "user"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetBranchOutput": {
                "properties": {
                    "result": {
                        "title": "branches",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.Branch"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "true if there is a next page",
                        "description": "However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty.",
                        "type": "boolean"
                    },
                    "after": {
                        "title": "after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page.",
                        "type": "string"
                    },
                    "before": {
                        "title": "before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page.",
                        "type": "string"
                    },
                    "prev": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page.",
                        "title": "prev",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "next": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page.",
                        "title": "next",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "last": {
                        "title": "last",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page.",
                        "type": "number"
                    },
                    "first": {
                        "title": "first",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page.",
                        "type": "number"
                    }
                },
                "required": [
                    "result",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.Branch": {
                "properties": {
                    "name": {
                        "title": "name of Branch",
                        "type": "string"
                    },
                    "commit": {
                        "title": "commit",
                        "description": "In github, branch is just another name for the last node of a commit,\nso this property called commit is logically the same as what it means for that branch.",
                        "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGithub.Commitsha"
                    }
                },
                "required": [
                    "name",
                    "commit"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetBranchInput": {
                "properties": {
                    "owner": {
                        "title": "user's nickname",
                        "type": "string"
                    },
                    "repo": {
                        "title": "The name of the repository",
                        "type": "string"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.ICreateBranchOutput": {
                "properties": {
                    "ref": {
                        "title": "ref",
                        "x-wrtn-placeholder": "refs/heads/featureA",
                        "type": "string"
                    },
                    "object": {
                        "properties": {
                            "type": {
                                "const": "commit"
                            },
                            "sha": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "type",
                            "sha"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "ref",
                    "object"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.ICreateBranchInput": {
                "properties": {
                    "owner": {
                        "title": "user's nickname",
                        "type": "string"
                    },
                    "repo": {
                        "title": "The name of the repository",
                        "type": "string"
                    },
                    "ref": {
                        "title": "ref\nThe name of the fully qualified reference (ie: refs/heads/master). If it doesn't start with 'refs' and have at least two slashes, it will be rejected.",
                        "type": "string"
                    },
                    "sha": {
                        "title": "sha\nThe SHA1 value for this reference.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "result[].{value:sha, label: commit.message}",
                            "method": "post",
                            "path": "/connector/github/get-commit-list"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "ref",
                    "sha",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.StrictOmitIGithub.PullRequestcommentsmaintainer_can_modifymergeablerebaseablemergeable_statemerged_byreview_commentscommitsadditionsdeletionschanged_files": {
                "properties": {
                    "number": {
                        "title": "number of this pull request",
                        "type": "integer"
                    },
                    "title": {
                        "description": "Title of the issue",
                        "type": "string"
                    },
                    "base": {
                        "properties": {
                            "label": {
                                "title": "label",
                                "type": "string"
                            },
                            "ref": {
                                "title": "ref",
                                "type": "string"
                            },
                            "sha": {
                                "title": "sha",
                                "type": "string"
                            },
                            "user": {
                                "title": "user",
                                "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Usertypeidlogin"
                            },
                            "repo": {
                                "title": "repo",
                                "oneOf": [
                                    {
                                        "type": "null"
                                    },
                                    {
                                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Repositoryfull_name"
                                    }
                                ]
                            }
                        },
                        "required": [
                            "label",
                            "ref",
                            "sha",
                            "user",
                            "repo"
                        ],
                        "title": "base branch info",
                        "type": "object"
                    },
                    "head": {
                        "properties": {
                            "label": {
                                "title": "label",
                                "type": "string"
                            },
                            "ref": {
                                "title": "ref",
                                "type": "string"
                            },
                            "sha": {
                                "title": "sha",
                                "type": "string"
                            },
                            "user": {
                                "title": "user",
                                "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Usertypeidlogin"
                            },
                            "repo": {
                                "title": "repo",
                                "oneOf": [
                                    {
                                        "type": "null"
                                    },
                                    {
                                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Repositoryfull_name"
                                    }
                                ]
                            }
                        },
                        "required": [
                            "label",
                            "ref",
                            "sha",
                            "user",
                            "repo"
                        ],
                        "title": "head branch info",
                        "type": "object"
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "created_at",
                        "type": "string"
                    },
                    "updated_at": {
                        "format": "date-time",
                        "title": "updated_at",
                        "type": "string"
                    },
                    "user": {
                        "title": "user",
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Usertypeidlogin"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "body": {
                        "description": "Contents of the issue\n\nYou can also render this content because it is in a markdown format.",
                        "title": "body",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "state": {
                        "title": "state\n\nState of the issue; either 'open' or 'closed'",
                        "type": "string"
                    },
                    "labels": {
                        "title": "labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "url": {
                                            "format": "iri",
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "oneOf": [
                                                {
                                                    "type": "null"
                                                },
                                                {
                                                    "type": "string"
                                                }
                                            ]
                                        },
                                        "color": {
                                            "oneOf": [
                                                {
                                                    "type": "null"
                                                },
                                                {
                                                    "type": "string"
                                                }
                                            ]
                                        },
                                        "default": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "assignees": {
                        "title": "assignees\n\nIf there are many people in charge, you can be included in the array.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Userlogin"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "html_url": {
                        "format": "iri",
                        "title": "html_url",
                        "description": "If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path.",
                        "type": "string"
                    },
                    "draft": {
                        "title": "draft\n\nIndicates whether or not the pull request is a draft.",
                        "type": "boolean"
                    },
                    "milestone": {
                        "title": "milestone",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IGithub.MileStone"
                            }
                        ]
                    },
                    "author_association": {
                        "title": "author_association",
                        "oneOf": [
                            {
                                "const": "COLLABORATOR"
                            },
                            {
                                "const": "CONTRIBUTOR"
                            },
                            {
                                "const": "FIRST_TIMER"
                            },
                            {
                                "const": "FIRST_TIME_CONTRIBUTOR"
                            },
                            {
                                "const": "MANNEQUIN"
                            },
                            {
                                "const": "MEMBER"
                            },
                            {
                                "const": "NONE"
                            },
                            {
                                "const": "OWNER"
                            }
                        ]
                    },
                    "requested_reviewers": {
                        "title": "requested_reviewers",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Usertypeidlogin"
                        },
                        "type": "array"
                    },
                    "requested_teams": {
                        "title": "requested_teams",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.PartialIGithub.Team"
                        },
                        "type": "array"
                    },
                    "auto_merge": {
                        "title": "auto_merge"
                    },
                    "merged": {
                        "title": "merged",
                        "type": "boolean"
                    },
                    "locked": {
                        "title": "locked",
                        "type": "boolean"
                    },
                    "closed_at": {
                        "title": "closed_at",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "date-time",
                                "type": "string"
                            }
                        ]
                    },
                    "merged_at": {
                        "title": "merged_at",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "date-time",
                                "type": "string"
                            }
                        ]
                    },
                    "state_reason": {
                        "description": "The reason for the current state",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "const": "completed"
                            },
                            {
                                "const": "reopened"
                            },
                            {
                                "const": "not_planned"
                            }
                        ]
                    },
                    "assignee": {
                        "title": "assignee",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Userlogin"
                            }
                        ]
                    }
                },
                "required": [
                    "number",
                    "title",
                    "base",
                    "head",
                    "created_at",
                    "updated_at",
                    "user",
                    "id",
                    "state",
                    "labels",
                    "html_url",
                    "milestone",
                    "author_association",
                    "requested_reviewers",
                    "requested_teams",
                    "auto_merge",
                    "locked",
                    "closed_at",
                    "merged_at",
                    "assignee"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetPullRequestInput": {
                "properties": {
                    "owner": {
                        "title": "user's nickname",
                        "type": "string"
                    },
                    "repo": {
                        "title": "The name of the repository",
                        "type": "string"
                    },
                    "commit_sha": {
                        "title": "commit_sha\n\nThe SHA of the commit.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "commit_sha",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetCommitHeadOutput": {
                "properties": {
                    "sha": {
                        "type": "string"
                    },
                    "commit": {
                        "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Commitmessageurlauthorcommittertreecomment_count"
                    },
                    "files": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.File"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "sha",
                    "commit",
                    "files"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIGithub.Commitmessageurlauthorcommittertreecomment_count": {
                "properties": {
                    "message": {
                        "title": "commit message",
                        "type": "string"
                    },
                    "url": {
                        "format": "iri",
                        "title": "uri\n\nuri to look up details of commitment",
                        "type": "string"
                    },
                    "author": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "date": {
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "email",
                            "date"
                        ],
                        "title": "author",
                        "type": "object"
                    },
                    "committer": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "date": {
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "email",
                            "date"
                        ],
                        "title": "committer",
                        "type": "object"
                    },
                    "tree": {
                        "properties": {
                            "sha": {
                                "type": "string"
                            },
                            "url": {
                                "format": "iri",
                                "type": "string"
                            }
                        },
                        "required": [
                            "sha",
                            "url"
                        ],
                        "type": "object"
                    },
                    "comment_count": {
                        "type": "integer"
                    }
                },
                "required": [
                    "message",
                    "url",
                    "author",
                    "committer",
                    "tree",
                    "comment_count"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetCommitHeadInput": {
                "properties": {
                    "owner": {
                        "title": "user's nickname",
                        "type": "string"
                    },
                    "repo": {
                        "title": "The name of the repository",
                        "type": "string"
                    },
                    "commit_sha": {
                        "title": "commit_sha\n\nThe SHA of the commit.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "result[].{value:sha, label:comment.message}",
                            "method": "post",
                            "path": "/connector/github/get-commit-list"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "commit_sha",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetCommitOutput": {
                "properties": {
                    "sha": {
                        "title": "hash of this commit",
                        "type": "string"
                    },
                    "commit": {
                        "title": "commit",
                        "$ref": "#/components/schemas/_namespace_swagger.StrictOmitIGithub.Commitsha"
                    },
                    "html_url": {
                        "format": "iri",
                        "type": "string"
                    },
                    "parents": {
                        "title": "Parents of this commit",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Commitsha"
                        },
                        "type": "array"
                    },
                    "stats": {
                        "properties": {
                            "total": {
                                "title": "sum of additions and deletions",
                                "type": "integer"
                            },
                            "additions": {
                                "title": "lines of additions",
                                "type": "integer"
                            },
                            "deletions": {
                                "title": "lines of deletions",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "total",
                            "additions",
                            "deletions"
                        ],
                        "type": "object"
                    },
                    "files": {
                        "title": "files\n\nYou can see the changes for each file.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.File"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "sha",
                    "commit",
                    "html_url",
                    "parents",
                    "stats",
                    "files"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIGithub.Commitsha": {
                "properties": {
                    "sha": {
                        "title": "hash of this commit",
                        "type": "string"
                    }
                },
                "required": [
                    "sha"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetCommitInput": {
                "properties": {
                    "owner": {
                        "title": "user's nickname",
                        "type": "string"
                    },
                    "repo": {
                        "title": "The name of the repository",
                        "type": "string"
                    },
                    "ref": {
                        "title": "commit hash or branch name",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "result[].{value:name, label:name}",
                            "method": "post",
                            "path": "/connector/github/get-branches"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetCommitListOutput": {
                "properties": {
                    "result": {
                        "title": "commit list",
                        "items": {
                            "properties": {
                                "sha": {
                                    "type": "string"
                                },
                                "commit": {
                                    "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Commitmessageurlauthorcommitter"
                                }
                            },
                            "required": [
                                "sha",
                                "commit"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "true if there is a next page",
                        "description": "However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty.",
                        "type": "boolean"
                    },
                    "after": {
                        "title": "after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page.",
                        "type": "string"
                    },
                    "before": {
                        "title": "before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page.",
                        "type": "string"
                    },
                    "prev": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page.",
                        "title": "prev",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "next": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page.",
                        "title": "next",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "last": {
                        "title": "last",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page.",
                        "type": "number"
                    },
                    "first": {
                        "title": "first",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page.",
                        "type": "number"
                    }
                },
                "required": [
                    "result",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIGithub.Commitmessageurlauthorcommitter": {
                "properties": {
                    "message": {
                        "title": "commit message",
                        "type": "string"
                    },
                    "url": {
                        "format": "iri",
                        "title": "uri\n\nuri to look up details of commitment",
                        "type": "string"
                    },
                    "author": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "date": {
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "email",
                            "date"
                        ],
                        "title": "author",
                        "type": "object"
                    },
                    "committer": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "date": {
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "email",
                            "date"
                        ],
                        "title": "committer",
                        "type": "object"
                    }
                },
                "required": [
                    "message",
                    "url",
                    "author",
                    "committer"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetCommitListInput": {
                "properties": {
                    "owner": {
                        "title": "user's nickname",
                        "type": "string"
                    },
                    "repo": {
                        "title": "The name of the repository",
                        "type": "string"
                    },
                    "sha": {
                        "title": "sha\n\nSHA or branch to start listing commits from. Default: the repository’s default branch (usually main).",
                        "type": "string"
                    },
                    "path": {
                        "title": "path\n\nOnly commits containing this file path will be returned.",
                        "type": "string"
                    },
                    "author": {
                        "title": "author\n\nGitHub username or email address to use to filter by commit author.",
                        "type": "string"
                    },
                    "committer": {
                        "title": "committer\n\nGitHub username or email address to use to filter by commit committer.",
                        "type": "string"
                    },
                    "since": {
                        "format": "date-time",
                        "title": "since\n\nOnly show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Due to limitations of Git, timestamps must be between 1970-01-01 and 2099-12-31 (inclusive) or unexpected results may be returned.",
                        "type": "string"
                    },
                    "until": {
                        "format": "date-time",
                        "title": "until\n\nOnly commits before this date will be returned. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Due to limitations of Git, timestamps must be between 1970-01-01 and 2099-12-31 (inclusive) or unexpected results may be returned.",
                        "type": "string"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "order": {
                        "description": "Determines whether the first search result returned is the highest number of matches (desc) or lowest number of matches (asc).\nThis parameter is ignored unless you provide sort.",
                        "title": "order",
                        "oneOf": [
                            {
                                "const": "desc"
                            },
                            {
                                "const": "asc"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetFollowerOutput": {
                "properties": {
                    "result": {
                        "title": "followers",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Useravatar_urlidloginhtml_url"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "true if there is a next page",
                        "description": "However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty.",
                        "type": "boolean"
                    },
                    "after": {
                        "title": "after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page.",
                        "type": "string"
                    },
                    "before": {
                        "title": "before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page.",
                        "type": "string"
                    },
                    "prev": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page.",
                        "title": "prev",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "next": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page.",
                        "title": "next",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "last": {
                        "title": "last",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page.",
                        "type": "number"
                    },
                    "first": {
                        "title": "first",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page.",
                        "type": "number"
                    }
                },
                "required": [
                    "result",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIGithub.Useravatar_urlidloginhtml_url": {
                "properties": {
                    "avatar_url": {
                        "format": "iri",
                        "title": "avatar url\n\nThis means the user's profile image.",
                        "type": "string"
                    },
                    "id": {
                        "title": "id\n\nThis means the user's ID.",
                        "type": "number"
                    },
                    "login": {
                        "title": "login",
                        "description": "This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname.",
                        "type": "string"
                    },
                    "html_url": {
                        "format": "iri",
                        "title": "html_url\n\nIf you want to look up your profile, you can access this website.",
                        "type": "string"
                    }
                },
                "required": [
                    "avatar_url",
                    "id",
                    "login",
                    "html_url"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetFollowerInput": {
                "properties": {
                    "username": {
                        "title": "user's nickname",
                        "type": "string"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "order": {
                        "description": "Determines whether the first search result returned is the highest number of matches (desc) or lowest number of matches (asc).\nThis parameter is ignored unless you provide sort.",
                        "title": "order",
                        "oneOf": [
                            {
                                "const": "desc"
                            },
                            {
                                "const": "asc"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "user"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "username",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetFolloweeOutput": {
                "properties": {
                    "result": {
                        "title": "followees",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.Useravatar_urlidloginhtml_url"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "true if there is a next page",
                        "description": "However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty.",
                        "type": "boolean"
                    },
                    "after": {
                        "title": "after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page.",
                        "type": "string"
                    },
                    "before": {
                        "title": "before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page.",
                        "type": "string"
                    },
                    "prev": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page.",
                        "title": "prev",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "next": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page.",
                        "title": "next",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "last": {
                        "title": "last",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page.",
                        "type": "number"
                    },
                    "first": {
                        "title": "first",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page.",
                        "type": "number"
                    }
                },
                "required": [
                    "result",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetFolloweeInput": {
                "properties": {
                    "username": {
                        "title": "user's nickname",
                        "type": "string"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "order": {
                        "description": "Determines whether the first search result returned is the highest number of matches (desc) or lowest number of matches (asc).\nThis parameter is ignored unless you provide sort.",
                        "title": "order",
                        "oneOf": [
                            {
                                "const": "desc"
                            },
                            {
                                "const": "asc"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "user"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "username",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetLabelOutput": {
                "properties": {
                    "result": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IGithub.Label"
                        },
                        "type": "array"
                    },
                    "nextPage": {
                        "title": "true if there is a next page",
                        "description": "However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty.",
                        "type": "boolean"
                    },
                    "after": {
                        "title": "after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page.",
                        "type": "string"
                    },
                    "before": {
                        "title": "before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page.",
                        "type": "string"
                    },
                    "prev": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page.",
                        "title": "prev",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "next": {
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page.",
                        "title": "next",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "last": {
                        "title": "last",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page.",
                        "type": "number"
                    },
                    "first": {
                        "title": "first",
                        "description": "If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page.",
                        "type": "number"
                    }
                },
                "required": [
                    "result",
                    "nextPage"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.Label": {
                "properties": {
                    "name": {
                        "title": "label name",
                        "type": "string"
                    },
                    "color": {
                        "title": "color",
                        "type": "string"
                    },
                    "default": {
                        "title": "default\n\nTrue if it is not created by the user but automatically created from the beginning.",
                        "type": "boolean"
                    },
                    "description": {
                        "title": "description",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "color",
                    "default",
                    "description"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IGetLabelInput": {
                "properties": {
                    "owner": {
                        "title": "user's nickname",
                        "type": "string"
                    },
                    "repo": {
                        "title": "The name of the repository",
                        "type": "string"
                    },
                    "page": {
                        "default": 1,
                        "title": "page\nThe page number of the results to fetch.",
                        "type": "integer"
                    },
                    "per_page": {
                        "default": 30,
                        "maximum": 100,
                        "title": "per_page\nThe number of results per page (max 100).",
                        "type": "integer"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.IUpdateIssueInput": {
                "properties": {
                    "issue_number": {
                        "title": "issue number to update",
                        "oneOf": [
                            {
                                "minimum": 1,
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "{label:number, value:title}",
                                    "method": "post",
                                    "path": "/connector/github/issues"
                                },
                                "type": "integer"
                            },
                            {
                                "minimum": 1,
                                "x-wrtn-prerequisite": {
                                    "jmesPath": "result[].{label:number, value:title}",
                                    "method": "post",
                                    "path": "/connector/github/issues"
                                },
                                "type": "integer"
                            }
                        ]
                    },
                    "title": {
                        "title": "tite of this issue",
                        "type": "string"
                    },
                    "owner": {
                        "title": "user's nickname",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "repo": {
                        "title": "The name of the repository",
                        "type": "string"
                    },
                    "body": {
                        "title": "body of this issue",
                        "description": "It can be markdown format\nIf you provide text in utf-8 format, which can be recognized by a person, in markdown format, it will be written as it is.",
                        "type": "string"
                    },
                    "labels": {
                        "title": "labels",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "assignees": {
                        "title": "assignees\n\nDeliver the user nickname to be designated as the person in charge in the array.",
                        "items": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "result[].{value:login, label:login}",
                                "method": "post",
                                "path": "/connector/github/repos/get-collaborators"
                            },
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "issue_number",
                    "owner",
                    "secretKey",
                    "repo"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.ICreateIssueInput": {
                "properties": {
                    "owner": {
                        "title": "user's nickname",
                        "type": "string"
                    },
                    "repo": {
                        "title": "The name of the repository",
                        "type": "string"
                    },
                    "title": {
                        "title": "tite of this issue",
                        "type": "string"
                    },
                    "body": {
                        "title": "body of this issue",
                        "description": "It can be markdown format\nIf you provide text in utf-8 format, which can be recognized by a person, in markdown format, it will be written as it is.",
                        "type": "string"
                    },
                    "assignees": {
                        "title": "assignees\n\nDeliver the user nickname to be designated as the person in charge in the array.",
                        "items": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "result[].{value:login, label:login}",
                                "method": "post",
                                "path": "/connector/github/repos/get-collaborators"
                            },
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "labels": {
                        "title": "labels",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "github",
                        "x-wrtn-secret-scopes": [
                            "repo"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "owner",
                    "repo",
                    "title",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IGithub.UploadFileInput": {
                "properties": {
                    "files": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.MyPickIGithub.RepositoryFilecontentpath"
                        },
                        "type": "array"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "required": [
                    "files",
                    "key"
                ],
                "type": "object"
            },
            "_namespace_swagger.MyPickIGithub.RepositoryFilecontentpath": {
                "properties": {
                    "content": {
                        "title": "content",
                        "type": "string"
                    },
                    "path": {
                        "title": "path\n\nIt must be unique as a path for identifying that file in the root folder.",
                        "type": "string"
                    }
                },
                "required": [
                    "content",
                    "path"
                ],
                "type": "object"
            },
            "_namespace_swagger.IShortLink.IResponse": {
                "properties": {},
                "type": "object"
            },
            "_namespace_swagger.IShortLink.IRequest": {
                "properties": {},
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IChannel": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "number"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "position": {
                        "type": "number"
                    },
                    "permission_overwrites": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IOverwrite"
                        },
                        "type": "array"
                    },
                    "name": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "topic": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "recipients": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IUser"
                        },
                        "type": "array"
                    },
                    "icon": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "owner_id": {
                        "type": "string"
                    },
                    "application_id": {
                        "type": "string"
                    },
                    "managed": {
                        "type": "boolean"
                    },
                    "parent_id": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "last_pin_timestamp": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "date-time",
                                "type": "string"
                            }
                        ]
                    },
                    "rtc_region": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "video_quality_mode": {
                        "type": "number"
                    },
                    "message_count": {
                        "type": "number"
                    },
                    "member_count": {
                        "type": "number"
                    },
                    "thread_metadata": {
                        "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IThreadMetadata"
                    },
                    "member": {
                        "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IThreadMember"
                    },
                    "default_auto_archive_duration": {
                        "type": "number"
                    },
                    "permissions": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "number"
                    },
                    "total_message_sent": {
                        "type": "number"
                    },
                    "available_tags": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IDiscord.ITag"
                        },
                        "type": "array"
                    },
                    "applied_tags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "default_reaction_emoji": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IDefaultReaction"
                            }
                        ]
                    },
                    "default_thread_rate_limit_per_user": {
                        "type": "number"
                    },
                    "default_sort_order": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "default_forum_layout": {
                        "type": "number"
                    }
                },
                "required": [
                    "id",
                    "type"
                ],
                "title": "채널 정보",
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IOverwrite": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "number"
                    },
                    "allow": {
                        "type": "string"
                    },
                    "deny": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "allow",
                    "deny"
                ],
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IUser": {
                "properties": {
                    "id": {
                        "title": "유저 고유 id",
                        "description": "유저마다 발급된 고유 id 입니다.",
                        "type": "string"
                    },
                    "username": {
                        "title": "유저 이름",
                        "description": "유저 이름입니다.",
                        "type": "string"
                    },
                    "discriminator": {
                        "title": "유저의 discord tag 입니다",
                        "description": "유저의 discord tag 입니다.",
                        "type": "string"
                    },
                    "global_name": {
                        "description": "유저가 설정한 이름입니다. 봇 유저는 어플리케이션 이름이 됩니다.",
                        "title": "유저가 설정한 이름",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "bot": {
                        "title": "봇 유저 여부",
                        "description": "봇 유저 여부입니다.",
                        "type": "boolean"
                    },
                    "email": {
                        "description": "유저 이메일입니다.",
                        "title": "이메일",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "id",
                    "username",
                    "discriminator",
                    "global_name"
                ],
                "title": "유저 정보",
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IThreadMetadata": {
                "properties": {
                    "archived": {
                        "type": "boolean"
                    },
                    "auto_archive_duration": {
                        "type": "number"
                    },
                    "archive_timestamp": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "locked": {
                        "type": "boolean"
                    },
                    "invitable": {
                        "type": "boolean"
                    },
                    "create_timestamp": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "date-time",
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "archived",
                    "auto_archive_duration",
                    "archive_timestamp",
                    "locked"
                ],
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IThreadMember": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "join_timestamp": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "flags": {
                        "type": "number"
                    },
                    "member": {
                        "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IGuildMember"
                    }
                },
                "required": [
                    "join_timestamp",
                    "flags"
                ],
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IGuildMember": {
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IUser"
                    },
                    "nick": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "avatar": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "roles": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "joined_at": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "premium_since": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "date-time",
                                "type": "string"
                            }
                        ]
                    },
                    "deaf": {
                        "type": "boolean"
                    },
                    "mute": {
                        "type": "boolean"
                    },
                    "flags": {
                        "type": "number"
                    },
                    "pending": {
                        "type": "boolean"
                    },
                    "permissions": {
                        "type": "string"
                    },
                    "communication_disabled_until": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "date-time",
                                "type": "string"
                            }
                        ]
                    },
                    "avatar_decoration_data": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IAvatarDecorationData"
                            }
                        ]
                    }
                },
                "required": [
                    "roles",
                    "joined_at",
                    "deaf",
                    "mute",
                    "flags"
                ],
                "title": "서버에 있는 멤버 정보",
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IAvatarDecorationData": {
                "properties": {
                    "asset": {
                        "type": "string"
                    },
                    "sku_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "asset",
                    "sku_id"
                ],
                "type": "object"
            },
            "_namespace_swagger.IDiscord.ITag": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "moderated": {
                        "type": "boolean"
                    },
                    "emoji_id": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "emoji_name": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "id",
                    "name",
                    "moderated",
                    "emoji_id",
                    "emoji_name"
                ],
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IDefaultReaction": {
                "properties": {
                    "emoji_id": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "emoji_name": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "emoji_id",
                    "emoji_name"
                ],
                "type": "object"
            },
            "_namespace_swagger.IDiscord.ICreateDMRequest": {
                "properties": {
                    "recipient_id": {
                        "title": "상대방",
                        "description": "DM을 보낼 상대방을 선택해주세요.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:user.id, label:user.username}",
                            "method": "post",
                            "path": "connector/discord/get-list-guild-members"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "discord",
                        "x-wrtn-secret-scopes": [
                            "bot"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "recipient_id",
                    "secretKey"
                ],
                "title": "DM을 보내기 위해 필요한 정보",
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IGuild": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "boolean"
                    },
                    "owner_id": {
                        "type": "string"
                    },
                    "roles": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IRole"
                        },
                        "type": "array"
                    },
                    "features": {
                        "items": {
                            "oneOf": [
                                {
                                    "const": "ANIMATED_BANNER"
                                },
                                {
                                    "const": "ANIMATED_ICON"
                                },
                                {
                                    "const": "APPLICATION_COMMAND_PERMISSIONS_V2"
                                },
                                {
                                    "const": "AUTO_MODERATION"
                                },
                                {
                                    "const": "BANNER"
                                },
                                {
                                    "const": "COMMUNITY"
                                },
                                {
                                    "const": "CREATOR_MONETIZABLE_PROVISIONAL"
                                },
                                {
                                    "const": "CREATOR_STORE_PAGE"
                                },
                                {
                                    "const": "DEVELOPER_SUPPORT_SERVER"
                                },
                                {
                                    "const": "DISCOVERABLE"
                                },
                                {
                                    "const": "FEATURABLE"
                                },
                                {
                                    "const": "INVITES_DISABLED"
                                },
                                {
                                    "const": "INVITE_SPLASH"
                                },
                                {
                                    "const": "MEMBER_VERIFICATION_GATE_ENABLED"
                                },
                                {
                                    "const": "MORE_STICKERS"
                                },
                                {
                                    "const": "NEWS"
                                },
                                {
                                    "const": "PARTNERED"
                                },
                                {
                                    "const": "PREVIEW_ENABLED"
                                },
                                {
                                    "const": "RAID_ALERTS_DISABLED"
                                },
                                {
                                    "const": "ROLE_ICONS"
                                },
                                {
                                    "const": "ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE"
                                },
                                {
                                    "const": "ROLE_SUBSCRIPTIONS_ENABLED"
                                },
                                {
                                    "const": "TICKETED_EVENTS_ENABLED"
                                },
                                {
                                    "const": "VANITY_URL"
                                },
                                {
                                    "const": "VERIFIED"
                                },
                                {
                                    "const": "VIP_REGIONS"
                                },
                                {
                                    "const": "WELCOME_SCREEN_ENABLED"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "description": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "id",
                    "name",
                    "features"
                ],
                "title": "서버 정보",
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IRole": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "color": {
                        "type": "number"
                    },
                    "hoist": {
                        "type": "boolean"
                    },
                    "icon": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "unicode_emoji": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "position": {
                        "type": "number"
                    },
                    "permissions": {
                        "type": "string"
                    },
                    "managed": {
                        "type": "boolean"
                    },
                    "mentionable": {
                        "type": "boolean"
                    },
                    "tags": {
                        "$ref": "#/components/schemas/_namespace_swagger.IDiscord.ITags"
                    },
                    "flags": {
                        "type": "number"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "color",
                    "hoist",
                    "position",
                    "permissions",
                    "managed",
                    "mentionable",
                    "flags"
                ],
                "type": "object"
            },
            "_namespace_swagger.IDiscord.ITags": {
                "properties": {
                    "bot_id": {
                        "type": "string"
                    },
                    "integration_id": {
                        "type": "string"
                    },
                    "premium_subscriber": {
                        "type": "null"
                    },
                    "subscription_listing_id": {
                        "type": "number"
                    },
                    "available_for_purchase": {
                        "type": "null"
                    },
                    "guild_connections": {
                        "type": "null"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IModifyGuildRequest": {
                "properties": {
                    "name": {
                        "title": "수정할 이름",
                        "description": "수정할 서버 이름을 입력해주세요.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "discord",
                        "x-wrtn-secret-scopes": [
                            "bot"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "secretKey"
                ],
                "title": "서버 정보를 수정하기 위해 필요한 정보",
                "type": "object"
            },
            "_namespace_swagger.IDiscord.ISecret": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "discord",
                        "x-wrtn-secret-scopes": [
                            "bot"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IDiscord.ICreateGuildChannelRequest": {
                "properties": {
                    "name": {
                        "maxLength": 100,
                        "title": "채널 이름",
                        "description": "생성할 서버 이름을 입력해주세요.",
                        "type": "string"
                    },
                    "type": {
                        "description": "서버 유형을 선택해주세요.",
                        "title": "유형",
                        "oneOf": [
                            {
                                "title": "텍스트 채널",
                                "const": 0
                            },
                            {
                                "title": "DM 채널",
                                "const": 1
                            }
                        ]
                    },
                    "topic": {
                        "maxLength": 1024,
                        "title": "주제",
                        "description": "채널 주제를 입력해주세요.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "discord",
                        "x-wrtn-secret-scopes": [
                            "bot"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "type",
                    "secretKey"
                ],
                "title": "채널을 생성하기 위해 필요한 정보",
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IRemoveGuildMember": {
                "properties": {
                    "userId": {
                        "title": "멤버",
                        "description": "차단할 멤버를 선택해주세요.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:user.id, label:user.username}",
                            "method": "post",
                            "path": "connector/discord/get-list-guild-members"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "discord",
                        "x-wrtn-secret-scopes": [
                            "bot"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "userId",
                    "secretKey"
                ],
                "title": "멤버를 차단 하기 위해 필요한 정보",
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IModifyChannelRequest": {
                "properties": {
                    "name": {
                        "title": "수정할 채널 이름",
                        "description": "수정할 채널 이름을 입력해주세요.",
                        "type": "string"
                    },
                    "channelId": {
                        "title": "채널",
                        "description": "수정할 채널을 선택해주세요.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:name}",
                            "method": "post",
                            "path": "connector/discord/get-guild-channels"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "channelId"
                ],
                "title": "채널을 수정하기 위해 필요한 정보",
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IDeleteChannelRequest": {
                "properties": {
                    "channelId": {
                        "title": "채널",
                        "description": "삭제할 채널을 선택해주세요.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:name}",
                            "method": "post",
                            "path": "connector/discord/get-guild-channels"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "channelId"
                ],
                "title": "채널을 삭제하기 위해 필요한 정보",
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IMessage": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "channel_id": {
                        "type": "string"
                    },
                    "author": {
                        "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IUser"
                    },
                    "content": {
                        "type": "string"
                    },
                    "timestamp": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "edited_timestamp": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "date-time",
                                "type": "string"
                            }
                        ]
                    },
                    "tts": {
                        "type": "boolean"
                    },
                    "mention_everyone": {
                        "type": "boolean"
                    },
                    "mentions": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IUser"
                        },
                        "type": "array"
                    },
                    "mention_channels": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IChannelMention"
                        },
                        "type": "array"
                    },
                    "attachments": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IAttachment"
                        },
                        "type": "array"
                    },
                    "embeds": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IEmbed"
                        },
                        "type": "array"
                    },
                    "reactions": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IReaction"
                        },
                        "type": "array"
                    },
                    "pinned": {
                        "type": "boolean"
                    },
                    "type": {
                        "minimum": 0,
                        "maximum": 45,
                        "type": "integer"
                    },
                    "thread": {
                        "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IChannel"
                    }
                },
                "required": [
                    "id",
                    "channel_id",
                    "author",
                    "content",
                    "timestamp",
                    "tts",
                    "mention_everyone",
                    "mentions",
                    "attachments",
                    "embeds",
                    "pinned",
                    "type"
                ],
                "title": "메세지 정보",
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IChannelMention": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "type": {
                        "oneOf": [
                            {
                                "title": "텍스트 채널",
                                "const": 0
                            },
                            {
                                "title": "DM 채널",
                                "const": 1
                            }
                        ]
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "guild_id",
                    "type",
                    "name"
                ],
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IAttachment": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "conetnt_type": {
                        "type": "string"
                    },
                    "size": {
                        "type": "number"
                    },
                    "url": {
                        "type": "string"
                    },
                    "proxy_url": {
                        "type": "string"
                    },
                    "height": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "width": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "ephemeral": {
                        "type": "boolean"
                    },
                    "duration_secs": {
                        "type": "number"
                    },
                    "waveform": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "number"
                    }
                },
                "required": [
                    "id",
                    "filename",
                    "size",
                    "url",
                    "proxy_url"
                ],
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IEmbed": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "timestamp": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "color": {
                        "type": "number"
                    },
                    "footer": {
                        "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IEmbedFooter"
                    },
                    "image": {
                        "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IEmbedImage"
                    },
                    "thumbnail": {
                        "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IEmbedThumbnail"
                    },
                    "video": {
                        "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IEmbedVideo"
                    },
                    "provider": {
                        "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IEmbedProvider"
                    },
                    "author": {
                        "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IEmbedAuthor"
                    },
                    "fields": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IEmbedField"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IEmbedFooter": {
                "properties": {
                    "text": {
                        "type": "string"
                    },
                    "icon_url": {
                        "type": "string"
                    },
                    "proxy_icon_url": {
                        "type": "string"
                    }
                },
                "required": [
                    "text"
                ],
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IEmbedImage": {
                "properties": {
                    "url": {
                        "type": "string"
                    },
                    "proxy_url": {
                        "type": "string"
                    },
                    "height": {
                        "type": "number"
                    },
                    "width": {
                        "type": "number"
                    }
                },
                "required": [
                    "url"
                ],
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IEmbedThumbnail": {
                "properties": {
                    "url": {
                        "type": "string"
                    },
                    "proxy_url": {
                        "type": "string"
                    },
                    "height": {
                        "type": "number"
                    },
                    "width": {
                        "type": "number"
                    }
                },
                "required": [
                    "url"
                ],
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IEmbedVideo": {
                "properties": {
                    "url": {
                        "type": "string"
                    },
                    "proxy_url": {
                        "type": "string"
                    },
                    "height": {
                        "type": "number"
                    },
                    "width": {
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IEmbedProvider": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IEmbedAuthor": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "icon_url": {
                        "type": "string"
                    },
                    "proxy_icon_url": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IEmbedField": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "inline": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name",
                    "value"
                ],
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IReaction": {
                "properties": {
                    "count": {
                        "type": "number"
                    },
                    "count_details": {
                        "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IReactionCountDetails"
                    },
                    "me": {
                        "type": "boolean"
                    },
                    "me_burst": {
                        "type": "boolean"
                    },
                    "emoji": {
                        "$ref": "#/components/schemas/_namespace_swagger.PartialIDiscord.IEmoji"
                    },
                    "burst_colors": {
                        "additionalItems": false,
                        "prefixItems": [],
                        "type": "array"
                    }
                },
                "required": [
                    "count",
                    "count_details",
                    "me",
                    "me_burst",
                    "emoji",
                    "burst_colors"
                ],
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IReactionCountDetails": {
                "properties": {
                    "burst": {
                        "type": "number"
                    },
                    "normal": {
                        "type": "number"
                    }
                },
                "required": [
                    "burst",
                    "normal"
                ],
                "type": "object"
            },
            "_namespace_swagger.PartialIDiscord.IEmoji": {
                "properties": {
                    "id": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "name": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "roles": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "user": {
                        "$ref": "#/components/schemas/_namespace_swagger.IDiscord.IUser"
                    },
                    "require_colons": {
                        "type": "boolean"
                    },
                    "managed": {
                        "type": "boolean"
                    },
                    "animated": {
                        "type": "boolean"
                    },
                    "available": {
                        "type": "boolean"
                    }
                },
                "description": "Make all properties in T optional",
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IGetPinnedMessagesRequest": {
                "properties": {
                    "channelId": {
                        "title": "채널",
                        "description": "고정된 메세지를 가져올 채널을 선택해주세요.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:name}",
                            "method": "post",
                            "path": "connector/discord/get-guild-channels"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "channelId"
                ],
                "title": "고정된 메세지를 가져오기 위해 필요한 정보",
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IPinOrUnpinMessagesRequest": {
                "properties": {
                    "channelId": {
                        "title": "채널",
                        "description": "메세지를 고정 또는 고정 해제할 채널을 선택해주세요.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:name}",
                            "method": "post",
                            "path": "connector/discord/get-guild-channels"
                        },
                        "type": "string"
                    },
                    "messageId": {
                        "title": "메세지",
                        "description": "고정 또는 고정 해제할 메세지를 선택해주세요.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:content}",
                            "method": "post",
                            "path": "/connector/discord/get-channel-message-histories"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "channelId",
                    "messageId"
                ],
                "title": "메세지를 고정 또는 고정 해제하기 위해 필요한 정보",
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IGetChannelMessageHistoriesRequest": {
                "properties": {
                    "channelId": {
                        "title": "채널",
                        "description": "메세지 목록을 가져올 채널을 선택해주세요.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:name}",
                            "method": "post",
                            "path": "/connector/discord/get-guild-channels"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "channelId"
                ],
                "title": "채널의 메세지 목록을 가져오기 위해 필요한 정보",
                "type": "object"
            },
            "_namespace_swagger.IDiscord.ICreateMessageRequest": {
                "properties": {
                    "channelId": {
                        "title": "채널",
                        "description": "메세지를 생성할 채널을 선택해주세요.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:name}",
                            "method": "post",
                            "path": "/connector/discord/get-guild-channels"
                        },
                        "type": "string"
                    },
                    "content": {
                        "title": "메세지 내용",
                        "description": "메세지 내용을 입력해주세요.",
                        "type": "string"
                    }
                },
                "required": [
                    "channelId",
                    "content"
                ],
                "title": "메세지를 생성하기 위해 필요한 정보",
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IEditMessageRequest": {
                "properties": {
                    "channelId": {
                        "title": "채널",
                        "description": "메세지를 수정할 채널을 선택해주세요.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:name}",
                            "method": "post",
                            "path": "/connector/discord/get-guild-channels"
                        },
                        "type": "string"
                    },
                    "messageId": {
                        "title": "수정할 메세지",
                        "description": "수정할 메세지를 선택해주세요.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:content}",
                            "method": "post",
                            "path": "/connector/discord/get-channel-message-histories"
                        },
                        "type": "string"
                    },
                    "content": {
                        "title": "수정할 내용",
                        "description": "수정할 내용을 입력해주세요.",
                        "type": "string"
                    }
                },
                "required": [
                    "channelId",
                    "messageId",
                    "content"
                ],
                "title": "메세지 수정하기 위해 필요한 정보",
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IDeleteMessageRequest": {
                "properties": {
                    "channelId": {
                        "title": "채널",
                        "description": "메세지를 삭제할 채널을 선택해주세요.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:name}",
                            "method": "post",
                            "path": "/connector/discord/get-guild-channels"
                        },
                        "type": "string"
                    },
                    "messageId": {
                        "title": "삭제할 메세지",
                        "description": "삭제할 메세지를 선택해주세요",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:content}",
                            "method": "post",
                            "path": "/connector/discord/get-channel-message-histories"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "channelId",
                    "messageId"
                ],
                "title": "메세지 삭제하기 위해 필요한 정보",
                "type": "object"
            },
            "_namespace_swagger.IDiscord.IBulkDeleteMessagesRequest": {
                "properties": {
                    "channelId": {
                        "title": "채널",
                        "description": "메세지를 삭제할 채널을 선택해주세요.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:name}",
                            "method": "post",
                            "path": "/connector/discord/get-guild-channels"
                        },
                        "type": "string"
                    },
                    "messages": {
                        "title": "삭제할 메세지들",
                        "description": "삭제할 메세지들을 선택해주세요",
                        "items": {
                            "x-wrtn-prerequisite": {
                                "jmesPath": "[].{value:id, label:content}",
                                "method": "post",
                                "path": "/connector/discord/get-channel-message-histories"
                            },
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "channelId",
                    "messages"
                ],
                "title": "여러 개의 메세지를 한꺼번에 삭제하기 위해 필요한 정보",
                "type": "object"
            },
            "_namespace_swagger.ICalendly.CreateSchedulingLinkOutput": {
                "properties": {
                    "resource": {
                        "properties": {
                            "booking_url": {
                                "format": "iri",
                                "title": "Scheduling link url",
                                "type": "string"
                            },
                            "owner": {
                                "format": "iri",
                                "title": "owner\nA link to the resource that owns this Scheduling Link (currently, this is always an Event Type)",
                                "type": "string"
                            },
                            "owner_type": {
                                "title": "owner_type\nResource type (currently, this is always EventType)",
                                "const": "EventType"
                            }
                        },
                        "required": [
                            "booking_url",
                            "owner",
                            "owner_type"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "resource"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.CreateSchedulingLinkInput": {
                "properties": {
                    "owner": {
                        "format": "iri",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "calendly",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "owner",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.IGetEventTypeOutput": {
                "properties": {
                    "collection": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ICalendly.EventType"
                        },
                        "type": "array"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/_namespace_swagger.ICalendly.Pagination"
                    }
                },
                "required": [
                    "collection",
                    "pagination"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.EventType": {
                "properties": {
                    "uri": {
                        "format": "iri",
                        "title": "uri",
                        "description": "Canonical reference (unique identifier) for the event type.\nFor example, 'https://api.calendly.com/event_types/AAAAAAAAAAAAAAAA'",
                        "type": "string"
                    },
                    "name": {
                        "title": "name\nThe event type name (in human-readable format)",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "x-wrtn-placeholder": "15 Minute Meeting",
                                "type": "string"
                            }
                        ]
                    },
                    "active": {
                        "title": "active\nIndicates if the event is active or not.",
                        "type": "boolean"
                    },
                    "slug": {
                        "title": "slug\nThe portion of the event type's URL that identifies a specific web page (in a human-readable format)",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "x-wrtn-placeholder": "acmesales",
                                "type": "string"
                            }
                        ]
                    },
                    "scheduling_url": {
                        "format": "uri",
                        "title": "schduling_url\nThe URL of the user’s scheduling site where invitees book this event type",
                        "x-wrtn-placeholder": "https://calendly.com/acmesales",
                        "type": "string"
                    },
                    "duration": {
                        "title": "duration\nThe length of sessions booked with this event type",
                        "x-wrtn-placeholder": "30",
                        "type": "integer"
                    },
                    "kind": {
                        "title": "kind\nIndicates if the event type is \"solo\" (belongs to an individual user) or \"group\"",
                        "oneOf": [
                            {
                                "title": "solo",
                                "const": "solo"
                            },
                            {
                                "title": "group",
                                "const": "group"
                            }
                        ]
                    },
                    "pooling_type": {
                        "title": "pooling_type\nIndicates if the event type is \"round robin\" (alternates between hosts) or \"collective\" (invitees pick a time when all participants are available) or “multi-pool” (considers availability delineated by pools of participants) or \"null\" (the event type doesn’t consider the availability of a group participants)",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "title": "round_robin",
                                "const": "round_robin"
                            },
                            {
                                "title": "collective",
                                "const": "collective"
                            },
                            {
                                "title": "multi_pool",
                                "const": "multi_pool"
                            }
                        ]
                    },
                    "type": {
                        "title": "type\nIndicates if the event type is \"AdhocEventType\" (ad hoc event) or \"StandardEventType\" (standard event type)",
                        "oneOf": [
                            {
                                "title": "StandardEventType",
                                "const": "StandardEventType"
                            },
                            {
                                "title": "AdhocEventType",
                                "const": "AdhocEventType"
                            }
                        ]
                    },
                    "color": {
                        "pattern": "^#([0-9A-Fa-f]{6})$",
                        "title": "color\nThe hexadecimal color value of the event type's scheduling page",
                        "x-wrtn-placeholder": "#fff200",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "created_at\nThe moment the event type was created (e.g. \"2020-01-02T03:04:05.678123Z\")",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.Formatdate-time"
                            }
                        ]
                    },
                    "updated_at": {
                        "title": "updated_at\nThe moment the event type was last updated (e.g. \"2020-01-02T03:04:05.678123Z\")",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.Formatdate-time"
                            }
                        ]
                    },
                    "internal_note": {
                        "title": "internal_note\nContents of a note that may be associated with the event type",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "description_plain": {
                        "title": "description_plain\nThe event type's description (in non formatted text)",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "x-wrtn-placeholder": "15 Minute Meeting",
                                "type": "string"
                            }
                        ]
                    },
                    "description_html": {
                        "title": "description_html\nThe event type's description (formatted with HTML)",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "x-wrtn-placeholder": "<p>15 Minute Meeting</p>",
                                "type": "string"
                            }
                        ]
                    },
                    "profile": {
                        "title": "profile\nThe publicly visible profile of a User or a Team that's associated with the Event Type (note: some Event Types don't have profiles)",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.ICalendly.Profile"
                            }
                        ]
                    },
                    "secret": {
                        "title": "secret\nIndicates if the event type is hidden on the owner's main scheduling page",
                        "type": "boolean"
                    },
                    "booking_method": {
                        "title": "booking_method\nIndicates if the event type is for a poll or an instant booking",
                        "oneOf": [
                            {
                                "title": "instant",
                                "const": "instant"
                            },
                            {
                                "title": "poll",
                                "const": "poll"
                            }
                        ]
                    },
                    "custom_questions": {
                        "title": "custom_questions",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ICalendly.CustomQuestion"
                        },
                        "type": "array"
                    },
                    "deleted_at": {
                        "title": "deleted_at\nThe moment the event type was deleted (e.g. \"2020-01-02T03:04:05.678123Z\"). Since event types can be deleted but their scheduled events remain it's useful to fetch a deleted event type when you still require event type data for a scheduled event.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "date-time",
                                "type": "string"
                            }
                        ]
                    },
                    "admin_managed": {
                        "title": "admin_managed\nIndicates if this event type is managed by an organization admin",
                        "type": "boolean"
                    },
                    "locations": {
                        "title": "locations\nConfiguration information for each possible location for this Event Type",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ICalendly.Location"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "position": {
                        "title": "position\nPosition order of Event Type, starting with 0 (for display purposes)",
                        "type": "number"
                    }
                },
                "required": [
                    "uri",
                    "name",
                    "active",
                    "slug",
                    "scheduling_url",
                    "duration",
                    "kind",
                    "pooling_type",
                    "type",
                    "color",
                    "created_at",
                    "updated_at",
                    "internal_note",
                    "description_plain",
                    "description_html",
                    "profile",
                    "secret",
                    "booking_method",
                    "custom_questions",
                    "deleted_at",
                    "admin_managed",
                    "locations",
                    "position"
                ],
                "type": "object"
            },
            "_namespace_swagger.Formatdate-time": {
                "properties": {
                    "typia.tag": {
                        "properties": {
                            "target": {
                                "const": "string"
                            },
                            "kind": {
                                "const": "format"
                            },
                            "value": {
                                "const": "date-time"
                            },
                            "validate": {
                                "const": "/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])(T|\\s)([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](?:\\.[0-9]{1,9})?(Z|[+-]([01][0-9]|2[0-3]):[0-5][0-9])$/i.test($input)"
                            },
                            "exclusive": {
                                "additionalItems": false,
                                "prefixItems": [
                                    {
                                        "const": "format"
                                    },
                                    {
                                        "const": "pattern"
                                    }
                                ],
                                "type": "array"
                            },
                            "schema": {
                                "properties": {
                                    "format": {
                                        "const": "date-time"
                                    }
                                },
                                "required": [
                                    "format"
                                ],
                                "type": "object"
                            }
                        },
                        "required": [
                            "target",
                            "kind",
                            "value",
                            "validate",
                            "exclusive",
                            "schema"
                        ],
                        "title": "This is a dummy property for compilation",
                        "description": "This is a dummy property for compilation.\n\nIt does not mean anything in runtime.",
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.ICalendly.Profile": {
                "properties": {
                    "type": {
                        "title": "type\nIndicates if the profile belongs to a \"user\" (individual) or \"team\"",
                        "oneOf": [
                            {
                                "title": "User",
                                "const": "User"
                            },
                            {
                                "title": "Team",
                                "const": "Team"
                            }
                        ]
                    },
                    "name": {
                        "title": "name\nHuman-readable name for the profile of the user that's associated with the event type",
                        "x-wrtn-placeholder": "Tamara Jones",
                        "type": "string"
                    },
                    "owner": {
                        "format": "uri",
                        "title": "owner\nThe unique reference to the user associated with the profile",
                        "x-wrtn-placeholder": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "name",
                    "owner"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.CustomQuestion": {
                "properties": {
                    "name": {
                        "title": "name\nThe custom question that the host created for the event type.",
                        "type": "string"
                    },
                    "type": {
                        "title": "type\nThe type of response that the invitee provides to the custom question; can be one or multiple lines of text, a phone number, or single- or multiple-select.",
                        "oneOf": [
                            {
                                "title": "text",
                                "const": "text"
                            },
                            {
                                "title": "phone_number",
                                "const": "phone_number"
                            },
                            {
                                "title": "single_select",
                                "const": "single_select"
                            },
                            {
                                "title": "multi_select",
                                "const": "multi_select"
                            }
                        ]
                    },
                    "position": {
                        "title": "position\nThe numerical position of the question on the event booking page after the name and email address fields.",
                        "type": "number"
                    },
                    "enabled": {
                        "title": "enabled\ntrue if the question created by the host is turned ON and visible on the event booking page; false if turned OFF and invisible on the event booking page.",
                        "type": "boolean"
                    },
                    "required": {
                        "title": "required\ntrue if a response to the question created by the host is required for invitees to book the event type; false if not required.",
                        "type": "boolean"
                    },
                    "answer_choices": {
                        "title": "answer_choices\nThe invitee’s option(s) for single_select or multi_select type of responses.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "include_other": {
                        "title": "include_other\ntrue if the custom question lets invitees record a written response in addition to single-select or multiple-select type of responses; false if it doesn’t.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "name",
                    "type",
                    "position",
                    "enabled",
                    "required",
                    "answer_choices",
                    "include_other"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.Location": {
                "properties": {
                    "kind": {
                        "title": "kind",
                        "type": "string"
                    },
                    "phone_number": {
                        "title": "phone_number",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "additional_info": {
                        "title": "additional_info",
                        "type": "string"
                    }
                },
                "required": [
                    "kind"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.Pagination": {
                "properties": {
                    "count": {
                        "minimum": 0,
                        "maximum": 100,
                        "title": "count\nThe number of rows to return",
                        "x-wrtn-placeholder": "20",
                        "type": "integer"
                    },
                    "next_page": {
                        "title": "next_page\nURI to return the next page of an ordered list (\"null\" indicates no additional results are available)",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    },
                    "previous_page": {
                        "title": "previous_page\nURI to return the previous page of an ordered list (\"null\" indicates no additional results are available)",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    },
                    "next_page_token": {
                        "title": "next_page_token\nToken to return the next page of an ordered list (\"null\" indicates no additional results are available)",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    },
                    "previous_page_token": {
                        "title": "previous_page_token\nToken to return the previous page of an ordered list (\"null\" indicates no additional results are available)",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "count",
                    "next_page",
                    "previous_page",
                    "next_page_token",
                    "previous_page_token"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.IGetEventTypeInput": {
                "properties": {
                    "admin_managed": {
                        "title": "admin_managed\nReturn only admin managed event types if true, exclude admin managed event types if false, or include all event types if this parameter is omitted.",
                        "type": "boolean"
                    },
                    "organization": {
                        "format": "iri",
                        "title": "organization",
                        "description": "View available personal, team, and organization event types associated with the organization's URI.\nuser or organization must be filled.",
                        "type": "string"
                    },
                    "user": {
                        "format": "iri",
                        "title": "user",
                        "description": "View available personal, team, and organization event types associated with the user's URI.\nuser or organization must be filled.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "resource.{value:url, label:name}",
                            "method": "post",
                            "path": "/connector/calendly/users/get-me"
                        },
                        "type": "string"
                    },
                    "user_availability_schedule": {
                        "format": "iri",
                        "title": "user_availability_schedule",
                        "type": "string"
                    },
                    "active": {
                        "title": "active\nReturn only active event types if true, only inactive if false, or all event types if this parameter is omitted.",
                        "type": "boolean"
                    },
                    "count": {
                        "default": 20,
                        "minimum": 1,
                        "maximum": 100,
                        "title": "count\nThe number of rows to return",
                        "type": "integer"
                    },
                    "page_token": {
                        "title": "page_token\nThe token to pass to get the next or previous portion of the collection.",
                        "type": "string"
                    },
                    "sort": {
                        "description": "Order results by the specified field and direction. Accepts comma-separated list of {field}:{direction} values.\nSupported fields are: name, position, created_at, updated_at. Sort direction is specified as: asc, desc.\nIt must be one of: 'name:asc', 'name:desc', 'position:asc', 'position:desc', 'created_at:asc', 'created_at:desc', 'updated_at:asc', 'updated_at:desc'.",
                        "title": "sort",
                        "oneOf": [
                            {
                                "title": "이름 정순 정렬",
                                "const": "name:asc"
                            },
                            {
                                "title": "이름 역순 정렬",
                                "const": "name:desc"
                            },
                            {
                                "title": "위치 정순 정렬",
                                "const": "position:asc"
                            },
                            {
                                "title": "위치 역순 정렬",
                                "const": "position:desc"
                            },
                            {
                                "title": "생성일자 정순 정렬",
                                "const": "created_at:asc"
                            },
                            {
                                "title": "생성일자 역순 정렬",
                                "const": "created_at:desc"
                            },
                            {
                                "title": "수정일자 정순 정렬",
                                "const": "updated_at:asc"
                            },
                            {
                                "title": "수정일자 역순 정렬",
                                "const": "updated_at:desc"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "calendly",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.Secret": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "calendly",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.IGetOneScheduledEventOutput": {
                "properties": {
                    "resource": {
                        "title": "event",
                        "$ref": "#/components/schemas/_namespace_swagger.ICalendly.Event"
                    }
                },
                "required": [
                    "resource"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.Event": {
                "properties": {
                    "uuid": {
                        "title": "uuid\nuuid from url (ex. \"https://api.calendly.com/scheduled_events/:uuid\" )",
                        "type": "string"
                    },
                    "uri": {
                        "format": "iri",
                        "title": "uri",
                        "description": "Canonical reference (unique identifier) for the resource",
                        "type": "string"
                    },
                    "name": {
                        "description": "The event name",
                        "title": "name",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "x-wrtn-placeholder": "15 Minute Meeting",
                                "type": "string"
                            }
                        ]
                    },
                    "meeting_notes_plain": {
                        "description": "The internal meeting notes (in non formatted text)",
                        "title": "meeting_notes_plain",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "x-wrtn-placeholder": "15 Minute Meeting",
                                "type": "string"
                            }
                        ]
                    },
                    "meeting_notes_html": {
                        "description": "The internal meeting notes (formatted with HTML)",
                        "title": "meeting_notes_html",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "status": {
                        "description": "Indicates if the event is \"active\" or \"canceled\"",
                        "title": "status",
                        "oneOf": [
                            {
                                "title": "active",
                                "const": "active"
                            },
                            {
                                "title": "canceled",
                                "const": "canceled"
                            }
                        ]
                    },
                    "start_time": {
                        "format": "date-time",
                        "title": "start_time",
                        "description": "The moment the event was scheduled to start in UTC time",
                        "type": "string"
                    },
                    "end_time": {
                        "format": "date-time",
                        "title": "end_time",
                        "description": "The moment the event was scheduled to end in UTC time",
                        "type": "string"
                    },
                    "event_type": {
                        "format": "iri",
                        "title": "event_type",
                        "description": "Event Type URI",
                        "type": "string"
                    },
                    "location": {
                        "properties": {
                            "type": {
                                "title": "type\nIndicates that the event will be an in-person meeting.",
                                "oneOf": [
                                    {
                                        "const": "physical"
                                    },
                                    {
                                        "const": "custom"
                                    }
                                ]
                            },
                            "location": {
                                "title": "location",
                                "description": "The physical location specified by the event host (publisher)",
                                "type": "string"
                            },
                            "additional_info": {
                                "title": "additional_info",
                                "description": "추가 정보",
                                "type": "string"
                            }
                        },
                        "required": [
                            "type",
                            "location"
                        ],
                        "title": "location",
                        "description": "The event type associated with this event",
                        "type": "object"
                    },
                    "invitees_counter": {
                        "properties": {
                            "total": {
                                "title": "total\nTotal invitees for an event, including invitees that have canceled",
                                "type": "integer"
                            },
                            "active": {
                                "title": "active\nTotal invitees for an event that have not canceled",
                                "type": "integer"
                            },
                            "limit": {
                                "title": "limit\nMaximum number of active invitees that can book the event",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "total",
                            "active",
                            "limit"
                        ],
                        "title": "invitees_counter\nInvitees counter",
                        "type": "object"
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "created_at",
                        "description": "The moment when the event was created",
                        "type": "string"
                    },
                    "updated_at": {
                        "format": "date-time",
                        "title": "updated_at",
                        "description": "The moment when the event was last updated",
                        "type": "string"
                    },
                    "event_memberships": {
                        "title": "event_memberships\nEvent Membership List",
                        "items": {
                            "properties": {
                                "user": {
                                    "format": "iri",
                                    "title": "user",
                                    "description": "Canonical reference (unique identifier) for the user",
                                    "type": "string"
                                },
                                "user_email": {
                                    "format": "email",
                                    "title": "user_email",
                                    "description": "The user's email",
                                    "type": "string"
                                },
                                "user_name": {
                                    "title": "user_name",
                                    "description": "The user's name",
                                    "x-wrtn-placeholder": "John Smith",
                                    "type": "string"
                                },
                                "buffered_start_time": {
                                    "format": "date-time",
                                    "title": "buffered_start_time",
                                    "description": "The moment the membership's time buffer starts for the event in UTC time",
                                    "type": "string"
                                },
                                "buffered_end_time": {
                                    "format": "date-time",
                                    "title": "buffered_end_time",
                                    "description": "The moment the membership's time buffer ends for the event in UTC time",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user",
                                "user_email",
                                "user_name",
                                "buffered_start_time",
                                "buffered_end_time"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "event_guests": {
                        "title": "event_guests\nAdditional people added to an event by an invitee",
                        "items": {
                            "properties": {
                                "email": {
                                    "format": "email",
                                    "title": "email",
                                    "type": "string"
                                },
                                "created_at": {
                                    "format": "date-time",
                                    "title": "created_at",
                                    "type": "string"
                                },
                                "updated_at": {
                                    "format": "date-time",
                                    "title": "updated_at",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "email",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "cancellation": {
                        "title": "cancellation\nInformation about the calendar event from the calendar provider.",
                        "$ref": "#/components/schemas/_namespace_swagger.ICalendly.Cancellation"
                    }
                },
                "required": [
                    "uuid",
                    "uri",
                    "name",
                    "meeting_notes_plain",
                    "meeting_notes_html",
                    "status",
                    "start_time",
                    "end_time",
                    "event_type",
                    "location",
                    "invitees_counter",
                    "created_at",
                    "updated_at",
                    "event_memberships",
                    "event_guests"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.Cancellation": {
                "properties": {
                    "canceled_by": {
                        "title": "canceled_by\nName of the person whom canceled",
                        "type": "string"
                    },
                    "reason": {
                        "title": "reason\nReason that the cancellation occurred",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "canceler_type": {
                        "title": "canceler_type",
                        "oneOf": [
                            {
                                "title": "host",
                                "const": "host"
                            },
                            {
                                "title": "invitee",
                                "const": "invitee"
                            }
                        ]
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "created_at",
                        "description": "The moment when the cancellation was created",
                        "type": "string"
                    }
                },
                "required": [
                    "canceled_by",
                    "reason",
                    "canceler_type",
                    "created_at"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.IGetScheduledEventOutput": {
                "properties": {
                    "collection": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ICalendly.Event"
                        },
                        "type": "array"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/_namespace_swagger.ICalendly.Pagination"
                    }
                },
                "required": [
                    "collection",
                    "pagination"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.IGetScheduledEventInput": {
                "properties": {
                    "count": {
                        "default": 20,
                        "minimum": 1,
                        "maximum": 100,
                        "title": "count\nThe number of rows to return.",
                        "type": "integer"
                    },
                    "who": {
                        "description": "- If you are an administrator/owner of an organization, you can use both and to get a list of events for a specific user within an organization user.\n- If you are the administrator/owner of an organization, you can use both and to get a list of events for a specific group within an organization group.\n- User Only available for requesting private events; events within all organizations that are currently or previously affiliated are returned.",
                        "title": "Whose event is it?",
                        "oneOf": [
                            {
                                "properties": {
                                    "user": {
                                        "format": "iri",
                                        "title": "user",
                                        "description": "Return events that are scheduled with the user associated with this URI.\nThere must be either a user or a group.",
                                        "type": "string"
                                    },
                                    "group": {
                                        "format": "iri",
                                        "title": "group",
                                        "description": "Return events that are scheduled with the group associated with this URI.\nThere must be either a user or a group.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "user",
                                    "group"
                                ],
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "user": {
                                        "format": "iri",
                                        "title": "user",
                                        "description": "Return events that are scheduled with the user associated with this URI.\nThere must be either a user or a group.",
                                        "type": "string"
                                    },
                                    "group": {
                                        "format": "iri",
                                        "title": "group",
                                        "description": "Return events that are scheduled with the group associated with this URI.\nThere must be either a user or a group.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "user",
                                    "group"
                                ],
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "user": {
                                        "format": "iri",
                                        "title": "user",
                                        "description": "Return events that are scheduled with the user associated with this URI.\nThere must be either a user or a group.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "user"
                                ],
                                "type": "object"
                            }
                        ]
                    },
                    "organization": {
                        "format": "iri",
                        "title": "organization",
                        "description": "Return events that are scheduled with the organization associated with this URI.",
                        "type": "string"
                    },
                    "invitee_email": {
                        "format": "email",
                        "title": "invitee_email",
                        "description": "Return events that are scheduled with the invitee associated with this email address.",
                        "type": "string"
                    },
                    "max_start_time": {
                        "format": "date-time",
                        "title": "max_start_time",
                        "description": "Include events with start times prior to this time. This time should use the UTC timezone.",
                        "type": "string"
                    },
                    "min_start_time": {
                        "format": "date-time",
                        "title": "min_start_time",
                        "description": "Include events with start times after this time. This time should use the UTC timezone.",
                        "type": "string"
                    },
                    "page_token": {
                        "title": "page_token\nThe token to pass to get the next or previous portion of the collection.",
                        "type": "string"
                    },
                    "sort": {
                        "description": "Order results by the specified field and direction. Accepts comma-separated list of {field}:{direction} values.\nSupported fields are: start_time. Sort direction is specified as: asc, desc.",
                        "title": "sort",
                        "oneOf": [
                            {
                                "title": "시작 시간 정순 정렬",
                                "const": "start_time:asc"
                            },
                            {
                                "title": "시작 시간 역순 정렬",
                                "const": "start_time:desc"
                            }
                        ]
                    },
                    "status": {
                        "description": "Whether the scheduled event is active or canceled.\nAllowed values: active, canceled.",
                        "title": "status",
                        "oneOf": [
                            {
                                "title": "active",
                                "const": "active"
                            },
                            {
                                "title": "canceled",
                                "const": "canceled"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "calendly",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "who",
                    "secretKey"
                ],
                "title": "Conditions for querying scheduled events",
                "type": "object"
            },
            "_namespace_swagger.ICalendly.ICheckNoShowOutput": {
                "properties": {
                    "resource": {
                        "$ref": "#/components/schemas/_namespace_swagger.ICalendly.NoShow"
                    }
                },
                "required": [
                    "resource"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.NoShow": {
                "properties": {
                    "url": {
                        "format": "iri",
                        "title": "url\nCanonical reference (unique identifier) for the no show",
                        "type": "string"
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "created_at",
                        "description": "The moment when the no show was created",
                        "type": "string"
                    }
                },
                "required": [
                    "url",
                    "created_at"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.IGetOneScheduledEventInviteeOutput": {
                "properties": {
                    "resource": {
                        "$ref": "#/components/schemas/_namespace_swagger.ICalendly.Invitee"
                    }
                },
                "required": [
                    "resource"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.Invitee": {
                "properties": {
                    "uuid": {
                        "title": "uuid\nuuid from \"https://calendly.com/scheduled_events/AAAAAAAAAAAAAAAA/invitees/:uuid\"",
                        "type": "string"
                    },
                    "uri": {
                        "format": "iri",
                        "title": "uri",
                        "description": "Canonical reference (unique identifier) for the invitee",
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "title": "email",
                        "description": "The invitee’s email address",
                        "type": "string"
                    },
                    "first_name": {
                        "description": "The first name of the invitee who booked the event when the event type is configured to use separate fields for first name and last name. Null when event type is configured to use a single field for name.",
                        "title": "first_name",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "last_name": {
                        "description": "The last name of the invitee who booked the event when the event type is configured to use separate fields for first name and last name. Null when event type is configured to use a single field for name.",
                        "title": "last_name",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "name": {
                        "title": "name",
                        "description": "The invitee’s name (in human-readable format)",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates if the invitee is \"active\" or \"canceled\"",
                        "title": "status",
                        "oneOf": [
                            {
                                "title": "active",
                                "const": "active"
                            },
                            {
                                "title": "canceled",
                                "const": "canceled"
                            }
                        ]
                    },
                    "questions_and_answers": {
                        "title": "questions_and_answers\nA collection of the invitee's responses to questions on the event booking confirmation form",
                        "items": {
                            "properties": {
                                "question": {
                                    "title": "question\nA question on the invitee's booking form",
                                    "type": "string"
                                },
                                "answer": {
                                    "title": "answer\nThe invitee's answer to the question",
                                    "type": "string"
                                },
                                "position": {
                                    "title": "position\nThe position of the question in relation to others on the booking form",
                                    "type": "number"
                                }
                            },
                            "required": [
                                "question",
                                "answer",
                                "position"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "timezone": {
                        "title": "timezone\nTime zone to use when displaying time to the invitee",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "event": {
                        "format": "iri",
                        "title": "event",
                        "description": "A reference to the event",
                        "type": "string"
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "created_at",
                        "description": "The moment when the event was created",
                        "type": "string"
                    },
                    "updated_at": {
                        "format": "date-time",
                        "title": "updated_at",
                        "description": "The moment when the event was last updated",
                        "type": "string"
                    },
                    "tracking": {
                        "properties": {
                            "utm_campaign": {
                                "title": "utm_campaign\nThe UTM parameter used to track a campaign",
                                "oneOf": [
                                    {
                                        "type": "null"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "utm_source": {
                                "title": "utm_source\nThe UTM parameter that identifies the source (platform where the traffic originates)",
                                "oneOf": [
                                    {
                                        "type": "null"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "utm_medium": {
                                "title": "utm_medium\nThe UTM parameter that identifies the type of input (e.g. CPC, social media, etc.)",
                                "oneOf": [
                                    {
                                        "type": "null"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "utm_content": {
                                "title": "utm_content\nUTM content tracking parameter",
                                "oneOf": [
                                    {
                                        "type": "null"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "utm_term": {
                                "title": "utm_term\nThe UTM parameter used to track keywords",
                                "oneOf": [
                                    {
                                        "type": "null"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "salesforce_uuid": {
                                "title": "salesforce_uuid\nThe Salesforce record unique identifier",
                                "oneOf": [
                                    {
                                        "type": "null"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "required": [
                            "utm_campaign",
                            "utm_source",
                            "utm_medium",
                            "utm_content",
                            "utm_term",
                            "salesforce_uuid"
                        ],
                        "title": "tracking\nThe UTM and Salesforce tracking parameters associated with an invitee",
                        "type": "object"
                    },
                    "text_reminder_number": {
                        "description": "The phone number to use when sending text (SMS) reminders",
                        "title": "text_reminder_number",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "rescheduled": {
                        "title": "rescheduled\nIndicates if this invitee has rescheduled",
                        "type": "boolean"
                    },
                    "old_invitee": {
                        "title": "old_invitee\nReference to old Invitee instance that got rescheduled",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    },
                    "new_invitee": {
                        "title": "new_invitee\nLink to new invitee after reschedule",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    },
                    "cancel_url": {
                        "format": "iri",
                        "title": "cancel_url\nLink to cancelling the event for the invitee",
                        "type": "string"
                    },
                    "reschedule_url": {
                        "format": "iri",
                        "title": "reschedule_url\nLink to rescheduling the event for the invitee",
                        "type": "string"
                    },
                    "routing_form_submission": {
                        "description": "Reference to a routing form submission that redirected the invitee to a booking page.",
                        "title": "routing_form_submission",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    },
                    "cancellation": {
                        "title": "cancellation\nProvides data pertaining to the cancellation of the Event or the Invitee",
                        "$ref": "#/components/schemas/_namespace_swagger.ICalendly.Cancellation"
                    },
                    "payment": {
                        "title": "Invitee payment",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.ICalendly.Payment"
                            }
                        ]
                    },
                    "no_show": {
                        "title": "no_show\nProvides data pertaining to the associated no show for the Invitee",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.ICalendly.NoShow"
                            }
                        ]
                    },
                    "reconfirmation": {
                        "title": "reconfirmation\nAssuming reconfirmation is enabled for the event type, when reconfirmation is requested this object is present with a created_at that reflects when the reconfirmation notification was sent. Once the invitee has reconfirmed",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.ICalendly.Reconfirmation"
                            }
                        ]
                    },
                    "scheduling_method": {
                        "description": "The method used to schedule the event",
                        "title": "scheduling_method",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "title": "instant_book",
                                "const": "instant_book"
                            }
                        ]
                    },
                    "invitee_scheduled_by": {
                        "title": "invitee_scheduled_by\nReference to user URI who scheduled the event",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "uuid",
                    "uri",
                    "email",
                    "first_name",
                    "last_name",
                    "name",
                    "status",
                    "questions_and_answers",
                    "timezone",
                    "event",
                    "created_at",
                    "updated_at",
                    "tracking",
                    "text_reminder_number",
                    "rescheduled",
                    "old_invitee",
                    "new_invitee",
                    "cancel_url",
                    "reschedule_url",
                    "routing_form_submission",
                    "payment",
                    "no_show",
                    "reconfirmation",
                    "scheduling_method",
                    "invitee_scheduled_by"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.Payment": {
                "properties": {
                    "external_id": {
                        "title": "external_id\nUnique identifier for the payment",
                        "type": "string"
                    },
                    "provider": {
                        "title": "provider",
                        "description": "Payment provider",
                        "type": "string"
                    },
                    "amount": {
                        "title": "amount\nThe amount of the payment",
                        "type": "number"
                    },
                    "currency": {
                        "title": "currency\nThe currency format that the payment is in.",
                        "oneOf": [
                            {
                                "title": "AUD",
                                "const": "AUD"
                            },
                            {
                                "title": "CAD",
                                "const": "CAD"
                            },
                            {
                                "title": "EUR",
                                "const": "EUR"
                            },
                            {
                                "title": "GBP",
                                "const": "GBP"
                            },
                            {
                                "title": "USD",
                                "const": "USD"
                            }
                        ]
                    },
                    "terms": {
                        "description": "Terms of the payment",
                        "title": "terms",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "successful": {
                        "title": "successful\nIndicates whether the payment was successfully processed",
                        "type": "boolean"
                    }
                },
                "required": [
                    "external_id",
                    "provider",
                    "amount",
                    "currency",
                    "terms",
                    "successful"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.Reconfirmation": {
                "properties": {
                    "created_at": {
                        "format": "date-time",
                        "title": "created_at",
                        "description": "When the reconfirmation was created.",
                        "type": "string"
                    },
                    "confirmed_at": {
                        "description": "When the Invitee confirmed their attendance.",
                        "title": "confirmed_at",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "date-time",
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "created_at",
                    "confirmed_at"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.IGetScheduledEventInviteeOutput": {
                "properties": {
                    "collection": {
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ICalendly.Invitee"
                        },
                        "type": "array"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/_namespace_swagger.ICalendly.Pagination"
                    }
                },
                "required": [
                    "collection",
                    "pagination"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.IGetScheduledEventInviteeInput": {
                "properties": {
                    "scheduled_event_uuid": {
                        "title": "scheduled_event_uuid",
                        "type": "string"
                    },
                    "count": {
                        "default": 20,
                        "minimum": 1,
                        "maximum": 100,
                        "title": "count",
                        "description": "The number of rows to return (1 to 100)",
                        "type": "number"
                    },
                    "email": {
                        "format": "email",
                        "title": "email",
                        "description": "Filter results by email address (optional)",
                        "type": "string"
                    },
                    "page_token": {
                        "title": "page_token\nThe token to pass for pagination to get the next or previous portion of the collection",
                        "type": "string"
                    },
                    "sort": {
                        "description": "Order results by the `created_at` field and direction.\nAllowed values: \"asc\" for ascending, \"desc\" for descending.",
                        "title": "sort",
                        "oneOf": [
                            {
                                "title": "created_at:asc",
                                "const": "created_at:asc"
                            },
                            {
                                "title": "\"created_at:desc\"",
                                "const": "\"created_at:desc\""
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.Defaultcreated_atasc"
                            }
                        ]
                    },
                    "status": {
                        "description": "Filter by invitee status (either \"active\" or \"canceled\").",
                        "title": "status",
                        "oneOf": [
                            {
                                "title": "active",
                                "const": "active"
                            },
                            {
                                "title": "canceled",
                                "const": "canceled"
                            }
                        ]
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "calendly",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "scheduled_event_uuid",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.Defaultcreated_atasc": {
                "properties": {
                    "typia.tag": {
                        "properties": {
                            "target": {
                                "const": "string"
                            },
                            "kind": {
                                "const": "default"
                            },
                            "value": {
                                "const": "created_at:asc"
                            },
                            "exclusive": {
                                "const": true
                            },
                            "schema": {
                                "properties": {
                                    "default": {
                                        "const": "created_at:asc"
                                    }
                                },
                                "required": [
                                    "default"
                                ],
                                "type": "object"
                            }
                        },
                        "required": [
                            "target",
                            "kind",
                            "value",
                            "exclusive",
                            "schema"
                        ],
                        "title": "This is a dummy property for compilation",
                        "description": "This is a dummy property for compilation.\n\nIt does not mean anything in runtime.",
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "_namespace_swagger.ICalendly.ICreateOneOffEventTypeOutput": {
                "properties": {
                    "resource": {
                        "title": "EventType\nA configuration for an Event",
                        "$ref": "#/components/schemas/_namespace_swagger.ICalendly.EventType"
                    }
                },
                "required": [
                    "resource"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.ICreateOneOffEventTypeInput": {
                "properties": {
                    "name": {
                        "maxLength": 55,
                        "title": "name",
                        "description": "Event type name",
                        "x-wrtn-placeholder": "My Meeting",
                        "type": "string"
                    },
                    "host": {
                        "format": "uri",
                        "title": "host",
                        "description": "Host user uri",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "resource.{value:url, label:name}",
                            "method": "post",
                            "path": "/connector/calendly/users/get-me"
                        },
                        "type": "string"
                    },
                    "co_host": {
                        "maxItems": 9,
                        "title": "co_hosts\nCollection of meeting co-host(s) user URIs",
                        "items": {
                            "format": "iri",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "duration": {
                        "minimum": 1,
                        "maximum": 720,
                        "title": "duration\nDuration of meeting in minutes",
                        "type": "integer"
                    },
                    "timezone": {
                        "title": "timezone",
                        "description": "Time zone used for meeting. Defaults to host's time zone.",
                        "x-wrtn-placeholder": "America/New_York",
                        "type": "string"
                    },
                    "date_setting": {
                        "properties": {
                            "type": {
                                "title": "type",
                                "const": "date_range"
                            },
                            "start_date": {
                                "format": "date",
                                "title": "start_date\nAvailability start - Must be before end_date. Format: YYYY-MM-DD",
                                "type": "string"
                            },
                            "end_date": {
                                "format": "date",
                                "title": "end_date\nAvailability end - Must be a date in the future and less than 365 days in the future from start_date. Format: YYYY-MM-DD",
                                "type": "string"
                            }
                        },
                        "required": [
                            "type",
                            "start_date",
                            "end_date"
                        ],
                        "title": "date_setting\nOnly allow scheduling within a specified date range",
                        "type": "object"
                    },
                    "location": {
                        "properties": {
                            "kind": {
                                "title": "kind",
                                "const": "custom"
                            },
                            "location": {
                                "title": "location",
                                "type": "string"
                            }
                        },
                        "required": [
                            "kind",
                            "location"
                        ],
                        "title": "location\nInformation for a Custom Location",
                        "type": "object"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "calendly",
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "host",
                    "duration",
                    "date_setting",
                    "location",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.IGetUserInfoOutput": {
                "properties": {
                    "resource": {
                        "$ref": "#/components/schemas/_namespace_swagger.ICalendly.User"
                    }
                },
                "required": [
                    "resource"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICalendly.User": {
                "properties": {
                    "uri": {
                        "format": "iri",
                        "title": "uri",
                        "description": "Canonical reference (unique identifier) for the user",
                        "type": "string"
                    },
                    "name": {
                        "title": "name",
                        "description": "The user's name (human-readable format)",
                        "type": "string"
                    },
                    "slug": {
                        "title": "slug",
                        "description": "The portion of URL for the user's scheduling page (where invitees book sessions)",
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "title": "email",
                        "description": "The user's email address",
                        "type": "string"
                    },
                    "scheduling_url": {
                        "format": "iri",
                        "title": "scheduling_url",
                        "description": "The URL of the user's Calendly landing page (that lists all the user's event types)",
                        "type": "string"
                    },
                    "timezone": {
                        "title": "timezone",
                        "description": "The time zone to use when presenting time to the user",
                        "x-wrtn-placeholder": "Asia/Tokyo",
                        "type": "string"
                    },
                    "avatar_url": {
                        "description": "The URL of the user's avatar (image). Can be null.",
                        "title": "avatar_url",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "format": "iri",
                                "type": "string"
                            }
                        ]
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "created_at",
                        "description": "The moment when the user's record was created",
                        "type": "string"
                    },
                    "updated_at": {
                        "format": "date-time",
                        "title": "updated_at",
                        "description": "The moment when the user's record was last updated",
                        "type": "string"
                    },
                    "current_organization": {
                        "format": "iri",
                        "title": "current_organization",
                        "description": "A unique reference to the user's current organization",
                        "type": "string"
                    },
                    "resource_type": {
                        "title": "resource_type",
                        "description": "Resource type to support polymorphic associations",
                        "type": "string"
                    }
                },
                "required": [
                    "uri",
                    "name",
                    "slug",
                    "email",
                    "scheduling_url",
                    "timezone",
                    "avatar_url",
                    "created_at",
                    "updated_at",
                    "current_organization",
                    "resource_type"
                ],
                "title": "user\nInformation about the user.",
                "type": "object"
            },
            "_namespace_swagger.IAISearch.IRequest": {
                "properties": {
                    "search_query": {
                        "maxLength": 100,
                        "title": "Search term",
                        "description": "Please enter your search term.",
                        "type": "string"
                    }
                },
                "required": [
                    "search_query"
                ],
                "title": "Conditions required for search",
                "type": "object"
            },
            "_namespace_swagger.ITypeform.ICreateWorkspaceOutput": {
                "properties": {
                    "id": {
                        "title": "Workspace id",
                        "description": "The generated workspace id.",
                        "type": "string"
                    },
                    "name": {
                        "title": "Workspace name",
                        "description": "The name of the generated workspace.",
                        "type": "string"
                    },
                    "link": {
                        "title": "Workspace Link",
                        "description": "Here is the generated workspace link.",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "link"
                ],
                "type": "object"
            },
            "_namespace_swagger.ITypeform.ICreateWorkspaceInput": {
                "properties": {
                    "name": {
                        "title": "Workspace name",
                        "description": "The name of the workspace to be created.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "typeform",
                        "x-wrtn-secret-scopes": [
                            "accounts:read",
                            "forms:read",
                            "forms:write",
                            "images:read",
                            "images:write",
                            "responses:read",
                            "responses:write",
                            "themes:read",
                            "themes:write",
                            "workspaces:read",
                            "workspaces:write"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ITypeform.ISecret": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "typeform",
                        "x-wrtn-secret-scopes": [
                            "accounts:read",
                            "forms:read",
                            "forms:write",
                            "images:read",
                            "images:write",
                            "responses:read",
                            "responses:write",
                            "themes:read",
                            "themes:write",
                            "workspaces:read",
                            "workspaces:write"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ITypeform.IFindWorkspaceOutput": {
                "properties": {
                    "workspace_id": {
                        "title": "Workspace id",
                        "description": "The id of the workspace that was read.",
                        "type": "string"
                    },
                    "name": {
                        "title": "Workspace name",
                        "description": "The name of the workspace you're reading from.",
                        "type": "string"
                    },
                    "link": {
                        "title": "Workspace Link",
                        "description": "Here is a link to the workspace you've read.",
                        "type": "string"
                    }
                },
                "required": [
                    "workspace_id",
                    "name",
                    "link"
                ],
                "type": "object"
            },
            "_namespace_swagger.ITypeform.ICreateFormOutput": {
                "properties": {
                    "id": {
                        "title": "form id",
                        "description": "The id of the generated form.",
                        "type": "string"
                    },
                    "name": {
                        "title": "Form name",
                        "description": "The name of the generated form.",
                        "type": "string"
                    },
                    "type": {
                        "title": "Form Type",
                        "description": "The type of the generated form.",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type"
                ],
                "type": "object"
            },
            "_namespace_swagger.ITypeform.ICreateEmptyFormInput": {
                "properties": {
                    "name": {
                        "title": "Form title",
                        "description": "The title of the form to be created.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "typeform",
                        "x-wrtn-secret-scopes": [
                            "accounts:read",
                            "forms:read",
                            "forms:write",
                            "images:read",
                            "images:write",
                            "responses:read",
                            "responses:write",
                            "themes:read",
                            "themes:write",
                            "workspaces:read",
                            "workspaces:write"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ITypeform.IFindFormOutput": {
                "properties": {
                    "formId": {
                        "title": "form id",
                        "description": "The id of the form being read.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:formId, label:name || 'form title'}",
                            "method": "post",
                            "path": "/connector/typeform/get-forms"
                        },
                        "type": "string"
                    },
                    "name": {
                        "title": "Form name",
                        "description": "The name of the form being read.",
                        "type": "string"
                    }
                },
                "required": [
                    "formId",
                    "name"
                ],
                "type": "object"
            },
            "_namespace_swagger.ITypeform.IDuplicateExistingFormInput": {
                "properties": {
                    "formId": {
                        "title": "form",
                        "description": "The form to update the values.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:formId, label:name || 'form title'}",
                            "method": "post",
                            "path": "/connector/typeform/get-forms"
                        },
                        "type": "string"
                    },
                    "workspaceLink": {
                        "title": "Workspace Link",
                        "description": "The workspace link to duplicate the form.",
                        "type": "string"
                    },
                    "name": {
                        "title": "Form name",
                        "description": "The name of the form to be cloned and created.",
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "typeform",
                        "x-wrtn-secret-scopes": [
                            "accounts:read",
                            "forms:read",
                            "forms:write",
                            "images:read",
                            "images:write",
                            "responses:read",
                            "responses:write",
                            "themes:read",
                            "themes:write",
                            "workspaces:read",
                            "workspaces:write"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "formId",
                    "workspaceLink",
                    "name",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ITypeform.IFieldInfoForUpdateFieldValueOutput": {
                "properties": {
                    "id": {
                        "title": "field",
                        "description": "Field to update value",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:name || 'field title'}",
                            "method": "post",
                            "path": "/connector/typeform/forms/get-update-form-fields"
                        },
                        "type": "string"
                    },
                    "name": {
                        "title": "Field name",
                        "description": "The name of the field whose value is to be updated.",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name"
                ],
                "type": "object"
            },
            "_namespace_swagger.ITypeform.IGetFieldForUpdateFieldValueInput": {
                "properties": {
                    "formId": {
                        "title": "field id",
                        "description": "The id of the field whose value you want to update.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:formId, label:name || 'form title'}",
                            "method": "post",
                            "path": "/connector/typeform/get-forms"
                        },
                        "type": "string"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "typeform",
                        "x-wrtn-secret-scopes": [
                            "accounts:read",
                            "forms:read",
                            "forms:write",
                            "images:read",
                            "images:write",
                            "responses:read",
                            "responses:write",
                            "themes:read",
                            "themes:write",
                            "workspaces:read",
                            "workspaces:write"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "formId",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.ITypeform.IUpdateFormFieldValueOutput": {
                "properties": {
                    "fields": {
                        "title": "Information about the field whose value has been updated",
                        "description": "Information about the field whose value has been updated.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ITypeform.IFieldInformation"
                        },
                        "type": "array"
                    },
                    "formId": {
                        "title": "form id",
                        "description": "The id of the form being read.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:formId, label:name || 'form title'}",
                            "method": "post",
                            "path": "/connector/typeform/get-forms"
                        },
                        "type": "string"
                    },
                    "name": {
                        "title": "Form name",
                        "description": "The name of the form being read.",
                        "type": "string"
                    }
                },
                "required": [
                    "fields",
                    "formId",
                    "name"
                ],
                "type": "object"
            },
            "_namespace_swagger.ITypeform.IFieldInformation": {
                "properties": {
                    "value": {
                        "title": "field value",
                        "description": "The value of the updated field.",
                        "type": "string"
                    },
                    "id": {
                        "title": "field",
                        "description": "Field to update value",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:name || 'field title'}",
                            "method": "post",
                            "path": "/connector/typeform/forms/get-update-form-fields"
                        },
                        "type": "string"
                    },
                    "name": {
                        "title": "Field name",
                        "description": "The name of the field whose value is to be updated.",
                        "type": "string"
                    }
                },
                "required": [
                    "value",
                    "id",
                    "name"
                ],
                "type": "object"
            },
            "_namespace_swagger.ITypeform.IUpdateFormFieldValueInput": {
                "properties": {
                    "formId": {
                        "title": "form",
                        "description": "The form to update the values.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:formId, label:name || 'form title'}",
                            "method": "post",
                            "path": "/connector/typeform/get-forms"
                        },
                        "type": "string"
                    },
                    "fieldId": {
                        "title": "The field whose value is to be updated",
                        "description": "The field whose value is to be updated.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "[].{value:id, label:name || 'field title'}",
                            "method": "post",
                            "path": "/connector/typeform/forms/get-update-form-fields"
                        },
                        "type": "string"
                    },
                    "value": {
                        "title": "field value",
                        "description": "The value of the field to update.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "typeform",
                        "x-wrtn-secret-scopes": [
                            "accounts:read",
                            "forms:read",
                            "forms:write",
                            "images:read",
                            "images:write",
                            "responses:read",
                            "responses:write",
                            "themes:read",
                            "themes:write",
                            "workspaces:read",
                            "workspaces:write"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "formId",
                    "fieldId",
                    "value",
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IMarp.IConvertOutput": {
                "properties": {
                    "s3Link": {
                        "title": "S3 link",
                        "description": "S3 link for the converted PPT.",
                        "type": "string"
                    }
                },
                "required": [
                    "s3Link"
                ],
                "title": "Marp conversion output",
                "type": "object"
            },
            "_namespace_swagger.IMarp.IConvertInput": {
                "properties": {
                    "markdown": {
                        "title": "Marp markdown",
                        "description": "Marp markdown input string.",
                        "type": "string"
                    }
                },
                "required": [
                    "markdown"
                ],
                "title": "Parameters for Marp conversion",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.CrunchbaseResponse": {
                "properties": {
                    "description": {
                        "title": "description",
                        "type": "string"
                    },
                    "status": {
                        "title": "status code",
                        "type": "number"
                    },
                    "data": {
                        "title": "data",
                        "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.OrganizationData"
                    }
                },
                "required": [
                    "description",
                    "status",
                    "data"
                ],
                "title": "Crunchbase Response",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.OrganizationData": {
                "properties": {
                    "organizationExists": {
                        "title": "organizationExists",
                        "type": "boolean"
                    },
                    "organization": {
                        "title": "Orgnization Info",
                        "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.Organization"
                    }
                },
                "required": [
                    "organizationExists",
                    "organization"
                ],
                "title": "Orgnization Data",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.Organization": {
                "properties": {
                    "id": {
                        "title": "Unique identifier of the organization",
                        "description": "A unique string representing the organization in Crunchbase.",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name of the organization",
                        "description": "The official name of the organization.",
                        "type": "string"
                    },
                    "url": {
                        "title": "URL to the organization's Crunchbase page",
                        "description": "A link to the organization's profile on Crunchbase.",
                        "type": "string"
                    },
                    "rank_company": {
                        "description": "The position of the company relative to others in Crunchbase based on certain metrics.",
                        "title": "Ranking of the company",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "locations": {
                        "description": "The physical addresses of the company's offices or facilities.",
                        "title": "List of locations where the organization operates",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.Location"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "address": {
                        "title": "Address of the organization",
                        "description": "The primary physical address of the company.",
                        "type": "string"
                    },
                    "about": {
                        "title": "Short description of the organization",
                        "description": "A brief summary of what the company does.",
                        "type": "string"
                    },
                    "full_description": {
                        "description": "A detailed explanation of the company's operations, history, and business model.",
                        "title": "Full description of the organization",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "industries": {
                        "title": "List of industries the organization is involved in",
                        "description": "The sectors or markets where the company operates.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "operating_status": {
                        "title": "Current operating status of the organization",
                        "description": "Indicates whether the company is active, inactive, or has another status.",
                        "type": "string"
                    },
                    "founded_date": {
                        "title": "Date the organization was founded\n\nThe founding year or date of the company.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "company_type": {
                        "title": "Type of company (e.g., Private, Public)\n\nThe legal or business classification of the company.",
                        "type": "string"
                    },
                    "social_media": {
                        "title": "List of the organization's social media profiles\n\nLinks to the company's social media accounts.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.SocialMedia"
                        },
                        "type": "array"
                    },
                    "num_employees": {
                        "title": "Number of employees working for the organization\n\nA count or estimate of the company's workforce.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "website": {
                        "title": "The official website of the organization\n\nThe company's main website URL.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "ipo_status": {
                        "title": "IPO status of the organization\n\nIndicates whether the company is publicly traded or privately held.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "contact_email": {
                        "title": "Primary contact email for the organization\n\nThe main email address for contacting the company.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "contact_phone": {
                        "title": "Primary contact phone number for the organization\n\nThe main phone number for contacting the company.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "funding_info": {
                        "title": "Information about the organization's funding history\n\nDetails on the company's fundraising rounds, including investors and amounts raised.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.FundingInfo"
                        },
                        "type": "array"
                    },
                    "similar_companies": {
                        "title": "List of similar companies\n\nCompanies that share similarities in industry, business model, or other factors with the organization.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.SimilarCompany"
                        },
                        "type": "array"
                    },
                    "logo": {
                        "title": "Logo of the organization\n\nURL to the organization's logo image.",
                        "type": "string"
                    },
                    "semrush_monthly_visits": {
                        "title": "Monthly visits according to SEMrush\n\nThe number of visits the company's website receives, as reported by SEMrush.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "semrush_monthly_visits_growth": {
                        "title": "Monthly visit growth according to SEMrush\n\nThe percentage growth of monthly website visits compared to the previous month.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "semrush_last_updated": {
                        "title": "Date of the last SEMrush update\n\nThe date SEMrush last updated the visit data.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "num_contacts": {
                        "title": "Number of contacts the organization has\n\nThe total number of contacts within the organization.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "num_employee_profiles": {
                        "title": "Number of employee profiles\n\nThe total number of employee profiles available for the organization.",
                        "type": "number"
                    },
                    "total_active_products": {
                        "title": "Number of active products\n\nThe total count of products currently offered by the organization.",
                        "type": "number"
                    },
                    "num_news": {
                        "title": "Number of news articles about the organization\n\nThe total number of news mentions or articles about the company.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "funding_rounds": {
                        "title": "Funding round details for the organization\n\nInformation about the various rounds of funding the company has gone through.",
                        "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.FundingRounds"
                    },
                    "bombora_last_updated": {
                        "title": "Date of the last Bombora update\n\nThe date Bombora last updated the company's data.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "num_investors": {
                        "title": "Number of investors in the organization\n\nThe total number of investors who have invested in the company.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "legal_name": {
                        "title": "Legal name of the organization\n\nThe registered legal name of the company.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "num_event_appearances": {
                        "title": "num_event_appearances",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "num_acquisitions": {
                        "title": "num_acquisitions",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "num_investments": {
                        "title": "num_investments",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "num_advisor_positions": {
                        "title": "num_advisor_positions",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "num_exits": {
                        "title": "num_exits",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "num_investments_lead": {
                        "title": "num_investments_lead",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "num_sub_organizations": {
                        "title": "num_sub_organizations",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "num_alumni": {
                        "title": "num_alumni",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "num_founder_alumni": {
                        "title": "num_founder_alumni",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "num_diversity_spotlight_investments": {
                        "title": "num_diversity_spotlight_investments",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "num_funds": {
                        "title": "num_funds",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "stock_symbol": {
                        "title": "stock_symbol",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "event_appearances": {
                        "title": "event_appearances",
                        "items": {},
                        "type": "array"
                    },
                    "sub_organizations": {
                        "title": "sub_organizations",
                        "items": {},
                        "type": "array"
                    },
                    "alumni": {
                        "title": "alumni",
                        "items": {},
                        "type": "array"
                    },
                    "diversity_investments": {
                        "title": "diversity_investments",
                        "items": {},
                        "type": "array"
                    },
                    "funds": {
                        "title": "funds",
                        "items": {},
                        "type": "array"
                    },
                    "layoff": {
                        "title": "layoff",
                        "items": {},
                        "type": "array"
                    },
                    "contacts": {
                        "title": "Contact details of the organization\n\nThe primary contacts for the company, such as executives or HR.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.Contact"
                        },
                        "type": "array"
                    },
                    "ipo": {
                        "title": "IPO details of the organization\n\nInformation about the company's IPO, if it has one.",
                        "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.IPO"
                    },
                    "funds_total": {
                        "title": "Total Funds\n\nTotal amount of funds raised by the organization.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "properties": {
                                    "value": {
                                        "title": "value",
                                        "type": "number"
                                    },
                                    "currency": {
                                        "title": "currency",
                                        "type": "string"
                                    },
                                    "value_usd": {
                                        "title": "value_usd",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "value",
                                    "currency",
                                    "value_usd"
                                ],
                                "type": "object"
                            }
                        ]
                    },
                    "acquired_by": {
                        "title": "Acquisition Information\n\nDetails about the company that acquired this organization.",
                        "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.AcquiredBy"
                    },
                    "investor_type": {
                        "title": "Investor Type\n\nThe type or category of investors (e.g., Angel, Venture Capital).",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "investment_stage": {
                        "title": "Investment Stage\n\nThe stage at which the company receives investments (e.g., Seed, Series A).",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "current_employees": {
                        "title": "Current Employees\n\nList of employees currently working at the organization.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.CurrentEmployee"
                        },
                        "type": "array"
                    },
                    "semrush_location_list": {
                        "title": "SEMrush Location List\n\nList of locations according to SEMrush data.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.SemrushLocation"
                        },
                        "type": "array"
                    },
                    "siftery_products": {
                        "title": "Siftery Products\n\nList of products offered by the organization as recorded by Siftery.",
                        "items": {},
                        "type": "array"
                    },
                    "funding_rounds_list": {
                        "title": "Funding Rounds List\n\nInformation on various funding rounds the organization has been part of.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.FundingRound"
                        },
                        "type": "array"
                    },
                    "overview_timeline": {
                        "title": "Overview Timeline\n\nTimeline overview of the organization's key events and milestones.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.OverviewTimeline"
                        },
                        "type": "array"
                    },
                    "bombora": {
                        "title": "Bombora\n\nBombora data related to the organization's market intelligence.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.Bombora"
                        },
                        "type": "array"
                    },
                    "investors": {
                        "title": "Investors\n\nList of investors who have invested in the company.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.Investor"
                        },
                        "type": "array"
                    },
                    "acquisitions": {
                        "title": "Acquisitions\n\nInformation about companies the organization has acquired.",
                        "items": {},
                        "type": "array"
                    },
                    "funds_raised": {
                        "title": "Funds Raised\n\nDetails of the funds raised by the organization over time.",
                        "items": {},
                        "type": "array"
                    },
                    "investments": {
                        "title": "Investments\n\nInformation on the organization's investments in other companies.",
                        "items": {},
                        "type": "array"
                    },
                    "apptopia": {
                        "title": "Apptopia\n\nApptopia data for the organization's app performance or analytics.",
                        "items": {},
                        "type": "array"
                    },
                    "current_advisors": {
                        "title": "Current Advisors\n\nList of current advisors working with the organization.",
                        "items": {},
                        "type": "array"
                    },
                    "exits": {
                        "title": "Exits\n\nDetails on company exits (e.g., IPOs, acquisitions).",
                        "items": {},
                        "type": "array"
                    },
                    "news": {
                        "title": "News\n\nNews articles or mentions related to the organization.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.News"
                        },
                        "type": "array"
                    },
                    "aberdeen_it_spend": {
                        "title": "Aberdeen IT Spend\n\nIT spending data sourced from Aberdeen."
                    },
                    "headquarters_regions": {
                        "title": "Headquarters Regions\n\nGeographic regions where the organization's headquarters are located.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.HeadquartersRegion"
                        },
                        "type": "array"
                    },
                    "financials_highlights": {
                        "title": "Financial Highlights\n\nKey financial data points about the organization.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.FinancialsHighlights"
                            }
                        ]
                    },
                    "ipqwery": {
                        "title": "IPQwery\n\nData from IPQwery related to the organization's intellectual property.",
                        "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.IPQwery"
                    },
                    "overview_highlights": {
                        "title": "Overview Highlights\n\nSummary of key highlights in the organization's history and performance.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.OverviewHighlights"
                            }
                        ]
                    },
                    "people_highlights": {
                        "title": "People Highlights\n\nKey personnel highlights, such as notable employees or founders.",
                        "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.PeopleHighlights"
                    },
                    "technology_highlights": {
                        "title": "Technology Highlights\n\nInformation on the organization's technology stack or notable tech achievements.",
                        "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.TechnologyHighlights"
                    },
                    "founders": {
                        "title": "Founders\n\nList of founders of the organization.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.Founder"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "url",
                    "rank_company",
                    "locations",
                    "address",
                    "about",
                    "full_description",
                    "industries",
                    "operating_status",
                    "founded_date",
                    "company_type",
                    "social_media",
                    "num_employees",
                    "website",
                    "ipo_status",
                    "contact_email",
                    "contact_phone",
                    "funding_info",
                    "similar_companies",
                    "logo",
                    "semrush_monthly_visits",
                    "semrush_monthly_visits_growth",
                    "semrush_last_updated",
                    "num_contacts",
                    "num_employee_profiles",
                    "total_active_products",
                    "num_news",
                    "funding_rounds",
                    "bombora_last_updated",
                    "num_investors",
                    "legal_name",
                    "event_appearances",
                    "sub_organizations",
                    "alumni",
                    "diversity_investments",
                    "funds",
                    "layoff",
                    "contacts",
                    "ipo",
                    "acquired_by",
                    "current_employees",
                    "semrush_location_list",
                    "siftery_products",
                    "funding_rounds_list",
                    "overview_timeline",
                    "bombora",
                    "investors",
                    "acquisitions",
                    "funds_raised",
                    "investments",
                    "apptopia",
                    "current_advisors",
                    "exits",
                    "news",
                    "aberdeen_it_spend",
                    "headquarters_regions",
                    "financials_highlights",
                    "ipqwery",
                    "overview_highlights",
                    "people_highlights",
                    "technology_highlights",
                    "founders"
                ],
                "title": "Orgnization",
                "description": "Detailed Organization Info",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.Location": {
                "properties": {
                    "value": {
                        "title": "The value or name of the location\n\nThe specific name or address of the company's location.",
                        "type": "string"
                    },
                    "location_type": {
                        "title": "Type of the location\n\nThe category or function of this location (e.g., headquarters, branch).",
                        "type": "string"
                    }
                },
                "required": [
                    "value",
                    "location_type"
                ],
                "title": "Location",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.SocialMedia": {
                "properties": {
                    "name": {
                        "title": "Name of the social media platform\n\nThe name of the social platform where the company is active (e.g., Twitter, LinkedIn).",
                        "type": "string"
                    },
                    "link": {
                        "title": "Link to the company's social media profile\n\nThe URL to the company's social media account on the respective platform.",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "link"
                ],
                "title": "SocialMedia",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.FundingInfo": {
                "properties": {
                    "title": {
                        "title": "Title of the funding information\n\nThe name or title of the funding-related data.",
                        "type": "string"
                    },
                    "org_num": {
                        "title": "Number of organizations involved in the funding\n\nThe number of companies or investors involved.",
                        "type": "number"
                    },
                    "org_num_investors": {
                        "title": "Number of investors involved\n\nThe total count of investors participating in the funding.",
                        "type": "number"
                    },
                    "org_funding_total": {
                        "title": "Total funding amount\n\nThe total amount of funding raised in USD or another currency.",
                        "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.FundingTotal"
                    }
                },
                "required": [
                    "title",
                    "org_num",
                    "org_num_investors",
                    "org_funding_total"
                ],
                "title": "Funding Info",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.FundingTotal": {
                "properties": {
                    "value_usd": {
                        "title": "Total value in USD\n\nThe total amount of funding, expressed in US dollars.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "currency": {
                        "title": "Currency of the funding\n\nThe currency in which the funding is denominated.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "value": {
                        "title": "The raw value of the funding\n\nThe total value of the funding before conversion to USD.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    }
                },
                "required": [
                    "value_usd",
                    "currency",
                    "value"
                ],
                "title": "Funding Total",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.SimilarCompany": {
                "properties": {
                    "name": {
                        "title": "Name of the similar company\n\nThe name of a company that is similar to this organization.",
                        "type": "string"
                    },
                    "url": {
                        "title": "URL to the similar company's profile\n\nA link to the similar company's page on Crunchbase or other platform.",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "url"
                ],
                "title": "Similar Companies",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.FundingRounds": {
                "properties": {
                    "last_funding_at": {
                        "title": "Last Funding Date\n\nThe date of the last funding round.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "last_funding_type": {
                        "title": "Last Funding Type\n\nThe type of the last funding round.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "num_funding_rounds": {
                        "title": "Number of Funding Rounds\n\nThe total number of funding rounds.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "value": {
                        "title": "Value\n\nTotal amount of funds raised.",
                        "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.FundingTotal"
                    }
                },
                "required": [
                    "last_funding_at",
                    "last_funding_type",
                    "num_funding_rounds",
                    "value"
                ],
                "title": "Funding Rounds\n\nIncludes information about funding rounds.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.Contact": {
                "properties": {
                    "name": {
                        "title": "Name\n\nName of the contact person.",
                        "type": "string"
                    },
                    "linkedin_id": {
                        "title": "LinkedIn ID\n\nLinkedIn ID of the contact.",
                        "type": "string"
                    },
                    "levels": {
                        "title": "Levels\n\nJob levels of the contact person.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "departments": {
                        "title": "Departments\n\nThe department(s) the contact person is associated with."
                    }
                },
                "required": [
                    "name",
                    "linkedin_id",
                    "levels",
                    "departments"
                ],
                "title": "Contact\n\nIncludes information about the contact person.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.IPO": {
                "properties": {
                    "date": {
                        "title": "Date\n\nThe date of the IPO.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "stock_link": {
                        "title": "Stock Link\n\nURL link to the stock.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "stock_symbol": {
                        "title": "Stock Symbol\n\nThe stock symbol (ticker).",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "title": "IPO\n\nIncludes information about the company's IPO (Initial Public Offering).",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.AcquiredBy": {
                "properties": {
                    "acquirer": {
                        "title": "Acquirer\n\nThe name of the company that acquired this organization.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "acquirer_permalink": {
                        "title": "Acquirer Permalink\n\nURL permalink of the acquirer.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "acquisition_price": {
                        "title": "Acquisition Price\n\nThe price at which the company was acquired.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "date": {
                        "title": "Date\n\nThe date of the acquisition.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "transaction_name": {
                        "title": "Transaction Name\n\nThe name of the acquisition transaction.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "title": "Acquisition Information\n\nIncludes details about the acquisition.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.CurrentEmployee": {
                "properties": {
                    "image": {
                        "title": "Image\n\nURL of the employee's image.",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name\n\nThe employee's name.",
                        "type": "string"
                    },
                    "permalink": {
                        "title": "Permalink\n\nURL permalink to the employee's profile.",
                        "type": "string"
                    },
                    "title": {
                        "title": "Title\n\nThe employee's job title.",
                        "type": "string"
                    }
                },
                "required": [
                    "image",
                    "name",
                    "permalink",
                    "title"
                ],
                "title": "Current Employee\n\nIncludes details about current employees.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.SemrushLocation": {
                "properties": {
                    "locations": {
                        "title": "Location List\n\nList of detailed location information.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.LocationDetail"
                        },
                        "type": "array"
                    },
                    "rank": {
                        "title": "Rank\n\nThe rank of the location.",
                        "type": "number"
                    },
                    "rank_mom_pct": {
                        "title": "Rank MoM Percentage\n\nMonth-over-month percentage change in rank.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "visits_mom_pct": {
                        "title": "Visits MoM Percentage\n\nMonth-over-month percentage change in visits.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "visits_pct": {
                        "title": "Visits Percentage\n\nPercentage of total visits.",
                        "type": "number"
                    }
                },
                "required": [
                    "locations",
                    "rank",
                    "rank_mom_pct",
                    "visits_mom_pct",
                    "visits_pct"
                ],
                "title": "SEMrush Location\n\nIncludes information about SEMrush locations.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.LocationDetail": {
                "properties": {
                    "name": {
                        "title": "Name\n\nThe name of the location.",
                        "type": "string"
                    },
                    "permalink": {
                        "title": "Permalink\n\nURL permalink to the location details.",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "permalink"
                ],
                "title": "Location Detail\n\nIncludes detailed information about a specific location.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.FundingRound": {
                "properties": {
                    "announced_on": {
                        "title": "Announced Date\n\nThe date the funding round was announced.",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID\n\nUnique identifier for the funding round.",
                        "type": "string"
                    },
                    "image_id": {
                        "title": "image_id",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "num_investors": {
                        "title": "Number of Investors\n\nThe total number of investors in the funding round.",
                        "type": "number"
                    },
                    "lead_investors": {
                        "title": "Lead Investors\n\nList of lead investors in the funding round.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.LeadInvestor"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "money_raised": {
                        "title": "Money Raised\n\nThe total amount of money raised in this funding round.",
                        "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.FundingTotal"
                    }
                },
                "required": [
                    "announced_on",
                    "id",
                    "image_id",
                    "num_investors",
                    "lead_investors",
                    "money_raised"
                ],
                "title": "Funding Round\n\nIncludes information about specific funding rounds.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.LeadInvestor": {
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "title": "UUID",
                        "type": "string"
                    },
                    "image": {
                        "title": "Image\n\nURL of the investor's image.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "name": {
                        "title": "Name\n\nName of the lead investor.",
                        "type": "string"
                    },
                    "permalink": {
                        "title": "Permalink\n\nURL permalink to the lead investor's profile.",
                        "type": "string"
                    }
                },
                "required": [
                    "image",
                    "name",
                    "permalink"
                ],
                "title": "Lead Investor\n\nIncludes details about lead investors.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.OverviewTimeline": {
                "properties": {
                    "announced_on": {
                        "title": "Announced Date\n\nThe date the event was announced.",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID\n\nUnique identifier for the event.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "image_id": {
                        "title": "Image ID\n\nImage ID associated with the event.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "lead_investors": {
                        "title": "Lead Investors\n\nList of lead investors associated with this event.",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.LeadInvestor"
                        },
                        "type": "array"
                    },
                    "money_raised": {
                        "title": "Money Raised\n\nThe total amount of money raised in this event.",
                        "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.FundingTotal"
                    },
                    "title": {
                        "title": "Title\n\nThe title of the event.",
                        "type": "string"
                    },
                    "uuid": {
                        "format": "uuid",
                        "title": "UUID\n\nUnique identifier (UUID) for the event.",
                        "type": "string"
                    }
                },
                "required": [
                    "announced_on",
                    "lead_investors",
                    "money_raised",
                    "title",
                    "uuid"
                ],
                "title": "Overview Timeline\n\nIncludes information about the timeline of key events in the organization's history.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.Bombora": {
                "properties": {
                    "category": {
                        "title": "Category\n\nThe category of interest.",
                        "type": "string"
                    },
                    "score": {
                        "title": "Score\n\nBombora score for the topic.",
                        "type": "number"
                    },
                    "topic": {
                        "title": "Topic\n\nThe topic associated with the score.",
                        "type": "string"
                    },
                    "weeks_surging": {
                        "title": "Weeks Surging\n\nNumber of weeks the topic has been surging in popularity.",
                        "type": "number"
                    },
                    "wow_growth": {
                        "title": "WoW Growth\n\nWeek-over-week growth percentage.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    }
                },
                "required": [
                    "category",
                    "score",
                    "topic",
                    "weeks_surging"
                ],
                "title": "Bombora\n\nIncludes information from Bombora market intelligence data.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.Investor": {
                "properties": {
                    "funding_round": {
                        "title": "Funding Round\n\nDetails of the funding round this investor participated in.",
                        "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.FundingRoundDetail"
                    },
                    "id": {
                        "title": "ID\n\nUnique identifier for the investor.",
                        "type": "string"
                    },
                    "investor": {
                        "title": "Investor\n\nDetails about the investor.",
                        "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.InvestorDetail"
                    },
                    "lead_investor": {
                        "title": "Lead Investor\n\nIndicates whether the investor is a lead investor.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "boolean"
                            }
                        ]
                    },
                    "type": {
                        "title": "Type\n\nType of investment (e.g., equity, venture capital).",
                        "type": "string"
                    },
                    "value": {
                        "title": "Value\n\nThe value of the investment.",
                        "type": "string"
                    }
                },
                "required": [
                    "funding_round",
                    "id",
                    "investor",
                    "type",
                    "value"
                ],
                "title": "Investor\n\nIncludes details about the investors.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.FundingRoundDetail": {
                "properties": {
                    "id": {
                        "title": "ID\n\nUnique identifier for the funding round.",
                        "type": "string"
                    },
                    "image_id": {
                        "title": "image_id\n\nImage ID associated with the funding round.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "type": {
                        "title": "value\n\nThe type of the funding round.",
                        "type": "string"
                    },
                    "value": {
                        "title": "Value\n\nThe value of the funding round.",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "image_id",
                    "type",
                    "value"
                ],
                "title": "Funding Round Detail\n\nContains details of a funding round.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.InvestorDetail": {
                "properties": {
                    "id": {
                        "title": "ID\n\nUnique identifier for the investor.",
                        "type": "string"
                    },
                    "image_id": {
                        "title": "image_id\n\nImage ID associated with the investor.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "value": {
                        "title": "Value\n\nThe value associated with the investor.",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type\n\nThe type of the investor (e.g., Angel, Venture Capital, etc.).",
                        "type": "string"
                    },
                    "contact_info": {
                        "title": "Contact Information\n\nContact information for the investor.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "id",
                    "image_id",
                    "value",
                    "type"
                ],
                "title": "Investor Detail\n\nContains details of an investor.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.News": {
                "properties": {
                    "date": {
                        "title": "Date\n\nThe date of the news article.",
                        "type": "string"
                    },
                    "organization": {
                        "title": "Organization\n\nThe organization related to the news article.",
                        "type": "string"
                    },
                    "publisher": {
                        "title": "Publisher\n\nThe publisher of the news article.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "thumbnail_url": {
                        "title": "Thumbnail URL\n\nThe URL of the thumbnail image for the news article.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "title": {
                        "title": "Title\n\nThe title of the news article.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "url": {
                        "title": "URL\n\nThe URL of the news article.",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "date",
                    "organization",
                    "publisher",
                    "title",
                    "url"
                ],
                "title": "News\n\nRepresents news articles or mentions related to the organization.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.HeadquartersRegion": {
                "properties": {
                    "id": {
                        "title": "ID\n\nUnique identifier for the headquarters region.",
                        "type": "string"
                    },
                    "value": {
                        "title": "Value\n\nThe value or name of the headquarters region.",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "value"
                ],
                "title": "Headquarters Region\n\nRepresents the geographic region where the organization's headquarters are located.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.FinancialsHighlights": {
                "properties": {
                    "funding_total": {
                        "title": "funding_total\n\nThe total funding amount for the organization.",
                        "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.FundingTotal"
                    },
                    "num_funding_rounds": {
                        "title": "num_funding_rounds\n\nThe number of funding rounds for the organization.",
                        "type": "number"
                    },
                    "num_investors": {
                        "title": "num_investors\n\nThe number of investors in the organization.",
                        "type": "number"
                    },
                    "num_lead_investors": {
                        "title": "num_lead_investors\n\nThe number of lead investors in the organization.",
                        "type": "number"
                    },
                    "num_lead_investments": {
                        "title": "num_lead_investments\n\nThe number of lead investments by the organization.",
                        "type": "number"
                    },
                    "num_funds": {
                        "title": "num_funds\n\nThe number of funds managed by the organization.",
                        "type": "number"
                    },
                    "num_investments": {
                        "title": "num_investments\n\nThe number of investments made by the organization.",
                        "type": "number"
                    },
                    "listed_stock_symbol": {
                        "title": "listed_stock_symbol\n\nThe stock symbol of the organization, if listed.",
                        "type": "string"
                    },
                    "num_exits": {
                        "title": "num_exits\n\nThe number of exits by the organization.",
                        "type": "number"
                    }
                },
                "title": "Financials Highlights\n\nContains key financial data points about the organization.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.IPQwery": {
                "properties": {
                    "ipqwery_popular_patent_category": {
                        "title": "ipqwery_popular_patent_category\n\nThe most popular patent category for the organization.",
                        "type": "string"
                    },
                    "ipqwery_popular_trademark_class": {
                        "title": "ipqwery_popular_trademark_class\n\nThe most popular trademark class for the organization.",
                        "type": "string"
                    },
                    "ipqwery_num_trademark_registered": {
                        "title": "ipqwery_num_trademark_registered\n\nThe number of trademarks registered by the organization.",
                        "type": "number"
                    },
                    "ipqwery_num_patent_granted": {
                        "title": "ipqwery_num_patent_granted\n\nThe number of patents granted to the organization.",
                        "type": "number"
                    }
                },
                "title": "IPQwery\n\nContains data from IPQwery related to the organization's intellectual property.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.OverviewHighlights": {
                "properties": {
                    "num_org_similarities": {
                        "title": "num_org_similarities\n\nThe number of organizations similar to this one.",
                        "type": "number"
                    },
                    "num_current_positions": {
                        "title": "num_current_positions\n\nThe number of current positions within the organization.",
                        "type": "number"
                    },
                    "num_investments": {
                        "title": "num_investments\n\nThe number of investments made by the organization.",
                        "type": "number"
                    },
                    "listed_stock_symbol": {
                        "title": "listed_stock_symbol\n\nThe stock symbol of the organization, if listed.",
                        "type": "string"
                    },
                    "num_investors": {
                        "title": "num_investors\n\nThe number of investors in the organization.",
                        "type": "number"
                    },
                    "num_contacts": {
                        "title": "num_contacts\n\nThe number of contacts within the organization.",
                        "type": "number"
                    },
                    "funding_total": {
                        "title": "funding_total\n\nThe total funding amount for the organization.",
                        "$ref": "#/components/schemas/_namespace_swagger.ICrunchbase.FundingTotal"
                    }
                },
                "title": "Overview Highlights\n\nProvides a summary of key highlights in the organization's history and performance.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.PeopleHighlights": {
                "properties": {
                    "num_contacts": {
                        "title": "num_contacts\n\nThe number of contacts within the organization.",
                        "type": "number"
                    },
                    "num_current_advisor_positions": {
                        "title": "num_current_advisor_positions\n\nThe number of current advisor positions within the organization.",
                        "type": "number"
                    },
                    "num_current_positions": {
                        "title": "num_current_positions\n\nThe number of current positions within the organization.",
                        "type": "number"
                    }
                },
                "title": "People Highlights\n\nHighlights key personnel, such as notable employees or founders.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.TechnologyHighlights": {
                "properties": {
                    "apptopia_total_downloads": {
                        "title": "apptopia_total_downloads\n\nThe total number of downloads for the organization's apps, according to Apptopia.",
                        "type": "number"
                    },
                    "builtwith_num_technologies_used": {
                        "title": "builtwith_num_technologies_used\n\nThe number of technologies used by the organization, according to BuiltWith.",
                        "type": "number"
                    },
                    "semrush_visits_latest_month": {
                        "title": "semrush_visits_latest_month\n\nThe number of visits to the organization's website in the latest month, according to SEMrush.",
                        "type": "number"
                    },
                    "semrush_visits_mom_pct": {
                        "title": "semrush_visits_mom_pct\n\nThe month-over-month percentage change in visits to the organization's website, according to SEMrush.",
                        "type": "number"
                    },
                    "siftery_num_products": {
                        "title": "siftery_num_products\n\nThe number of products offered by the organization, according to Siftery.",
                        "type": "number"
                    }
                },
                "title": "Technology Highlights\n\nProvides information on the organization's technology stack or notable tech achievements.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.Founder": {
                "properties": {
                    "id": {
                        "title": "ID\n\nUnique identifier for the founder.",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type\n\nThe type of the founder (e.g., individual, organization).",
                        "type": "string"
                    },
                    "value": {
                        "title": "Value\n\nThe value or name of the founder.",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "value"
                ],
                "title": "Founder\n\nRepresents a founder of the organization.",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.IGetOrganizationDataInput": {
                "properties": {
                    "organization_identifier": {
                        "title": "organization_identifier",
                        "description": "Use the crashbase's autocomplete connector to find out the exact identifier of the company.\nTypically, there is no way to find out this identifier without a query, so call the autocomplete connector first.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": "data.entities[].{value:organization_identifier, label: organization_name}",
                            "method": "post",
                            "path": "connector/crunchbase/autocomplete"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "organization_identifier"
                ],
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.IAutocompleteOutput": {
                "properties": {
                    "description": {
                        "title": "Description",
                        "description": "A description of the autocomplete result, which is always \"OK\".",
                        "x-wrtn-placeholder": "OK",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "description": "The status code of the response, which is always 200 (success).",
                        "x-wrtn-placeholder": "200",
                        "type": "number"
                    },
                    "data": {
                        "properties": {
                            "entities": {
                                "title": "Entities",
                                "description": "An array of entities related to the organization.",
                                "items": {
                                    "properties": {
                                        "organization_identifier": {
                                            "title": "organization_identifier for crunchbase api",
                                            "description": "The unique identifier of the organization",
                                            "x-wrtn-placeholder": "wrtn-technologies",
                                            "type": "string"
                                        },
                                        "short_description": {
                                            "title": "short_description",
                                            "description": "A brief description of the organization",
                                            "type": "string"
                                        },
                                        "organization_name": {
                                            "title": "organization_name",
                                            "description": "The name of the organization",
                                            "x-wrtn-placeholder": "Wrtn Technologies",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "organization_identifier",
                                        "short_description",
                                        "organization_name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "hasEntities": {
                                "title": "hasEntities",
                                "description": "A flag indicating if there are any entities in the response.",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "entities",
                            "hasEntities"
                        ],
                        "title": "Response Data",
                        "type": "object"
                    }
                },
                "required": [
                    "description",
                    "status",
                    "data"
                ],
                "title": "Represents the output of an autocomplete response",
                "type": "object"
            },
            "_namespace_swagger.ICrunchbase.IAutocompleteInput": {
                "properties": {
                    "query": {
                        "title": "query",
                        "description": "As a search word, regardless of whether it is Korean or English, you can enter keywords related to the company you want to see.\nYou can use the company name to obtain an identifier that can be used by the company's name or Crunchbase.",
                        "type": "string"
                    }
                },
                "required": [
                    "query"
                ],
                "type": "object"
            },
            "_namespace_swagger.ISimilarweb.IGetDomainInfoOutput": {
                "properties": {
                    "description": {
                        "title": "Description",
                        "description": "Description of the domain information",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "description": "Status code of the response",
                        "type": "number"
                    },
                    "data": {
                        "title": "Data",
                        "description": "Detailed domain information",
                        "$ref": "#/components/schemas/_namespace_swagger.ISimilarweb.DomainInfo"
                    }
                },
                "required": [
                    "description",
                    "status",
                    "data"
                ],
                "title": "Output interface for getting domain information",
                "description": "Contains the response details for domain information retrieval",
                "type": "object"
            },
            "_namespace_swagger.ISimilarweb.DomainInfo": {
                "properties": {
                    "Version": {
                        "title": "Version",
                        "description": "Version number of the data",
                        "type": "number"
                    },
                    "SiteName": {
                        "title": "Site Name",
                        "description": "Name of the site",
                        "type": "string"
                    },
                    "Description": {
                        "title": "Description",
                        "description": "Description of the site",
                        "type": "string"
                    },
                    "TopCountryShares": {
                        "title": "Top Country Shares",
                        "description": "Shares of top countries",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ISimilarweb.TopCountryShare"
                        },
                        "type": "array"
                    },
                    "Title": {
                        "title": "Title",
                        "description": "Title of the site",
                        "type": "string"
                    },
                    "Engagments": {
                        "title": "Engagements",
                        "description": "Engagement metrics",
                        "$ref": "#/components/schemas/_namespace_swagger.ISimilarweb.Engagments"
                    },
                    "EstimatedMonthlyVisits": {
                        "title": "Estimated Monthly Visits",
                        "description": "Estimated monthly visits.\nKey is date(YYYY-MM-DD) format and value is number. (e.g. { \"2024-07-01\": number } )",
                        "$ref": "#/components/schemas/_namespace_swagger.Recordstringnumber"
                    },
                    "GlobalRank": {
                        "title": "Global Rank",
                        "description": "Global rank of the site",
                        "$ref": "#/components/schemas/_namespace_swagger.ISimilarweb.GlobalRank"
                    },
                    "CountryRank": {
                        "title": "Country Rank",
                        "description": "Country-specific rank",
                        "$ref": "#/components/schemas/_namespace_swagger.ISimilarweb.CountryRank"
                    },
                    "CategoryRank": {
                        "title": "Category Rank",
                        "description": "Category-specific rank",
                        "$ref": "#/components/schemas/_namespace_swagger.ISimilarweb.CategoryRank"
                    },
                    "GlobalCategoryRank": {
                        "title": "Global Category Rank",
                        "description": "Global category rank"
                    },
                    "IsSmall": {
                        "title": "Is Small",
                        "description": "Indicates if the site is small",
                        "type": "boolean"
                    },
                    "Policy": {
                        "title": "Policy",
                        "description": "Policy number",
                        "type": "number"
                    },
                    "TrafficSources": {
                        "title": "Traffic Sources",
                        "description": "Sources of traffic",
                        "$ref": "#/components/schemas/_namespace_swagger.ISimilarweb.TrafficSources"
                    },
                    "Category": {
                        "title": "Category",
                        "description": "Category of the site",
                        "type": "string"
                    },
                    "LargeScreenshot": {
                        "title": "Large Screenshot",
                        "description": "URL of the large screenshot",
                        "type": "string"
                    },
                    "IsDataFromGa": {
                        "title": "Is Data From GA",
                        "description": "Indicates if data is from Google Analytics",
                        "type": "boolean"
                    },
                    "Competitors": {
                        "title": "Competitors",
                        "description": "Competitors information",
                        "$ref": "#/components/schemas/_namespace_swagger.ISimilarweb.Competitors"
                    },
                    "Notification": {
                        "title": "Notification",
                        "description": "Notification details",
                        "$ref": "#/components/schemas/_namespace_swagger.ISimilarweb.Notification"
                    },
                    "TopKeywords": {
                        "title": "Top Keywords",
                        "description": "Top keywords for the site",
                        "items": {
                            "$ref": "#/components/schemas/_namespace_swagger.ISimilarweb.TopKeyword"
                        },
                        "type": "array"
                    },
                    "SnapshotDate": {
                        "title": "Snapshot Date",
                        "description": "Date of the snapshot",
                        "type": "string"
                    }
                },
                "required": [
                    "Version",
                    "SiteName",
                    "Description",
                    "TopCountryShares",
                    "Title",
                    "Engagments",
                    "EstimatedMonthlyVisits",
                    "GlobalRank",
                    "CountryRank",
                    "CategoryRank",
                    "GlobalCategoryRank",
                    "IsSmall",
                    "Policy",
                    "TrafficSources",
                    "Category",
                    "LargeScreenshot",
                    "IsDataFromGa",
                    "Competitors",
                    "Notification",
                    "TopKeywords",
                    "SnapshotDate"
                ],
                "title": "Domain Information",
                "description": "Detailed information about the domain",
                "type": "object"
            },
            "_namespace_swagger.ISimilarweb.TopCountryShare": {
                "properties": {
                    "Country": {
                        "title": "Country",
                        "description": "Country code as a number",
                        "type": "number"
                    },
                    "CountryCode": {
                        "title": "Country Code",
                        "description": "Country code as a string",
                        "type": "string"
                    },
                    "Value": {
                        "title": "Value",
                        "description": "Share value",
                        "type": "number"
                    }
                },
                "required": [
                    "Country",
                    "CountryCode",
                    "Value"
                ],
                "title": "Top Country Share",
                "description": "Information about top country shares",
                "type": "object"
            },
            "_namespace_swagger.ISimilarweb.Engagments": {
                "properties": {
                    "BounceRate": {
                        "title": "Bounce Rate",
                        "description": "Bounce rate percentage",
                        "type": "string"
                    },
                    "Month": {
                        "title": "Month",
                        "description": "Month of the data",
                        "type": "string"
                    },
                    "Year": {
                        "title": "Year",
                        "description": "Year of the data",
                        "type": "string"
                    },
                    "PagePerVisit": {
                        "title": "Page Per Visit",
                        "description": "Average pages per visit",
                        "type": "string"
                    },
                    "Visits": {
                        "title": "Visits",
                        "description": "Total visits",
                        "type": "string"
                    },
                    "TimeOnSite": {
                        "title": "Time On Site",
                        "description": "Average time spent on site",
                        "type": "string"
                    }
                },
                "required": [
                    "BounceRate",
                    "Month",
                    "Year",
                    "PagePerVisit",
                    "Visits",
                    "TimeOnSite"
                ],
                "title": "Engagements",
                "description": "Engagement metrics",
                "type": "object"
            },
            "_namespace_swagger.ISimilarweb.GlobalRank": {
                "properties": {
                    "Rank": {
                        "title": "Rank",
                        "description": "Rank number",
                        "type": "number"
                    }
                },
                "required": [
                    "Rank"
                ],
                "title": "Global Rank",
                "description": "Global rank information",
                "type": "object"
            },
            "_namespace_swagger.ISimilarweb.CountryRank": {
                "properties": {
                    "Country": {
                        "title": "Country",
                        "description": "Country code as a number",
                        "type": "number"
                    },
                    "CountryCode": {
                        "title": "Country Code",
                        "description": "Country code as a string",
                        "type": "string"
                    },
                    "Rank": {
                        "title": "Rank",
                        "description": "Rank number",
                        "type": "number"
                    }
                },
                "required": [
                    "Country",
                    "CountryCode",
                    "Rank"
                ],
                "title": "Country Rank",
                "description": "Country-specific rank information",
                "type": "object"
            },
            "_namespace_swagger.ISimilarweb.CategoryRank": {
                "properties": {
                    "Rank": {
                        "title": "Rank",
                        "description": "Rank number",
                        "type": "string"
                    },
                    "Category": {
                        "title": "Category",
                        "description": "Category name",
                        "type": "string"
                    }
                },
                "required": [
                    "Rank",
                    "Category"
                ],
                "title": "Category Rank",
                "description": "Category-specific rank information",
                "type": "object"
            },
            "_namespace_swagger.ISimilarweb.TrafficSources": {
                "properties": {
                    "Social": {
                        "title": "Social",
                        "description": "Percentage of traffic from social media",
                        "type": "number"
                    },
                    "Paid Referrals": {
                        "title": "Paid Referrals",
                        "description": "Percentage of traffic from paid referrals",
                        "type": "number"
                    },
                    "Mail": {
                        "title": "Mail",
                        "description": "Percentage of traffic from email",
                        "type": "number"
                    },
                    "Referrals": {
                        "title": "Referrals",
                        "description": "Percentage of traffic from referrals",
                        "type": "number"
                    },
                    "Search": {
                        "title": "Search",
                        "description": "Percentage of traffic from search engines",
                        "type": "number"
                    },
                    "Direct": {
                        "title": "Direct",
                        "description": "Percentage of direct traffic",
                        "type": "number"
                    }
                },
                "required": [
                    "Social",
                    "Paid Referrals",
                    "Mail",
                    "Referrals",
                    "Search",
                    "Direct"
                ],
                "title": "Traffic Sources",
                "description": "Traffic sources information",
                "type": "object"
            },
            "_namespace_swagger.ISimilarweb.Competitors": {
                "properties": {
                    "TopSimilarityCompetitors": {
                        "title": "Top Similarity Competitors",
                        "description": "List of top similarity competitors",
                        "items": {},
                        "type": "array"
                    }
                },
                "required": [
                    "TopSimilarityCompetitors"
                ],
                "title": "Competitors",
                "description": "Competitors information",
                "type": "object"
            },
            "_namespace_swagger.ISimilarweb.Notification": {
                "properties": {
                    "Content": {
                        "title": "Content",
                        "description": "Content of the notification"
                    }
                },
                "required": [
                    "Content"
                ],
                "title": "Notification",
                "description": "Notification details",
                "type": "object"
            },
            "_namespace_swagger.ISimilarweb.TopKeyword": {
                "properties": {
                    "Name": {
                        "title": "Name",
                        "description": "Keyword name",
                        "type": "string"
                    },
                    "EstimatedValue": {
                        "title": "Estimated Value",
                        "description": "Estimated value of the keyword",
                        "type": "number"
                    },
                    "Volume": {
                        "title": "Volume",
                        "description": "Search volume of the keyword",
                        "type": "number"
                    },
                    "Cpc": {
                        "description": "Cost per click for the keyword",
                        "title": "CPC",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    }
                },
                "required": [
                    "Name",
                    "EstimatedValue",
                    "Volume",
                    "Cpc"
                ],
                "title": "Top Keyword",
                "description": "Top keyword information",
                "type": "object"
            },
            "_namespace_swagger.ISimilarweb.IGetDomainInfoInput": {
                "properties": {
                    "domain": {
                        "title": "Domain\nDomain name to retrieve information for. (e.g, 'wrtn.ai' or 'https://wrtn.ai')",
                        "type": "string"
                    }
                },
                "required": [
                    "domain"
                ],
                "title": "Input interface for getting domain information",
                "description": "Contains the input parameters for domain information retrieval",
                "type": "object"
            },
            "_namespace_swagger.IX.IUserOutput": {
                "properties": {
                    "id": {
                        "title": "User ID",
                        "description": "The unique id of the user",
                        "type": "string"
                    },
                    "name": {
                        "title": "name",
                        "description": "The display name of the user",
                        "type": "string"
                    },
                    "userName": {
                        "title": "user name",
                        "description": "The user name of user",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "userName"
                ],
                "title": "User Information data",
                "type": "object"
            },
            "_namespace_swagger.IX.IUserInput": {
                "properties": {
                    "userName": {
                        "minItems": 1,
                        "title": "Twitter user name",
                        "description": "User name for search",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "secretKey": {
                        "x-wrtn-secret-key": "x",
                        "x-wrtn-secret-scopes": [
                            "tweet.read",
                            "tweet.write",
                            "users.read",
                            "follows.read",
                            "list.read"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "userName",
                    "secretKey"
                ],
                "title": "User Search Condition",
                "type": "object"
            },
            "_namespace_swagger.IX.ISecret": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "x",
                        "x-wrtn-secret-scopes": [
                            "tweet.read",
                            "tweet.write",
                            "users.read",
                            "follows.read",
                            "list.read"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    }
                },
                "required": [
                    "secretKey"
                ],
                "type": "object"
            },
            "_namespace_swagger.IX.IPrePareSummarizeTweetOutput": {
                "properties": {
                    "chatId": {
                        "title": "chat id",
                        "description": "Chat id required for RAG generation results.\nReturns the chat id for the analyzed file to generate chat results for the file analyzed by RAG.\nThe same chat id is required to analyze multiple files and generate results for multiple files in the same chat.",
                        "type": "string"
                    }
                },
                "required": [
                    "chatId"
                ],
                "title": "Prepare Summarize tweet results",
                "type": "object"
            },
            "_namespace_swagger.IX.IPrePareSummarizeTweetInput": {
                "properties": {
                    "secretKey": {
                        "x-wrtn-secret-key": "x",
                        "x-wrtn-secret-scopes": [
                            "tweet.read",
                            "tweet.write",
                            "users.read",
                            "follows.read",
                            "list.read"
                        ],
                        "title": "Select authentication information",
                        "description": "secret key.",
                        "type": "string"
                    },
                    "user": {
                        "title": "user",
                        "description": "User information for search user tweet time line",
                        "items": {
                            "properties": {
                                "userId": {
                                    "title": "user id",
                                    "description": "The unique id of the user for search user tweet time line",
                                    "x-wrtn-prerequisite": {
                                        "jmesPath": "[].{value:id, label:userName}",
                                        "method": "post",
                                        "path": "/connector/x/get-users"
                                    },
                                    "type": "string"
                                },
                                "name": {
                                    "title": "user name",
                                    "description": "The original user name",
                                    "x-wrtn-prerequisite": {
                                        "jmesPath": "[].{value:name, label:name}",
                                        "method": "post",
                                        "path": "/connector/x/get-users"
                                    },
                                    "type": "string"
                                },
                                "userName": {
                                    "title": "twitter user name",
                                    "description": "The user name of twitter",
                                    "x-wrtn-prerequisite": {
                                        "jmesPath": "[].{value:userName, label:userName}",
                                        "method": "post",
                                        "path": "/connector/x/get-users"
                                    },
                                    "type": "string"
                                }
                            },
                            "required": [
                                "userId",
                                "name",
                                "userName"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "secretKey",
                    "user"
                ],
                "type": "object"
            },
            "_namespace_swagger.IX.IGetChunkDocumentOutput": {
                "properties": {
                    "documents": {
                        "title": "Chunk Document List",
                        "description": "Chunk Document List",
                        "items": {
                            "properties": {
                                "id": {
                                    "title": "id",
                                    "description": "Chunk document id",
                                    "type": "string"
                                },
                                "text": {
                                    "title": "text",
                                    "description": "Chunk document text",
                                    "type": "string"
                                },
                                "score": {
                                    "description": "Chunk document score",
                                    "title": "score",
                                    "oneOf": [
                                        {
                                            "type": "null"
                                        },
                                        {
                                            "type": "number"
                                        }
                                    ]
                                },
                                "image": {
                                    "description": "Chunk document image",
                                    "title": "image",
                                    "oneOf": [
                                        {
                                            "type": "null"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                },
                                "metadata": {
                                    "title": "metadata",
                                    "description": "Chunk document metadata"
                                }
                            },
                            "required": [
                                "id",
                                "text",
                                "score",
                                "image",
                                "metadata"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "documents"
                ],
                "type": "object"
            },
            "_namespace_swagger.IX.ISummarizeTweetInput": {
                "properties": {
                    "chatId": {
                        "title": "chatId",
                        "description": "\"chatId\" to get tweets. Pass the \"chatId\" obtained from the \"prepare-summarize-tweet\" API as-is.",
                        "x-wrtn-prerequisite": {
                            "jmesPath": ".{value:chatId, label:chatId}",
                            "method": "post",
                            "path": "/connector/x/prepare-summarize"
                        },
                        "type": "string"
                    },
                    "query": {
                        "title": "query",
                        "description": "A query that describes what tweets you want to get. For example, it can be a keyword or a name of a person.\n\nAvoid using a query that is too broad, it may lead to irrelevant results.\n\nPut a single subject at a time. If you need multiple subjects, make multiple requests for each subject.",
                        "type": "string"
                    }
                },
                "required": [
                    "chatId",
                    "query"
                ],
                "title": "Information needed for tweet summary",
                "type": "object"
            }
        }
    },
    "x-samchon-emended": true
}