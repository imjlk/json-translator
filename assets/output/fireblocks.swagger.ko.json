{
  "openapi": "3.1.0",
  "info": {
    "title": "파이어블록 API",
    "version": "1.0.0",
    "contact": {
      "email": "support@fireblocks.com"
    }
  },
  "servers": [
    {
      "url": "https://api.fireblocks.io/v1"
    }
  ],
  "x-readme": {
    "explorer-enabled": false,
    "samples-languages": [
      "curl",
      "javascript",
      "python"
    ]
  },
  "paths": {
    "/vault/accounts": {
      "get": {
        "summary": "볼트 계정 목록",
        "description": "작업 공간의 모든 볼트 계정을 가져옵니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vault_accounts = fireblocks.get_vault_accounts()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAccounts = await fireblocks.getVaultAccounts();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "query",
            "name": "namePrefix",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nameSuffix",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "minAmountThreshold",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "assetId",
            "required": false,
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "볼트 계정 목록",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VaultAccount"
                  }
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "새로운 볼트 계정을 만드세요",
        "description": "요청된 이름으로 새 볼트 계정을 만듭니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vaultAccount = fireblocks.create_vault_account(name, hiddenOnUI, customer_ref_id, auto_fueling)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAccount = await fireblocks.createVaultAccount(name, hiddenOnUI, customerRefId, autoFueling);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "계정 이름",
                    "type": "string"
                  },
                  "hiddenOnUI": {
                    "description": "선택 사항 - true인 경우 생성된 계정과 모든 관련 거래가 Fireblocks 콘솔에 표시되지 않습니다.",
                    "type": "boolean"
                  },
                  "customerRefId": {
                    "description": "선택 사항 - 고객 참조 ID를 설정합니다.",
                    "type": "string"
                  },
                  "autoFuel": {
                    "description": "선택 사항 - 볼트 계정의 autoFuel 속성을 설정합니다.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "볼트 계정 개체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VaultAccount"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts_paged": {
      "get": {
        "summary": "볼트 계정 목록(페이지별)",
        "description": "작업 공간의 모든 볼트 계정을 가져옵니다. 이 엔드포인트는 빠른 응답 시간으로 제한된 양의 결과를 반환합니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vault_accounts = fireblocks.get_vault_accounts_with_page_info(filters)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAccounts = await fireblocks.getVaultAccountsWithPageInfo(filters);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "query",
            "name": "namePrefix",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nameSuffix",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "minAmountThreshold",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "assetId",
            "required": false,
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "const": "ASC"
                },
                {
                  "const": "DESC"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "before",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "after",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 500,
              "default": 200
            }
          }
        ],
        "responses": {
          "200": {
            "description": "VaultAccountsPagedResponse 개체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VaultAccountsPagedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}": {
      "get": {
        "summary": "ID로 볼트 계정 찾기",
        "description": "요청된 볼트 계정을 반환합니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vault_account = fireblocks.get_vault_account(vault_account_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAccount = await fireblocks.getVaultAccount(vault_account_id);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "반환할 볼트 계정의 ID 유형: 문자열",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "볼트 계정 개체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VaultAccount"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "볼트 계정 이름 바꾸기",
        "description": "요청된 볼트 계정의 이름을 변경합니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vaultAccount = fireblocks.update_vault_account(vault_account_id, name)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAccount = await fireblocks.updateVaultAccount(vautlAccountId, name);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "편집할 볼트 계정의 ID",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "계정 이름",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/asset_wallets": {
      "get": {
        "summary": "자산 지갑 목록(페이지별)",
        "description": "작업 공간의 모든 볼트 계정에서 모든 자산 지갑을 가져옵니다. 자산 지갑은 볼트 계정의 자산입니다. 이 방법을 사용하면 모든 계정 잔액을 빠르게 탐색할 수 있습니다. **참고:** - 이 API 엔드포인트는 제한적으로 제공되며 일부 고객에게만 제공됩니다. 이 엔드포인트에 대한 조기 액세스를 원하시면 [Fireblocks 지원](https://support.fireblocks.io/hc/en-us/requests/new?ticket_form_id=36000337220)에 문의하세요. - 이 API 호출에는 [요금 제한](https://developers.fireblocks.com/reference/rate-limiting)이 적용됩니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vault_accounts = fireblocks.get_asset_wallets(filters)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAccounts = await fireblocks.getAssetWallets(filters);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "query",
            "name": "totalAmountLargerThan",
            "description": "지정된 경우 이 금액보다 총 잔액이 큰 자산 지갑만 반환됩니다..",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "assetId",
            "required": false,
            "description": "지정된 경우 이 자산 ID가 있는 볼트 계정 간 자산 지갑만 반환됩니다..",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          },
          {
            "in": "query",
            "name": "before",
            "required": false,
            "description": "이 요소 이전의 다음 페이지 매김 응답을 가져옵니다. 이 요소는 커서이며 이전 페이지의 응답에서 반환됩니다..",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "after",
            "required": false,
            "description": "이 요소 다음에 있는 다음 페이지 매김 응답을 가져옵니다. 이 요소는 커서이며 이전 페이지의 응답에서 반환됩니다..",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "단일 응답에서 자산 지갑의 최대 수입니다. 기본값은 200이고 최대값은 1000입니다..",
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 1000,
              "default": 200
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PaginatedAssetWalletResponse 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAssetWalletResponse"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/hide": {
      "post": {
        "summary": "콘솔에서 볼트 계정 숨기기",
        "description": "웹 콘솔 보기에서 요청된 볼트 계정을 숨깁니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vaultAsset = fireblocks.hide_vault_account(vault_account_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAsset = await fireblocks.hideVaultAccount(vaultAccountId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "숨길 볼트 계정",
            "schema": {
              "type": "string",
              "minimum": 1,
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/unhide": {
      "post": {
        "summary": "콘솔에서 볼트 계정 숨기기 해제",
        "description": "웹 콘솔 보기에서 숨겨진 볼트 계정을 표시합니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vaultAsset = fireblocks.unhide_vault_account(vault_account_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAsset = await fireblocks.unhideVaultAccount(vaultAccountId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "숨겨진 볼트 계정을 해제합니다",
            "schema": {
              "type": "string",
              "minimum": 1,
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/{assetId}/activate": {
      "post": {
        "summary": "볼트 계정에서 지갑 활성화",
        "description": "볼트 계정의 지갑 활성화를 시작합니다..",
        "tags": [
          "Vaults"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "반환할 볼트 계정의 ID 또는 기본 볼트 계정의 경우 &#39;기본값&#39;",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "자산의 ID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVaultAssetResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/set_customer_ref_id": {
      "post": {
        "summary": "볼트 계정에 대한 AML/KYT 고객 참조 ID 설정",
        "description": "볼트 계정에 대한 AML/KYT 고객 참조 ID를 할당합니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vaultAsset = fireblocks.set_vault_account_customer_ref_id(vault_account_id, customer_ref_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAsset = await fireblocks.setCustomerRefIdForVaultAccount(vaultAccountId, customerRefId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "볼트 계정 ID",
            "schema": {
              "type": "string",
              "minimum": 1,
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customerRefId": {
                    "description": "고객 참조 ID",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/set_auto_fuel": {
      "post": {
        "summary": "자동 연료 공급 켜기 또는 끄기",
        "description": "볼트 계정의 자동 연료 공급 속성을 활성화 또는 비활성화로 설정합니다..",
        "tags": [
          "Vaults"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "볼트 계정 ID",
            "schema": {
              "type": "string",
              "minimum": 1,
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "autoFuel": {
                    "description": "자동차 연료",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/{assetId}": {
      "get": {
        "summary": "금고 계정의 자산 잔액을 얻으세요",
        "description": "볼트 계정의 특정 자산에 대한 지갑을 반환합니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vaultAsset = fireblocks.get_vault_account_asset(vault_account_id, asset_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAsset = await fireblocks.getVaultAccountAsset(vaultAccountId, assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "반환할 볼트 계정의 ID",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "자산의 ID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "VaultAsset 객체",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VaultAsset"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "새로운 지갑을 만드세요",
        "description": "볼트 계정의 특정 자산에 대한 지갑을 생성합니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vaultAsset = fireblocks.create_vault_asset(vault_account_id, asset_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAsset = await fireblocks.createVaultAsset(vaultAccountId, assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "반환할 볼트 계정의 ID 또는 기본 볼트 계정의 경우 &#39;기본값&#39;",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "자산의 ID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "eosAccountName": {
                    "description": "선택 사항 - EOS 지갑을 생성할 때 계정 이름입니다. 제공하지 않으면 임의의 이름이 생성됩니다.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVaultAssetResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/{assetId}/balance": {
      "post": {
        "summary": "자산 잔액 데이터 새로 고침",
        "description": "볼트 계정의 특정 자산 잔액을 업데이트합니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vaultAsset = fireblocks.refresh_vault_asset_balance(vault_account_id, asset_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAsset = await fireblocks.refreshVaultAssetBalance(vaultAccountId, assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "반환할 볼트 계정의 ID",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "자산의 ID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "*/*": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "VaultAsset 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VaultAsset"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/{assetId}/addresses": {
      "get": {
        "summary": "자산 주소 가져오기",
        "description": "금고 계정의 특정 자산에 대한 모든 주소를 나열합니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "depositAddresses = fireblocks.get_deposit_addresses(vault_account_id, asset_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const depositAddresses = await fireblocks.getDepositAddresses(vaultAccountId, assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "반환할 볼트 계정의 ID",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "자산의 ID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "입금주소 목록",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VaultWalletAddress"
                  }
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "신규 자산 입금 주소 생성",
        "description": "금고 계정의 자산에 대한 새로운 입금 주소를 생성합니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "address = fireblocks.generate_new_address(vault_account_id, asset_id, description, customer_ref_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const address = await fireblocks.generateNewAddress(vaultAccountId, assetId, description, customerRefId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "description": "(선택 사항) 새 주소에 설명을 첨부하세요",
                    "type": "string"
                  },
                  "customerRefId": {
                    "description": "선택 사항 - 고객 참조 ID를 설정합니다.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "반환할 볼트 계정의 ID",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "자산의 ID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "생성된 주소",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAddressResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/{assetId}/max_spendable_amount": {
      "get": {
        "summary": "단일 거래에서 최대 지출 가능 금액을 얻으세요.",
        "description": "지정된 볼트 계정에서 단일 거래에서 사용할 수 있는 특정 자산의 최대 금액을 가져옵니다(UTXO 자산만, 임베디드 입력 수에 제한이 있음). 최대 사용 가능 금액 이상을 사용하려는 경우 여러 거래를 보냅니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "address = fireblocks.set_address_description(vault_account_id, asset_id, address, tag, description)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const address = await fireblocks.setAddressDescription(vaultAccountId, assetId, address, tag, description);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "볼트 계정의 ID 또는 기본 볼트 계정의 경우 &#39;기본값&#39;",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "자산의 ID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          },
          {
            "in": "query",
            "name": "manualSignging",
            "required": false,
            "description": "기본적으로 False입니다. 최대 입력 수는 거래가 자동화된 공동 서명자 서버 또는 모바일 기기에서 서명되는지 여부에 따라 달라집니다..",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/{assetId}/addresses/{addressId}": {
      "put": {
        "summary": "주소 설명 업데이트",
        "description": "볼트 계정의 자산에 대한 기존 주소 설명을 업데이트합니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "address = fireblocks.set_address_description(vault_account_id, asset_id, address, tag, description)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const address = await fireblocks.setAddressDescription(vaultAccountId, assetId, address, tag, description);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "description": "주소 설명",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "볼트 계정의 ID",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "자산의 ID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          },
          {
            "in": "path",
            "name": "addressId",
            "required": true,
            "description": "설명을 추가할 주소입니다. XRP의 경우 다음을 사용합니다.<address> :<tag> , 다른 모든 자산의 경우 주소만 사용하세요.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/{assetId}/addresses/{addressId}/set_customer_ref_id": {
      "post": {
        "summary": "AML 고객 참조 ID 지정",
        "description": "특정 주소에 대한 AML/KYT 고객 참조 ID를 설정합니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vaultAsset = fireblocks.set_customer_ref_id_for_address(vault_account_id, asset_id, address_id, customer_ref_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAsset = await fireblocks.setCustomerRefIdForAddress(vaultAccountId, assetId, addressId, customerRefId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "볼트 계정의 ID",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "자산의 ID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          },
          {
            "in": "path",
            "name": "addressId",
            "required": true,
            "description": "설명을 추가할 주소입니다. XRP의 경우 다음을 사용합니다.<address> :<tag> , 다른 모든 자산의 경우 주소만 사용하세요.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customerRefId": {
                    "description": "고객 참조 ID",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/{assetId}/addresses/{addressId}/create_legacy": {
      "post": {
        "summary": "Segwit 주소를 레거시 형식으로 변환",
        "description": "기존 segwit 주소를 레거시 형식으로 변환합니다..",
        "tags": [
          "Vaults"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "볼트 계정의 ID",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "자산의 ID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          },
          {
            "in": "path",
            "name": "addressId",
            "required": true,
            "description": "번역할 segwit 주소",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "생성된 주소",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAddressResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/{assetId}/unspent_inputs": {
      "get": {
        "summary": "UTXO 미사용 입력 정보 가져오기",
        "description": "볼트 계정의 자산에 대한 사용되지 않은 입력 정보를 반환합니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vaultAsset = fireblocks.get_unspent_inputs(vault_account_id, asset_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAsset = await fireblocks.getUnspentInputs(vaultAccountId, assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "볼트 계정의 ID",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "자산의 ID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "입력당 사용되지 않은 정보 목록",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnspentInputsResponse"
                  }
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/public_key_info/": {
      "get": {
        "summary": "공개 키 정보를 얻으세요",
        "description": "파생 경로 및 서명 알고리즘을 기반으로 공개 키 정보를 가져옵니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "pubKey = fireblocks.get_public_key_info(algorithm, derivation_path, compressed)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const PublicKeyInfoArgs = { algorithm: 'MPC_ECDSA_SECP256K1', derivationPath: '[44,0,0,0,0]' } const pubKey = await fireblocks.getPublicKeyInfo(PublicKeyInfoArgs);\n",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "query",
            "name": "derivationPath",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "algorithm",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "compressed",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "공개 키 정보",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyInformation"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/{assetId}/{change}/{addressIndex}/public_key_info": {
      "get": {
        "summary": "볼트 계정의 공개 키 가져오기",
        "description": "볼트 계정에 대한 공개 키 정보를 가져옵니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "pubKey = fireblocks.get_public_key_info_for_vault_account(asset_id, vault_account_id, change, address_index, compressed)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const PublicKeyInfoArgs = { assetId: 'ETH', vaultAccountId: 0, change: 0, addressIndex: 0, compressed: true } const pubKey = await fireblocks.getPublicKeyInfoForVaultAccount(PublicKeyInfoArgs);\n",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          },
          {
            "in": "path",
            "name": "change",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "addressIndex",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "compressed",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "공개 키 정보",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyInformation"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/assets": {
      "get": {
        "summary": "선택한 자산에 대한 자산 잔액을 얻으세요",
        "description": "모든 계정 또는 필터링된 계정에 대한 자산 금액 요약을 가져옵니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "assets_balance = fireblocks.get_vault_assets_balance(accout_name_prefix, account_name_suffix)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const assetsBalance = await fireblocks.getVaultAssetsBalance(accountNamePrefix, accountNameSuffix);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "query",
            "name": "accountNamePrefix",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "accountNameSuffix",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "자산별 금액",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VaultAsset"
                  }
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/assets/{assetId}": {
      "get": {
        "summary": "자산별 금고 잔액 가져오기",
        "description": "자산에 대한 볼트 잔액 요약을 가져옵니다..",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "assets_balance = fireblocks.get_vault_balance_by_asset(asset_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const assetsBalance = await fireblocks.getVaultBalanceByAsset(assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "자산별 금고 금액",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VaultAsset"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/exchange_accounts": {
      "get": {
        "summary": "거래소 계정 목록",
        "description": "모든 거래소 계정을 반환합니다.",
        "tags": [
          "Exchange accounts"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "exchangeAccounts = fireblocks.get_exchange_accounts()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const exchangeAccounts = await fireblocks.getExchangeAccounts();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "ExchangeAccount 개체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExchangeAccount"
                  }
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/exchange_accounts/{exchangeAccountId}": {
      "get": {
        "summary": "특정 거래소 계정 찾기",
        "description": "ID로 거래소 계정을 반환합니다..",
        "tags": [
          "Exchange accounts"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "exchangeAccount = fireblocks.get_exchange_account(exchangeAccountId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const exchnageAccount = await fireblocks.get_exchange_account(exchangeAccountId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "exchangeAccountId",
            "required": true,
            "description": "반환할 거래소 계정의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ExchangeAccount 개체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeAccount"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/exchange_accounts/{exchangeAccountId}/internal_transfer": {
      "post": {
        "summary": "거래소 계좌 내부 이체",
        "description": "동일한 거래소 계정 내의 거래 계정 간에 자금을 이체합니다..",
        "tags": [
          "Exchange accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "exchangeAccountId",
            "required": true,
            "description": "반환할 거래소 계정의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "201": {
            "description": "전송이 성공했습니다",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "asset": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  },
                  "sourceType": {
                    "$ref": "#/components/schemas/TradingAccountType"
                  },
                  "destType": {
                    "$ref": "#/components/schemas/TradingAccountType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/exchange_accounts/{exchangeAccountId}/convert": {
      "post": {
        "summary": "소스 자산에서 목적지 자산으로 거래소 계정 자금을 변환합니다. Coinbase(USD에서 USDC, USDC에서 USD) 및 Bitso(MXN에서 USD)가 지원되는 변환입니다..",
        "tags": [
          "Exchange accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "exchangeAccountId",
            "required": true,
            "description": "거래소 계정의 ID입니다. 거래소가 변환을 지원하는지 확인하세요. 거래소 계정의 ID를 찾으려면 GET/exchange_accounts를 사용하세요..",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "변환 성공",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "srcAsset": {
                    "type": "string",
                    "description": "소스 자산의 이름(선택한 거래소 유형에서 변환이 지원되는 통화여야 하며 거래소 ID에 해당해야 함)"
                  },
                  "destAsset": {
                    "type": "string",
                    "description": "대상 자산의 이름(선택한 거래소 유형에서 변환이 지원되는 통화여야 하며 거래소 ID에 해당해야 함)"
                  },
                  "amount": {
                    "type": "number",
                    "description": "이체할 금액(소스 자산의 통화로)"
                  }
                },
                "required": [
                  "srcAsset",
                  "destAsset",
                  "amount"
                ]
              }
            }
          }
        }
      }
    },
    "/exchange_accounts/{exchangeAccountId}/{assetId}": {
      "get": {
        "summary": "교환 계좌에 대한 자산 찾기",
        "description": "교환 계정에 대한 자산을 반환합니다..",
        "tags": [
          "Exchange accounts"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "exchangeAsset = fireblocks.get_exchange_account_asset(exchangeAccountId, assetId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const exchangeAsset = await fireblocks.getExchangeAsset(exchangeAccountId, assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "exchangeAccountId",
            "required": true,
            "description": "반환할 거래소 계정의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "반환할 자산의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ExchangeAccountAsset 개체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeAsset"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/fiat_accounts": {
      "get": {
        "summary": "법정화폐 계좌 목록",
        "description": "모든 법정 통화 계정을 반환합니다..",
        "tags": [
          "Fiat accounts"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "transactions = fireblocks.get_fiat_accounts()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const transactions = await fireblocks.getFiatAccounts();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "법정 통화 계정 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FiatAccount"
                  }
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/fiat_accounts/{accountId}": {
      "get": {
        "summary": "특정 법정 통화 계좌 찾기",
        "description": "ID로 법정화폐 계정을 반환합니다..",
        "tags": [
          "Fiat accounts"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "transactions = fireblocks.get_fiat_account_by_id(account_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const transactions = await fireblocks.getFiatAccountById(accountId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "description": "반환할 Fiat 계정의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "법정 통화 계정 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FiatAccount"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/fiat_accounts/{accountId}/redeem_to_linked_dda": {
      "post": {
        "summary": "DDA에 자금을 환수합니다",
        "description": "연결된 DDA에 자금을 환수합니다..",
        "tags": [
          "Fiat accounts"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "transactions = fireblocks.redeem_to_linked_dda(account_id, amount)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const transactions = await fireblocks.redeemToLinkedDDA(accountId, amount);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "description": "사용할 Fiat 계정의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "201": {
            "description": "전송이 성공했습니다",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "amount": {
                    "type": "number"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fiat_accounts/{accountId}/deposit_from_linked_dda": {
      "post": {
        "summary": "DDA에서 자금 입금",
        "description": "연계된 DDA에서 자금을 입금합니다..",
        "tags": [
          "Fiat accounts"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "transactions = fireblocks.deposit_from_linked_dda(account_id, amount)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const transactions = await fireblocks.depositFromLinkedDDA(accountId, amount);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "description": "사용할 Fiat 계정의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "201": {
            "description": "전송이 성공했습니다",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "amount": {
                    "type": "number"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/network_connections": {
      "get": {
        "summary": "네트워크 연결 목록",
        "description": "모든 네트워크 연결을 반환합니다. **참고:** 이 API 호출은 유연한 라우팅 체계의 적용을 받습니다. 라우팅 정책은 트랜잭션이 라우팅되는 방식을 정의합니다. 각 자산 유형에 대해 아래에 언급된 3가지 체계 중 하나를 선택할 수 있습니다. - **없음**: 해당 자산 유형에 대한 대상 없음으로의 프로필 라우팅을 정의합니다. `없음`으로 라우팅된 자산 유형으로 들어오는 트랜잭션은 실패합니다. - **사용자 지정**: 선택한 계정으로 라우팅합니다. 계정을 제거하면 다른 계정을 선택할 때까지 들어오는 트랜잭션은 실패합니다. - **기본값**: 연결이 연결된 네트워크 프로필에서 지정한 라우팅을 사용합니다. 이 체계는 &quot;프로필 라우팅&quot;이라고도 합니다. 기본 작업 공간 사전 설정: - 네트워크 프로필 암호화 → **사용자 지정** - 네트워크 프로필 FIAT → **없음** - 네트워크 연결 암호화 → **기본값** - 네트워크 연결 FIAT → **기본값** - **참고**: 기본적으로 사용자 지정 라우팅 체계는 (`dstId` = `0`, `dstType` = `VAULT`)를 사용합니다..",
        "tags": [
          "Network connections"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "network_connections = fireblocks.get_network_connections()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const networkConnections = await fireblocks.getNetworkConnections();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "네트워크 연결 목록",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NetworkConnectionResponse"
                  }
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "새로운 네트워크 연결을 만듭니다",
        "description": "새 네트워크 연결을 시작합니다. **참고:** 이 API 호출은 유연한 라우팅 체계의 적용을 받습니다. 라우팅 정책은 거래가 라우팅되는 방식을 정의합니다. 각 자산 유형에 대해 아래에 언급된 3가지 체계 중 하나를 선택할 수 있습니다. - **없음**: 해당 자산 유형에 대한 대상 없음으로의 프로필 라우팅을 정의합니다. `없음`으로 라우팅된 자산 유형으로 들어오는 거래는 실패합니다. - **사용자 지정**: 선택한 계정으로 라우팅합니다. 계정을 제거하면 다른 계정을 선택할 때까지 들어오는 거래는 실패합니다. - **기본값**: 연결이 연결된 네트워크 프로필에서 지정한 라우팅을 사용합니다. 이 체계는 &quot;프로필 라우팅&quot;이라고도 합니다. 기본 작업 공간 사전 설정: - 네트워크 프로필 암호화 → **사용자 지정** - 네트워크 프로필 FIAT → **없음** - 네트워크 연결 암호화 → **기본값** - 네트워크 연결 FIAT → **기본값** - **참고**: 기본적으로 사용자 지정 라우팅 체계는 (`dstId` = `0`, `dstType` = `VAULT`)를 사용합니다..",
        "tags": [
          "Network connections"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkConnection"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "네트워크 연결 개체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkConnectionResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/network_connections/{connectionId}/set_routing_policy": {
      "patch": {
        "summary": "네트워크 연결 라우팅 정책 업데이트.",
        "description": "기존 네트워크 연결의 라우팅 정책을 업데이트합니다. **참고:** 이 API 호출은 유연한 라우팅 체계의 적용을 받습니다. 라우팅 정책은 트랜잭션이 라우팅되는 방식을 정의합니다. 각 자산 유형에 대해 아래에 언급된 3가지 체계 중 하나를 선택할 수 있습니다. - **없음**: 해당 자산 유형에 대한 대상 없음으로의 프로필 라우팅을 정의합니다. `없음`으로 라우팅된 자산 유형으로 들어오는 트랜잭션은 실패합니다. - **사용자 지정**: 선택한 계정으로 라우팅합니다. 계정을 제거하면 다른 계정을 선택할 때까지 들어오는 트랜잭션은 실패합니다. - **기본값**: 연결이 연결된 네트워크 프로필에서 지정한 라우팅을 사용합니다. 이 체계는 &quot;프로필 라우팅&quot;이라고도 합니다. 기본 작업 공간 사전 설정: - 네트워크 프로필 암호화 → **사용자 지정** - 네트워크 프로필 FIAT → **없음** - 네트워크 연결 암호화 → **기본값** - 네트워크 연결 FIAT → **기본값** - **참고**: 기본적으로 사용자 지정 라우팅 체계는 (`dstId` = `0`, `dstType` = `VAULT`)를 사용합니다..",
        "tags": [
          "Network connections"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "connectionId",
            "required": true,
            "description": "네트워크 연결의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "routingPolicy": {
                    "$ref": "#/components/schemas/NetworkConnectionRoutingPolicy"
                  }
                },
                "required": [
                  "routingPolicy"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "네트워크 ID",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/network_connections/{connectionId}/is_third_party_routing/{assetType}": {
      "get": {
        "summary": "자산 유형별로 타사 네트워크 라우팅 검증 검색.",
        "description": "Fireblocks Network는 유입 입금에 대한 유연성을 제공합니다. 수신자는 Fireblocks 외의 다른 위치로 네트워크 입금을 수신할 수 있습니다. 이 엔드포인트는 향후 거래가 표시된 수신자에게 라우팅되는지 아니면 제3자에게 라우팅되는지 검증합니다..",
        "tags": [
          "Network connections"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "connectionId",
            "required": true,
            "description": "네트워크 연결의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "assetType",
            "required": true,
            "description": "목적지 자산 유형",
            "schema": {
              "oneOf": [
                {
                  "const": "CRYPTO"
                },
                {
                  "const": "SIGNET"
                },
                {
                  "const": "SEN"
                },
                {
                  "const": "SIGNET_TEST"
                },
                {
                  "const": "SEN_TEST"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "검증 결과",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "properties": {
                    "isThirdPartyRouting": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/network_connections/{connectionId}": {
      "get": {
        "summary": "네트워크 연결을 얻으세요",
        "description": "ID로 네트워크 연결을 가져옵니다. **참고:** 이 API 호출은 유연한 라우팅 체계의 적용을 받습니다. 라우팅 정책은 트랜잭션이 라우팅되는 방식을 정의합니다. 각 자산 유형에 대해 아래에 언급된 3가지 체계 중 하나를 선택할 수 있습니다. - **없음**: 해당 자산 유형에 대한 대상 없음으로의 프로필 라우팅을 정의합니다. `없음`으로 라우팅된 자산 유형으로 들어오는 트랜잭션은 실패합니다. - **사용자 지정**: 선택한 계정으로 라우팅합니다. 계정을 제거하면 다른 계정을 선택할 때까지 들어오는 트랜잭션은 실패합니다. - **기본값**: 연결이 연결된 네트워크 프로필에서 지정한 라우팅을 사용합니다. 이 체계는 &quot;프로필 라우팅&quot;이라고도 합니다. 기본 작업 공간 사전 설정: - 네트워크 프로필 암호화 → **사용자 지정** - 네트워크 프로필 FIAT → **없음** - 네트워크 연결 암호화 → **기본값** - 네트워크 연결 FIAT → **기본값** - **참고**: 기본적으로 사용자 지정 라우팅 체계는 (`dstId` = `0`, `dstType` = `VAULT`)를 사용합니다..",
        "tags": [
          "Network connections"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "network_connection = fireblocks.get_network_connection_by_id(connectionId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const network_connection = await fireblocks.getNetworkConnection(connectionId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "connectionId",
            "required": true,
            "description": "연결의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "네트워크 연결",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkConnectionResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "ID로 네트워크 연결을 삭제합니다.",
        "description": "연결 ID로 지정된 기존 네트워크 연결을 삭제합니다. **참고:** 이 API 호출은 유연한 라우팅 체계의 적용을 받습니다. 라우팅 정책은 트랜잭션이 라우팅되는 방식을 정의합니다. 각 자산 유형에 대해 아래에 언급된 3가지 체계 중 하나를 선택할 수 있습니다. - **없음**: 해당 자산 유형에 대한 대상 없음으로의 프로필 라우팅을 정의합니다. `없음`으로 라우팅된 자산 유형으로 들어오는 트랜잭션은 실패합니다. - **사용자 지정**: 선택한 계정으로 라우팅합니다. 계정을 제거하면 다른 계정을 선택할 때까지 들어오는 트랜잭션은 실패합니다. - **기본값**: 연결이 연결된 네트워크 프로필에서 지정한 라우팅을 사용합니다. 이 체계는 &quot;프로필 라우팅&quot;이라고도 합니다. 기본 작업 공간 사전 설정: - 네트워크 프로필 암호화 → **사용자 지정** - 네트워크 프로필 FIAT → **없음** - 네트워크 연결 암호화 → **기본값** - 네트워크 연결 FIAT → **기본값** - **참고**: 기본적으로 사용자 지정 라우팅 체계는 (`dstId` = `0`, `dstType` = `VAULT`)를 사용합니다..",
        "tags": [
          "Network connections"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "connectionId",
            "required": true,
            "description": "삭제할 네트워크 연결의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "네트워크 ID",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/network_ids": {
      "get": {
        "summary": "로컬 ID와 검색 가능한 원격 ID를 포함한 모든 네트워크 ID를 반환합니다.",
        "description": "모든 로컬 및 검색 가능한 원격 네트워크 ID 목록을 검색합니다. **참고:** 이 API 호출은 유연한 라우팅 체계의 적용을 받습니다. 라우팅 정책은 트랜잭션이 라우팅되는 방식을 정의합니다. 각 자산 유형에 대해 아래에 언급된 3가지 체계 중 하나를 선택할 수 있습니다. - **없음**: 해당 자산 유형에 대한 대상 없음으로의 프로필 라우팅을 정의합니다. `없음`으로 라우팅된 자산 유형으로 들어오는 트랜잭션은 실패합니다. - **사용자 지정**: 선택한 계정으로 라우팅합니다. 계정을 제거하면 다른 계정을 선택할 때까지 들어오는 트랜잭션은 실패합니다. - **기본값**: 연결이 연결된 네트워크 프로필에서 지정한 라우팅을 사용합니다. 이 구성표는 &quot;프로필 라우팅&quot;이라고도 합니다. 기본 작업 공간 사전 설정: - 네트워크 프로필 암호화 → **사용자 정의** - 네트워크 프로필 FIAT → **없음** - 네트워크 연결 암호화 → **기본값** - 네트워크 연결 FIAT → **기본값** - **참고**: 기본적으로 사용자 정의 라우팅 구성표는 (`dstId` = `0`, `dstType` = `VAULT`)를 사용합니다..",
        "tags": [
          "Network connections"
        ],
        "responses": {
          "200": {
            "description": "네트워크 ID 목록",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "새로운 네트워크 ID를 생성합니다",
        "description": "새 네트워크 ID를 만듭니다. **참고:** 이 API 호출은 유연한 라우팅 체계의 적용을 받습니다. 라우팅 정책은 트랜잭션이 라우팅되는 방식을 정의합니다. 각 자산 유형에 대해 아래에 언급된 3가지 체계 중 하나를 선택할 수 있습니다. - **없음**: 해당 자산 유형에 대한 대상 없음으로의 프로필 라우팅을 정의합니다. `없음`으로 라우팅된 자산 유형으로 들어오는 트랜잭션은 실패합니다. - **사용자 지정**: 선택한 계정으로 라우팅합니다. 계정을 제거하면 다른 계정을 선택할 때까지 들어오는 트랜잭션은 실패합니다. - **기본값**: 연결이 연결된 네트워크 프로필에서 지정한 라우팅을 사용합니다. 이 체계는 &quot;프로필 라우팅&quot;이라고도 합니다. 기본 작업 공간 사전 설정: - 네트워크 프로필 암호화 → **사용자 지정** - 네트워크 프로필 FIAT → **없음** - 네트워크 연결 암호화 → **기본값** - 네트워크 연결 FIAT → **기본값** - **참고**: 기본적으로 사용자 지정 라우팅 체계는 (`dstId` = `0`, `dstType` = `VAULT`)를 사용합니다..",
        "tags": [
          "Network connections"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "routingPolicy": {
                    "$ref": "#/components/schemas/NetworkIdRoutingPolicy"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "작업 공간에서 새 네트워크 ID를 반환합니다.",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkIdResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/network_ids/{networkId}": {
      "get": {
        "summary": "특정 네트워크 ID를 반환합니다.",
        "description": "ID로 네트워크를 검색합니다. **참고:** 이 API 호출은 유연한 라우팅 체계의 적용을 받습니다. 라우팅 정책은 트랜잭션이 라우팅되는 방식을 정의합니다. 각 자산 유형에 대해 아래에 언급된 3가지 체계 중 하나를 선택할 수 있습니다. - **없음**: 해당 자산 유형에 대한 대상 없음으로의 프로필 라우팅을 정의합니다. `없음`으로 라우팅된 자산 유형으로 들어오는 트랜잭션은 실패합니다. - **사용자 지정**: 선택한 계정으로 라우팅합니다. 계정을 제거하면 다른 계정을 선택할 때까지 들어오는 트랜잭션은 실패합니다. - **기본값**: 연결이 연결된 네트워크 프로필에서 지정한 라우팅을 사용합니다. 이 체계는 &quot;프로필 라우팅&quot;이라고도 합니다. 기본 작업 공간 사전 설정: - 네트워크 프로필 암호화 → **사용자 지정** - 네트워크 프로필 FIAT → **없음** - 네트워크 연결 암호화 → **기본값** - 네트워크 연결 FIAT → **기본값** - **참고**: 기본적으로 사용자 지정 라우팅 체계는 (`dstId` = `0`, `dstType` = `VAULT`)를 사용합니다..",
        "tags": [
          "Network connections"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "networkId",
            "required": true,
            "description": "네트워크의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "네트워크 ID",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkIdResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "특정 네트워크 ID를 삭제합니다.",
        "description": "ID로 네트워크를 삭제합니다. **참고:** 이 API 호출은 유연한 라우팅 체계의 적용을 받습니다. 라우팅 정책은 트랜잭션이 라우팅되는 방식을 정의합니다. 각 자산 유형에 대해 아래에 언급된 3가지 체계 중 하나를 선택할 수 있습니다. - **없음**: 해당 자산 유형에 대한 대상 없음으로의 프로필 라우팅을 정의합니다. `없음`으로 라우팅된 자산 유형으로 들어오는 트랜잭션은 실패합니다. - **사용자 지정**: 선택한 계정으로 라우팅합니다. 계정을 제거하면 다른 계정을 선택할 때까지 들어오는 트랜잭션은 실패합니다. - **기본값**: 연결이 연결된 네트워크 프로필에서 지정한 라우팅을 사용합니다. 이 체계는 &quot;프로필 라우팅&quot;이라고도 합니다. 기본 작업 공간 사전 설정: - 네트워크 프로필 암호화 → **사용자 지정** - 네트워크 프로필 FIAT → **없음** - 네트워크 연결 암호화 → **기본값** - 네트워크 연결 FIAT → **기본값** - **참고**: 기본적으로 사용자 지정 라우팅 체계는 (`dstId` = `0`, `dstType` = `VAULT`)를 사용합니다..",
        "tags": [
          "Network connections"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "networkId",
            "required": true,
            "description": "네트워크의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "네트워크 ID",
            "content": {
              "*/*": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/network_ids/{networkId}/set_routing_policy": {
      "patch": {
        "summary": "네트워크 ID 라우팅 정책 업데이트.",
        "description": "지정된 네트워크 ID의 라우팅 정책을 업데이트합니다. **참고:** 이 API 호출은 유연한 라우팅 체계의 적용을 받습니다. 라우팅 정책은 트랜잭션이 라우팅되는 방식을 정의합니다. 각 자산 유형에 대해 아래에 언급된 3가지 체계 중 하나를 선택할 수 있습니다. - **없음**: 해당 자산 유형에 대한 대상 없음으로의 프로필 라우팅을 정의합니다. `없음`으로 라우팅된 자산 유형으로 들어오는 트랜잭션은 실패합니다. - **사용자 지정**: 선택한 계정으로 라우팅합니다. 계정을 제거하면 다른 계정을 선택할 때까지 들어오는 트랜잭션은 실패합니다. - **기본값**: 연결이 연결된 네트워크 프로필에서 지정한 라우팅을 사용합니다. 이 체계는 &quot;프로필 라우팅&quot;이라고도 합니다. 기본 작업 공간 사전 설정: - 네트워크 프로필 암호화 → **사용자 지정** - 네트워크 프로필 FIAT → **없음** - 네트워크 연결 암호화 → **기본값** - 네트워크 연결 FIAT → **기본값** - **참고**: 기본적으로 사용자 지정 라우팅 체계는 (`dstId` = `0`, `dstType` = `VAULT`)를 사용합니다..",
        "tags": [
          "Network connections"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "networkId",
            "required": true,
            "description": "네트워크의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "routingPolicy": {
                    "$ref": "#/components/schemas/NetworkIdRoutingPolicy"
                  }
                },
                "required": [
                  "routingPolicy"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "네트워크 ID",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/network_ids/{networkId}/set_discoverability": {
      "patch": {
        "summary": "네트워크 ID의 검색 가능성 업데이트.",
        "description": "네트워크 ID를 다른 사람이 검색할 수 있는지 여부를 업데이트합니다. **참고:** 이 API 호출은 유연한 라우팅 체계의 적용을 받습니다. 라우팅 정책은 트랜잭션이 라우팅되는 방식을 정의합니다. 각 자산 유형에 대해 아래에 언급된 3가지 체계 중 하나를 선택할 수 있습니다. - **없음**: 해당 자산 유형에 대한 대상 없음으로의 프로필 라우팅을 정의합니다. `없음`으로 라우팅된 자산 유형으로 들어오는 트랜잭션은 실패합니다. - **사용자 지정**: 선택한 계정으로 라우팅합니다. 계정을 제거하면 다른 계정을 선택할 때까지 들어오는 트랜잭션은 실패합니다. - **기본값**: 연결이 연결된 네트워크 프로필에서 지정한 라우팅을 사용합니다. 이 구성표는 &quot;프로필 라우팅&quot;이라고도 합니다. 기본 작업 공간 사전 설정: - 네트워크 프로필 암호화 → **사용자 정의** - 네트워크 프로필 FIAT → **없음** - 네트워크 연결 암호화 → **기본값** - 네트워크 연결 FIAT → **기본값** - **참고**: 기본적으로 사용자 정의 라우팅 구성표는 (`dstId` = `0`, `dstType` = `VAULT`)를 사용합니다..",
        "tags": [
          "Network connections"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "networkId",
            "required": true,
            "description": "네트워크의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "isDiscoverable": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "isDiscoverable"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "네트워크 ID",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/network_ids/{networkId}/set_name": {
      "patch": {
        "summary": "네트워크 ID 이름 업데이트.",
        "description": "지정된 네트워크 ID의 이름을 업데이트합니다. **참고:** 이 API 호출은 유연한 라우팅 체계의 적용을 받습니다. 라우팅 정책은 트랜잭션이 라우팅되는 방식을 정의합니다. 각 자산 유형에 대해 아래에 언급된 3가지 체계 중 하나를 선택할 수 있습니다. - **없음**: 해당 자산 유형에 대한 대상 없음으로의 프로필 라우팅을 정의합니다. `없음`으로 라우팅된 자산 유형으로 들어오는 트랜잭션은 실패합니다. - **사용자 지정**: 선택한 계정으로 라우팅합니다. 계정을 제거하면 다른 계정을 선택할 때까지 들어오는 트랜잭션은 실패합니다. - **기본값**: 연결이 연결된 네트워크 프로필에서 지정한 라우팅을 사용합니다. 이 체계는 &quot;프로필 라우팅&quot;이라고도 합니다. 기본 작업 공간 사전 설정: - 네트워크 프로필 암호화 → **사용자 지정** - 네트워크 프로필 FIAT → **없음** - 네트워크 연결 암호화 → **기본값** - 네트워크 연결 FIAT → **기본값** - **참고**: 기본적으로 사용자 지정 라우팅 체계는 (`dstId` = `0`, `dstType` = `VAULT`)를 사용합니다..",
        "tags": [
          "Network connections"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "networkId",
            "required": true,
            "description": "네트워크의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "네트워크 ID",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/internal_wallets": {
      "get": {
        "summary": "내부 지갑 목록",
        "tags": [
          "Internal wallets"
        ],
        "description": "내부 지갑 목록을 가져옵니다. **참고**: 허용된 주소에 속한 BTC 기반 자산은 매일 00:00 UTC와 00:01 UTC 사이에 타사 공급업체인 Blockchair가 이 60초 동안 사용할 수 없기 때문에 검색할 수 없습니다. BTC 기반 자산을 검색하려면 다음 분까지 기다려 주십시오..",
        "responses": {
          "200": {
            "description": "내부 지갑 목록",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnmanagedWallet"
                  }
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "내부 지갑 생성",
        "tags": [
          "Internal wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "internalWallet = fireblocks.create_internal_wallet(name, customer_ref_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const internalWallet = await fireblocks.createInternalWallet(name, customerRefId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "description": "요청된 이름으로 새 내부 지갑을 생성합니다..",
        "responses": {
          "200": {
            "description": "새로운 지갑 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UnmanagedWallet"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "지갑의 표시 이름"
                  },
                  "customerRefId": {
                    "description": "선택 사항 - 고객 참조 ID를 설정합니다.",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/internal_wallets/{walletId}": {
      "get": {
        "summary": "내부 지갑에 대한 자산 가져오기",
        "tags": [
          "Internal wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "internalWallet = fireblocks.get_internal_wallet(walletId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.getInternalWallet(walletId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "description": "ID별로 내부 지갑의 모든 자산을 반환합니다..",
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "반환할 지갑의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UnmanagedWallet"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "내부 지갑 삭제",
        "tags": [
          "Internal wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = firebocks.delete_internal_wallet(walletId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.deleteInternalWallet(walletId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "description": "ID로 내부 지갑을 삭제합니다..",
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "삭제할 지갑의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "201": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/internal_wallets/{walletId}/set_customer_ref_id": {
      "post": {
        "summary": "내부 지갑에 대한 AML/KYT 고객 참조 ID 설정",
        "tags": [
          "Internal wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = firebocks.set_customer_ref_id_for_internal_wallet(wallet_id, customer_ref_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.setCustomerRefIdForInternalWallet(walletId, customerRefId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "description": "특정 내부 지갑에 대한 AML/KYT 고객 참조 ID를 설정합니다..",
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "지갑 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customerRefId": {
                    "description": "고객 참조 ID",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/internal_wallets/{walletId}/{assetId}": {
      "get": {
        "summary": "내부 지갑에서 자산 가져오기",
        "tags": [
          "Internal wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "internalWalletAsset = fireblocks.get_internal_wallet_asset(walletId, assetId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const internalWalletAsset = fireblocks.getInternalWalletAsset(walletId, assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "description": "내부 지갑의 자산에 대한 정보를 반환합니다..",
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "지갑의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "반환할 자산의 ID",
            "schema": {
              "type": "string",
              "minimum": 1,
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "지갑 자산 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WalletAsset"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "내부 지갑에 자산 추가",
        "tags": [
          "Internal wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "internalWalletAsset = fireblocks.create_internal_wallet_asset(walletId, assetId, address, tag)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const internalWalletAsset = await fireblocks.createInternalWalletAsset(walletContainerId, assetId, address, tag);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "description": "기존 내부 지갑에 자산을 추가합니다..",
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "지갑의 ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "추가할 자산의 ID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "지갑 자산 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WalletAsset"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "지갑 주소 또는 EOS 지갑의 경우 계정 이름"
                  },
                  "tag": {
                    "type": "string",
                    "description": "XRP 지갑의 경우 목적지 태그, EOS의 경우 메모, 법정 통화 공급자(BCB 그룹의 BLINC)의 경우 은행 송금 설명"
                  }
                },
                "required": [
                  "address"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "내부 지갑에서 허용 목록에 있는 주소 삭제",
        "tags": [
          "Internal wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = fireblocks.delete_internal_wallet_asset(walletId, assetId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.deleteInternalWalletAsset(walletId, assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "description": "내부 지갑에서 허용 목록에 있는 주소(자산)를 삭제합니다..",
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "지갑의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "삭제할 자산의 ID",
            "schema": {
              "type": "string",
              "minimum": 1,
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/external_wallets": {
      "get": {
        "summary": "외부 지갑 목록",
        "description": "작업 공간 아래에 외부 지갑 목록을 가져옵니다..",
        "tags": [
          "External wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "externalWallets = fireblocks.get_external_wallets()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const externalWallets = await fireblocks.getExternalWallets();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "외부 지갑 목록",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnmanagedWallet"
                  }
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "외부 지갑 생성",
        "description": "요청된 이름으로 새 외부 지갑을 생성합니다..",
        "tags": [
          "External wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "externalWallet = fireblocks.create_external_wallet(name, customer_ref_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const externalWallet = await fireblocks.createExternalWallet(name, customerRefId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "Wallet 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UnmanagedWallet"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "지갑의 표시 이름"
                  },
                  "customerRefId": {
                    "description": "선택 사항 - 고객 참조 ID를 설정합니다.",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/external_wallets/{walletId}": {
      "get": {
        "summary": "외부 지갑 찾기",
        "description": "ID로 외부 지갑을 반환합니다..",
        "tags": [
          "External wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "externalWallet = fireblocks.get_external_wallet(walletId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const externalWallet = await fireblocks.getExternalWallet(walletId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "반환할 지갑의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UnmanagedWallet"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "외부 지갑 삭제",
        "description": "ID로 외부 지갑을 삭제합니다..",
        "tags": [
          "External wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = firebocks.delete_external_wallet(walletId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.deleteExternalWallet(walletId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "삭제할 지갑의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "201": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/external_wallets/{walletId}/set_customer_ref_id": {
      "post": {
        "summary": "외부 지갑에 대한 AML 고객 참조 ID 설정",
        "description": "특정 외부 지갑에 대한 AML/KYT 고객 참조 ID를 설정합니다..",
        "tags": [
          "External wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = firebocks.set_customer_ref_id_for_external_wallet(wallet_id, customer_ref_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.setCustomerRefIdForExternalWallet(walletId, customerRefId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "지갑 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customerRefId": {
                    "description": "고객 참조 ID",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/external_wallets/{walletId}/{assetId}": {
      "get": {
        "summary": "외부 지갑에서 자산 가져오기",
        "description": "지갑 ID 및 자산 ID로 외부 지갑을 반환합니다..",
        "tags": [
          "External wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "externalWalletAsset = fireblocks.get_external_wallet_asset(walletId, assetId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const externalWalletAsset = fireblocks.getExternalWalletAsset(walletId, assetId)",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "지갑의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "반환할 자산의 ID",
            "schema": {
              "type": "string",
              "minimum": 1,
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "지갑 자산 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalWalletAsset"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "외부 지갑에 자산 추가.",
        "description": "기존 외부 지갑에 자산을 추가합니다..",
        "tags": [
          "External wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "externalWalletAsset = fireblocks.create_external_wallet_asset(walletId, assetId, address, tag)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const externalWalletAsset = await fireblocks.createExternalWalletAsset(walletContainerId, assetId, address, tag);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "지갑의 ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "추가할 자산의 ID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "지갑 자산 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalWalletAsset"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "지갑의 주소(또는 xpub)"
                      },
                      "tag": {
                        "type": "string",
                        "description": "XRP 지갑의 경우 목적지 태그, EOS/XLM의 경우 메모, 법정 통화 공급자(BCB 그룹의 BLINC)의 경우 은행 송금 설명"
                      }
                    },
                    "required": [
                      "address"
                    ]
                  },
                  {
                    "properties": {
                      "additionalInfo": {
                        "type": "object",
                        "oneOf": [
                          {
                            "properties": {
                              "accountHolderGivenName": {
                                "type": "string"
                              },
                              "accountHolderSurname": {
                                "type": "string"
                              },
                              "accountHolderCity": {
                                "type": "string"
                              },
                              "accountHolderCountry": {
                                "type": "string"
                              },
                              "accountHolderAddress1": {
                                "type": "string"
                              },
                              "accountHolderAddress2": {
                                "type": "string"
                              },
                              "accountHolderDistrict": {
                                "type": "string"
                              },
                              "accountHolderPostalCode": {
                                "type": "string"
                              },
                              "iban": {
                                "type": "string"
                              },
                              "ibanCity": {
                                "type": "string"
                              },
                              "ibanCountry": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "accountHolderGivenName",
                              "accountHolderCity",
                              "accountHolderCountry",
                              "accountHolderAddress1",
                              "accountHolderPostalCode",
                              "iban",
                              "ibanCity",
                              "ibanCountry"
                            ]
                          },
                          {
                            "properties": {
                              "accountHolderGivenName": {
                                "type": "string"
                              },
                              "accountHolderSurname": {
                                "type": "string"
                              },
                              "accountHolderCity": {
                                "type": "string"
                              },
                              "accountHolderCountry": {
                                "type": "string"
                              },
                              "accountHolderAddress1": {
                                "type": "string"
                              },
                              "accountHolderAddress2": {
                                "type": "string"
                              },
                              "accountHolderDistrict": {
                                "type": "string"
                              },
                              "accountHolderPostalCode": {
                                "type": "string"
                              },
                              "abaRoutingNumber": {
                                "type": "string"
                              },
                              "abaAccountNumber": {
                                "type": "string"
                              },
                              "abaCountry": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "accountHolderGivenName",
                              "accountHolderCity",
                              "accountHolderCountry",
                              "accountHolderAddress1",
                              "accountHolderPostalCode",
                              "abaRoutingNumber",
                              "abaAccountNumber",
                              "abaCountry"
                            ]
                          },
                          {
                            "properties": {
                              "speiClabe": {
                                "type": "string"
                              },
                              "speiName": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "speiClabe"
                            ]
                          }
                        ]
                      }
                    },
                    "required": [
                      "additionalInfo"
                    ]
                  }
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "외부 지갑에서 자산 삭제",
        "description": "ID로 외부 지갑 자산을 삭제합니다..",
        "tags": [
          "External wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = fireblocks.delete_external_wallet_asset(walletId, assetId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.deleteExternalWalletAsset(walletId, assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "지갑의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "삭제할 자산의 ID",
            "schema": {
              "type": "string",
              "minimum": 1,
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contracts": {
      "get": {
        "summary": "계약 목록",
        "description": "계약 목록을 가져옵니다.",
        "tags": [
          "Contracts"
        ],
        "responses": {
          "200": {
            "description": "계약 목록",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnmanagedWallet"
                  }
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "계약서 작성",
        "description": "새로운 계약을 생성합니다.",
        "tags": [
          "Contracts"
        ],
        "responses": {
          "200": {
            "description": "Wallet 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UnmanagedWallet"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "계약서의 표시 이름"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{contractId}": {
      "get": {
        "summary": "특정 계약 찾기",
        "description": "ID로 계약서 반환.",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contractId",
            "required": true,
            "description": "반환할 계약의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UnmanagedWallet"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "계약 삭제",
        "description": "ID로 계약을 삭제합니다.",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contractId",
            "required": true,
            "description": "삭제할 계약의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "201": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{contractId}/{assetId}": {
      "get": {
        "summary": "계약 자산 찾기",
        "description": "ID로 계약 자산을 반환합니다..",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contractId",
            "required": true,
            "description": "계약의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "반환할 자산의 ID",
            "schema": {
              "type": "string",
              "minimum": 1,
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "지갑 자산 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalWalletAsset"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "계약에 자산 추가",
        "description": "기존 계약에 자산을 추가합니다..",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contractId",
            "required": true,
            "description": "계약의 ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "추가할 자산의 ID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "지갑 자산 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalWalletAsset"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "지갑의 계약 주소(또는 xpub)"
                  },
                  "tag": {
                    "type": "string",
                    "description": "XRP 지갑의 목적지 태그"
                  }
                },
                "required": [
                  "address"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "계약 자산 삭제",
        "description": "ID로 계약 자산을 삭제합니다..",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contractId",
            "required": true,
            "description": "계약의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "삭제할 자산의 ID",
            "schema": {
              "type": "string",
              "minimum": 1,
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/supported_assets": {
      "get": {
        "summary": "Fireblocks에서 지원하는 모든 자산 유형을 나열합니다.",
        "description": "Fireblocks에서 지원하는 모든 자산 유형을 반환합니다..",
        "tags": [
          "Blockchains & assets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "supportedAssets = fireblocks.get_supported_assets()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const supportedAssets = await fireblocks.getSupportedAssets();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "거래 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetTypeResponse"
                  }
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/estimate_network_fee": {
      "get": {
        "summary": "자산에 필요한 수수료를 추정하세요",
        "description": "자산에 필요한 예상 수수료를 가져옵니다. UTXO 기반 자산의 경우 응답에는 바이트당 제안 수수료, ETH/ETC 기반 자산의 경우 제안 가스 가격, XRP/XLM의 경우 거래 수수료가 포함됩니다..",
        "tags": [
          "Blockchains & assets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "fee_result = fireblocks.get_fee_for_asset(asset_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const feeResult = await fireblocks.getFeeForAsset(assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "query",
            "name": "assetId",
            "description": "수수료를 추정할 자산",
            "required": true,
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "예상 수수료 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EstimatedNetworkFeeResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/validate_address/{assetId}/{address}": {
      "get": {
        "summary": "목적지 주소 검증",
        "description": "주소가 유효한지 확인합니다(XRP, DOT, XLM 및 EOS의 경우).",
        "tags": [
          "Blockchains & assets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "const result = await fireblocks.validate_address(assetID, address)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.validateAddress(assetID, address)",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "주소의 자산",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          },
          {
            "in": "path",
            "name": "address",
            "required": true,
            "description": "검증할 주소",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "거래 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateAddressResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "summary": "거래내역 목록",
        "description": "작업 공간의 거래 내역을 나열합니다..",
        "tags": [
          "Transactions"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "transactions = fireblocks.get_transactions(status, after)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const transactions = await fireblocks.getTransactions({\n status: args.status,\nafter: from });\n",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "query",
            "name": "before",
            "description": "밀리초 단위의 Unix 타임스탬프. 지정된 날짜 이전에 생성된 거래만 반환합니다.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "after",
            "description": "밀리초 단위의 Unix 타임스탬프입니다. 지정된 날짜 이후에 생성된 거래만 반환합니다.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "다음 상태 중 하나로 필터링할 수 있습니다..",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "결과를 정렬할 필드 **참고**: createdAt가 아닌 필드로 정렬하면 다음 또는 이전 페이지 결과를 요청할 때 업데이트를 받는 거래가 발생하여 해당 거래가 누락될 수 있습니다..",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "const": "createdAt"
                },
                {
                  "const": "lastUpdated"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "결과를 정렬하는 방향",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "const": "ASC"
                },
                {
                  "const": "DESC"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "결과 수를 제한합니다. 제공되지 않으면 200으로 제한됩니다. 허용되는 최대 한도는 500입니다.",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 200
            }
          },
          {
            "in": "query",
            "name": "sourceType",
            "description": "거래의 소스 유형",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "const": "VAULT_ACCOUNT"
                },
                {
                  "const": "EXCHANGE_ACCOUNT"
                },
                {
                  "const": "INTERNAL_WALLET"
                },
                {
                  "const": "EXTERNAL_WALLET"
                },
                {
                  "const": "FIAT_ACCOUNT"
                },
                {
                  "const": "NETWORK_CONNECTION"
                },
                {
                  "const": "COMPOUND"
                },
                {
                  "const": "UNKNOWN"
                },
                {
                  "const": "GAS_STATION"
                },
                {
                  "const": "END_USER_WALLET"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "sourceId",
            "description": "거래의 소스 ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "destType",
            "description": "거래의 목적지 유형",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "const": "VAULT_ACCOUNT"
                },
                {
                  "const": "EXCHANGE_ACCOUNT"
                },
                {
                  "const": "INTERNAL_WALLET"
                },
                {
                  "const": "EXTERNAL_WALLET"
                },
                {
                  "const": "FIAT_ACCOUNT"
                },
                {
                  "const": "NETWORK_CONNECTION"
                },
                {
                  "const": "COMPOUND"
                },
                {
                  "const": "ONE_TIME_ADDRESS"
                },
                {
                  "const": "END_USER_WALLET"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "destId",
            "description": "거래의 목적지 ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "assets",
            "description": "쉼표로 구분된 필터링 대상 자산 목록",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "txHash",
            "description": "지정된 txHash를 포함하는 결과만 반환합니다.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sourceWalletId",
            "description": "소스가 특정 최종 사용자 지갑인 경우에만 결과를 반환합니다.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "destWalletId",
            "description": "대상이 특정 최종 사용자 지갑인 경우에만 결과를 반환합니다.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "거래 목록",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              },
              "next-page": {
                "schema": {
                  "type": "string"
                },
                "description": "다음 페이지의 결과를 수신하기 위한 이 API 엔드포인트에 대한 새 요청을 나타내는 URL.",
                "in": "header"
              },
              "prev-page": {
                "schema": {
                  "type": "string"
                },
                "description": "이전 페이지의 결과를 수신하기 위한 이 API 엔드포인트에 대한 새 요청을 나타내는 URL.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionResponse"
                  }
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "새로운 거래를 생성하세요",
        "description": "새로운 거래를 생성합니다.",
        "tags": [
          "Transactions"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-End-User-Wallet-Id",
            "schema": {
              "$ref": "#/components/headers/X-End-User-Wallet-Id"
            }
          }
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "tx_result = client.create_transaction( asset_id=\"BTC\", amount=\"50\", source=TransferPeerPath(VAULT_ACCOUNT, from_vault_account_id), destination=DestinationTransferPeerPath(VAULT_ACCOUNT, to_vault_account_id) )\n",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const payload: TransactionArguments = { assetId: asset, source: { type: sourceType, id: sourceId || 0 }, destination: { type: destinationType, id: String(destinationId) }, amount: String(amount), fee: String(fee), note: \"Created by fireblocks SDK\" }; const result = await fireblocks.createTransaction(payload);\n",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "거래 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequest"
              }
            }
          }
        }
      }
    },
    "/transactions/estimate_fee": {
      "post": {
        "summary": "거래 수수료 추정",
        "description": "거래 요청에 대한 거래 수수료를 추정합니다. * 참고: ZCash(ZEC)를 제외한 모든 Fireblocks 자산을 지원합니다..",
        "tags": [
          "Transactions"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "estimated_fee = client.estimate_fee_for_transaction( asset_id=\"BTC\", amount=\"50\", source=TransferPeerPath(VAULT_ACCOUNT, from_vault_account_id), destination=DestinationTransferPeerPath(VAULT_ACCOUNT, to_vault_account_id) )\n",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const payload: TransactionArguments = { assetId: asset, source: { type: sourceType, id: sourceId || 0 }, destination: { type: destinationType, id: String(destinationId) }, amount: Number(amount) }; const estimatedFee = await fireblocks.estimateFeeForTransaction(payload);\n",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "예상 수수료 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EstimatedTransactionFeeResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{txId}": {
      "get": {
        "summary": "Fireblocks 거래 ID로 특정 거래 찾기",
        "description": "ID로 거래를 반환합니다.",
        "tags": [
          "Transactions"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "tx = fireblocks.get_transaction_by_id(txId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const tx = await fireblocks.getTransactionById(txId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "txId",
            "required": true,
            "example": "00000000-0000-0000-0000-000000000000",
            "description": "반환할 거래의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "거래 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/external_tx_id/{externalTxId}/": {
      "get": {
        "summary": "외부 거래 ID로 특정 거래 찾기",
        "description": "외부 거래 ID로 거래를 반환합니다..",
        "tags": [
          "Transactions"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "tx = fireblocks.get_transaction_by_external_tx_id(externalTxId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const tx = await fireblocks.getTransactionByExternalTxId(externalTxId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "externalTxId",
            "example": "00000000-0000-0000-0000-000000000000",
            "required": true,
            "description": "반환할 거래의 외부 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "거래 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{txId}/set_confirmation_threshold": {
      "post": {
        "summary": "거래 ID로 확인 임계값 설정",
        "description": "거래 ID에 따른 거래 완료에 필요한 확인 횟수를 재정의합니다..",
        "tags": [
          "Transactions"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "set_conf_threshold = client.set_confirmation_threshold_by_tx_id(body)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const setConfThreshold = await fireblocks.setConfirmationThresholdByTxId(body);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetConfirmationsThresholdRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "txId",
            "required": true,
            "description": "거래의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "성공적으로 설정되었습니다",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SetConfirmationsThresholdResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{txId}/drop": {
      "post": {
        "summary": "ID로 ETH 거래 삭제",
        "description": "중단된 ETH 거래를 삭제하고 대체 거래를 생성합니다..",
        "tags": [
          "Transactions"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = fireblocks.drop_transaction(txId, fee_level)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.dropTransaction(txId, feeLevel);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DropTransactionRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "X-End-User-Wallet-Id",
            "schema": {
              "$ref": "#/components/headers/X-End-User-Wallet-Id"
            }
          },
          {
            "in": "path",
            "name": "txId",
            "required": true,
            "description": "거래의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "성공적으로 생성되었습니다",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DropTransactionResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{txId}/cancel": {
      "post": {
        "summary": "거래 취소",
        "description": "ID로 거래 취소.",
        "tags": [
          "Transactions"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = fireblocks.cancel_transaction_by_id(txId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.cancelTransactionById(txId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "header",
            "name": "X-End-User-Wallet-Id",
            "schema": {
              "$ref": "#/components/headers/X-End-User-Wallet-Id"
            }
          },
          {
            "in": "path",
            "name": "txId",
            "required": true,
            "description": "취소할 거래의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "거래 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CancelTransactionResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{txId}/freeze": {
      "post": {
        "summary": "거래 동결",
        "description": "ID로 거래를 동결합니다.",
        "tags": [
          "Transactions"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = fireblocks.freeze_transaction(txId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.freezeTransaction(txId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "header",
            "name": "X-End-User-Wallet-Id",
            "schema": {
              "$ref": "#/components/headers/X-End-User-Wallet-Id"
            }
          },
          {
            "in": "path",
            "name": "txId",
            "required": true,
            "description": "동결할 거래의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "동결 반응",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FreezeTransactionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{txId}/unfreeze": {
      "post": {
        "summary": "거래 해제",
        "description": "ID로 거래를 동결 해제하고 거래를 다시 사용할 수 있게 합니다..",
        "tags": [
          "Transactions"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = fireblocks.unfreeze_transaction(txId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.unfreezeTransaction(txId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "header",
            "name": "X-End-User-Wallet-Id",
            "schema": {
              "$ref": "#/components/headers/X-End-User-Wallet-Id"
            }
          },
          {
            "in": "path",
            "name": "txId",
            "required": true,
            "description": "동결 해제할 거래의 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "동결 해제 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UnfreezeTransactionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/txHash/{txHash}/set_confirmation_threshold": {
      "post": {
        "summary": "거래 해시로 확인 임계값 설정",
        "description": "거래 해시로 거래 완료에 필요한 확인 횟수를 재정의합니다..",
        "tags": [
          "Transactions"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "set_conf_threshold = client.set_confirmation_threshold_by_tx_hash(body)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const setConfThreshold = await fireblocks.setConfirmationThresholdByTxHash(body);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetConfirmationsThresholdRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "txHash",
            "required": true,
            "description": "Tx해시",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "변경으로 인해 영향을 받는 거래 목록",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SetConfirmationsThresholdResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payments/xb-settlements/configs": {
      "post": {
        "tags": [
          "Payments - cross-border settlement"
        ],
        "summary": "새로운 국경 간 결제 구성을 만듭니다.",
        "description": "<u><b>새로운 국경 간 결제 구성을 만듭니다.</b></u></br> 구성에서는 국경 간 결제에 사용할 기본 자산, 온램프, 오프램프를 정의합니다.</br> 구성에는 최소한 `ON_RAMP`와 `VAULT_ACCOUNT`의 두 단계가 포함되어야 합니다.</br> 다른 모든 단계(예: `OFF_RAMP`, `FIAT_DESTINATION` 등)는 선택 사항입니다.</br> 모든 단계에는 사용할 `accountId`가 포함되어야 하며, `inputAssetId`와 `outputAssetId`는 선택 사항입니다. 이러한 항목이 제공되지 않으면 Corridor Settings의 기본값이 사용됩니다.</br> inputAssetId 또는 outputAssetId가 객체 중 하나에 제공된 경우 객체의 모든 자산은 일관되어야 합니다. 예를 들어 ON_RAMP의 출력 자산이 XLM_USDC_5F3T인 경우 VAULT_ACCOUNT의 입력 자산도 XLM_USDC_5F3T여야 합니다.</br> 구성에 대한 슬리피지 금액을 설정할 수 있습니다. 슬리피지는 기준점(bps)으로 정의됩니다. 이 값은 실행 시 오버로드될 수 있습니다. 슬리피지 금액을 구성하지 않으면 기본 슬리피지인 10000bps(10%)가 사용됩니다.</br> **참고:** 이 섹션의 참조 콘텐츠는 Payments Engine 엔드포인트를 설명합니다. Payments Engine 엔드포인트에는 계정에서 Payments Engine을 활성화한 고객에게만 제공되는 API가 포함됩니다. 이러한 엔드포인트는 현재 베타 상태이며 변경될 수 있습니다. Fireblocks Payments Engine에 대해 자세히 알아보려면 Fireblocks 고객 성공 관리자에게 문의하거나 CSM@fireblocks.com으로 이메일을 보내주세요..",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/XBSettlementConfigCreationRequestBody"
              },
              "example": {
                "name": "Flow Config Example",
                "corridorId": "CO_US",
                "steps": {
                  "ON_RAMP": {
                    "accountId": "3b7a1451-3453-4c96-a6a5-683cc8971d04"
                  },
                  "VAULT_ACCOUNT": {
                    "accountId": "2"
                  },
                  "OFF_RAMP": {
                    "accountId": "f2f74204-93ec-4614-870a-4ea2ad13aa0b"
                  }
                },
                "conversionSlippageBasisPoints": 75
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "국경 간 결제 구성이 성공적으로 생성되었습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XBSettlementConfigCreationResponse"
                },
                "example": {
                  "configId": "074791cc-ef32-4920-8373-95efbeea66c5",
                  "corridorId": "CO_US",
                  "name": "Flow Config Example",
                  "steps": {
                    "ON_RAMP": {
                      "accountId": "3b7a1451-3453-4c96-a6a5-683cc8971d04",
                      "inputAssetId": "COP",
                      "outputAssetId": "USD"
                    },
                    "VAULT_ACCOUNT": {
                      "accountId": "2",
                      "inputAssetId": "XLM_USDC_5F3T",
                      "outputAssetId": "XLM_USDC_5F3T"
                    },
                    "OFF_RAMP": {
                      "accountId": "f2f74204-93ec-4614-870a-4ea2ad13aa0b",
                      "inputAssetId": "XLM_USDC_5F3T",
                      "outputAssetId": "XLM_USDC_5F3T"
                    }
                  },
                  "conversionSlippageBasisPoints": 75,
                  "createdAt": 1680625226267
                }
              }
            }
          },
          "400": {
            "description": "국경 간 요청 생성 중 오류 발생",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "승인되지 않음. Authorization 헤더에 JWT 토큰이 없거나 잘못됨.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "내부 오류.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Payments - cross-border settlement"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "모든 국경 간 결제 구성을 얻으세요",
        "description": "모든 국경 간 결제 구성을 확인하세요.</br> **참고:** 이 섹션의 참조 콘텐츠는 Payments Engine 엔드포인트를 설명합니다. Payments Engine 엔드포인트에는 계정에서 Payments Engine을 활성화한 고객에게만 제공되는 API가 포함됩니다. 이러한 엔드포인트는 현재 베타 상태이며 변경될 수 있습니다. Fireblocks Payments Engine에 대해 자세히 알아보려면 Fireblocks 고객 성공 관리자에게 문의하거나 CSM@fireblocks.com으로 이메일을 보내주세요..",
        "responses": {
          "200": {
            "description": "모든 국경 간 결제 구성을 반환합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XBSettlementGetAllConfigsResponse"
                },
                "example": {
                  "configurations": [
                    {
                      "configId": "074791cc-ef32-4920-8373-95efbeea66c5",
                      "corridorId": "CO_US",
                      "name": "Flow Config Example",
                      "steps": {
                        "ON_RAMP": {
                          "accountId": "3b7a1451-3453-4c96-a6a5-683cc8971d04",
                          "inputAssetId": "COP",
                          "outputAssetId": "USD"
                        },
                        "VAULT_ACCOUNT": {
                          "accountId": "2",
                          "inputAssetId": "XLM_USDC_5F3T",
                          "outputAssetId": "XLM_USDC_5F3T"
                        },
                        "OFF_RAMP": {
                          "accountId": "f2f74204-93ec-4614-870a-4ea2ad13aa0b",
                          "inputAssetId": "XLM_USDC_5F3T",
                          "outputAssetId": "XLM_USDC_5F3T"
                        }
                      },
                      "conversionSlippageBasisPoints": 75,
                      "createdAt": 1680625226267
                    },
                    {
                      "configId": "a4b0a706-4578-4467-bd5b-a852761dd2aa",
                      "corridorId": "MX_US",
                      "name": "MX to US flow",
                      "steps": {
                        "ON_RAMP": {
                          "accountId": "3d6241ad-879b-4a11-842f-4cee9cd7fbba",
                          "inputAssetId": "MXN",
                          "outputAssetId": "USD"
                        },
                        "VAULT_ACCOUNT": {
                          "accountId": "1",
                          "inputAssetId": "XLM_USDC_5F3T",
                          "outputAssetId": "XLM_USDC_5F3T"
                        },
                        "OFF_RAMP": {
                          "accountId": "1cf7f750-117f-4c36-b4ef-14c420d118ce",
                          "inputAssetId": "XLM_USDC_5F3T",
                          "outputAssetId": "XLM_USDC_5F3T"
                        }
                      },
                      "conversionSlippageBasisPoints": 10,
                      "createdAt": 1665166171134
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "승인되지 않음. Authorization 헤더에 JWT 토큰이 없거나 잘못됨.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "내부 오류.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payments/xb-settlements/configs/{configId}": {
      "get": {
        "tags": [
          "Payments - cross-border settlement"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "특정 국경 간 결제 구성을 얻으세요",
        "description": "특정 국경 간 결제 구성을 받으세요.</br> **참고:** 이 섹션의 참조 콘텐츠는 Payments Engine 엔드포인트를 설명합니다. Payments Engine 엔드포인트에는 계정에서 Payments Engine을 활성화한 고객에게만 제공되는 API가 포함됩니다. 이러한 엔드포인트는 현재 베타 상태이며 변경될 수 있습니다. Fireblocks Payments Engine에 대해 자세히 알아보려면 Fireblocks 고객 성공 관리자에게 문의하거나 CSM@fireblocks.com으로 이메일을 보내주세요..",
        "parameters": [
          {
            "in": "path",
            "name": "configId",
            "required": true,
            "description": "국경 간 결제 구성 ID.",
            "schema": {
              "type": "string"
            },
            "example": "074791cc-ef32-4920-8373-95efbeea66c5"
          }
        ],
        "responses": {
          "200": {
            "description": "요청된 국경 간 결제 구성을 반환합니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XBSettlementGetConfigResponse"
                },
                "example": {
                  "configId": "074791cc-ef32-4920-8373-95efbeea66c5",
                  "corridorId": "CO_US",
                  "name": "Flow Config Example",
                  "steps": {
                    "ON_RAMP": {
                      "accountId": "3b7a1451-3453-4c96-a6a5-683cc8971d04",
                      "inputAssetId": "COP",
                      "outputAssetId": "USD"
                    },
                    "VAULT_ACCOUNT": {
                      "accountId": "2",
                      "inputAssetId": "XLM_USDC_5F3T",
                      "outputAssetId": "XLM_USDC_5F3T"
                    },
                    "OFF_RAMP": {
                      "accountId": "f2f74204-93ec-4614-870a-4ea2ad13aa0b",
                      "inputAssetId": "XLM_USDC_5F3T",
                      "outputAssetId": "XLM_USDC_5F3T"
                    }
                  },
                  "conversionSlippageBasisPoints": 75,
                  "createdAt": 1680625226267
                }
              }
            }
          },
          "401": {
            "description": "승인되지 않음. Authorization 헤더에 JWT 토큰이 없거나 잘못됨.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "제공된 ID로는 국경 간 결제 구성이 존재하지 않습니다..",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "내부 오류.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Payments - cross-border settlement"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "국경 간 결제 구성 편집",
        "description": "국경 간 결제 구성을 편집합니다. 구성을 편집해도 구성을 사용한 이전에 실행된 흐름에는 영향을 미치지 않습니다. **참고:** 이 섹션의 참조 콘텐츠는 결제 엔진 엔드포인트를 설명합니다. 결제 엔진 엔드포인트에는 계정에서 결제 엔진을 활성화한 고객에게만 제공되는 API가 포함됩니다. 이러한 엔드포인트는 현재 베타 상태이며 변경될 수 있습니다. Fireblocks 결제 엔진에 대해 자세히 알아보려면 Fireblocks 고객 성공 관리자에게 문의하거나 CSM@fireblocks.com으로 이메일을 보내주세요..",
        "parameters": [
          {
            "in": "path",
            "name": "configId",
            "required": true,
            "description": "국경 간 결제 구성 ID.",
            "schema": {
              "type": "string"
            },
            "example": "074791cc-ef32-4920-8373-95efbeea66c5"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/XBSettlementConfigEditRequestBody"
              },
              "example": {
                "name": "Flow Config Example - Edited",
                "steps": {
                  "ON_RAMP": {
                    "accountId": "e9dec04a-3c57-4052-a89a-288c545f6430"
                  },
                  "VAULT_ACCOUNT": {
                    "accountId": "2"
                  },
                  "OFF_RAMP": {
                    "accountId": "f2f74204-93ec-4614-870a-4ea2ad13aa0b"
                  }
                },
                "corridorId": "CO_US",
                "conversionSlippageBasisPoints": 30
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "국경 간 결제 구성이 성공적으로 편집되었습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XBSettlementConfigEditResponse"
                },
                "example": {
                  "configId": "074791cc-ef32-4920-8373-95efbeea66c5",
                  "corridorId": "CO_US",
                  "name": "Flow Config Example - Edited",
                  "steps": {
                    "ON_RAMP": {
                      "accountId": "e9dec04a-3c57-4052-a89a-288c545f6430",
                      "inputAssetId": "COP",
                      "outputAssetId": "USD"
                    },
                    "VAULT_ACCOUNT": {
                      "accountId": "2",
                      "inputAssetId": "XLM_USDC_5F3T",
                      "outputAssetId": "XLM_USDC_5F3T"
                    },
                    "OFF_RAMP": {
                      "accountId": "f2f74204-93ec-4614-870a-4ea2ad13aa0b",
                      "inputAssetId": "XLM_USDC_5F3T",
                      "outputAssetId": "XLM_USDC_5F3T"
                    }
                  },
                  "conversionSlippageBasisPoints": 30,
                  "createdAt": 1680625226267
                }
              }
            }
          },
          "400": {
            "description": "국경 간 요청을 만드는 중 오류가 발생했습니다. 구성이 수정되지 않았습니다..",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "승인되지 않음. Authorization 헤더에 JWT 토큰이 없거나 잘못됨.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "제공된 ID로는 국경 간 결제 구성이 존재하지 않습니다..",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "내부 오류.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Payments - cross-border settlement"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "configId",
            "required": true,
            "description": "국경 간 결제 구성 ID.",
            "schema": {
              "type": "string"
            },
            "example": "074791cc-ef32-4920-8373-95efbeea66c5"
          }
        ],
        "summary": "국경 간 결제 구성 삭제",
        "description": "국경 간 결제 구성을 삭제합니다. 이 구성을 사용하여 이전에 실행한 흐름은 삭제하거나 제거하지 않습니다. **참고:** 이 섹션의 참조 콘텐츠는 결제 엔진 엔드포인트를 설명합니다. 결제 엔진 엔드포인트에는 계정에서 결제 엔진을 활성화한 고객에게만 제공되는 API가 포함됩니다. 이러한 엔드포인트는 현재 베타 상태이며 변경될 수 있습니다. Fireblocks 결제 엔진에 대해 자세히 알아보려면 Fireblocks 고객 성공 관리자에게 문의하거나 CSM@fireblocks.com으로 이메일을 보내주세요..",
        "responses": {
          "200": {
            "description": "국경 간 결제 구성이 성공적으로 삭제되었습니다. 삭제된 구성을 반환합니다..",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XBSettlementConfigDeletionResponse"
                },
                "example": {
                  "configId": "074791cc-ef32-4920-8373-95efbeea66c5",
                  "corridorId": "CO_US",
                  "name": "Flow Config Example - Edited",
                  "steps": {
                    "ON_RAMP": {
                      "accountId": "e9dec04a-3c57-4052-a89a-288c545f6430",
                      "inputAssetId": "COP",
                      "outputAssetId": "USD"
                    },
                    "VAULT_ACCOUNT": {
                      "accountId": "2",
                      "inputAssetId": "XLM_USDC_5F3T",
                      "outputAssetId": "XLM_USDC_5F3T"
                    },
                    "OFF_RAMP": {
                      "accountId": "f2f74204-93ec-4614-870a-4ea2ad13aa0b",
                      "inputAssetId": "XLM_USDC_5F3T",
                      "outputAssetId": "XLM_USDC_5F3T"
                    }
                  },
                  "conversionSlippageBasisPoints": 30,
                  "createdAt": 1680625226267
                }
              }
            }
          },
          "401": {
            "description": "승인되지 않음. Authorization 헤더에 JWT 토큰이 없거나 잘못됨.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "제공된 ID로는 국경 간 결제 구성이 존재하지 않습니다..",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "내부 오류.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payments/xb-settlements/flows": {
      "post": {
        "tags": [
          "Payments - cross-border settlement"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "새로운 국경 간 결제 흐름 생성",
        "description": "국경 간 플로우(국경 간 구성 기반)를 이체할 금액으로 만듭니다. assetId는 국경 간 구성에 의해 정의됩니다. 플로우를 만들면 제공된 금액에 따라 환율, 시간, 수수료를 포함한 플로우 추정치 계산이 트리거됩니다. 국경 간 플로우를 만들어도 플로우가 실행되지 않습니다. **참고:** 이 섹션의 참조 콘텐츠는 결제 엔진 엔드포인트를 설명합니다. 결제 엔진 엔드포인트에는 계정에서 결제 엔진을 활성화한 고객에게만 제공되는 API가 포함됩니다. 이러한 엔드포인트는 현재 베타 상태이며 변경될 수 있습니다. Fireblocks 결제 엔진에 대해 자세히 알아보려면 Fireblocks 고객 성공 관리자에게 문의하거나 CSM@fireblocks.com으로 이메일을 보내주세요..",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/XBSettlementCreateFlowRequestBody"
              },
              "example": {
                "configId": "a4b0a706-4578-4467-bd5b-a852761dd2aa",
                "amount": "100"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "국경 간 결제 흐름이 성공적으로 생성되었습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XBSettlementCreateFlowResponse"
                },
                "example": {
                  "flowId": "98fb5a8b-65ff-4f15-b89c-80910aedbfb3",
                  "configId": "a4b0a706-4578-4467-bd5b-a852761dd2aa",
                  "conversionRate": "0.05481268",
                  "inputAmount": {
                    "amount": "100",
                    "assetId": "MXN"
                  },
                  "estimatedOutputAmount": {
                    "amount": "5.461268",
                    "assetId": "XLM_USDC_5F3T"
                  },
                  "totalEstimatedFee": {
                    "amount": "0.063503",
                    "assetId": "XLM_USDC_5F3T"
                  },
                  "steps": {
                    "ON_RAMP": {
                      "accountId": "3d6241ad-879b-4a11-842f-4cee9cd7fbba",
                      "inputAmount": {
                        "amount": "100",
                        "assetId": "MXN"
                      },
                      "outputAmount": {
                        "amount": "5.48126865",
                        "assetId": "USD"
                      },
                      "estimatedFeeAmount": {
                        "amount": "0.043503",
                        "assetId": "USD"
                      },
                      "estimatedTime": 10,
                      "isSignRequired": false
                    },
                    "VAULT_ACCOUNT": {
                      "accountId": "1",
                      "inputAmount": {
                        "amount": "5.48126865",
                        "assetId": "USD"
                      },
                      "outputAmount": {
                        "amount": "5.471268",
                        "assetId": "XLM_USDC_5F3T"
                      },
                      "estimatedFeeAmount": {
                        "amount": "0.01",
                        "assetId": "XLM_USDC_5F3T"
                      },
                      "estimatedTime": 63,
                      "isSignRequired": true
                    },
                    "OFF_RAMP": {
                      "accountId": "1cf7f750-117f-4c36-b4ef-14c420d118ce",
                      "inputAmount": {
                        "amount": "5.471268",
                        "assetId": "XLM_USDC_5F3T"
                      },
                      "outputAmount": {
                        "amount": "5.461268",
                        "assetId": "XLM_USDC_5F3T"
                      },
                      "estimatedFeeAmount": {
                        "amount": "0.01",
                        "assetId": "XLM_USDC_5F3T"
                      },
                      "estimatedTime": 95,
                      "isSignRequired": true
                    }
                  },
                  "totalEstimatedTime": 696
                }
              }
            }
          },
          "400": {
            "description": "국경 간 흐름을 생성할 수 없습니다. 구성 ID가 잘못되었습니다..",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "승인되지 않음. Authorization 헤더에 JWT 토큰이 없거나 잘못됨.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "내부 오류.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payments/xb-settlements/flows/{flowId}": {
      "get": {
        "tags": [
          "Payments - cross-border settlement"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "flowId",
            "required": true,
            "description": "국경 간 결제 흐름 ID.",
            "schema": {
              "type": "string"
            },
            "example": "98fb5a8b-65ff-4f15-b89c-80910aedbfb3"
          }
        ],
        "summary": "특정 국경 간 결제 흐름에 대한 세부 정보를 얻으세요",
        "description": "특정 국경 간 결제 흐름에 대한 세부 정보를 가져옵니다. **참고:** 이 섹션의 참조 콘텐츠는 결제 엔진 엔드포인트를 설명합니다. 결제 엔진 엔드포인트에는 계정에서 결제 엔진을 활성화한 고객에게만 제공되는 API가 포함됩니다. 이러한 엔드포인트는 현재 베타 상태이며 변경될 수 있습니다. Fireblocks 결제 엔진에 대해 자세히 알아보려면 Fireblocks 고객 성공 관리자에게 문의하거나 CSM@fireblocks.com으로 이메일을 보내주세요..",
        "responses": {
          "200": {
            "description": "국경 간 결제 흐름 세부 정보를 반환합니다. 실행되지 않은 흐름의 경우, 예상 시간, 금액 및 수수료를 보여주는 미리보기 객체가 반환됩니다. 이 데이터 구조는 흐름이 진행됨에 따라 총 수수료(누적), 상태 및 단계를 포함하여 업데이트됩니다..",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XBSettlementGetFlowResponse"
                },
                "examples": {
                  "not executed": {
                    "value": {
                      "preview": {
                        "flowId": "98fb5a8b-65ff-4f15-b89c-80910aedbfb3",
                        "configId": "a4b0a706-4578-4467-bd5b-a852761dd2aa",
                        "conversionRate": "0.055369",
                        "inputAmount": {
                          "amount": "32",
                          "assetId": "MXN"
                        },
                        "estimatedOutputAmount": {
                          "amount": "1.741824",
                          "assetId": "XLM_USDC_5F3T"
                        },
                        "totalEstimatedFee": {
                          "amount": "0.044063",
                          "assetId": "XLM_USDC_5F3T"
                        },
                        "totalEstimatedTime": 831,
                        "steps": {
                          "ON_RAMP": {
                            "accountId": "3d6241ad-879b-4a11-842f-4cee9cd7fbba",
                            "inputAmount": {
                              "amount": "32",
                              "assetId": "MXN"
                            },
                            "outputAmount": {
                              "amount": "1.77182407",
                              "assetId": "USD"
                            },
                            "estimatedFeeAmount": {
                              "amount": "0.014063",
                              "assetId": "USD"
                            },
                            "estimatedTime": 10,
                            "isSignRequired": false
                          },
                          "VAULT_ACCOUNT": {
                            "accountId": "1",
                            "inputAmount": {
                              "amount": "1.77182407",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "outputAmount": {
                              "amount": "1.761824",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "estimatedFeeAmount": {
                              "amount": "0.01",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "estimatedTime": 111,
                            "isSignRequired": true
                          },
                          "OFF_RAMP": {
                            "accountId": "1cf7f750-117f-4c36-b4ef-14c420d118ce",
                            "inputAmount": {
                              "amount": "1.761824",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "outputAmount": {
                              "amount": "1.751824",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "estimatedFeeAmount": {
                              "amount": "0.01",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "estimatedTime": 293,
                            "isSignRequired": true
                          }
                        }
                      }
                    }
                  },
                  "in progress": {
                    "value": {
                      "execution": {
                        "flowId": "98fb5a8b-65ff-4f15-b89c-80910aedbfb3",
                        "configId": "a4b0a706-4578-4467-bd5b-a852761dd2aa",
                        "inputAmount": {
                          "amount": "32",
                          "assetId": "MXN"
                        },
                        "outputAmount": {
                          "amount": "1.471824",
                          "assetId": "XLM_USDC_5F3T"
                        },
                        "totalFee": {
                          "amount": "0.004415",
                          "assetId": "XLM_USDC_5F3T"
                        },
                        "initiatedAt": 1684919822759,
                        "initiatedBy": "a92e87a0-5231-531e-a624-fb29c1283764",
                        "state": "PROCESSING",
                        "selectedConversionSlippage": {
                          "basisPoints": 10,
                          "reason": "FLOW"
                        },
                        "steps": {
                          "ON_RAMP": {
                            "id": "c1863abf-e7fa-4f3a-908a-bcd6381f7eb4",
                            "accountId": "3d6241ad-879b-4a11-842f-4cee9cd7fbba",
                            "status": "COMPLETED",
                            "inputAmount": {
                              "amount": "32",
                              "assetId": "MXN"
                            },
                            "outputAmount": {
                              "amount": "1.77182407",
                              "assetId": "USD"
                            },
                            "fee": {
                              "amount": "0.014063",
                              "assetId": "USD"
                            },
                            "startedAt": 1684919823052,
                            "completedAt": 1684919830456,
                            "isSignRequired": false
                          },
                          "VAULT_ACCOUNT": {
                            "id": "2aa2634d-2bab-44ac-9b4e-36e2e4db5d49",
                            "accountId": "1",
                            "status": "COMPLETED",
                            "inputAmount": {
                              "amount": "1.77182407",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "outputAmount": {
                              "amount": "1.761824",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "fee": {
                              "amount": "0.01",
                              "assetId": "XLM"
                            },
                            "startedAt": 1684919831385,
                            "completedAt": 1684920680227,
                            "isSignRequired": true
                          },
                          "OFF_RAMP": {
                            "id": "b221ed63-a05c-4e78-b2f2-205dcffeabda",
                            "accountId": "1cf7f750-117f-4c36-b4ef-14c420d118ce",
                            "status": "PROCESSING",
                            "inputAmount": {
                              "amount": "1.761824",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "startedAt": 1684920681088,
                            "isSignRequired": true
                          }
                        }
                      }
                    }
                  },
                  "completed": {
                    "value": {
                      "execution": {
                        "flowId": "98fb5a8b-65ff-4f15-b89c-80910aedbfb3",
                        "configId": "a4b0a706-4578-4467-bd5b-a852761dd2aa",
                        "inputAmount": {
                          "amount": "32",
                          "assetId": "MXN"
                        },
                        "outputAmount": {
                          "amount": "1.471824",
                          "assetId": "XLM_USDC_5F3T"
                        },
                        "totalFee": {
                          "amount": "0.004415",
                          "assetId": "XLM_USDC_5F3T"
                        },
                        "initiatedAt": 1684919822759,
                        "initiatedBy": "a92e87a0-5231-531e-a624-fb29c1283764",
                        "state": "COMPLETED",
                        "selectedConversionSlippage": {
                          "basisPoints": 10,
                          "reason": "FLOW"
                        },
                        "steps": {
                          "ON_RAMP": {
                            "id": "b1bec144-c4dd-4ff8-80ed-4204c83dd422",
                            "accountId": "3d6241ad-879b-4a11-842f-4cee9cd7fbba",
                            "status": "COMPLETED",
                            "inputAmount": {
                              "amount": "32",
                              "assetId": "MXN"
                            },
                            "outputAmount": {
                              "amount": "1.77182407",
                              "assetId": "USD"
                            },
                            "fee": {
                              "amount": "0.014063",
                              "assetId": "USD"
                            },
                            "startedAt": 1684919823052,
                            "completedAt": 1684919830456,
                            "isSignRequired": false
                          },
                          "VAULT_ACCOUNT": {
                            "id": "df7e0103-04cf-4508-9654-aa5e4b90dd50",
                            "accountId": "1",
                            "status": "COMPLETED",
                            "inputAmount": {
                              "amount": "1.77182407",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "outputAmount": {
                              "amount": "1.761824",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "fee": {
                              "amount": "0.01",
                              "assetId": "XLM"
                            },
                            "startedAt": 1684919831385,
                            "completedAt": 1684920680227,
                            "isSignRequired": true
                          },
                          "OFF_RAMP": {
                            "id": "34c2d597-271a-4c11-937a-3c246f5d39c2",
                            "accountId": "1cf7f750-117f-4c36-b4ef-14c420d118ce",
                            "status": "COMPLETED",
                            "inputAmount": {
                              "amount": "1.761824",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "outputAmount": {
                              "amount": "1.761823",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "fee": {
                              "amount": "0.00001",
                              "assetId": "XLM"
                            },
                            "startedAt": 1684920681088,
                            "completedAt": 1684921261453,
                            "isSignRequired": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "승인되지 않음. Authorization 헤더에 JWT 토큰이 없거나 잘못됨.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "잘못된 flowId.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "내부 오류.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payments/xb-settlements/flows/{flowId}/actions/execute": {
      "post": {
        "tags": [
          "Payments - cross-border settlement"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "flowId",
            "required": true,
            "description": "국경 간 결제 흐름 ID.",
            "schema": {
              "type": "string"
            },
            "example": "98fb5a8b-65ff-4f15-b89c-80910aedbfb3"
          }
        ],
        "summary": "국경 간 결제 흐름 실행",
        "description": "실행을 위해 &#39;flowId&#39;를 사용하여 결제 흐름을 보냅니다. 이 실행에 흐름 구성에서 구성된 것과 다른 슬리피지 구성이 필요한 경우 요청 본문은 이 실행에 대한 원하는 슬리피지 구성을 정의해야 합니다. **참고:** 이 섹션의 참조 콘텐츠는 결제 엔진 엔드포인트를 설명합니다. 결제 엔진 엔드포인트에는 계정에서 결제 엔진을 활성화한 고객에게만 제공되는 API가 포함됩니다. 이러한 엔드포인트는 현재 베타 상태이며 변경될 수 있습니다. Fireblocks 결제 엔진에 대해 자세히 알아보려면 Fireblocks 고객 성공 관리자에게 문의하거나 CSM@fireblocks.com으로 이메일을 보내주세요..",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/XBSettlementFlowExecutionRequestBody"
              },
              "example": {
                "conversionSlippageBasisPoints": 10
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "국경 간 결제 흐름이 성공적으로 실행되기 시작했습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XBSettlementFlowExecutionResponse"
                },
                "example": {
                  "flowId": "98fb5a8b-65ff-4f15-b89c-80910aedbfb3",
                  "configId": "a4b0a706-4578-4467-bd5b-a852761dd2aa",
                  "inputAmount": {
                    "amount": "32",
                    "assetId": "MXN"
                  },
                  "outputAmount": {
                    "amount": "1.471824",
                    "assetId": "XLM_USDC_5F3T"
                  },
                  "totalFee": {
                    "amount": "0.004415",
                    "assetId": "XLM_USDC_5F3T"
                  },
                  "initiatedAt": 1684919822759,
                  "initiatedBy": "a92e87a0-5231-531e-a624-fb29c1283764",
                  "state": "PROCESSING",
                  "selectedConversionSlippage": {
                    "basisPoints": 10,
                    "reason": "FLOW"
                  },
                  "steps": {
                    "ON_RAMP": {
                      "id": "c1863abf-e7fa-4f3a-908a-bcd6381f7eb4",
                      "accountId": "3d6241ad-879b-4a11-842f-4cee9cd7fbba",
                      "status": "COMPLETED",
                      "inputAmount": {
                        "amount": "32",
                        "assetId": "MXN"
                      },
                      "outputAmount": {
                        "amount": "1.77182407",
                        "assetId": "USD"
                      },
                      "fee": {
                        "amount": "0.014063",
                        "assetId": "USD"
                      },
                      "startedAt": 1684919823052,
                      "completedAt": 1684919830456,
                      "isSignRequired": false
                    },
                    "VAULT_ACCOUNT": {
                      "id": "2aa2634d-2bab-44ac-9b4e-36e2e4db5d49",
                      "accountId": "1",
                      "status": "PROCESSING",
                      "inputAmount": {
                        "amount": "1.77182407",
                        "assetId": "XLM_USDC_5F3T"
                      },
                      "outputAmount": {
                        "amount": "1.761824",
                        "assetId": "XLM_USDC_5F3T"
                      },
                      "fee": {
                        "amount": "0.01",
                        "assetId": "XLM"
                      },
                      "startedAt": 1684919831385,
                      "isSignRequired": true
                    },
                    "OFF_RAMP": {
                      "id": "b221ed63-a05c-4e78-b2f2-205dcffeabda",
                      "accountId": "1cf7f750-117f-4c36-b4ef-14c420d118ce",
                      "status": "NOT_STARTED",
                      "inputAmount": {
                        "amount": "1.761824",
                        "assetId": "XLM_USDC_5F3T"
                      },
                      "isSignRequired": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "국경 간 흐름을 실행하려고 하는 동안 오류가 발생했습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "승인되지 않음. Authorization 헤더에 JWT 토큰이 없거나 잘못됨.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "잘못된 flowId.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "내부 오류.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payments/payout": {
      "post": {
        "tags": [
          "Payments - Payout"
        ],
        "description": "**참고:** 이 섹션의 참조 콘텐츠는 결제 엔진 엔드포인트를 설명합니다. 결제 엔진 엔드포인트에는 계정에서 결제 엔진이 활성화된 고객에게만 제공되는 API가 포함됩니다.</br></br> 이러한 엔드포인트는 현재 베타 상태이므로 변경될 수 있습니다.</br></br> Fireblocks Payments Engine에 대해 자세히 알아보려면 Fireblocks 고객 성공 관리자에게 문의하거나 CSM@fireblocks.com으로 이메일을 보내주세요.</br></br> <b u>지급 지침 세트를 만듭니다.</b></br> 지급 지시 사항 세트는 단일 지급 계좌에서 수취인 계좌 목록으로 지급을 분배하기 위한 지시 사항 세트입니다.</br> 명령어 세트는 다음을 정의합니다.</br><ul><li> 지불 계좌와 계좌 유형(금고, 거래소 또는 법정화폐)</li><li> 계좌 유형(금고 계좌, 거래소 계좌, 허용 주소, 네트워크 연결, 법정 통화 계좌 또는 판매자 계좌), 금액, 각 수취인 계좌의 지불 자산입니다.</li></ul>",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "지급 지침 세트 생성",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePayoutRequest"
              },
              "example": {
                "paymentAccount": {
                  "id": "EX_SUB3",
                  "type": "EXCHANGE_ACCOUNT"
                },
                "instructionSet": [
                  {
                    "payeeAccount": {
                      "id": "bef85a1c-b605-4b2e-bdb5-2d400f4d0bf3",
                      "type": "EXTERNAL_WALLET"
                    },
                    "amount": {
                      "amount": "43",
                      "assetId": "USDC"
                    }
                  },
                  {
                    "payeeAccount": {
                      "id": "3adc1f92-e791-44a8-9aee-7f31c2108b78",
                      "type": "NETWORK_CONNECTION"
                    },
                    "amount": {
                      "amount": "4423",
                      "assetId": "USDC"
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "지급 명령 세트 생성이 성공했으며 고유한 지급 ID와 함께 생성된 명령 세트를 반환합니다. 지급 ID는 지급을 실행하고 지급 상태를 확인하는 데 사용됩니다..",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                },
                "example": {
                  "payoutId": "1fe3b61f-7e1f-4a19-aff0-4f0a524d44d7",
                  "paymentAccount": {
                    "id": "EX_SUB3",
                    "type": "EXCHANGE_ACCOUNT"
                  },
                  "createdAt": 1645365800,
                  "state": "REQUESTED",
                  "status": "REGISTERED",
                  "initMethod": "API",
                  "instructionSet": [
                    {
                      "id": "6ea4a016-536b-49af-b1a0-40b343ccf879",
                      "name": "payee-wallet-name",
                      "payeeAccount": {
                        "id": "bef85a1c-b605-4b2e-bdb5-2d400f4d0bf3",
                        "type": "EXTERNAL_WALLET"
                      },
                      "amount": {
                        "amount": "43",
                        "assetId": "USDC"
                      },
                      "state": "NOT_STARTED",
                      "transactions": []
                    },
                    {
                      "id": "e783a79b-6acc-4d18-885d-ed533cad8eeb",
                      "name": "payee-by-network",
                      "payeeAccount": {
                        "id": "3adc1f92-e791-44a8-9aee-7f31c2108b78",
                        "type": "NETWORK_CONNECTION"
                      },
                      "amount": {
                        "amount": "4423.23",
                        "assetId": "USDC"
                      },
                      "state": "NOT_STARTED",
                      "transactions": []
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "잘못된 요청",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "승인되지 않음. Authorization 헤더에 JWT 토큰이 없거나 잘못됨.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "내부 오류.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payments/payout/{payoutId}/actions/execute": {
      "post": {
        "tags": [
          "Payments - Payout"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "지불 명령 세트 실행",
        "description": "**참고:** 이 섹션의 참조 콘텐츠는 결제 엔진 엔드포인트를 설명합니다. 결제 엔진 엔드포인트에는 계정에서 결제 엔진이 활성화된 고객에게만 제공되는 API가 포함됩니다.</br></br> 이러한 엔드포인트는 현재 베타 상태이므로 변경될 수 있습니다.</br></br> Fireblocks Payments Engine에 대해 자세히 알아보려면 Fireblocks 고객 성공 관리자에게 문의하거나 CSM@fireblocks.com으로 이메일을 보내주세요.</br></br> <b u>지불 명령 세트를 실행합니다.</b></br></br> 명령어 세트가 검증되고 실행됩니다.</br> <b><u>소스 잠금</u></b></br> 이미 활성화된 지급이 있는 지급 계정에서 지급 지침 세트를 실행하는 경우, 새로운 지급 지침 세트가 실행되기 전에 활성화된 지급이 완료되어야 합니다.</br> 동일한 지급 명령 세트를 두 번 이상 실행할 수 없습니다..",
        "parameters": [
          {
            "name": "payoutId",
            "description": "지불 명령 세트 생성에서 수신된 지불 ID",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "1fe3b61f-7e1f-4a19-aff0-4f0a524d44d7"
          }
        ],
        "responses": {
          "200": {
            "description": "지불 명령 세트를 실행했습니다",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DispatchPayoutResponse"
                },
                "example": {
                  "payoutId": "1fe3b61f-7e1f-4a19-aff0-4f0a524d44d7"
                }
              }
            }
          },
          "400": {
            "description": "잘못된 요청",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "승인되지 않음. Authorization 헤더에 JWT 토큰이 없거나 잘못됨.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "내부 오류.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payments/payout/{payoutId}": {
      "get": {
        "tags": [
          "Payments - Payout"
        ],
        "summary": "지급 지시 세트의 상태를 가져옵니다",
        "description": "**참고:** 이 섹션의 참조 콘텐츠는 결제 엔진 엔드포인트를 설명합니다. 결제 엔진 엔드포인트에는 계정에서 결제 엔진이 활성화된 고객에게만 제공되는 API가 포함됩니다.</br></br> 이러한 엔드포인트는 현재 베타 상태이므로 변경될 수 있습니다.</br></br> Fireblocks Payments Engine에 대해 자세히 알아보려면 Fireblocks 고객 성공 관리자에게 문의하거나 CSM@fireblocks.com으로 이메일을 보내주세요.</br>",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "payoutId",
            "description": "지불 명령 세트 생성에서 수신된 지불 ID",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "1fe3b61f-7e1f-4a19-aff0-4f0a524d44d7"
          }
        ],
        "responses": {
          "200": {
            "description": "각 지급 명령의 상태와 프로세스에서 생성된 거래를 포함하여 지급 명령 세트의 현재 상태를 반환합니다..",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                },
                "example": {
                  "payoutId": "1fe3b61f-7e1f-4a19-aff0-4f0a524d44d7",
                  "paymentAccount": {
                    "id": "EX_SUB3",
                    "type": "EXCHANGE_ACCOUNT"
                  },
                  "createdAt": 1645365800,
                  "state": "FINALIZED",
                  "status": "DONE",
                  "initMethod": "API",
                  "instructionSet": [
                    {
                      "id": "6ea4a016-536b-49af-b1a0-40b343ccf879",
                      "name": "payee-wallet-name",
                      "payeeAccount": {
                        "id": "bef85a1c-b605-4b2e-bdb5-2d400f4d0bf3",
                        "type": "EXTERNAL_WALLET"
                      },
                      "amount": {
                        "amount": "4312",
                        "assetId": "USDC"
                      },
                      "state": "COMPLETED",
                      "transactions": [
                        {
                          "id": "35a4b10c-1f83-4f0b-ba2a-da0e73be2d6e",
                          "state": "COMPLETED",
                          "timestamp": 1645367429
                        }
                      ]
                    },
                    {
                      "id": "e783a79b-6acc-4d18-885d-ed533cad8eeb",
                      "name": "payee-by-network",
                      "payeeAccount": {
                        "id": "3adc1f92-e791-44a8-9aee-7f31c2108b78",
                        "type": "NETWORK_CONNECTION"
                      },
                      "amount": {
                        "amount": "4423.23",
                        "assetId": "USDC"
                      },
                      "state": "COMPLETED",
                      "transactions": [
                        {
                          "id": "4505e7d9-bfc7-41bc-9750-54311fcbbf26",
                          "state": "COMPLETED",
                          "timestamp": 1645367449
                        }
                      ]
                    }
                  ],
                  "reportUrl": "https://some-url.com/reports/cc5777c1-75a9-4337-aebd-f1f5a40a9391"
                }
              }
            }
          },
          "401": {
            "description": "승인되지 않음. Authorization 헤더에 JWT 토큰이 없거나 잘못됨.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "주어진 지급 ID로 지급이 존재하지 않습니다..",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "내부 오류.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gas_station": {
      "get": {
        "summary": "주유소 설정 가져오기",
        "description": "주유소 설정 및 ETH 잔액을 반환합니다..",
        "tags": [
          "Gas stations"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "gas_station_info = fireblocks.get_gas_station_info()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const gasStationInfo = await fireblocks.gasStationInfo();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "주유소 부동산",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GasStationPropertiesResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/gas_station/{assetId}": {
      "get": {
        "summary": "자산별 주유소 설정 가져오기",
        "description": "요청된 자산에 대한 주유소 설정 및 잔액을 반환합니다..",
        "tags": [
          "Gas stations"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "gas_station_info = fireblocks.get_gas_station_info(asset_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const gasStationInfo = await fireblocks.gasStationInfo(assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "assetId",
            "description": "자산의 ID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "주유소 부동산",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GasStationPropertiesResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/gas_station/configuration": {
      "put": {
        "summary": "주유소 설정 편집",
        "description": "ETH에 대한 주유소 설정을 구성합니다.",
        "tags": [
          "Gas stations"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "gas_station = fireblocks.set_gas_station_configuration(gas_threshold, gas_cap, max_gas_price, asset_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const gasStation = await fireblocks.setGasStationConfiguration(gasThreshold, gasCap, maxGasPrice)",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GasStationConfiguration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/gas_station/configuration/{assetId}": {
      "put": {
        "summary": "자산에 대한 주유소 설정 편집",
        "description": "요청된 자산에 대한 주유소 설정을 구성합니다..",
        "tags": [
          "Gas stations"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "assetId",
            "description": "자산의 ID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GasStationConfiguration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "사용자 목록",
        "description": "작업 공간의 모든 사용자를 나열합니다. 이 엔드포인트는 관리자 권한이 있는 API 키에만 사용할 수 있습니다..",
        "tags": [
          "Users"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "users = fireblocks.get_users()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const users = await fireblocks.getUsers();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "사용자 목록",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/audits": {
      "get": {
        "summary": "감사 로그 가져오기",
        "tags": [
          "Audit Logs"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "timePeriod",
            "required": true,
            "description": "감사 로그를 가져오는 마지막 기간",
            "schema": {
              "oneOf": [
                {
                  "const": "DAY"
                },
                {
                  "const": "WEEK"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "요청된 기간의 감사 로그",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/off_exchange/add": {
      "post": {
        "summary": "담보를 추가하다",
        "description": "담보 추가, 입금 요청 생성",
        "tags": [
          "Off exchanges"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCollateralRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "거래 객체",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/off_exchange/remove": {
      "post": {
        "summary": "담보를 제거하다",
        "description": "담보 제거, 인출 요청 생성",
        "tags": [
          "Off exchanges"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveCollateralRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "거래 객체",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/off_exchange/settlements/trader": {
      "post": {
        "summary": "상인을 위한 정산을 생성하다",
        "description": "상인을 위한 정산을 생성하다",
        "tags": [
          "Off exchanges"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettlementRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "정착 대상",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SettlementResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/off_exchange/settlements/transactions": {
      "get": {
        "summary": "거래소에서 결제 거래를 받다",
        "description": "거래소에서 결제 거래를 받다",
        "tags": [
          "Off exchanges"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "mainExchangeAccountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "결제거래",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetSettlementResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/off_exchange/collateral_accounts/{mainExchangeAccountId}": {
      "get": {
        "summary": "특정 담보 교환 계좌 찾기",
        "description": "mainExchangeAccountId로 담보 계정을 반환합니다..",
        "tags": [
          "Off exchanges"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mainExchangeAccountId",
            "required": true,
            "description": "요청된 담보 계정이 연관된 주요 거래소 계정의 ID입니다.",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ExchangeAccount 개체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeAccount"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/resend": {
      "post": {
        "summary": "실패한 웹훅 재전송",
        "description": "실패한 모든 웹훅 알림을 다시 보냅니다..",
        "tags": [
          "Webhooks"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = fireblocks.resend_webhooks()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.resendWebhooks();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResendWebhooksResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/resend/{txId}": {
      "post": {
        "summary": "ID로 거래에 실패한 웹훅을 다시 보냅니다.",
        "description": "ID별 거래에 대한 실패한 웹훅 알림을 다시 보냅니다..",
        "tags": [
          "Webhooks"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = fireblocks.resend_transaction_webhooks_by_id(txId, resend_created, resend_status_updated)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.resendTransactionWebhooksById(txId, resendCreated, resendStatusUpdated);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "txId",
            "required": true,
            "description": "웹훅에 대한 거래 ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "resendCreated": {
                    "type": "boolean"
                  },
                  "resendStatusUpdated": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "좋아요",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/nfts/ownership/tokens": {
      "put": {
        "operationId": "refreshNFTOwnershipByVault",
        "summary": "볼트 계정 토큰 새로 고침",
        "description": "블록체인 및 볼트 계정당 모든 토큰과 잔액을 업데이트합니다. **참고**: 이 엔드포인트는 현재 베타 상태이며, 현재는 일반 이용이 불가능합니다. 베타에 등록하고 이 엔드포인트를 활성화하려면 Fireblocks 고객 성공 관리자에게 문의하거나 [CSM@fireblocks.com](mailto:CSM@fireblocks.com)으로 연락하세요..",
        "parameters": [
          {
            "name": "blockchainDescriptor",
            "required": true,
            "in": "query",
            "description": "블록체인 설명자 필터",
            "schema": {
              "oneOf": [
                {
                  "const": "ETH"
                },
                {
                  "const": "ETH_TEST3"
                },
                {
                  "const": "POLYGON"
                },
                {
                  "const": "POLYGON_TEST_MUMBAI"
                }
              ]
            }
          },
          {
            "name": "vaultAccountId",
            "required": true,
            "in": "query",
            "description": "볼트 계정 필터",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          }
        },
        "tags": [
          "NFTs (Beta)"
        ]
      },
      "get": {
        "operationId": "getOwnedNFTs",
        "summary": "소유한 모든 토큰 나열(페이지별)",
        "description": "작업 공간에 있는 모든 토큰과 해당 데이터를 반환합니다. **참고**: 이 엔드포인트는 현재 베타 상태이며, 현재는 일반 이용이 불가능합니다. 베타에 등록하고 이 엔드포인트를 활성화하려면 Fireblocks 고객 성공 관리자에게 문의하거나 [CSM@fireblocks.com](mailto:CSM@fireblocks.com)으로 연락하세요..",
        "parameters": [
          {
            "name": "blockchainDescriptor",
            "required": false,
            "in": "query",
            "description": "블록체인 설명자 필터",
            "schema": {
              "oneOf": [
                {
                  "const": "ETH"
                },
                {
                  "const": "ETH_TEST3"
                },
                {
                  "const": "POLYGON"
                },
                {
                  "const": "POLYGON_TEST_MUMBAI"
                }
              ]
            }
          },
          {
            "name": "vaultAccountIds",
            "required": false,
            "in": "query",
            "description": "Vault 계정 ID의 쉼표로 구분된 목록입니다. 단일 요청에서 최대 100개가 허용됩니다.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "description": "NFT ID의 쉼표로 구분된 목록입니다. 단일 요청에서 최대 100개가 허용됩니다..",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collectionIds",
            "required": false,
            "in": "query",
            "description": "컬렉션 ID의 쉼표로 구분된 목록입니다. 단일 요청에서 최대 100개가 허용됩니다..",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageCursor",
            "required": false,
            "in": "query",
            "description": "가져올 페이지 커서",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "페이지당 항목(최대 100개)",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "매개변수로 정렬합니다. 매개변수 하나일 수도 있고 쉼표로 구분된 매개변수 목록일 수도 있습니다.",
            "schema": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "const": "ownershipLastUpdateTime"
                  },
                  {
                    "const": "name"
                  },
                  {
                    "const": "collection.name"
                  },
                  {
                    "const": "blockchainDescriptor"
                  }
                ]
              }
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "description": "주문 방향은 오름차순의 경우 `ASC`, 내림차순의 경우 `DESC`입니다.",
            "schema": {
              "oneOf": [
                {
                  "const": "DESC"
                },
                {
                  "const": "ASC"
                }
              ]
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "토큰 소유권 상태",
            "schema": {
              "oneOf": [
                {
                  "const": "LISTED"
                },
                {
                  "const": "ARCHIVED"
                }
              ]
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "소유한 토큰과 그 컬렉션을 검색합니다. 검색 가능한 기준: 계약/컬렉션 내의 토큰 이름과 ID, 컬렉션 이름, 블록체인 설명자 및 이름.",
            "schema": {
              "maximum": 100,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "paging": {
                      "$ref": "#/components/schemas/Paging"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TokenOwnershipResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "NFTs (Beta)"
        ]
      }
    },
    "/nfts/ownership/collections": {
      "get": {
        "operationId": "listOwnedCollections",
        "summary": "소유한 컬렉션 목록(페이지별)",
        "description": "작업 공간의 모든 컬렉션을 반환합니다. **참고**: 이 엔드포인트는 현재 베타 버전이며, 현재는 일반에 공개되지 않습니다. 베타에 등록하고 이 엔드포인트를 활성화하려면 Fireblocks 고객 성공 관리자에게 문의하거나 [CSM@fireblocks.com](mailto:CSM@fireblocks.com)으로 연락하세요..",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "소유한 컬렉션을 검색합니다. 검색 가능한 기준: 컬렉션 이름, 컬렉션 계약 주소.",
            "schema": {
              "maximum": 100,
              "type": "string"
            }
          },
          {
            "name": "pageCursor",
            "required": false,
            "in": "query",
            "description": "가져올 페이지 커서",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "페이지당 항목(최대 100개)",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "매개변수로 정렬합니다. 매개변수 하나일 수도 있고 쉼표로 구분된 매개변수 목록일 수도 있습니다.",
            "schema": {
              "type": "array",
              "items": {
                "const": "name"
              }
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "description": "주문 방향은 오름차순의 경우 `ASC`, 내림차순의 경우 `DESC`입니다.",
            "schema": {
              "oneOf": [
                {
                  "const": "DESC"
                },
                {
                  "const": "ASC"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "paging": {
                      "$ref": "#/components/schemas/Paging"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CollectionOwnershipResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "NFTs (Beta)"
        ]
      }
    },
    "/nfts/tokens/{id}": {
      "put": {
        "operationId": "refreshNFTMetadata",
        "summary": "토큰 메타데이터 새로 고침",
        "description": "최신 토큰 메타데이터를 업데이트합니다. **참고**: 이 엔드포인트는 현재 베타 상태이며, 현재 일반 가용성을 위해 비활성화되어 있습니다. 베타에 등록하고 이 엔드포인트를 활성화하려면 Fireblocks 고객 성공 관리자에게 문의하거나 [CSM@fireblocks.com](mailto:CSM@fireblocks.com)으로 연락하세요..",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "NFT ID",
            "example": "NFT-abcdefabcdefabcdefabcdefabcdefabcdefabcd",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          }
        },
        "tags": [
          "NFTs (Beta)"
        ]
      },
      "get": {
        "operationId": "getNFT",
        "summary": "ID로 토큰 데이터 나열",
        "description": "요청된 토큰 데이터를 반환합니다. **참고**: 이 엔드포인트는 현재 베타 상태이며, 현재 일반 가용성을 위해 비활성화되어 있습니다. 베타에 등록하고 이 엔드포인트를 활성화하려면 Fireblocks 고객 성공 관리자에게 문의하거나 [CSM@fireblocks.com](mailto:CSM@fireblocks.com)으로 연락하세요..",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "NFT ID",
            "example": "NFT-abcdefabcdefabcdefabcdefabcdefabcdefabcd",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        },
        "tags": [
          "NFTs (Beta)"
        ]
      }
    },
    "/nfts/tokens": {
      "get": {
        "operationId": "getNFTs",
        "summary": "ID로 토큰 나열",
        "description": "요청된 토큰 데이터를 반환합니다. **참고**: 이 엔드포인트는 현재 베타 버전이며, 현재는 일반 이용이 불가능합니다. 베타에 등록하고 이 엔드포인트를 활성화하려면 Fireblocks 고객 성공 관리자에게 문의하거나 [CSM@fireblocks.com](mailto:CSM@fireblocks.com)으로 연락하세요..",
        "parameters": [
          {
            "name": "ids",
            "required": true,
            "in": "query",
            "description": "NFT ID의 쉼표로 구분된 목록입니다. 단일 요청에서 최대 100개가 허용됩니다..",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageCursor",
            "required": false,
            "in": "query",
            "description": "가져올 페이지 커서",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "페이지당 항목(최대 100개)",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "매개변수로 정렬합니다. 매개변수 하나일 수도 있고 쉼표로 구분된 매개변수 목록일 수도 있습니다.",
            "schema": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "const": "collection.name"
                  },
                  {
                    "const": "name"
                  },
                  {
                    "const": "blockchainDescriptor"
                  }
                ]
              }
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "description": "주문 방향은 오름차순의 경우 `ASC`, 내림차순의 경우 `DESC`입니다.",
            "schema": {
              "oneOf": [
                {
                  "const": "DESC"
                },
                {
                  "const": "ASC"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "paging": {
                      "$ref": "#/components/schemas/Paging"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TokenResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "NFTs (Beta)"
        ]
      }
    },
    "/nfts/ownership/tokens/{id}/status": {
      "put": {
        "operationId": "updateTokenOwnershipStatus",
        "summary": "토큰 소유권 상태 업데이트",
        "description": "모든 테넌트 볼트에서 테넌트의 토큰 소유권 상태를 업데이트합니다. **참고**: 이 엔드포인트는 현재 베타 상태이며, 현재 일반 가용성을 위해 비활성화되어 있습니다. 베타에 등록하고 이 엔드포인트를 활성화하려면 Fireblocks 고객 성공 관리자에게 문의하거나 [CSM@fireblocks.com](mailto:CSM@fireblocks.com)으로 연락하세요..",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "NFT ID",
            "example": "NFT-abcdefabcdefabcdefabcdefabcdefabcdefabcd",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTokenOwnershipStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          }
        },
        "tags": [
          "NFTs (Beta)"
        ]
      }
    },
    "/connections": {
      "get": {
        "operationId": "get",
        "summary": "열려 있는 모든 Web3 연결 나열.",
        "description": "오픈 Web3 연결 얻기.",
        "parameters": [
          {
            "name": "order",
            "required": false,
            "in": "query",
            "description": "목록 순서; 오름차순 또는 내림차순.",
            "schema": {
              "oneOf": [
                {
                  "const": "ASC"
                },
                {
                  "const": "DESC"
                }
              ]
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "파싱된 필터 객체",
            "examples": {
              "object": {
                "summary": "필터 객체",
                "description": "",
                "value": {
                  "id": "string",
                  "userId": "string",
                  "vaultAccountId": "number",
                  "connectionMethod": "string",
                  "feeLevel": "string",
                  "appUrl": "string",
                  "appName": "string"
                }
              },
              "stringified": {
                "summary": "문자열화된 구문 분석된 객체",
                "description": "문자열화된 구문 분석된 객체에 관하여: * 각 키-값 쌍은 &#39;=&#39;로 구분되고, 각 쌍은 &#39;,&#39;로 구분됩니다. (이를 위해 [`qs`](https://www.npmjs.com/package/qs) 패키지를 사용할 수 있습니다.)",
                "value": "id=string,userId=string,vaultAccountId=number,connectionMethod=string,feeLevel=string,appUrl=string,appName=string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                },
                "vaultAccountId": {
                  "type": "number"
                },
                "connectionMethod": {
                  "type": "string"
                },
                "feeLevel": {
                  "type": "string"
                },
                "appUrl": {
                  "type": "string"
                },
                "appName": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Web3 연결을 정렬하는 속성.",
            "schema": {
              "oneOf": [
                {
                  "const": "id"
                },
                {
                  "const": "userId"
                },
                {
                  "const": "vaultAccountId"
                },
                {
                  "const": "createdAt"
                },
                {
                  "const": "feeLevel"
                },
                {
                  "const": "appUrl"
                },
                {
                  "const": "appName"
                }
              ]
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "다음 페이지에서 반환할 결과의 양.",
            "schema": {
              "type": "number",
              "default": 10,
              "maximum": 50
            }
          },
          {
            "name": "next",
            "required": false,
            "in": "query",
            "description": "다음 페이지로 커서 이동",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConnectionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "쿼리 매개변수가 잘못되었습니다.",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "500": {
            "description": "문제가 발생했습니다",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          }
        },
        "tags": [
          "Web3 connections"
        ]
      }
    },
    "/connections/wc": {
      "post": {
        "operationId": "create",
        "summary": "새로운 Web3 연결을 만듭니다.",
        "description": "새로운 Web3 연결을 시작합니다. * 참고: 이것이 성공한 후 `PUT /v1/connections/wc/{id}`(아래)에 대한 요청을 하여 새로운 Web3 연결을 승인하거나 거부합니다..",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConnectionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Web3 연결이 성공적으로 시작되었습니다.",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateConnectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "잘못된 데이터가 전송되었습니다.",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "500": {
            "description": "문제가 발생했습니다",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          }
        },
        "tags": [
          "Web3 connections"
        ]
      }
    },
    "/connections/wc/{id}": {
      "put": {
        "operationId": "submit",
        "summary": "보류 중인 Web3 연결 요청에 응답.",
        "description": "시작된 Web3 연결을 *승인* 또는 *거부*하기 위한 응답을 제출합니다. * 참고: 이 호출은 `POST /v1/connections/wc/` 요청을 완료하는 데 사용됩니다. 이것이 성공하면 새 Web3 연결이 생성되고 작동합니다..",
        "parameters": [
          {
            "name": "id",
            "description": "승인을 위한 시작된 Web3 연결의 ID.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RespondToConnectionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "연결이 성공적으로 전송되었습니다",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "400": {
            "description": "잘못된 데이터가 전송되었습니다.",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "404": {
            "description": "연결을 찾을 수 없습니다",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "500": {
            "description": "문제가 발생했습니다",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          }
        },
        "tags": [
          "Web3 connections"
        ]
      },
      "delete": {
        "operationId": "remove",
        "summary": "기존 Web3 연결 제거.",
        "description": "Web3 연결 제거",
        "parameters": [
          {
            "name": "id",
            "description": "제거할 기존 Web3 연결의 ID.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "연결이 성공적으로 제거되었습니다.",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "404": {
            "description": "연결을 찾을 수 없습니다",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          },
          "500": {
            "description": "문제가 발생했습니다",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            }
          }
        },
        "tags": [
          "Web3 connections"
        ]
      }
    },
    "/screening/travel_rule/transaction/validate": {
      "post": {
        "operationId": "TravelRuleApiController_validate",
        "summary": "여행 규칙 거래 검증",
        "description": "여행 규칙 거래 검증. 귀하의 관할권과 수혜자의 관할권에서 요구하는 수혜자 VASP 세부 정보를 확인합니다. **참고:** 이 섹션의 참조 콘텐츠는 여행 규칙 베타 엔드포인트를 설명합니다. 베타 엔드포인트에는 현재 미리보기 상태이며 아직 일반적으로 사용할 수 없는 API가 포함됩니다. 베타에 등록하고 이 엔드포인트를 활성화하려면 Fireblocks 고객 성공 관리자에게 문의하거나 [CSM@fireblocks.com](mailto:CSM@fireblocks.com)으로 이메일을 보내세요..",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TravelRuleValidateTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "거래가 성공적으로 검증되었습니다",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelRuleValidateTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "잘못된 요청 본문"
          },
          "500": {
            "description": "내부 서버 오류"
          }
        },
        "tags": [
          "Travel Rule (Beta)"
        ]
      }
    },
    "/screening/travel_rule/transaction/validate/full": {
      "post": {
        "operationId": "TravelRuleApiController_validateFull",
        "summary": "전체 여행 규칙 거래 확인",
        "description": "전체 여행 규칙 거래를 검증합니다. 발신자 및 수혜자 VASP에 대한 모든 필수 정보를 확인합니다. **참고:** 이 섹션의 참조 콘텐츠는 여행 규칙 베타 엔드포인트를 설명합니다. 베타 엔드포인트에는 현재 미리보기 상태이며 아직 일반적으로 사용할 수 없는 API가 포함됩니다. 베타에 등록하고 이 엔드포인트를 활성화하려면 Fireblocks 고객 성공 관리자에게 문의하거나 [CSM@fireblocks.com](mailto:CSM@fireblocks.com)으로 이메일을 보내세요..",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TravelRuleValidateFullTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "거래가 성공적으로 검증되었습니다",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelRuleValidateTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "잘못된 요청 본문"
          },
          "500": {
            "description": "내부 서버 오류"
          }
        },
        "tags": [
          "Travel Rule (Beta)"
        ]
      }
    },
    "/screening/travel_rule/vasp/{did}": {
      "get": {
        "operationId": "TravelRuleApiController_findVasp",
        "summary": "VASP 세부 정보 받기",
        "description": "VASP 세부 정보 가져오기. 지정된 DID가 있는 VASP에 대한 정보를 반환합니다. **참고:** 이 섹션의 참조 콘텐츠는 Travel Rule 베타 엔드포인트를 설명합니다. 베타 엔드포인트에는 현재 미리 보기 중이며 아직 일반적으로 사용할 수 없는 API가 포함됩니다. 베타에 등록하고 이 엔드포인트를 활성화하려면 Fireblocks 고객 성공 관리자에게 문의하거나 [CSM@fireblocks.com](mailto:CSM@fireblocks.com)으로 이메일을 보내세요..",
        "parameters": [
          {
            "name": "did",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "반환할 필드의 CSV(모두, &quot;공백&quot; 또는 아래 모든 필드 이름 목록 참조)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "거래가 성공적으로 검증되었습니다",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelRuleVASP"
                }
              }
            }
          },
          "400": {
            "description": "잘못된 요청 본문"
          },
          "500": {
            "description": "내부 서버 오류"
          }
        },
        "tags": [
          "Travel Rule (Beta)"
        ]
      }
    },
    "/screening/travel_rule/vasp": {
      "get": {
        "operationId": "TravelRuleApiController_findAllVasp",
        "summary": "모든 VASP 가져오기",
        "description": "모든 VASP 가져오기. VASP 목록을 반환합니다. VASP를 검색하고 정렬할 수 있으며 결과는 페이지별로 구분됩니다. **참고:** 이 섹션의 참조 콘텐츠는 Travel Rule 베타 엔드포인트를 설명합니다. 베타 엔드포인트에는 현재 미리보기 상태이며 아직 일반적으로 사용할 수 없는 API가 포함됩니다. 베타에 등록하고 이 엔드포인트를 활성화하려면 Fireblocks 고객 성공 관리자에게 문의하거나 [CSM@fireblocks.com](mailto:CSM@fireblocks.com)으로 이메일을 보내세요..",
        "parameters": [
          {
            "name": "order",
            "required": false,
            "in": "query",
            "description": "주문할 필드",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "description": "페이지당 레코드 수",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "페이지 번호",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "반환할 필드의 CSV(모두, &quot;공백&quot; 또는 아래 모든 필드 이름 목록 참조)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "모든 VASP를 얻으세요",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelRuleGetAllVASPsResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Travel Rule (Beta)"
        ]
      }
    },
    "/screeening/travel_rule/vasp/update": {
      "put": {
        "operationId": "TravelRuleApiController_updateVasp",
        "summary": "VASP 세부 정보에 jsonDidKey 추가",
        "description": "VASP 세부 정보 업데이트. 제공된 매개변수로 VASP를 업데이트합니다. 이 엔드포인트를 사용하여 Notabene에서 생성한 공개 jsonDIDkey를 추가합니다. **참고:** 이 섹션의 참조 콘텐츠는 Travel Rule 베타 엔드포인트를 설명합니다. 베타 엔드포인트에는 현재 미리 보기 중이며 아직 일반적으로 사용할 수 없는 API가 포함됩니다. 베타에 등록하고 이 엔드포인트를 활성화하려면 Fireblocks 고객 성공 관리자에게 문의하거나 [CSM@fireblocks.com](mailto:CSM@fireblocks.com)으로 이메일을 보내세요..",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TravelRuleUpdateVASPDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "VASP가 성공적으로 업데이트되었습니다",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelRuleUpdateVASPDetails"
                }
              }
            }
          },
          "400": {
            "description": "잘못된 요청 본문"
          },
          "500": {
            "description": "내부 서버 오류"
          }
        },
        "tags": [
          "Travel Rule (Beta)"
        ]
      }
    },
    "/tap/active_policy": {
      "get": {
        "summary": "활성 정책 및 해당 유효성 검사 가져오기",
        "description": "활성 정책과 해당 검증을 반환합니다.</br> **참고:** 이러한 엔드포인트는 현재 베타 상태이며 변경될 수 있습니다. Fireblocks TAP에 참여하고 자세히 알아보려면 Fireblocks 고객 성공 관리자에게 문의하거나 CSM@fireblocks.com으로 이메일을 보내주세요..",
        "tags": [
          "Policy Editor (Beta)"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "policy = fireblocks.get_active_policy()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const policy = await fireblocks.getActivePolicy();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "정책 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyAndValidationResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tap/draft": {
      "get": {
        "summary": "활성 초안을 받으세요",
        "description": "활성 초안과 해당 검증을 반환합니다.</br> **참고:** 이러한 엔드포인트는 현재 베타 상태이며 변경될 수 있습니다. Fireblocks TAP에 참여하고 자세히 알아보려면 Fireblocks 고객 성공 관리자에게 문의하거나 CSM@fireblocks.com으로 이메일을 보내주세요..",
        "tags": [
          "Policy Editor (Beta)"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "policy = fireblocks.get_draft()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const policy = await fireblocks.getDraft();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "초안 검증 응답 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DraftReviewAndValidationResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "새로운 규칙 세트로 초안을 업데이트하세요",
        "description": "초안을 업데이트하고 검증을 반환합니다.</br> **참고:** 이러한 엔드포인트는 현재 베타 상태이며 변경될 수 있습니다. Fireblocks TAP에 참여하고 자세히 알아보려면 Fireblocks 고객 성공 관리자에게 문의하거나 CSM@fireblocks.com으로 이메일을 보내주세요..",
        "tags": [
          "Policy Editor (Beta)"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "policy = fireblocks.update_draft()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const policy = await fireblocks.updateDraft();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "rules": {
                    "description": "초안을 업데이트하기 위한 규칙",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PolicyRule"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "초안 검증 응답 객체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DraftReviewAndValidationResponse"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "특정 초안 ID에 대한 게시 요청 보내기",
        "description": "특정 초안 ID의 게시 요청을 보내고 응답을 반환합니다.</br> **참고:** 이러한 엔드포인트는 현재 베타 상태이며 변경될 수 있습니다. Fireblocks TAP에 참여하고 자세히 알아보려면 Fireblocks 고객 성공 관리자에게 문의하거나 CSM@fireblocks.com으로 이메일을 보내주세요..",
        "tags": [
          "Policy Editor (Beta)"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "policy = fireblocks.publish_draft()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const policy = await fireblocks.publishDraft();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "draftId": {
                    "description": "초안 고유 식별자",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "정책 게시 결과 개체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PublishResult"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tap/publish": {
      "post": {
        "summary": "정책 규칙 세트에 대한 게시 요청 보내기",
        "description": "정책 규칙 집합에 대한 게시 요청을 보내고 응답을 반환합니다.</br> **참고:** 이러한 엔드포인트는 현재 베타 상태이며 변경될 수 있습니다. Fireblocks TAP에 참여하고 자세히 알아보려면 Fireblocks 고객 성공 관리자에게 문의하거나 CSM@fireblocks.com으로 이메일을 보내주세요..",
        "tags": [
          "Policy Editor (Beta)"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "policy = fireblocks.publish_rules()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const policy = await fireblocks.publishRules();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "rules": {
                    "description": "게시할 정책 규칙",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PolicyRule"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "정책 게시 결과 개체",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PublishResult"
                }
              }
            }
          },
          "default": {
            "description": "오류 응답",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API 요청과 관련된 고유 ID입니다. Fireblocks SDK와 관련된 Github 문제나 생성한 지원 티켓에 제공하세요.",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MediaEntityResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "캐시된 접근 가능한 URL"
          },
          "contentType": {
            "oneOf": [
              {
                "const": "IMAGE"
              },
              {
                "const": "VIDEO"
              },
              {
                "const": "ANIMATION"
              },
              {
                "const": "THREE_D"
              },
              {
                "const": "TEXT"
              },
              {
                "const": "GIF"
              },
              {
                "const": "UNKNOWN_TYPE"
              },
              {
                "const": "SVG"
              },
              {
                "const": "AUDIO"
              }
            ],
            "description": "미디어 유형"
          }
        },
        "required": [
          "url",
          "contentType"
        ]
      },
      "TokenCollectionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "symbol"
        ]
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Fireblocks NFT 자산 ID"
          },
          "tokenId": {
            "type": "string",
            "description": "계약/컬렉션 내 토큰 ID"
          },
          "standard": {
            "type": "string",
            "description": "ERC721 / ERC1155"
          },
          "metadataURI": {
            "type": "string",
            "description": "원래 토큰 JSON 메타데이터의 URL"
          },
          "cachedMetadataURI": {
            "type": "string",
            "description": "캐시된 토큰 JSON 메타데이터의 URL"
          },
          "media": {
            "description": "메타데이터 JSON에서 추출된 미디어 항목",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaEntityResponse"
            }
          },
          "collection": {
            "description": "부모 컬렉션 정보",
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              }
            }
          },
          "blockchainDescriptor": {
            "oneOf": [
              {
                "const": "ETH"
              },
              {
                "const": "ETH_TEST3"
              },
              {
                "const": "POLYGON"
              },
              {
                "const": "POLYGON_TEST_MUMBAI"
              }
            ]
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "tokenId",
          "standard",
          "media",
          "blockchainDescriptor",
          "description",
          "name"
        ]
      },
      "UpdateTokenOwnershipStatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "oneOf": [
              {
                "const": "LISTED"
              },
              {
                "const": "ARCHIVED"
              }
            ]
          }
        },
        "required": [
          "status"
        ]
      },
      "Paging": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "description": "다음 페이지로 커서 이동"
          }
        },
        "required": [
          "next"
        ]
      },
      "TokenOwnershipResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Fireblocks NFT 자산 ID"
          },
          "tokenId": {
            "type": "string",
            "description": "계약/컬렉션 내 토큰 ID"
          },
          "standard": {
            "type": "string",
            "description": "ERC721 / ERC1155"
          },
          "metadataURI": {
            "type": "string",
            "description": "원래 토큰 JSON 메타데이터의 URL"
          },
          "cachedMetadataURI": {
            "type": "string",
            "description": "캐시된 토큰 JSON 메타데이터의 URL"
          },
          "media": {
            "description": "메타데이터 JSON에서 추출된 미디어 항목",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaEntityResponse"
            }
          },
          "collection": {
            "description": "부모 컬렉션 정보",
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              }
            }
          },
          "balance": {
            "type": "string"
          },
          "vaultAccountId": {
            "type": "string"
          },
          "ownershipStartTime": {
            "type": "number"
          },
          "ownershipLastUpdateTime": {
            "type": "number"
          },
          "blockchainDescriptor": {
            "oneOf": [
              {
                "const": "ETH"
              },
              {
                "const": "ETH_TEST3"
              },
              {
                "const": "POLYGON"
              },
              {
                "const": "POLYGON_TEST_MUMBAI"
              }
            ]
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "tokenId",
          "standard",
          "media",
          "balance",
          "vaultAccountId",
          "ownershipStartTime",
          "ownershipLastUpdateTime",
          "blockchainDescriptor",
          "description",
          "name"
        ]
      },
      "CollectionOwnershipResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Fireblocks 컬렉션 ID"
          },
          "name": {
            "type": "string",
            "description": "컬렉션 이름"
          },
          "symbol": {
            "type": "string",
            "description": "컬렉션 심볼"
          },
          "standard": {
            "type": "string",
            "description": "수집계약기준"
          },
          "blockchainDescriptor": {
            "oneOf": [
              {
                "const": "ETH"
              },
              {
                "const": "ETH_TEST3"
              },
              {
                "const": "POLYGON"
              },
              {
                "const": "POLYGON_TEST_MUMBAI"
              }
            ],
            "description": "컬렉션의 블록체인"
          },
          "contractAddress": {
            "type": "string",
            "description": "수집계약기준"
          }
        },
        "required": [
          "id",
          "name",
          "symbol",
          "blockchainDescriptor"
        ]
      },
      "WalletAsset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "type": "string"
          },
          "lockedAmount": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ConfigChangeRequestStatus"
          },
          "address": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "activationTime": {
            "type": "string"
          }
        }
      },
      "ExternalWalletAsset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ConfigChangeRequestStatus"
          },
          "address": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "activationTime": {
            "type": "string"
          },
          "additionalInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WalletAssetAdditionalInfo"
            }
          }
        }
      },
      "WalletAssetAdditionalInfo": {
        "type": "object",
        "properties": {
          "accountHolderGivenName": {
            "type": "string"
          },
          "accountHolderSurname": {
            "type": "string"
          },
          "accountHolderCity": {
            "type": "string"
          },
          "accountHolderCountry": {
            "type": "string"
          },
          "accountHolderAddress1": {
            "type": "string"
          },
          "accountHolderAddress2": {
            "type": "string"
          },
          "accountHolderDistrict": {
            "type": "string"
          },
          "accountHolderPostalCode": {
            "type": "string"
          },
          "abaRoutingNumber": {
            "type": "string"
          },
          "abaAccountNumber": {
            "type": "string"
          },
          "abaCountry": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "ibanCity": {
            "type": "string"
          },
          "ibanCountry": {
            "type": "string"
          },
          "speiClabe": {
            "type": "string"
          },
          "speiName": {
            "type": "string"
          }
        }
      },
      "ExchangeAsset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "type": "string"
          },
          "lockedAmount": {
            "type": "string"
          },
          "total": {
            "type": "string"
          },
          "available": {
            "type": "string"
          }
        }
      },
      "ExchangeTradingAccount": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExchangeAsset"
            }
          }
        }
      },
      "FiatAsset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "type": "string"
          }
        }
      },
      "CreateVaultAssetResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "legacyAddress": {
            "type": "string"
          },
          "enterpriseAddress": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "eosAccountName": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "activationTxId": {
            "type": "string"
          }
        }
      },
      "RewardsInfo": {
        "type": "object",
        "properties": {
          "pendingRewards": {
            "description": "보상에 대한 보류 중인 금액",
            "type": "string"
          }
        }
      },
      "VaultAsset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "total": {
            "description": "총 지갑 잔액. EOS에서 이 값에는 네트워크 잔액, 셀프 스테이킹 및 보류 중인 환불이 포함됩니다. 다른 모든 코인의 경우 블록체인에 나타나는 잔액입니다..",
            "type": "string"
          },
          "balance": {
            "deprecated": true,
            "description": "더 이상 사용되지 않음 - &quot;total&quot;로 대체됨",
            "type": "string"
          },
          "available": {
            "description": "이체 가능한 자금. 블록체인 잔액에서 잠긴 금액을 뺀 값과 같습니다.",
            "type": "string"
          },
          "pending": {
            "description": "정산 대기 중인 모든 거래의 누적 잔액",
            "type": "string"
          },
          "frozen": {
            "description": "누적 동결 잔액",
            "type": "string"
          },
          "lockedAmount": {
            "description": "아직 네트워크에 공개되지 않은 발신 거래의 자금",
            "type": "string"
          },
          "staked": {
            "description": "지분 잔액",
            "type": "string"
          },
          "totalStakedCPU": {
            "type": "number",
            "description": "더 이상 사용되지 않음"
          },
          "totalStakedNetwork": {
            "type": "string",
            "description": "더 이상 사용되지 않음"
          },
          "selfStakedCPU": {
            "type": "string",
            "description": "더 이상 사용되지 않음"
          },
          "selfStakedNetwork": {
            "type": "string",
            "description": "더 이상 사용되지 않음"
          },
          "pendingRefundCPU": {
            "type": "string",
            "description": "더 이상 사용되지 않음"
          },
          "pendingRefundNetwork": {
            "type": "string",
            "description": "더 이상 사용되지 않음"
          },
          "blockHeight": {
            "type": "string"
          },
          "blockHash": {
            "type": "string"
          },
          "rewardsInfo": {
            "$ref": "#/components/schemas/RewardsInfo"
          }
        }
      },
      "VaultWalletAddress": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "x-fb-entity": "asset"
          },
          "address": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "customerRefId": {
            "type": "string"
          },
          "addressFormat": {
            "oneOf": [
              {
                "const": "SEGWIT"
              },
              {
                "const": "LEGACY"
              }
            ]
          },
          "legacyAddress": {
            "type": "string"
          },
          "enterpriseAddress": {
            "type": "string"
          },
          "bip44AddressIndex": {
            "type": "integer"
          },
          "userDefined": {
            "type": "boolean"
          }
        }
      },
      "CreateAddressResponse": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "legacyAddress": {
            "type": "string"
          },
          "enterpriseAddress": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "bip44AddressIndex": {
            "type": "integer"
          }
        }
      },
      "VaultAccountsPagedResponse": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VaultAccount"
            }
          },
          "paging": {
            "type": "object",
            "properties": {
              "before": {
                "type": "string"
              },
              "after": {
                "type": "string"
              }
            }
          },
          "previousUrl": {
            "type": "string"
          },
          "nextUrl": {
            "type": "string"
          }
        }
      },
      "PaginatedAssetWalletResponse": {
        "type": "object",
        "properties": {
          "assetWallets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetWallet"
            }
          },
          "paging": {
            "type": "object",
            "properties": {
              "before": {
                "description": "커서를 나타내는 문자열입니다. 사용자는 이 API 엔드포인트에 대한 새 요청과 함께 &quot;before&quot; 요청 매개변수로 사용하여 이전 페이지의 결과를 가져올 수 있습니다..",
                "type": "string"
              },
              "after": {
                "description": "커서를 나타내는 문자열입니다. 사용자는 이 API 엔드포인트에 대한 새 요청과 함께 &quot;before&quot; 요청 매개변수로 사용하여 다음 페이지의 결과를 가져올 수 있습니다..",
                "type": "string"
              }
            }
          }
        }
      },
      "AssetWallet": {
        "type": "object",
        "properties": {
          "vaultId": {
            "description": "볼트 계정의 ID입니다. [이 ID로 볼트 계정을 가져올 수 있습니다](https://developers.fireblocks.com/reference/get_vault-accounts-vaultaccountid) 이름, 자동 연료 공급, UI에 숨겨진 볼트 속성 또는 고객 참조 ID와 같은 볼트 속성을 검색할 수 있습니다..",
            "type": "string"
          },
          "assetId": {
            "description": "자산의 ID입니다. [지원되는 자산 API](https://developers.fireblocks.com/reference/get_supported-assets)를 사용하여 이 자산에 대한 자세한 정보를 얻을 수 있습니다.",
            "type": "string"
          },
          "available": {
            "description": "거래에 사용 가능한 잔액.",
            "type": "string"
          },
          "total": {
            "description": "블록체인 탐색기에서 볼 수 있는 자산 지갑의 총 잔액입니다. 여기에는 사용 가능한 잔액과 잠긴, 동결된 또는 기타와 같은 사용할 수 없는 모든 종류의 잔액이 포함됩니다..",
            "type": "string"
          },
          "pending": {
            "description": "보류중인 잔액.",
            "type": "string"
          },
          "staked": {
            "description": "지분 잔액.",
            "type": "string"
          },
          "frozen": {
            "description": "이 작업 공간의 자금세탁 방지 정책으로 인해 자금이 동결되었습니다..",
            "type": "string"
          },
          "lockedAmount": {
            "description": "잠긴 잔액.",
            "type": "string"
          },
          "blockHeight": {
            "description": "저울의 블록 높이(숫자)입니다. 비어 있음으로 할 수 있습니다..",
            "type": "string"
          },
          "blockHash": {
            "description": "잔액 블록의 해시. 비어 있음으로 할 수 있음.",
            "type": "string"
          },
          "creationTimestamp": {
            "description": "자산 지갑이 생성된 시간의 Unix 타임스탬프.",
            "type": "string"
          }
        }
      },
      "VaultAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VaultAsset"
            }
          },
          "hiddenOnUI": {
            "type": "boolean"
          },
          "customerRefId": {
            "type": "string"
          },
          "autoFuel": {
            "type": "boolean"
          }
        }
      },
      "UnmanagedWallet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "customerRefId": {
            "type": "string"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WalletAsset"
            }
          }
        },
        "required": [
          "id",
          "name",
          "status"
        ]
      },
      "ExchangeAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ExchangeType"
          },
          "name": {
            "type": "string",
            "description": "거래소 계정의 표시 이름"
          },
          "status": {
            "type": "string"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExchangeAsset"
            }
          },
          "tradingAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExchangeTradingAccount"
            }
          },
          "isSubaccount": {
            "description": "해당 계정이 거래소의 하위 계정인 경우 참입니다.",
            "type": "boolean"
          },
          "mainAccountId": {
            "description": "계정이 하위 계정인 경우 메인 계정의 ID",
            "type": "string"
          }
        }
      },
      "FiatAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/FiatAccountType"
          },
          "name": {
            "type": "string",
            "description": "법정 통화 계정의 표시 이름"
          },
          "address": {
            "type": "string"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FiatAsset"
            }
          }
        }
      },
      "OneTimeAddress": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          }
        },
        "required": [
          "address"
        ]
      },
      "TransferPeerPath": {
        "type": "object",
        "properties": {
          "type": {
            "oneOf": [
              {
                "const": "VAULT_ACCOUNT"
              },
              {
                "const": "EXCHANGE_ACCOUNT"
              },
              {
                "const": "INTERNAL_WALLET"
              },
              {
                "const": "EXTERNAL_WALLET"
              },
              {
                "const": "NETWORK_CONNECTION"
              },
              {
                "const": "FIAT_ACCOUNT"
              },
              {
                "const": "COMPOUND"
              },
              {
                "const": "GAS_STATION"
              },
              {
                "const": "ONE_TIME_ADDRESS"
              },
              {
                "const": "UNKNOWN"
              },
              {
                "const": "END_USER_WALLET"
              }
            ]
          },
          "subType": {
            "oneOf": [
              {
                "const": "BINANCE"
              },
              {
                "const": "BINANCEUS"
              },
              {
                "const": "BITFINEX"
              },
              {
                "const": "BITHUMB"
              },
              {
                "const": "BITMEX"
              },
              {
                "const": "BITSO"
              },
              {
                "const": "BITSTAMP"
              },
              {
                "const": "BITTREX"
              },
              {
                "const": "BLINC"
              },
              {
                "const": "BYBIT"
              },
              {
                "const": "CIRCLE"
              },
              {
                "const": "COINBASEEXCHANGE"
              },
              {
                "const": "COINBASEPRO"
              },
              {
                "const": "COINMETRO"
              },
              {
                "const": "COINSPRO"
              },
              {
                "const": "CRYPTOCOM"
              },
              {
                "const": "DERIBIT"
              },
              {
                "const": "GEMINI"
              },
              {
                "const": "HITBTC"
              },
              {
                "const": "HUOBI"
              },
              {
                "const": "INDEPENDENTRESERVE"
              },
              {
                "const": "KORBIT"
              },
              {
                "const": "KRAKEN"
              },
              {
                "const": "KRAKENINTL"
              },
              {
                "const": "KUCOIN"
              },
              {
                "const": "LIQUID"
              },
              {
                "const": "OKCOIN"
              },
              {
                "const": "OKEX"
              },
              {
                "const": "PAXOS"
              },
              {
                "const": "POLONIEX"
              },
              {
                "const": "External"
              },
              {
                "const": "Internal"
              }
            ]
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "walletId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "type"
        ]
      },
      "DestinationTransferPeerPath": {},
      "CreateTransactionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "거래의 ID."
          },
          "status": {
            "type": "string",
            "description": "거래의 기본 상태입니다. 자세한 내용은 [기본 거래 상태]를 참조하세요. (https://developers.fireblocks.com/reference/primary-transaction-statuses)"
          },
          "systemMessages": {
            "$ref": "#/components/schemas/SystemMessageInfo"
          }
        }
      },
      "SystemMessageInfo": {
        "type": "object",
        "properties": {
          "type": {
            "oneOf": [
              {
                "const": "WARN"
              },
              {
                "const": "BLOCK"
              }
            ]
          },
          "message": {
            "type": "string",
            "description": "수행 중인 프로세스의 상태에 대한 메시지를 전달하는 Fireblocks의 응답입니다. 이 객체가 데이터와 함께 반환되면 잠재적인 지연 또는 불완전한 트랜잭션 상태를 예상해야 합니다..",
            "example": "Slow transaction processing. Outgoing transactions might be stuck."
          }
        }
      },
      "CancelTransactionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "UnfreezeTransactionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "FreezeTransactionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "AmlScreeningResult": {
        "type": "object",
        "description": "AML 검사 결과.",
        "properties": {
          "provider": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          }
        }
      },
      "FeeInfo": {
        "type": "object",
        "description": "거래 수수료 세부 정보.",
        "properties": {
          "networkFee": {
            "description": "네트워크에 지불된 수수료",
            "type": "string"
          },
          "serviceFee": {
            "description": "거래소가 실제 요청 금액에서 공제하는 총 수수료(serviceFee = amount - netAmount)",
            "type": "string"
          },
          "gasPrice": {
            "type": "string"
          }
        }
      },
      "BlockInfo": {
        "type": "object",
        "description": "이 거래가 채굴된 블록의 해시 및 높이입니다. **참고**: 나가는 거래가 배열에 두 개 이상의 값이 있는 대상 객체를 사용하는 경우 blockHash가 null로 설정됩니다..",
        "properties": {
          "blockHeight": {
            "type": "string"
          },
          "blockHash": {
            "type": "string"
          }
        }
      },
      "AuthorizationInfo": {
        "type": "object",
        "description": "[거래 승인 정책(TAP)](https://developers.fireblocks.com/docs/capabilities#transaction-authorization-policy-tap)에 대한 정보",
        "properties": {
          "allowOperatorAsAuthorizer": {
            "type": "boolean"
          },
          "logic": {
            "oneOf": [
              {
                "const": "AND"
              },
              {
                "const": "OR"
              }
            ]
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthorizationGroups"
            }
          }
        }
      },
      "AuthorizationGroups": {
        "type": "object",
        "properties": {
          "th": {
            "type": "number"
          },
          "users": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [
                {
                  "const": "PENDING_AUTHORIZATION"
                },
                {
                  "const": "APPROVED"
                },
                {
                  "const": "REJECTED"
                },
                {
                  "const": "NA"
                }
              ]
            }
          }
        }
      },
      "AmountInfo": {
        "type": "object",
        "description": "이체 요청 금액의 세부 정보.",
        "properties": {
          "amount": {
            "description": "이체가 거래소에서 출금인 경우, 이체를 요청한 실제 금액. 그렇지 않은 경우, 요청한 금액.",
            "type": "string"
          },
          "requestedAmount": {
            "description": "사용자가 요청한 금액.",
            "type": "string"
          },
          "netAmount": {
            "description": "수수료를 공제한 후의 거래 순액.",
            "type": "string"
          },
          "amountUSD": {
            "description": "요청하신 금액의 USD 가치.",
            "type": "string"
          }
        }
      },
      "RewardInfo": {
        "type": "object",
        "description": "이 필드는 Algorand 거래에만 해당됩니다. `srcRewards`와 `destRewards`는 모두 Vault to Vault 거래에만 표시되며, 그렇지 않으면 거래의 Fireblocks 측만 받게 됩니다..",
        "properties": {
          "srcRewards": {
            "type": "string"
          },
          "destRewards": {
            "type": "string"
          }
        }
      },
      "SourceTransferPeerPathResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "subType": {
            "type": "string",
            "description": "유형이 `EXCHANGE_ACCOUNT` 또는 `FIAT_ACCOUNT`로 설정된 경우 특정 거래소 공급업체 이름 또는 Fiat 공급업체 이름입니다. 유형이 `INTERNAL_WALLET` 또는 `EXTERNAL_WALLET`으로 설정된 경우 하위 유형은 `Internal` 또는 `External`로 설정됩니다.."
          },
          "id": {
            "type": "string",
            "description": "피어의 ID입니다. [볼트 계정 나열](https://developers.fireblocks.com/reference/get_vault-accounts-paged), [거래소 계정 나열](https://developers.fireblocks.com/reference/get_exchange-accounts), [법정 통화 계정 나열](https://developers.fireblocks.com/reference/get_fiat-accounts), [내부 지갑 나열](https://developers.fireblocks.com/reference/get_internal-wallets), [외부 지갑 나열](https://developers.fireblocks.com/reference/get_external-wallets), [네트워크 연결 나열](https://developers.fireblocks.com/reference/get_network-connections)의 엔드포인트를 사용하여 각 장소 객체의 ID를 검색할 수 있습니다. 다른 유형의 경우 이 매개변수는 필요하지 않습니다.."
          },
          "name": {
            "type": "string",
            "description": "동료의 이름."
          },
          "walletId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "DestinationTransferPeerPathResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "subType": {
            "type": "string",
            "description": "유형이 `EXCHANGE_ACCOUNT` 또는 `FIAT_ACCOUNT`로 설정된 경우 특정 거래소 공급업체 이름 또는 법정 통화 공급업체 이름입니다. 유형이 `INTERNAL_WALLET` 또는 `EXTERNAL_WALLET`으로 설정된 경우 하위 유형은 `Internal` 또는 `External`로 설정됩니다.."
          },
          "id": {
            "type": "string",
            "description": "피어의 ID입니다. [볼트 계정 나열](https://developers.fireblocks.com/reference/get_vault-accounts-paged), [거래소 계정 나열](https://developers.fireblocks.com/reference/get_exchange-accounts), [법정 통화 계정 나열](https://developers.fireblocks.com/reference/get_fiat-accounts), [내부 지갑 나열](https://developers.fireblocks.com/reference/get_internal-wallets), [외부 지갑 나열](https://developers.fireblocks.com/reference/get_external-wallets), [네트워크 연결 나열](https://developers.fireblocks.com/reference/get_network-connections)의 엔드포인트를 사용하여 각 장소 객체의 ID를 검색할 수 있습니다. 다른 유형의 경우 이 매개변수는 필요하지 않습니다.."
          },
          "name": {
            "type": "string",
            "description": "동료의 이름."
          },
          "walletId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "TransactionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "거래의 ID."
          },
          "externalTxId": {
            "type": "string",
            "description": "사용자가 제공한 고유한 거래 ID. Fireblocks는 동일한 거래를 두 번 제출하지 않도록 생성된 모든 거래에 대해 `externalTxId`를 설정하는 것을 적극 권장합니다.."
          },
          "status": {
            "type": "string",
            "description": "거래의 기본 상태입니다. 자세한 내용은 [기본 거래 상태](https://developers.fireblocks.com/reference/primary-transaction-statuses)를 참조하세요.."
          },
          "subStatus": {
            "type": "string",
            "description": "거래 하위 상태 목록은 [거래 하위 상태](https://developers.fireblocks.com/reference/transaction-substatuses)를 참조하세요.."
          },
          "txHash": {
            "type": "string",
            "description": "블록체인의 거래 해시. * 이 매개변수는 다음 조건 중 하나 이상이 충족되는 경우 존재합니다. 1. 거래의 소스 유형이 `UNKNOWN`, `WHITELISTED_ADDRESS`, `NETWORK_CONNECTION`, `ONE_TIME_ADDRESS`, `FIAT_ACCOUNT` 또는 `GAS_STATION`입니다. 2. 거래의 소스 유형이 `VAULT`이고 상태가 `CONFIRMING`, `COMPLETED`이거나 `FAILED` 또는 `REJECTED`로 변경되기 전에 이러한 상태 중 하나였습니다. 어떤 경우에는 상태가 `BROADCASTING`인 거래에도 txHash가 포함됩니다. 3. 거래의 소스 유형이 `EXCHANGE_ACCOUNT`이고 거래의 대상 유형이 `VAULT`이고 상태가 `CONFIRMING`, `COMPLETED`이거나 `FAILED`로 변경되기 전에 이러한 상태 중 하나였습니다. * 또한 다음 조건을 충족해야 합니다. 1. 자산이 암호 자산(법정화폐 아님)입니다. 2. 거래 작업이 RAW 또는 `TYPED_MESSAGE`가 아닙니다.."
          },
          "operation": {
            "$ref": "#/components/schemas/GetTransactionOperation"
          },
          "note": {
            "type": "string",
            "description": "블록체인으로 전송되지 않는 사용자 지정 메모로, Fireblocks 작업 공간에서의 거래를 설명합니다.."
          },
          "assetId": {
            "type": "string",
            "description": "`TRANSFER`, `MINT`, `BURN`, `ENABLE_ASSET`, `STAKE`, `UNSTAKE` 또는 `WITHDRAW` 작업을 위해 전송할 자산의 ID입니다. [Fireblocks에서 지원되는 자산 및 해당 ID 목록을 참조하세요.](https://developers.fireblocks.com/reference/get_supported-assets)",
            "x-fb-entity": "asset"
          },
          "source": {
            "$ref": "#/components/schemas/SourceTransferPeerPathResponse"
          },
          "sourceAddress": {
            "type": "string",
            "description": "계정 기반 자산에 한해 거래의 소스 주소입니다. **참고:** 상태가 `CONFIRMING`, `COMPLETED` 또는 `CONFIRMING`인 경우, 그 후 `FAILED` 또는 `REJECTED`로 이동한 경우 이 매개변수는 소스 주소를 포함합니다. 다른 경우 이 매개변수는 비어 있습니다.."
          },
          "tag": {
            "type": "string",
            "description": "XRP의 소스 주소 태그는 EOS/XLM의 메모로 사용되거나, 법정 통화 공급자 BLINC의 은행 송금 설명(BCB 그룹 제공)으로 사용됩니다.."
          },
          "destination": {
            "$ref": "#/components/schemas/DestinationTransferPeerPathResponse"
          },
          "destinations": {
            "type": "array",
            "description": "거래의 목적지. **참고:** 거래가 단일 목적지로 전송되는 경우 이 매개변수 대신 `destination` 매개변수가 사용됩니다..",
            "items": {
              "$ref": "#/components/schemas/TransactionResponseDestination"
            }
          },
          "destinationAddress": {
            "type": "string",
            "description": "자산이 이전된 주소. 참고: - [다중 목적지 거래](https://support.fireblocks.io/hc/en-us/articles/360018447980-Multi-destination-transactions)의 경우 이 매개변수는 비어 있습니다. 이 경우 목적지 필드를 참조해야 합니다. - 상태가 `확인 중`, `완료됨` 또는 `확인 중`이었다가 `실패` 또는 `거부됨`으로 이동한 경우 이 매개변수에는 목적지 주소가 포함됩니다. 다른 경우 이 매개변수는 비어 있습니다.."
          },
          "destinationAddressDescription": {
            "type": "string",
            "description": "주소 설명."
          },
          "destinationTag": {
            "type": "string",
            "description": "EOS/XLM의 메모로 사용되는 XRP의 대상 주소 태그 또는 법정 통화 공급자 BLINC의 은행 송금 설명(BCB 그룹 제공)."
          },
          "contractCallDecodedData": {
            "description": "`CONTRACT_CALL` 작업에 대한 디코딩된 데이터입니다. Fireblocks [개발 라이브러리](https://developers.fireblocks.com/docs/ethereum-development#convenience-libraries)는 이 매개변수의 값을 설정하는 데 권장됩니다..",
            "type": "object",
            "properties": {
              "contractName": {
                "type": "string"
              },
              "functionCalls": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "amountInfo": {
            "$ref": "#/components/schemas/AmountInfo"
          },
          "treatAsGrossAmount": {
            "type": "boolean",
            "description": "이 Fireblocks 작업 공간을 통해 시작된 거래의 경우 `true`로 설정하면 수수료가 요청된 금액에서 공제됩니다. **참고**: 이 매개변수는 거래 자산이 ETH 또는 MATIC과 같은 기본 자산인 경우에만 고려할 수 있습니다. 자산을 USDC와 같이 거래 수수료에 사용할 수 없는 경우 이 매개변수는 무시되고 수수료는 소스 계정의 관련 기본 자산 지갑에서 공제됩니다.."
          },
          "feeInfo": {
            "$ref": "#/components/schemas/FeeInfo"
          },
          "feeCurrency": {
            "type": "string",
            "description": "거래 수수료를 지불하기 위해 인출된 자산, 예를 들어 EVM 기반 블록체인의 경우 ETH, Tether Omni의 경우 BTC."
          },
          "networkRecords": {
            "type": "array",
            "description": "단일 거래가 여러 번의 이체로 이루어진 경우(예: 계약 호출의 결과) 이 매개변수는 블록체인에서 발생한 각 이체를 지정합니다. 단일 이체 거래의 경우 이 매개변수는 비어 있습니다..",
            "items": {
              "$ref": "#/components/schemas/NetworkRecord"
            }
          },
          "createdAt": {
            "type": "number",
            "description": "거래 생성 날짜 및 시간(유닉스 타임스탬프)."
          },
          "lastUpdated": {
            "type": "number",
            "description": "거래의 마지막 업데이트 날짜 및 시간(유닉스 타임스탬프)."
          },
          "createdBy": {
            "type": "string",
            "description": "거래 개시자의 사용자 ID."
          },
          "signedBy": {
            "type": "array",
            "description": "거래 서명자의 사용자 ID.",
            "items": {
              "type": "string"
            }
          },
          "rejectedBy": {
            "type": "string",
            "description": "거래를 거부한 사용자의 사용자 ID(거래가 거부된 경우)."
          },
          "authorizationInfo": {
            "$ref": "#/components/schemas/AuthorizationInfo"
          },
          "exchangeTxId": {
            "type": "string",
            "description": "거래가 거래소에서 발생한 경우 이는 거래소에서의 해당 거래의 ID입니다.."
          },
          "customerRefId": {
            "type": "string",
            "description": "AML 제공자가 자금 소유자를 거래와 연관시키기 위한 ID."
          },
          "amlScreeningResult": {
            "$ref": "#/components/schemas/AmlScreeningResult"
          },
          "extraParameters": {
            "$ref": "#/components/schemas/ExtraParameters"
          },
          "signedMessages": {
            "$ref": "#/components/schemas/SignedMessage"
          },
          "numOfConfirmations": {
            "type": "number",
            "description": "거래 확인 횟수입니다. 확인 정책에 따라 거래가 완료된 것으로 간주될 때까지 숫자가 증가합니다.."
          },
          "blockInfo": {
            "$ref": "#/components/schemas/BlockInfo"
          },
          "index": {
            "type": "number",
            "description": "UTXO 기반 자산의 경우 이는 vOut이고, Ethereum 기반 자산의 경우 이는 계약 호출 이벤트의 인덱스입니다. **참고:** 트랜잭션이 두 개 이상의 값을 갖는 `destinations` 객체를 사용하는 경우 이 필드는 반환되지 않습니다.."
          },
          "rewardInfo": {
            "$ref": "#/components/schemas/RewardInfo"
          },
          "systemMessages": {
            "$ref": "#/components/schemas/SystemMessageInfo"
          },
          "addressType": {
            "oneOf": [
              {
                "const": "WHITELISTED"
              },
              {
                "const": "ONE_TIME"
              }
            ]
          },
          "requestedAmount": {
            "description": "사용자가 요청한 금액입니다. 더 이상 사용되지 않음 - 정확성을 위해 `amountInfo` 필드를 사용하세요..",
            "type": "number",
            "deprecated": true
          },
          "amount": {
            "description": "이체가 거래소에서 인출하는 경우, 이체 요청된 실제 금액입니다. 그렇지 않은 경우, 요청된 금액입니다. 더 이상 사용되지 않음 - 정확성을 위해 `amountInfo` 필드를 사용하세요..",
            "type": "number",
            "deprecated": true
          },
          "netAmount": {
            "description": "수수료 공제 후 거래의 순 금액입니다. 더 이상 사용되지 않음 - 정확성을 위해 `amountInfo` 필드를 사용하세요..",
            "type": "number",
            "deprecated": true
          },
          "amountUSD": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "요청된 금액의 USD 값입니다. 더 이상 사용되지 않음 - 정확성을 위해 `amountInfo` 필드를 사용하세요.."
          },
          "serviceFee": {
            "description": "실제 요청 금액에서 거래소가 공제하는 총 수수료(`serviceFee` = `amount` - `netAmount`). 더 이상 사용되지 않음 - 정확성을 위해 `feeInfo` 필드를 사용하세요.",
            "type": "number",
            "deprecated": true
          },
          "fee": {
            "description": "더 이상 사용되지 않음 - 정확성을 위해 `feeInfo` 필드를 사용하세요.",
            "type": "number",
            "deprecated": true
          },
          "networkFee": {
            "description": "네트워크에 지불된 수수료입니다. 더 이상 사용되지 않음 - 정확성을 위해 `feeInfo` 필드를 사용하세요..",
            "type": "number",
            "deprecated": true
          }
        }
      },
      "TransactionResponseDestination": {
        "type": "object",
        "properties": {
          "destination": {
            "$ref": "#/components/schemas/DestinationTransferPeerPathResponse"
          },
          "destinationAddress": {
            "description": "자산이 이전된 주소."
          },
          "destinationAddressDescription": {
            "description": "주소 설명."
          },
          "amount": {
            "type": "string",
            "description": "이 목적지로 보낼 금액."
          },
          "amountUSD": {
            "type": "string",
            "description": "요청하신 금액의 USD 가치."
          },
          "amlScreeningResult": {
            "$ref": "#/components/schemas/AmlScreeningResult"
          },
          "customerRefId": {
            "description": "AML 제공자가 자금 소유자를 거래와 연관시키기 위한 ID."
          },
          "authorizationInfo": {
            "$ref": "#/components/schemas/AuthorizationInfo"
          }
        }
      },
      "NetworkRecord": {
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/SourceTransferPeerPathResponse"
          },
          "destination": {
            "$ref": "#/components/schemas/DestinationTransferPeerPathResponse"
          },
          "txHash": {
            "type": "string"
          },
          "networkFee": {
            "type": "string"
          },
          "assetId": {
            "type": "string",
            "x-fb-entity": "asset"
          },
          "netAmount": {
            "description": "수수료를 공제한 후의 거래 순액",
            "type": "string"
          },
          "isDropped": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          },
          "destinationAddress": {
            "type": "string"
          },
          "sourceAddress": {
            "type": "string"
          },
          "amountUSD": {
            "type": "string"
          },
          "index": {
            "type": "number"
          },
          "rewardInfo": {
            "$ref": "#/components/schemas/RewardInfo"
          }
        }
      },
      "AssetTypeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "oneOf": [
              {
                "const": "ALGO_ASSET"
              },
              {
                "const": "BASE_ASSET"
              },
              {
                "const": "BEP20"
              },
              {
                "const": "COMPOUND"
              },
              {
                "const": "ERC20"
              },
              {
                "const": "FIAT"
              },
              {
                "const": "SOL_ASSET"
              },
              {
                "const": "TRON_TRC20"
              },
              {
                "const": "XLM_ASSET"
              },
              {
                "const": "XDB_ASSET"
              }
            ]
          },
          "contractAddress": {
            "type": "string"
          },
          "nativeAsset": {
            "type": "string"
          },
          "decimals": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "name",
          "type"
        ]
      },
      "NetworkConnection": {
        "type": "object",
        "properties": {
          "localNetworkId": {
            "type": "string",
            "description": "연결을 생성하려는 프로필의 네트워크 ID."
          },
          "remoteNetworkId": {
            "type": "string",
            "description": "프로필이 연결하려고 하는 네트워크 ID."
          },
          "routingPolicy": {
            "$ref": "#/components/schemas/NetworkConnectionRoutingPolicy"
          }
        },
        "required": [
          "localNetworkId",
          "remoteNetworkId"
        ]
      },
      "NetworkConnectionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "localChannel": {
            "deprecated": true,
            "description": "더 이상 사용되지 않음 - `localNetworkId`로 대체됨",
            "type": "object",
            "properties": {
              "networkId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "remoteChannel": {
            "deprecated": true,
            "description": "더 이상 사용되지 않음 - `remoteNetworkId`로 대체됨",
            "type": "object",
            "properties": {
              "networkId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "status": {
            "$ref": "#/components/schemas/ConfigChangeRequestStatus"
          },
          "localNetworkId": {
            "$ref": "#/components/schemas/NetworkId"
          },
          "remoteNetworkId": {
            "$ref": "#/components/schemas/NetworkId"
          },
          "routingPolicy": {
            "$ref": "#/components/schemas/NetworkConnectionRoutingPolicy"
          }
        },
        "required": [
          "id",
          "localNetworkId",
          "remoteNetworkId",
          "routingPolicy",
          "status"
        ]
      },
      "EstimatedTransactionFeeResponse": {
        "type": "object",
        "properties": {
          "low": {
            "$ref": "#/components/schemas/TransactionFee"
          },
          "medium": {
            "$ref": "#/components/schemas/TransactionFee"
          },
          "high": {
            "$ref": "#/components/schemas/TransactionFee"
          }
        },
        "required": [
          "low",
          "medium",
          "high"
        ]
      },
      "EstimatedNetworkFeeResponse": {
        "type": "object",
        "properties": {
          "low": {
            "$ref": "#/components/schemas/NetworkFee"
          },
          "medium": {
            "$ref": "#/components/schemas/NetworkFee"
          },
          "high": {
            "$ref": "#/components/schemas/NetworkFee"
          }
        },
        "required": [
          "low",
          "medium",
          "high"
        ]
      },
      "GasStationPropertiesResponse": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "object"
          },
          "configuration": {
            "$ref": "#/components/schemas/GasStationConfiguration"
          }
        },
        "required": [
          "low",
          "medium",
          "high"
        ]
      },
      "TransactionFee": {
        "type": "object",
        "properties": {
          "feePerByte": {
            "type": "string"
          },
          "gasPrice": {
            "type": "string"
          },
          "gasLimit": {
            "type": "string"
          },
          "networkFee": {
            "type": "string"
          },
          "baseFee": {
            "description": "(선택) EIP-1559에 따른 기본 수수료(ETH 자산)",
            "type": "string"
          },
          "priorityFee": {
            "description": "(선택) EIP-1559에 따른 우선 수수료(ETH 자산)",
            "type": "string"
          }
        }
      },
      "NetworkFee": {
        "type": "object",
        "properties": {
          "feePerByte": {
            "type": "string"
          },
          "gasPrice": {
            "type": "string"
          },
          "networkFee": {
            "type": "string"
          },
          "baseFee": {
            "description": "(선택) EIP-1559에 따른 기본 수수료(ETH 자산)",
            "type": "string"
          },
          "priorityFee": {
            "description": "(선택) EIP-1559에 따른 우선 수수료(ETH 자산)",
            "type": "string"
          }
        }
      },
      "GasStationConfiguration": {
        "type": "object",
        "properties": {
          "gasThreshold": {
            "type": "string"
          },
          "gasCap": {
            "type": "string"
          },
          "maxGasPrice": {
            "type": "string"
          }
        }
      },
      "NetworkChannel": {
        "deprecated": true,
        "description": "유일하게 사용된 참조에서 더 이상 사용되지 않음 - NetworkConnectionResponse",
        "type": "object",
        "properties": {
          "networkId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "NetworkId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "NetworkIdResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "routingPolicy": {
            "$ref": "#/components/schemas/NetworkIdRoutingPolicy"
          },
          "isDiscoverable": {
            "type": "boolean",
            "description": "특정 네트워크를 검색할 수 있습니다."
          }
        }
      },
      "TransactionRequest": {
        "type": "object",
        "properties": {
          "operation": {
            "$ref": "#/components/schemas/TransactionOperation"
          },
          "note": {
            "type": "string",
            "description": "Fireblocks 작업 공간에서 거래를 설명하는 블록체인으로 전송되지 않는 사용자 지정 메모.",
            "example": "Ticket 123"
          },
          "externalTxId": {
            "type": "string",
            "description": "선택 사항이지만 강력히 권장하는 매개변수입니다. Fireblocks는 동일한 ID를 가진 향후 거래를 거부합니다. 동일한 거래를 두 번 제출하지 않으려면 거래를 나타내는 고유 ID로 설정해야 합니다. 이는 인터넷 중단으로 인해 거래 제출 시 오류 코드가 표시되지만 실제로 거래가 전송되고 처리된 경우에 도움이 됩니다. 거래가 처리되었는지 확인하려면 [외부 거래 ID로 특정 거래 찾기](https://developers.fireblocks.com/reference/get_transactions-external-tx-id-externaltxid). 이 매개변수에 대한 특정 형식은 필요하지 않습니다..",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "assetId": {
            "type": "string",
            "description": "`TRANSFER`, `MINT` 또는 `BURN` 작업을 위해 전송할 자산의 ID입니다. [Fireblocks에서 지원되는 자산 및 해당 ID 목록을 참조하세요.](https://developers.fireblocks.com/reference/get_supported-assets)",
            "x-fb-entity": "asset",
            "example": "ETH"
          },
          "source": {
            "$ref": "#/components/schemas/TransferPeerPath"
          },
          "destination": {
            "$ref": "#/components/schemas/DestinationTransferPeerPath"
          },
          "destinations": {
            "type": "array",
            "description": "UTXO 기반 블록체인의 경우 단일 거래를 여러 목적지로 보낼 수 있습니다..",
            "items": {
              "$ref": "#/components/schemas/TransactionRequestDestination"
            }
          },
          "amount": {
            "oneOf": [
              {
                "type": "string",
                "description": "숫자형 문자열(권장)",
                "example": "0.02"
              },
              {
                "type": "number",
                "description": "숫자 (더 이상 사용되지 않음)",
                "example": 0.02
              }
            ],
            "description": "`TRANSFER` 작업의 경우, 자산 단위로 전송 요청 금액입니다. Fireblocks는 정확한 정밀도를 위해 숫자 문자열을 사용하는 것이 좋습니다. 숫자 입력이 있지만 더 이상 사용되지 않습니다.."
          },
          "treatAsGrossAmount": {
            "type": "boolean",
            "description": "&quot;`true`로 설정하면 수수료가 요청된 금액에서 공제됩니다.&quot; **참고**: 이 매개변수는 거래 자산이 ETH 또는 MATIC과 같은 기본 자산인 경우에만 고려할 수 있습니다. 자산을 USDC와 같이 거래 수수료에 사용할 수 없는 경우 이 매개변수는 무시되고 수수료는 소스 계정의 관련 기본 자산 지갑에서 공제됩니다..",
            "example": false
          },
          "forceSweep": {
            "type": "boolean",
            "description": "Polkadot, Kusama 및 Westend 거래에만 해당됩니다. true로 설정하면 Fireblocks가 자산 지갑을 비웁니다. **참고:** 소스 계정이 정확히 1 DOT일 때 true로 설정하면 거래가 실패합니다. 1 DOT보다 많거나 적은 금액은 성공합니다. 이는 Polkadot 블록체인 제한 사항입니다..",
            "example": false
          },
          "feeLevel": {
            "oneOf": [
              {
                "const": "LOW"
              },
              {
                "const": "MEDIUM"
              },
              {
                "const": "HIGH"
              }
            ],
            "description": "UTXO 또는 EVM 기반 블록체인에만 해당. 거래에 대해 지불되는 블록체인 수수료 수준을 정의합니다. 또는 특정 수수료 추정 매개변수가 아래에 있습니다..",
            "example": "MEDIUM"
          },
          "fee": {
            "oneOf": [
              {
                "type": "string",
                "description": "숫자형 문자열(권장)"
              },
              {
                "type": "number",
                "description": "숫자 (더 이상 사용되지 않음)"
              }
            ],
            "description": "UTXO 기반 블록체인의 경우 자산의 가장 작은 단위(사토시, 라토시 등)의 바이트당 수수료입니다. Ripple의 경우 거래 수수료입니다. Fireblocks는 정확한 정밀도를 위해 숫자 문자열을 사용하는 것이 좋습니다. 숫자 입력이 있지만 더 이상 사용되지 않습니다.."
          },
          "priorityFee": {
            "oneOf": [
              {
                "type": "string",
                "description": "숫자형 문자열(권장)",
                "example": "2"
              },
              {
                "type": "number",
                "description": "숫자 (더 이상 사용되지 않음)",
                "example": 2
              }
            ],
            "description": "이더리움 기반 블록체인에 한해 EIP-1559 거래 가격 책정 메커니즘의 수수료입니다. 값은 Gwei입니다. Fireblocks는 정확한 정밀도를 위해 숫자 문자열을 사용할 것을 권장합니다. 숫자 입력이 있지만 더 이상 사용되지 않습니다.."
          },
          "failOnLowFee": {
            "type": "boolean",
            "description": "`true`로 설정하면 현재 `MEDIUM` 수수료 수준이 거래에 지정된 수준보다 높을 경우 거래가 실패하여 확인 없이 중단되는 상황을 피할 수 있습니다.."
          },
          "maxFee": {
            "description": "거래에 대해 지불해야 하는 최대 수수료(가스 가격 또는 바이트당 수수료). 요청된 `feeLevel`의 현재 값이 이 요청된 최대 수수료보다 높은 경우. 정확한 정밀도를 위해 숫자 문자열로 표현.",
            "type": "string",
            "example": "120"
          },
          "gasLimit": {
            "oneOf": [
              {
                "type": "string",
                "description": "숫자형 문자열(권장)",
                "example": "21000"
              },
              {
                "type": "number",
                "description": "숫자 (더 이상 사용되지 않음)",
                "example": 21000
              }
            ],
            "description": "EVM 기반 블록체인에만 해당. 트랜잭션을 처리하는 데 필요한 가스 단위. 참고: 단일 트랜잭션에서 세 가지 인수 중 두 가지만 지정할 수 있습니다. `gasLimit`, `gasPrice` 및 `networkFee`. Fireblocks는 정확한 정밀도를 위해 숫자 문자열을 사용하는 것이 좋습니다. 숫자 입력이 있지만 더 이상 사용되지 않습니다.."
          },
          "gasPrice": {
            "oneOf": [
              {
                "type": "string",
                "description": "숫자형 문자열(권장)"
              },
              {
                "type": "number",
                "description": "숫자 (더 이상 사용되지 않음)"
              }
            ],
            "description": "EIP-1559가 아닌 EVM 기반 거래의 경우 가스 단위당 가격(Ethereum에서는 Gwei로 지정). 참고: 단일 거래에서 세 가지 인수 중 두 가지만 지정할 수 있습니다. `gasLimit`, `gasPrice` 및 `networkFee`. Fireblocks는 정확한 정밀도를 위해 숫자 문자열을 사용하는 것이 좋습니다. 숫자 입력이 있지만 더 이상 사용되지 않습니다.."
          },
          "networkFee": {
            "oneOf": [
              {
                "type": "string",
                "description": "숫자형 문자열(권장)"
              },
              {
                "type": "number",
                "description": "숫자 (더 이상 사용되지 않음)"
              }
            ],
            "description": "EVM 기반 블록체인에만 해당. 블록체인의 가장 큰 단위로 총 거래 수수료. 참고: 세 가지 인수 중 두 가지만 단일 거래에서 지정할 수 있습니다. `gasLimit`, `gasPrice` 및 `networkFee`. Fireblocks는 정확한 정밀도를 위해 숫자 문자열을 사용하는 것이 좋습니다. 숫자 입력이 있지만 더 이상 사용되지 않습니다. - 거래 블록체인 수수료. - Ethereum의 경우 gasPrice, gasLimit 및 networkFee를 모두 함께 전달할 수 없습니다. - 숫자 값 표현이 필요합니다.."
          },
          "replaceTxByHash": {
            "type": "string",
            "description": "EVM 기반 블록체인에만 해당합니다. 거래가 중단된 경우 중단된 거래의 해시를 지정하여 수수료가 더 높은 이 거래로 대체하거나 수수료가 0인 이 거래로 대체하여 블록체인에서 삭제합니다..",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "extraParameters": {
            "$ref": "#/components/schemas/ExtraParameters"
          },
          "customerRefId": {
            "type": "string",
            "description": "AML 제공자가 자금 소유자를 거래와 연관시키기 위한 ID.",
            "example": "abcdef"
          },
          "autoStaking": {
            "type": "boolean",
            "description": "이 기능은 더 이상 지원되지 않습니다..",
            "deprecated": true
          },
          "networkStaking": {
            "oneOf": [
              {
                "type": "string",
                "description": "숫자형 문자열(권장)"
              },
              {
                "type": "number",
                "description": "숫자 (더 이상 사용되지 않음)"
              }
            ],
            "description": "이 기능은 더 이상 지원되지 않습니다.."
          },
          "cpuStaking": {
            "oneOf": [
              {
                "type": "string",
                "description": "숫자형 문자열(권장)"
              },
              {
                "type": "number",
                "description": "숫자 (더 이상 사용되지 않음)"
              }
            ],
            "description": "이 기능은 더 이상 지원되지 않습니다.."
          }
        }
      },
      "TransactionRequestDestination": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "destination": {
            "$ref": "#/components/schemas/DestinationTransferPeerPath"
          }
        }
      },
      "ExchangeType": {
        "oneOf": [
          {
            "const": "BINANCE"
          },
          {
            "const": "BINANCEUS"
          },
          {
            "const": "BITFINEX"
          },
          {
            "const": "BITHUMB"
          },
          {
            "const": "BITMEX"
          },
          {
            "const": "BITSO"
          },
          {
            "const": "BITSTAMP"
          },
          {
            "const": "BITTREX"
          },
          {
            "const": "CIRCLE"
          },
          {
            "const": "COINBASEPRO"
          },
          {
            "const": "COINMETRO"
          },
          {
            "const": "COINSPRO"
          },
          {
            "const": "CRYPTOCOM"
          },
          {
            "const": "DERIBIT"
          },
          {
            "const": "FTX"
          },
          {
            "const": "FIXUS"
          },
          {
            "const": "GEMINI"
          },
          {
            "const": "HITBTC"
          },
          {
            "const": "HUOBI"
          },
          {
            "const": "KORBIT"
          },
          {
            "const": "KRAKEN"
          },
          {
            "const": "LIQUID"
          },
          {
            "const": "POLONIEX"
          },
          {
            "const": "OKCOIN"
          },
          {
            "const": "OKEX"
          },
          {
            "const": "SEEDCX"
          }
        ]
      },
      "FiatAccountType": {
        "const": "BLINC"
      },
      "ConfigChangeRequestStatus": {
        "oneOf": [
          {
            "const": "WAITING_FOR_APPROVAL"
          },
          {
            "const": "APPROVED"
          },
          {
            "const": "CANCELLED"
          },
          {
            "const": "REJECTED"
          },
          {
            "const": "FAILED"
          }
        ]
      },
      "TransactionOperation": {
        "oneOf": [
          {
            "const": "TRANSFER"
          },
          {
            "const": "BURN"
          },
          {
            "const": "CONTRACT_CALL"
          },
          {
            "const": "MINT"
          },
          {
            "const": "RAW"
          },
          {
            "const": "TYPED_MESSAGE"
          }
        ],
        "description": "* `TRANSFER` - 작업의 기본값입니다. 한 계정에서 다른 계정으로 자금을 이체합니다. UTXO 블록체인은 다중 입력 및 다중 출력 이체를 허용합니다. 다른 모든 블록체인은 하나의 소스 주소와 하나의 대상 주소로 이체를 허용합니다. * `MINT` - 새로운 토큰을 주조합니다. Stellar, Ripple 및 EVM 기반 블록체인에서 지원됩니다. * `BURN` - 토큰을 소각합니다. Stellar, Ripple 및 EVM 기반 블록체인에서 지원됩니다. * `CONTRACT_CALL` - 모든 EVM 블록체인에서 web3 작업을 위한 스마트 계약 메서드를 호출합니다. 계약 호출 트랜잭션을 빌드하려면 Fireblocks [개발 라이브러리](https://developers.fireblocks.com/docs/ethereum-development#convenience-libraries)를 사용하는 것이 좋습니다. * `TYPED_MESSAGE` - Ethereum Personal Message 또는 EIP712 형식의 오프체인 메시지입니다. 실제 트랜잭션이 아닌 특정 읽기 가능 메시지에 서명하는 데 사용합니다. [입력된 메시지에 대해 자세히 알아보기](https://developers.fireblocks.com/docs/typed-message-signing). * `RAW` - 사전 정의된 형식이 없는 오프체인 메시지입니다. 이를 사용하여 Fireblocks에서 기본적으로 지원하지 않는 블록체인 및 사용자 지정 거래 유형과 같은 프로토콜을 포함하여 개인 키로 모든 메시지에 서명합니다. [원시 서명 거래에 대해 자세히 알아보기](https://developers.fireblocks.com/docs/raw-message-signing)"
      },
      "GetTransactionOperation": {
        "oneOf": [
          {
            "const": "TRANSFER"
          },
          {
            "const": "BURN"
          },
          {
            "const": "CONTRACT_CALL"
          },
          {
            "const": "MINT"
          },
          {
            "const": "RAW"
          },
          {
            "const": "TYPED_MESSAGE"
          },
          {
            "const": "ENABLE_ASSET"
          },
          {
            "const": "STAKE"
          },
          {
            "const": "UNSTAKE"
          },
          {
            "const": "WITHDRAW"
          },
          {
            "const": "REDEEM_FROM_COMPOUND"
          },
          {
            "const": "SUPPLY_TO_COMPOUND"
          }
        ],
        "description": "* `TRANSFER` - 한 계정에서 다른 계정으로 자금을 이체합니다. UTXO 블록체인은 다중 입력 및 다중 출력 이체를 허용합니다. 다른 모든 블록체인은 하나의 소스 주소와 하나의 대상 주소로 이체를 허용합니다. * `MINT` - 새로운 토큰을 주조합니다. Stellar, Ripple 및 EVM 기반 블록체인에서 지원됩니다. * `BURN` - 토큰을 소각합니다. Stellar, Ripple 및 EVM 기반 블록체인에서 지원됩니다. * `CONTRACT_CALL` - 모든 EVM 블록체인에서 web3 작업을 위한 스마트 계약 메서드를 호출합니다. 계약 호출 트랜잭션을 빌드하려면 Fireblocks [개발 라이브러리](https://developers.fireblocks.com/docs/ethereum-development#convenience-libraries)를 사용하는 것이 좋습니다. * `TYPED_MESSAGE` - Ethereum Personal Message 또는 EIP712 형식의 오프체인 메시지입니다. 실제 트랜잭션이 아닌 특정 읽기 가능 메시지에 서명하는 데 사용합니다. [입력된 메시지에 대해 자세히 알아보기](https://developers.fireblocks.com/docs/typed-message-signing). * `RAW` - 사전 정의된 형식이 없는 오프체인 메시지입니다. 블록체인 및 Fireblocks에서 기본적으로 지원하지 않는 사용자 지정 거래 유형과 같은 프로토콜을 포함하여 개인 키로 모든 메시지에 서명하는 데 사용합니다. [원시 서명 거래에 대해 자세히 알아보기](https://developers.fireblocks.com/docs/raw-message-signing) * `ENABLE_ASSET` - Algorand, DigitalBits, Solana 및 Stellar는 자산 지갑을 만들고 입금 주소를 활성화하기 위해 온체인 거래가 필요합니다. 이 거래는 볼트 계정에서 이러한 블록체인에 자산을 추가할 때 자동으로 생성됩니다. * `STAKE` - 스테이킹 검증자가 관리하는 스테이킹 풀에 자산을 할당합니다. Stellar 및 EVM 기반 블록체인에서 지원됩니다. 이 거래는 스테이킹 작업을 수행할 때 자동으로 생성됩니다. * `UNSTAKE` - 스테이킹 검증자가 관리하는 스테이킹 풀에서 자산을 제거합니다. Stellar 및 EVM 기반 블록체인에서 지원됩니다. 이 트랜잭션은 스테이킹 작업을 수행할 때 자동으로 생성됩니다. * `WITHDRAW` - 전용 스테이킹 볼트 계정에서 다른 주소로 자산을 이체합니다. Stellar 및 EVM 기반 블록체인에서 지원됩니다. 이 트랜잭션은 스테이킹 작업을 수행할 때 자동으로 생성됩니다. **참고:** Fireblocks는 이 유형의 이름을 곧 `WITHDRAW`에서 다른 유형 이름으로 바꿀 예정입니다. 새 유형 이름에 대한 7일 공지가 있을 예정입니다. * `SUPPLY_TO_COMPOUND` - 2023년 4월 1일부터 더 이상 사용되지 않습니다. 작업 공간의 사용자가 Fireblocks와 Compound DeFI 프로토콜 간의 직접 통합을 사용한 경우 이전 트랜잭션에서 이 작업을 수행할 수 있습니다. * `REDEEM_FROM_COMPOUND` - 2023년 4월 1일부터 더 이상 사용되지 않습니다. 작업 공간의 사용자가 Fireblocks와 Compound DeFI 프로토콜 간의 직접 통합을 사용한 경우 이전 트랜잭션에서 이 기능이 작동할 수 있습니다.."
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "number"
          }
        }
      },
      "Term": {
        "type": "object",
        "properties": {
          "networkConnectionId": {
            "type": "string"
          },
          "outgoing": {
            "type": "boolean"
          },
          "asset": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          }
        }
      },
      "SetConfirmationsThresholdRequest": {
        "type": "object",
        "properties": {
          "numOfConfirmations": {
            "type": "number"
          }
        }
      },
      "SetConfirmationsThresholdResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DropTransactionRequest": {
        "type": "object",
        "properties": {
          "txId": {
            "type": "string"
          },
          "feeLevel": {
            "type": "string"
          },
          "gasPrice": {
            "type": "string"
          }
        }
      },
      "DropTransactionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UnsignedMessage": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "bip44addressIndex": {
            "type": "integer"
          },
          "bip44change": {
            "type": "number"
          },
          "derivationPath": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "content"
        ]
      },
      "SignedMessage": {
        "type": "object",
        "description": "원시 서명을 위해 반환된 서명된 메시지 목록.",
        "properties": {
          "content": {
            "type": "string"
          },
          "algorithm": {
            "oneOf": [
              {
                "const": "MPC_ECDSA_SECP256K1"
              },
              {
                "const": "MPC_EDDSA_ED25519"
              }
            ]
          },
          "derivationPath": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "signature": {
            "type": "object",
            "properties": {
              "fullSig": {
                "type": "string"
              },
              "r": {
                "type": "string"
              },
              "s": {
                "type": "string"
              },
              "v": {
                "type": "number"
              }
            }
          },
          "publicKey": {
            "type": "string"
          }
        }
      },
      "PublicKeyInformation": {
        "type": "object",
        "properties": {
          "algorithm": {
            "type": "string"
          },
          "derivationPath": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "publicKey": {
            "type": "string"
          }
        }
      },
      "TradingAccountType": {
        "oneOf": [
          {
            "const": "COIN_FUTURES"
          },
          {
            "const": "COIN_MARGINED_SWAP"
          },
          {
            "const": "EXCHANGE"
          },
          {
            "const": "FUNDING"
          },
          {
            "const": "FUNDABLE"
          },
          {
            "const": "FUTURES"
          },
          {
            "const": "FUTURES_CROSS"
          },
          {
            "const": "MARGIN"
          },
          {
            "const": "MARGIN_CROSS"
          },
          {
            "const": "OPTIONS"
          },
          {
            "const": "SPOT"
          },
          {
            "const": "USDT_MARGINED_SWAP_CROSS"
          },
          {
            "const": "USDT_FUTURES"
          },
          {
            "const": "UNIFIED"
          }
        ]
      },
      "ValidateAddressResponse": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "requiresTag": {
            "type": "boolean"
          }
        }
      },
      "ResendWebhooksResponse": {
        "type": "object",
        "properties": {
          "messagesCount": {
            "type": "number"
          }
        }
      },
      "UnspentInputsResponse": {
        "type": "object",
        "properties": {
          "input": {
            "$ref": "#/components/schemas/UnspentInput"
          },
          "address": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "confirmations": {
            "type": "number"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "UnspentInput": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string"
          },
          "index": {
            "type": "number"
          }
        }
      },
      "GetUsersResponse": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResponse"
            }
          }
        }
      },
      "ExtraParameters": {
        "type": "object",
        "properties": {},
        "description": "추가 프로토콜/작업별 키-값 매개변수: UTXO 기반 블록체인 입력 선택의 경우 키 `inputsSelection`을 추가하고 값은 [입력 선택 구조](https://developers.fireblocks.com/reference/transaction-objects#inputsselection)로 설정합니다. 입력은 [사용되지 않은 입력 검색 엔드포인트](https://developers.fireblocks.com/reference/get_vault-accounts-vaultaccountid-assetid-unspent-inputs)에서 검색할 수 있습니다. `RAW` 작업의 경우 키 `rawMessageData`를 추가하고 값은 [원시 메시지 데이터 구조](https://developers.fireblocks.com/reference/raw-signing-objects#rawmessagedata)로 설정합니다. `CONTRACT_CALL` 작업의 경우 키 `contractCallData`를 추가하고 값은 Ethereum 스마트 계약 Application Binary Interface(ABI) 페이로드로 설정합니다. Fireblocks [개발 라이브러리](https://developers.fireblocks.com/docs/ethereum-development#convenience-libraries)는 계약 호출 트랜잭션을 빌드하는 데 권장됩니다.."
      },
      "NetworkIdRoutingPolicy": {
        "type": "object",
        "properties": {
          "crypto": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomCryptoRoutingDest"
              },
              {
                "$ref": "#/components/schemas/NoneNetworkRoutingDest"
              }
            ]
          },
          "sen": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomFiatRoutingDest"
              },
              {
                "$ref": "#/components/schemas/NoneNetworkRoutingDest"
              }
            ]
          },
          "signet": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomFiatRoutingDest"
              },
              {
                "$ref": "#/components/schemas/NoneNetworkRoutingDest"
              }
            ]
          },
          "sen_test": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NoneNetworkRoutingDest"
              },
              {
                "$ref": "#/components/schemas/CustomFiatRoutingDest"
              }
            ]
          },
          "signet_test": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NoneNetworkRoutingDest"
              },
              {
                "$ref": "#/components/schemas/CustomFiatRoutingDest"
              }
            ]
          }
        }
      },
      "NetworkConnectionRoutingPolicy": {
        "type": "object",
        "properties": {
          "crypto": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomCryptoRoutingDest"
              },
              {
                "$ref": "#/components/schemas/DefaultNetworkRoutingDest"
              },
              {
                "$ref": "#/components/schemas/NoneNetworkRoutingDest"
              }
            ]
          },
          "sen": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomFiatRoutingDest"
              },
              {
                "$ref": "#/components/schemas/DefaultNetworkRoutingDest"
              },
              {
                "$ref": "#/components/schemas/NoneNetworkRoutingDest"
              }
            ]
          },
          "signet": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DefaultNetworkRoutingDest"
              },
              {
                "$ref": "#/components/schemas/CustomFiatRoutingDest"
              },
              {
                "$ref": "#/components/schemas/NoneNetworkRoutingDest"
              }
            ]
          },
          "sen_test": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DefaultNetworkRoutingDest"
              },
              {
                "$ref": "#/components/schemas/NoneNetworkRoutingDest"
              },
              {
                "$ref": "#/components/schemas/CustomFiatRoutingDest"
              }
            ]
          },
          "signet_test": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NoneNetworkRoutingDest"
              },
              {
                "$ref": "#/components/schemas/CustomFiatRoutingDest"
              },
              {
                "$ref": "#/components/schemas/DefaultNetworkRoutingDest"
              }
            ]
          }
        }
      },
      "CustomFiatRoutingDest": {
        "type": "object",
        "properties": {
          "scheme": {
            "const": "CUSTOM",
            "description": "네트워크 라우팅 로직."
          },
          "dstType": {
            "const": "FIAT_ACCOUNT",
            "description": "자금이 전송되는 법정 통화 계정."
          },
          "dstId": {
            "type": "string",
            "description": "자금이 전송되는 법정 계좌의 ID."
          }
        },
        "required": [
          "scheme",
          "dstType",
          "dstId"
        ]
      },
      "CustomCryptoRoutingDest": {
        "type": "object",
        "properties": {
          "scheme": {
            "const": "CUSTOM",
            "description": "네트워크 라우팅 로직."
          },
          "dstType": {
            "oneOf": [
              {
                "const": "VAULT"
              },
              {
                "const": "EXCHANGE"
              }
            ],
            "description": "자금이 전송되는 대상 계정 유형."
          },
          "dstId": {
            "type": "string",
            "description": "자금이 전송되는 대상 계정의 ID."
          }
        },
        "required": [
          "scheme",
          "dstType",
          "dstId"
        ]
      },
      "DefaultNetworkRoutingDest": {
        "type": "object",
        "properties": {
          "scheme": {
            "const": "DEFAULT",
            "description": "네트워크 라우팅 로직."
          }
        },
        "required": [
          "scheme"
        ]
      },
      "NoneNetworkRoutingDest": {
        "type": "object",
        "properties": {
          "scheme": {
            "const": "NONE",
            "description": "네트워크 라우팅 로직이 없습니다."
          }
        },
        "required": [
          "scheme"
        ]
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "SessionMetadata": {
        "type": "object",
        "properties": {
          "appUrl": {
            "type": "string"
          },
          "appName": {
            "type": "string"
          },
          "appDescription": {
            "type": "string"
          },
          "appIcon": {
            "type": "string"
          }
        },
        "required": [
          "appUrl"
        ]
      },
      "SessionDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "연결의 ID",
            "example": "4e9e7051-f3b2-48e9-8ee6-b12492552657"
          },
          "userId": {
            "type": "string",
            "description": "연결을 생성한 사용자의 ID"
          },
          "sessionMetadata": {
            "description": "연결의 메타데이터(dapp에서 제공)",
            "type": "object",
            "properties": {
              "appUrl": {
                "type": "string"
              },
              "appName": {
                "type": "string"
              },
              "appDescription": {
                "type": "string"
              },
              "appIcon": {
                "type": "string"
              }
            }
          },
          "vaultAccountId": {
            "type": "number",
            "description": "연결할 금고",
            "example": 1
          },
          "feeLevel": {
            "oneOf": [
              {
                "const": "MEDIUM"
              },
              {
                "const": "HIGH"
              }
            ],
            "description": "기본 수수료 수준",
            "example": "MEDIUM"
          },
          "chainIds": {
            "description": "연결에 승인된 체인",
            "example": [
              "ETH",
              "ETH_TEST",
              "SOL"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "connectionType": {
            "const": "WalletConnect",
            "description": "연결 유형",
            "example": "WalletConnect"
          },
          "connectionMethod": {
            "oneOf": [
              {
                "const": "DESKTOP"
              },
              {
                "const": "MOBILE"
              },
              {
                "const": "API"
              }
            ],
            "description": "연결이 설정된 방법",
            "example": "API"
          },
          "creationDate": {
            "format": "date-time",
            "type": "string",
            "description": "세션 생성 타임스탬프"
          }
        },
        "required": [
          "id",
          "userId",
          "sessionMetadata",
          "vaultAccountId",
          "feeLevel",
          "chainIds",
          "connectionType",
          "connectionMethod",
          "creationDate"
        ]
      },
      "GetConnectionsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "description": "요청된 Web3 연결의 데이터가 포함된 배열",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionDTO"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/Paging"
          }
        },
        "required": [
          "data"
        ]
      },
      "CreateConnectionRequest": {
        "type": "object",
        "properties": {
          "vaultAccountId": {
            "type": "number",
            "description": "Web3 연결에 연결할 볼트의 ID.",
            "example": 1
          },
          "feeLevel": {
            "oneOf": [
              {
                "const": "MEDIUM"
              },
              {
                "const": "HIGH"
              }
            ],
            "description": "기본 수수료 수준입니다. 유효한 값은 `MEDIUM` 및 `HIGH`입니다..",
            "example": "MEDIUM"
          },
          "uri": {
            "type": "string",
            "description": "dapp에서 제공하는 WalletConnect uri.",
            "example": "wc:77752975-906f-48f5-b59f-047826ee947e@1?bridge=https%3A%2F%2F0.bridge.walletconnect.org&key=64be99adc6086b7a729b0ec8c7e1f174927ab92e84f5c6f9527050225344a637"
          },
          "chainIds": {
            "description": "Web3 연결에 사용되는 블록체인 네트워크의 ID.",
            "example": [
              "ETH",
              "ETH_TEST"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "vaultAccountId",
          "feeLevel",
          "uri",
          "chainIds"
        ]
      },
      "CreateConnectionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "시작된 Web3 연결의 ID.",
            "example": "4e9e7051-f3b2-48e9-8ee6-b12492552657"
          },
          "sessionMetadata": {
            "description": "Web3 연결의 메타데이터(DApp에서 제공).",
            "type": "object",
            "properties": {
              "appUrl": {
                "type": "string"
              },
              "appName": {
                "type": "string"
              },
              "appDescription": {
                "type": "string"
              },
              "appIcon": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "id",
          "sessionMetadata"
        ]
      },
      "RespondToConnectionRequest": {
        "type": "object",
        "properties": {
          "approve": {
            "type": "boolean",
            "description": "시작된 Web3 연결 승인.",
            "example": true
          }
        },
        "required": [
          "approve"
        ]
      },
      "AddCollateralRequestBody": {
        "type": "object",
        "properties": {
          "transactionRequest": {
            "$ref": "#/components/schemas/TransactionRequest"
          },
          "isSrcCollateral": {
            "type": "boolean",
            "description": "선택 과목"
          }
        }
      },
      "RemoveCollateralRequestBody": {
        "type": "object",
        "properties": {
          "transactionRequest": {
            "$ref": "#/components/schemas/TransactionRequest"
          },
          "isDstCollateral": {
            "type": "boolean",
            "description": "선택 과목"
          }
        }
      },
      "SettlementRequestBody": {
        "type": "object",
        "properties": {
          "mainExchangeAccountId": {
            "type": "string"
          }
        }
      },
      "SettlementResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "initiator": {
            "type": "string"
          },
          "exchangeReply": {
            "type": "string"
          },
          "fireblocksInitiatedTransactions": {
            "type": "object"
          },
          "exchangeRequestedTransactions": {
            "$ref": "#/components/schemas/SettlementResponse"
          }
        }
      },
      "GetSettlementResponse": {
        "$ref": "#/components/schemas/SettlementResponse"
      },
      "ToExchangeTransaction": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "dstAddress": {
            "type": "string"
          },
          "dstTag": {
            "type": "string",
            "description": "선택 과목"
          }
        }
      },
      "ToCollateralTransaction": {
        "type": "object",
        "properties": {
          "asset": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "srcAddress": {
            "type": "string"
          },
          "srcTag": {
            "type": "string",
            "description": "선택 과목"
          },
          "fee": {
            "type": "string",
            "description": "선택 과목"
          }
        }
      },
      "XBSettlementConfigCreationRequestBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "국경 간 결제 구성의 이름"
          },
          "corridorId": {
            "$ref": "#/components/schemas/XBSettlementCorridorId"
          },
          "steps": {
            "$ref": "#/components/schemas/XBSettlementConfigStepsRecord"
          },
          "conversionSlippageBasisPoints": {
            "$ref": "#/components/schemas/XBSettlementConversionSlippageBasisPoints"
          }
        },
        "required": [
          "name",
          "corridorId",
          "steps"
        ]
      },
      "XBSettlementConfigCreationResponse": {
        "$ref": "#/components/schemas/XBSettlementConfigModel"
      },
      "XBSettlementConfigEditRequestBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "국경 간 결제 구성의 이름"
          },
          "steps": {
            "$ref": "#/components/schemas/XBSettlementConfigStepsRecord"
          },
          "conversionSlippageBasisPoints": {
            "$ref": "#/components/schemas/XBSettlementConversionSlippageBasisPoints"
          }
        },
        "required": [
          "name",
          "steps"
        ]
      },
      "XBSettlementConfigEditResponse": {
        "$ref": "#/components/schemas/XBSettlementConfigModel"
      },
      "XBSettlementConfigDeletionResponse": {
        "$ref": "#/components/schemas/XBSettlementConfigModel"
      },
      "XBSettlementGetConfigResponse": {
        "$ref": "#/components/schemas/XBSettlementConfigModel"
      },
      "XBSettlementGetAllConfigsResponse": {
        "type": "object",
        "properties": {
          "configurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/XBSettlementConfigModel"
            }
          }
        },
        "required": [
          "configurations"
        ]
      },
      "XBSettlementFlowExecutionRequestBody": {
        "type": "object",
        "properties": {
          "conversionSlippageBasisPoints": {
            "$ref": "#/components/schemas/XBSettlementConversionSlippageBasisPoints"
          }
        }
      },
      "XBSettlementFlowExecutionResponse": {
        "$ref": "#/components/schemas/XBSettlementFlowExecutionModel"
      },
      "XBSettlementFlowExecutionStep": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "단계 실행을 위한 고유 ID"
          },
          "accountId": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/XBSettlementFlowExecutionStepStatus"
          },
          "inputAmount": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "outputAmount": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "fee": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "startedAt": {
            "type": "number",
            "description": "에포크 형식의 단계 실행 시작 시간."
          },
          "completedAt": {
            "type": "number",
            "description": "에포크 형식의 단계 실행 종료 시간."
          },
          "isSignRequired": {
            "type": "boolean",
            "description": "단계 실행에 서명이 필요한지 여부."
          }
        },
        "required": [
          "id",
          "accountId",
          "status",
          "inputAmount",
          "isSignRequired"
        ]
      },
      "XBSettlementFlowExecutionStepStatus": {
        "oneOf": [
          {
            "const": "NOT_STARTED"
          },
          {
            "const": "PROCESSING"
          },
          {
            "const": "COMPLETED"
          },
          {
            "const": "FAILED"
          }
        ]
      },
      "XBSettlementFlowExecutionStatus": {
        "oneOf": [
          {
            "const": "NOT_LAUNCHED"
          },
          {
            "const": "PROCESSING"
          },
          {
            "const": "COMPLETED"
          },
          {
            "const": "FAILED"
          }
        ]
      },
      "XBSettlementConfigId": {
        "type": "string",
        "format": "uuid",
        "description": "크로스 보드 구성 고유 ID"
      },
      "XBSettlementConfigModel": {
        "type": "object",
        "properties": {
          "configId": {
            "$ref": "#/components/schemas/XBSettlementConfigId"
          },
          "corridorId": {
            "$ref": "#/components/schemas/XBSettlementCorridorId"
          },
          "name": {
            "type": "string",
            "description": "국경 간 정착 구성의 이름"
          },
          "steps": {
            "$ref": "#/components/schemas/XBSettlementConfigStepsRecord"
          },
          "conversionSlippageBasisPoints": {
            "$ref": "#/components/schemas/XBSettlementConversionSlippageBasisPoints"
          },
          "createdAt": {
            "type": "number",
            "description": "에포크 형식의 생성 시간."
          }
        },
        "required": [
          "configId",
          "name",
          "corridorId",
          "steps",
          "conversionSlippageBasisPoints",
          "createdAt"
        ]
      },
      "XBSettlementCorridorId": {
        "oneOf": [
          {
            "const": "MX_US"
          },
          {
            "const": "CO_US"
          },
          {
            "const": "US_MX"
          },
          {
            "const": "US_EU"
          },
          {
            "const": "US_UK"
          }
        ],
        "description": "- MX_US : 멕시코(MXN)에서 미국(USD)으로 - CO_US : 콜롬비아(COP)에서 미국(USD)으로 - US_MX : 미국(USD)에서 멕시코(MXN)으로 - US_EU : 미국(USD)에서 유럽 연합(EUR)으로 - US_UK : 미국(USD)에서 영국(GBP)으로"
      },
      "XBSettlementConfigStep": {
        "type": "object",
        "properties": {
          "stepType": {
            "$ref": "#/components/schemas/XBSettlementStepType"
          },
          "accountId": {
            "type": "string"
          }
        },
        "required": [
          "stepType",
          "accountId"
        ]
      },
      "XBSettlementStepType": {
        "oneOf": [
          {
            "const": "ON_RAMP"
          },
          {
            "const": "VAULT_ACCOUNT"
          },
          {
            "const": "OFF_RAMP"
          },
          {
            "const": "FIAT_DESTINATION"
          }
        ],
        "description": "- ON_RAMP: 법정 통화를 암호화폐로 교환할 수 있는 서비스입니다. OnRamp 입력 값은 항상 법정 통화이고 출력 값은 암호 자산입니다. - VAULT_ACCOUNT: Fireblocks Vault 계정 - OFF_RAMP: 법정 통화를 암호화폐로 교환할 수 있는 서비스입니다. OffRamp 입력 값은 항상 암호 자산이고 출력 값은 법정 통화입니다. - FIAT_DESTINATION: 법정 통화 계정"
      },
      "XBSettlementFlowSetupStep": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "inputAmount": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "outputAmount": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "estimatedFeeAmount": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "estimatedTime": {
            "type": "number",
            "description": "단계 실행에 필요한 예상 시간."
          },
          "isSignRequired": {
            "type": "boolean",
            "description": "단계 실행에 서명이 필요한지 여부."
          }
        },
        "required": [
          "accountId",
          "inputAmount",
          "outputAmount",
          "estimatedFeeAmount",
          "estimatedTime",
          "isSignRequired"
        ]
      },
      "XBSettlementGetFlowResponse": {
        "type": "object",
        "properties": {
          "preview": {
            "$ref": "#/components/schemas/XBSettlementFlowPreviewModel"
          },
          "execution": {
            "$ref": "#/components/schemas/XBSettlementFlowExecutionModel"
          }
        }
      },
      "XBSettlementFlowPreviewModel": {
        "type": "object",
        "properties": {
          "flowId": {
            "type": "string",
            "description": "국경 간 흐름을 위한 고유 ID."
          },
          "configId": {
            "$ref": "#/components/schemas/XBSettlementConfigId"
          },
          "conversionRate": {
            "type": "string",
            "description": "온램프 또는 오프램프에서 수신된 변환율."
          },
          "inputAmount": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "estimatedOutputAmount": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "totalEstimatedFee": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "totalEstimatedTime": {
            "type": "number",
            "description": "국경 간 흐름을 실행하는 데 걸리는 총 *추정* 시간."
          },
          "steps": {
            "$ref": "#/components/schemas/XBSettlementFlowStepsRecord"
          }
        },
        "required": [
          "flowId",
          "configId",
          "steps",
          "inputAmount",
          "estimatedOutputAmount",
          "totalEstimatedFee",
          "totalEstimatedTime",
          "conversionRate"
        ]
      },
      "XBSettlementCreateFlowRequestBody": {
        "type": "object",
        "properties": {
          "configId": {
            "$ref": "#/components/schemas/XBSettlementConfigId"
          },
          "amount": {
            "type": "string",
            "description": "이 국경 간 흐름에서 이체할 금액입니다. 자산 유형은 국경 간 결제 구성에 의해 정의됩니다.."
          }
        },
        "required": [
          "configId",
          "amount"
        ]
      },
      "XBSettlementCreateFlowResponse": {
        "$ref": "#/components/schemas/XBSettlementFlowPreviewModel"
      },
      "XBSettlementFlowExecutionModel": {
        "type": "object",
        "properties": {
          "flowId": {
            "type": "string",
            "description": "국경 간 흐름을 위한 고유 ID."
          },
          "configId": {
            "$ref": "#/components/schemas/XBSettlementConfigId"
          },
          "inputAmount": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "outputAmount": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "totalFee": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "initiatedAt": {
            "type": "number",
            "description": "에포크 형식으로 국경 간 흐름이 실행되는 시간."
          },
          "initiatedBy": {
            "description": "흐름을 시작한 사용자의 ID",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/XBSettlementFlowExecutionStatus"
          },
          "steps": {
            "$ref": "#/components/schemas/XBSettlementFlowStepsExecutionRecord"
          },
          "selectedConversionSlippage": {
            "type": "object",
            "description": "오버라이드 논리가 발생했을 수 있으므로 흐름 중에 사용된 선택된 미끄러짐을 나타냅니다..",
            "properties": {
              "basisPoints": {
                "type": "number"
              },
              "reason": {
                "$ref": "#/components/schemas/XBSettlementFlowSelectedConversionSlippageReason"
              }
            },
            "required": [
              "basisPoints",
              "reason"
            ]
          }
        },
        "required": [
          "flowId",
          "configId",
          "steps",
          "inputAmount",
          "outputAmount",
          "totalFee",
          "initiatedAt",
          "initiatedBy",
          "state",
          "selectedConversionSlippage"
        ]
      },
      "XBSettlementFlowSelectedConversionSlippageReason": {
        "oneOf": [
          {
            "const": "DEFAULT"
          },
          {
            "const": "CONFIG"
          },
          {
            "const": "FLOW"
          }
        ]
      },
      "XBSettlementFlowStepsExecutionRecord": {
        "type": "object",
        "properties": {
          "stepType": {
            "$ref": "#/components/schemas/XBSettlementStepType"
          }
        },
        "additionalProperties": {
          "$ref": "#/components/schemas/XBSettlementFlowExecutionStep"
        }
      },
      "XBSettlementConfigStepsRecord": {
        "type": "object",
        "properties": {
          "stepType": {
            "$ref": "#/components/schemas/XBSettlementStepType"
          }
        },
        "additionalProperties": {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string"
            },
            "inputAssetId": {
              "$ref": "#/components/schemas/XBSettlementAssetID"
            },
            "outputAssetId": {
              "$ref": "#/components/schemas/XBSettlementAssetID"
            }
          },
          "required": [
            "accountId"
          ]
        }
      },
      "XBSettlementConversionSlippageBasisPoints": {
        "type": "integer",
        "minimum": 0,
        "maximum": 10000,
        "default": 10000,
        "description": "기준점 단위의 미끄러짐 구성, 기본값은 10%입니다."
      },
      "XBSettlementFlowStepsRecord": {
        "type": "object",
        "properties": {
          "stepType": {
            "$ref": "#/components/schemas/XBSettlementStepType"
          }
        },
        "additionalProperties": {
          "$ref": "#/components/schemas/XBSettlementFlowSetupStep"
        }
      },
      "XBSettlementAsset": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "assetId": {
            "$ref": "#/components/schemas/XBSettlementAssetID"
          }
        },
        "required": [
          "amount"
        ]
      },
      "XBSettlementAssetID": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/XBSettlementFiatAsset"
          },
          {
            "$ref": "#/components/schemas/XBSettlementCryptoAsset"
          }
        ]
      },
      "XBSettlementFiatAsset": {
        "oneOf": [
          {
            "const": "USD"
          },
          {
            "const": "MXN"
          },
          {
            "const": "COP"
          },
          {
            "const": "EUR"
          },
          {
            "const": "GBP"
          }
        ]
      },
      "XBSettlementCryptoAsset": {
        "oneOf": [
          {
            "const": "XLM_USDC_5F3T"
          },
          {
            "const": "XLM"
          }
        ],
        "description": "- XLM_USDC_5F3T : Stellar 네트워크를 통한 USDC"
      },
      "CreatePayoutRequest": {
        "type": "object",
        "properties": {
          "paymentAccount": {
            "$ref": "#/components/schemas/PaymentAccount"
          },
          "instructionSet": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayoutInstruction"
            }
          }
        },
        "required": [
          "paymentAccount",
          "instructionSet"
        ]
      },
      "PaymentAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/PaymentAccountType"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "PayoutInstruction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "payeeAccount": {
            "$ref": "#/components/schemas/PayeeAccount"
          },
          "amount": {
            "$ref": "#/components/schemas/InstructionAmount"
          }
        },
        "required": [
          "amount",
          "payeeAccount"
        ]
      },
      "PaymentAccountType": {
        "oneOf": [
          {
            "const": "VAULT_ACCOUNT"
          },
          {
            "const": "EXCHANGE_ACCOUNT"
          },
          {
            "const": "FIAT_ACCOUNT"
          }
        ]
      },
      "PayeeAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/PayeeAccountType"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "InstructionAmount": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "assetId": {
            "type": "string"
          }
        },
        "required": [
          "amount",
          "assetId"
        ]
      },
      "PayeeAccountType": {
        "oneOf": [
          {
            "const": "VAULT_ACCOUNT"
          },
          {
            "const": "EXCHANGE_ACCOUNT"
          },
          {
            "const": "INTERNAL_WALLET"
          },
          {
            "const": "EXTERNAL_WALLET"
          },
          {
            "const": "NETWORK_CONNECTION"
          },
          {
            "const": "FIAT_ACCOUNT"
          }
        ],
        "description": "- VAULT_ACCOUNT 기본 Fireblocks 볼트 계정 - EXCHANGE_ACCOUNT 타사 거래소 계정 - INTERNAL_WALLET 작업 공간/조직에서 내부로 표시된 허용 목록 주소 - EXTERNAL_WALLET 외부로 표시된 허용 목록 주소 - NETWORK_CONNECTION Fireblocks 네트워크의 구성원 - FIAT_ACCOUNT 법정 통화 은행의 타사 계정(Signature, BCB 등)"
      },
      "PayoutResponse": {
        "type": "object",
        "properties": {
          "payoutId": {
            "type": "string"
          },
          "paymentAccount": {
            "$ref": "#/components/schemas/PaymentAccountResponse"
          },
          "createdAt": {
            "type": "number"
          },
          "state": {
            "$ref": "#/components/schemas/PayoutState"
          },
          "status": {
            "$ref": "#/components/schemas/PayoutStatus"
          },
          "reasonOfFailure": {
            "type": "string",
            "description": "<ul><li>불충분한 균형</li><li> 소스 번역</li><li> 고유하지 않은 소스</li><li> 출처를 찾을 수 없음</li><li> 소스 유형이 지원되지 않음</li><li> 비어있는 소스</li><li> 목적지_번역</li><li> 목적지_고유하지_않음</li><li> 목적지를 찾을 수 없음</li><li> 비어있는 목적지</li><li> 파싱</li><li> 알려지지 않은</li><li> 파이어블록_클라이언트</li><li> 거래_제출</li></ul>"
          },
          "initMethod": {
            "$ref": "#/components/schemas/PayoutInitMethod"
          },
          "instructionSet": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayoutInstructionResponse"
            }
          },
          "reportUrl": {
            "type": "string"
          }
        },
        "required": [
          "payoutId",
          "createdAt",
          "state",
          "status",
          "paymentAccount",
          "instructionSet"
        ]
      },
      "PaymentAccountResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/PaymentAccountType"
          }
        }
      },
      "PayoutState": {
        "oneOf": [
          {
            "const": "CREATED"
          },
          {
            "const": "FILE_FOUND"
          },
          {
            "const": "REQUESTED"
          },
          {
            "const": "TRANSLATED"
          },
          {
            "const": "PROCESSING"
          },
          {
            "const": "SUBMITTED"
          },
          {
            "const": "FINALIZED"
          },
          {
            "const": "INSUFFICIENT_BALANCE"
          },
          {
            "const": "FAILED"
          }
        ],
        "description": "- CREATED - 모든 세부 정보와 함께 생성된 지급 명령 세트 - FILE_FOUND - FTP에서 찾은 새 파일 - REQUESTED - 모든 세부 정보와 함께 요청된 지급 - TRANSLATED - 지급 명령 계정 ID가 식별되고 변환됨 - PROCESSING - 지급 명령 세트가 실행되고 처리 중 - SUBMITTED - 지급 명령에 대한 거래가 제출됨 - FINALIZED - 지급 처리가 완료되었으며 모든 거래가 성공적으로 처리됨 - INSUFFICIENT_BALANCE - 지급 계정의 잔액이 부족함(일시적인 상태일 수 있음) - FAILED - 하나 이상의 지급 명령이 실패함"
      },
      "PayoutStatus": {
        "oneOf": [
          {
            "const": "REGISTERED"
          },
          {
            "const": "VERIFYING"
          },
          {
            "const": "IN_PROGRESS"
          },
          {
            "const": "DONE"
          },
          {
            "const": "INSUFFICIENT_BALANCE"
          },
          {
            "const": "FAILED"
          }
        ],
        "description": "- REQUESTED 모든 세부 정보와 함께 지급 요청됨 - VERIFIED 지급 지침 세트 세부 정보가 검증됨 - PROCESSING 지급 지침 세트가 실행되어 처리 중 - FINALIZED 지급 완료(모든 지급 지침이 성공적으로 완료됨) - INSUFFICIENT_BALANCE 지급 계좌의 잔액이 부족함(일시적인 상태일 수 있음) - FAILED 하나 이상의 지급 지침이 실패함"
      },
      "PayoutInitMethod": {
        "oneOf": [
          {
            "const": "FILE"
          },
          {
            "const": "API"
          }
        ]
      },
      "PayoutInstructionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "payeeAccount": {
            "$ref": "#/components/schemas/PayeeAccountResponse"
          },
          "amount": {
            "$ref": "#/components/schemas/InstructionAmount"
          },
          "state": {
            "$ref": "#/components/schemas/PayoutInstructionState"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          }
        },
        "required": [
          "amount",
          "payeeAccount",
          "state",
          "transactions"
        ]
      },
      "PayeeAccountResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/PayeeAccountType"
          }
        }
      },
      "PayoutInstructionState": {
        "oneOf": [
          {
            "const": "NOT_STARTED"
          },
          {
            "const": "TRANSACTION_SENT"
          },
          {
            "const": "COMPLETED"
          },
          {
            "const": "FAILED"
          },
          {
            "const": "TRANSLATION_ERROR"
          },
          {
            "const": "SKIPPED"
          }
        ],
        "description": "- NOT_STARTED - 시작 대기 - TRANSACTION_SENT - 기본 트랜잭션이 전송됨 - COMPLETED - 성공적으로 완료됨 - FAILED - 실패 - TRANSLATION_ERROR - 대상 조회 실패(기본 허용 목록 외부 지갑 또는 유사한 항목의 변경으로 인해) - SKIPPED - 이 명령에 대한 트랜잭션이 생성되지 않음"
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "state": {
            "oneOf": [
              {
                "const": "SUBMITTED"
              },
              {
                "const": "QUEUED"
              },
              {
                "const": "PENDING_AUTHORIZATION"
              },
              {
                "const": "PENDING_SIGNATURE"
              },
              {
                "const": "BROADCASTING"
              },
              {
                "const": "PENDING_3RD_PARTY_MANUAL_APPROVAL"
              },
              {
                "const": "PENDING_3RD_PARTY"
              },
              {
                "const": "PENDING"
              },
              {
                "const": "CONFIRMING"
              },
              {
                "const": "CONFIRMED"
              },
              {
                "const": "COMPLETED"
              },
              {
                "const": "PARTIALLY_COMPLETED"
              },
              {
                "const": "PENDING_AML_SCREENING"
              },
              {
                "const": "CANCELLING"
              },
              {
                "const": "CANCELLED"
              },
              {
                "const": "REJECTED"
              },
              {
                "const": "BLOCKED"
              },
              {
                "const": "FAILED"
              },
              {
                "const": "TIMEOUT"
              }
            ]
          },
          "timestamp": {
            "type": "number",
            "format": "date-time"
          },
          "instructionId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "state"
        ]
      },
      "DispatchPayoutResponse": {
        "type": "object",
        "properties": {
          "payoutId": {
            "type": "string"
          }
        },
        "required": [
          "payoutId"
        ]
      },
      "TravelRuleAddress": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "example": "1234 Example St",
            "description": "거리 주소"
          },
          "city": {
            "type": "string",
            "example": "New York",
            "description": "도시"
          },
          "state": {
            "type": "string",
            "example": "NY",
            "description": "주 또는 도"
          },
          "postalCode": {
            "type": "string",
            "example": "10001",
            "description": "우편번호"
          }
        },
        "required": [
          "street",
          "city",
          "state",
          "postalCode"
        ]
      },
      "TravelRuleValidateTransactionRequest": {
        "type": "object",
        "properties": {
          "transactionAsset": {
            "type": "string",
            "example": "BTC",
            "description": "거래 자산 기호 BTC,ETH)"
          },
          "destination": {
            "type": "string",
            "example": "bc1qxy2kgdygjrsqtzq2n0yrf1234p83kkfjhx0wlh",
            "description": "거래 목적지 주소"
          },
          "transactionAmount": {
            "type": "string",
            "example": "10",
            "description": "거래자산의 거래금액"
          },
          "originatorVASPdid": {
            "type": "string",
            "example": "did:ethr:0x44957e75d6ce4a5bf37aae117da86422c848f7c2",
            "description": "이는 귀하의 VASP에 할당된 식별자입니다."
          },
          "originatorEqualsBeneficiary": {
            "type": "boolean",
            "example": false,
            "description": "발신자와 수혜자가 같은 사람이어서 정보를 수집할 필요가 없는 경우 &quot;참&quot;입니다. 제3자 이체인 경우 &quot;거짓&quot;입니다.."
          },
          "travelRuleBehavior": {
            "type": "boolean",
            "example": true,
            "description": "이는 또한 해당 거래가 수혜자 VASP의 관할권에서 TRAVEL_RULE인지 확인합니다."
          },
          "beneficiaryVASPdid": {
            "type": "string",
            "example": "did:ethr:0x46a7ed5813ce735387df2bfb245bd7722e0de992",
            "description": "이는 자금이 전송되는 VASP에 할당된 식별자입니다."
          },
          "beneficiaryVASPname": {
            "type": "string",
            "example": "HelloCrypto",
            "description": "수혜자 VASP 이름"
          },
          "beneficiaryName": {
            "type": "string",
            "example": "John Doe",
            "description": "수혜자 이름"
          },
          "beneficiaryAccountNumber": {
            "type": "string",
            "example": "1234-1234-1234-12234",
            "description": "수혜자 이름"
          },
          "beneficiaryAddress": {
            "example": "{\"addressLine: [Wayne Manor, Gotham City, New York, USA]\"}",
            "description": "수혜자 이름",
            "type": "object",
            "properties": {
              "street": {
                "type": "string",
                "example": "1234 Example St",
                "description": "거리 주소"
              },
              "city": {
                "type": "string",
                "example": "New York",
                "description": "도시"
              },
              "state": {
                "type": "string",
                "example": "NY",
                "description": "주 또는 도"
              },
              "postalCode": {
                "type": "string",
                "example": "10001",
                "description": "우편번호"
              }
            }
          }
        },
        "required": [
          "transactionAsset",
          "destination",
          "transactionAmount",
          "originatorVASPdid",
          "originatorEqualsBeneficiary",
          "travelRuleBehavior",
          "beneficiaryVASPdid",
          "beneficiaryVASPname",
          "beneficiaryName",
          "beneficiaryAccountNumber",
          "beneficiaryAddress"
        ]
      },
      "TravelRuleValidateTransactionResponse": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean",
            "description": "&quot;isValid&quot;는 여행 규칙 데이터 전송에 필요한 모든 정보를 수집했는지 알려줍니다. 이 필드가 &quot;true&quot;이면 다음 단계로 넘어가 프런트엔드 정보를 백엔드로 전송하고 여행 규칙 거래 생성을 수행할 수 있습니다.",
            "example": true
          },
          "type": {
            "type": "string",
            "description": "&quot;type&quot;은 출금 요청의 FIAT 가치로 변환된 가상 자산 가치가 관할권의 임계값보다 높거나(=TRAVELRULE) 낮거나(=BELOW_THRESHOLD) 낮은지 알려줍니다. 여행 규칙 정보를 보내지 않고 수집만 하는 호스팅되지 않은 지갑인 경우 NON_CUSTODIAL이라고 표시됩니다..",
            "example": "TRAVELRULE"
          },
          "beneficiaryAddressType": {
            "type": "string",
            "description": "&quot;beneficiaryAddressType&quot;은 블록체인 분석 제공자 또는 내부 주소록이 지갑 주소를 식별할 수 있었는지 알려줍니다..",
            "example": "UNKNOWN"
          },
          "addressSource": {
            "type": "string",
            "description": "&quot;addressSource&quot;는 주소가 내부 주소록에서 발견되었는지 또는 블록체인 분석 제공자가 식별했는지 알려줍니다..",
            "example": "UNKNOWN"
          },
          "beneficiaryVASPdid": {
            "type": "string",
            "description": "수혜자 VASP의 VASP DID",
            "example": "did:ethr:0x46a7ed5813ce735387df2bfb245bd7722e0de992"
          },
          "beneficiaryVASPname": {
            "type": "string",
            "description": "&quot;beneficiaryVASPname&quot;은 지갑 주소의 소유자로 식별된 VASP의 이름을 알려줍니다. 이 이름은 후속 호출에서 DID를 가져오는 데 사용됩니다..",
            "example": "Fireblocks"
          },
          "warnings": {
            "description": "&quot;오류/경고&quot;는 발신자로부터 수혜자에 대한 어떤 정보를 수집해야 하는지 알려줍니다..",
            "example": [
              "optional-beneficiaryAccountNumber"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "isValid",
          "type",
          "beneficiaryAddressType",
          "addressSource",
          "beneficiaryVASPdid",
          "beneficiaryVASPname",
          "warnings"
        ]
      },
      "TravelRuleTransactionBlockchainInfo": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          }
        },
        "required": [
          "txHash",
          "origin",
          "destination"
        ]
      },
      "TravelRulePiiIVMS": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "placeOfBirth": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "identificationNumber": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "countryOfResidence": {
            "type": "string"
          },
          "taxIdentificationNumber": {
            "type": "string"
          },
          "customerNumber": {
            "type": "string"
          }
        },
        "required": [
          "fullName",
          "dateOfBirth",
          "placeOfBirth",
          "address",
          "identificationNumber",
          "nationality",
          "countryOfResidence",
          "taxIdentificationNumber",
          "customerNumber"
        ]
      },
      "TravelRuleOwnershipProof": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "passport",
            "description": "소유권 증명의 종류"
          },
          "id": {
            "type": "string",
            "example": "123456789",
            "description": "식별번호"
          },
          "name": {
            "type": "string",
            "example": "Alice",
            "description": "소유자 이름"
          },
          "country": {
            "type": "string",
            "example": "US",
            "description": "발행 국가"
          },
          "issueDate": {
            "type": "string",
            "example": "2022-01-01",
            "description": "발행일자"
          },
          "issuer": {
            "type": "string",
            "example": "US Government",
            "description": "발급 기관 이름"
          }
        },
        "required": [
          "type",
          "id",
          "name",
          "country",
          "issueDate",
          "issuer"
        ]
      },
      "TravelRuleValidateFullTransactionRequest": {
        "type": "object",
        "properties": {
          "transactionAsset": {
            "type": "string",
            "description": "거래에 관련된 자산"
          },
          "transactionAmount": {
            "type": "string",
            "description": "거래금액"
          },
          "originatorDid": {
            "type": "string",
            "description": "거래 발신자의 DID"
          },
          "beneficiaryDid": {
            "type": "string",
            "description": "거래 수혜자의 DID"
          },
          "originatorVASPdid": {
            "type": "string",
            "description": "거래 발신자의 VASP ID"
          },
          "beneficiaryVASPdid": {
            "type": "string",
            "description": "거래 수혜자의 VASP ID"
          },
          "beneficiaryVASPname": {
            "type": "string",
            "description": "수혜자로서 활동하는 VASP의 이름"
          },
          "transactionBlockchainInfo": {
            "description": "블록체인 거래에 대한 정보",
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string"
              },
              "origin": {
                "type": "string"
              },
              "destination": {
                "type": "string"
              }
            }
          },
          "originator": {
            "description": "거래 발신자에 대한 정보",
            "type": "object",
            "properties": {
              "fullName": {
                "type": "string"
              },
              "dateOfBirth": {
                "type": "string"
              },
              "placeOfBirth": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "identificationNumber": {
                "type": "string"
              },
              "nationality": {
                "type": "string"
              },
              "countryOfResidence": {
                "type": "string"
              },
              "taxIdentificationNumber": {
                "type": "string"
              },
              "customerNumber": {
                "type": "string"
              }
            }
          },
          "beneficiary": {
            "description": "거래 수혜자에 대한 정보",
            "type": "object",
            "properties": {
              "fullName": {
                "type": "string"
              },
              "dateOfBirth": {
                "type": "string"
              },
              "placeOfBirth": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "identificationNumber": {
                "type": "string"
              },
              "nationality": {
                "type": "string"
              },
              "countryOfResidence": {
                "type": "string"
              },
              "taxIdentificationNumber": {
                "type": "string"
              },
              "customerNumber": {
                "type": "string"
              }
            }
          },
          "encrypted": {
            "type": "string",
            "description": "거래와 관련된 암호화된 데이터"
          },
          "protocol": {
            "type": "string",
            "description": "여행 규칙을 수행하는 데 사용되는 프로토콜"
          },
          "notificationEmail": {
            "type": "string",
            "description": "여행 규정 완료 시 알림을 보내야 하는 이메일 주소"
          },
          "skipBeneficiaryDataValidation": {
            "type": "boolean",
            "description": "수혜자 데이터 검증을 건너뛸지 여부"
          },
          "travelRuleBehavior": {
            "type": "boolean",
            "description": "수혜자 VASP의 관할권에서 거래가 TRAVEL_RULE인지 확인할지 여부"
          },
          "originatorProof": {
            "description": "거래 발주자와 관련된 소유권 증명",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "passport",
                "description": "소유권 증명의 종류"
              },
              "id": {
                "type": "string",
                "example": "123456789",
                "description": "식별번호"
              },
              "name": {
                "type": "string",
                "example": "Alice",
                "description": "소유자 이름"
              },
              "country": {
                "type": "string",
                "example": "US",
                "description": "발행 국가"
              },
              "issueDate": {
                "type": "string",
                "example": "2022-01-01",
                "description": "발행일자"
              },
              "issuer": {
                "type": "string",
                "example": "US Government",
                "description": "발급 기관 이름"
              }
            }
          },
          "beneficiaryProof": {
            "description": "거래 수혜자와 관련된 소유권 증빙",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "passport",
                "description": "소유권 증명의 종류"
              },
              "id": {
                "type": "string",
                "example": "123456789",
                "description": "식별번호"
              },
              "name": {
                "type": "string",
                "example": "Alice",
                "description": "소유자 이름"
              },
              "country": {
                "type": "string",
                "example": "US",
                "description": "발행 국가"
              },
              "issueDate": {
                "type": "string",
                "example": "2022-01-01",
                "description": "발행일자"
              },
              "issuer": {
                "type": "string",
                "example": "US Government",
                "description": "발급 기관 이름"
              }
            }
          },
          "pii": {
            "description": "거래와 관련된 개인식별정보",
            "type": "object",
            "properties": {
              "fullName": {
                "type": "string"
              },
              "dateOfBirth": {
                "type": "string"
              },
              "placeOfBirth": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "identificationNumber": {
                "type": "string"
              },
              "nationality": {
                "type": "string"
              },
              "countryOfResidence": {
                "type": "string"
              },
              "taxIdentificationNumber": {
                "type": "string"
              },
              "customerNumber": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "transactionAsset",
          "transactionAmount",
          "originatorDid",
          "beneficiaryDid",
          "originatorVASPdid",
          "beneficiaryVASPdid",
          "beneficiaryVASPname",
          "transactionBlockchainInfo",
          "originator",
          "beneficiary",
          "encrypted",
          "protocol",
          "notificationEmail",
          "skipBeneficiaryDataValidation",
          "travelRuleBehavior",
          "originatorProof",
          "beneficiaryProof",
          "pii"
        ]
      },
      "TravelRuleIssuer": {
        "type": "object",
        "properties": {
          "issuerDid": {
            "type": "string"
          }
        },
        "required": [
          "issuerDid"
        ]
      },
      "TravelRuleIssuers": {
        "type": "object",
        "properties": {
          "yearFounded": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "isRegulated": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "regulatoryAuthorities": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "name": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "logo": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "website": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "legalName": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "legalStructure": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "incorporationCountry": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "businessNumber": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "addressLine1": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "city": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "country": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "description": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          }
        },
        "required": [
          "yearFounded",
          "isRegulated",
          "regulatoryAuthorities",
          "name",
          "logo",
          "website",
          "legalName",
          "legalStructure",
          "incorporationCountry",
          "businessNumber",
          "addressLine1",
          "city",
          "country",
          "description"
        ]
      },
      "TravelRuleVASP": {
        "type": "object",
        "properties": {
          "did": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "verificationStatus": {
            "type": "string"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "emailDomains": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "legalStructure": {
            "type": "string"
          },
          "legalName": {
            "type": "string"
          },
          "yearFounded": {
            "type": "string"
          },
          "incorporationCountry": {
            "type": "string"
          },
          "isRegulated": {
            "type": "string"
          },
          "otherNames": {
            "type": "string"
          },
          "identificationType": {
            "type": "string"
          },
          "identificationCountry": {
            "type": "string"
          },
          "businessNumber": {
            "type": "string"
          },
          "regulatoryAuthorities": {
            "type": "string"
          },
          "jurisdictions": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "certificates": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "travelRule_OPENVASP": {
            "type": "string"
          },
          "travelRule_SYGNA": {
            "type": "string"
          },
          "travelRule_TRISA": {
            "type": "string"
          },
          "travelRule_TRLIGHT": {
            "type": "string"
          },
          "travelRule_EMAIL": {
            "type": "string"
          },
          "travelRule_TRP": {
            "type": "string"
          },
          "travelRule_SHYFT": {
            "type": "string"
          },
          "travelRule_USTRAVELRULEWG": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "lastSentDate": {
            "type": "string"
          },
          "lastReceivedDate": {
            "type": "string"
          },
          "documents": {
            "type": "string"
          },
          "hasAdmin": {
            "type": "boolean"
          },
          "isNotifiable": {
            "type": "boolean"
          },
          "issuers": {
            "$ref": "#/components/schemas/TravelRuleIssuers"
          }
        },
        "required": [
          "did",
          "name",
          "verificationStatus",
          "addressLine1",
          "addressLine2",
          "city",
          "country",
          "emailDomains",
          "website",
          "logo",
          "legalStructure",
          "legalName",
          "yearFounded",
          "incorporationCountry",
          "isRegulated",
          "otherNames",
          "identificationType",
          "identificationCountry",
          "businessNumber",
          "regulatoryAuthorities",
          "jurisdictions",
          "street",
          "number",
          "unit",
          "postCode",
          "state",
          "certificates",
          "description",
          "travelRule_OPENVASP",
          "travelRule_SYGNA",
          "travelRule_TRISA",
          "travelRule_TRLIGHT",
          "travelRule_EMAIL",
          "travelRule_TRP",
          "travelRule_SHYFT",
          "travelRule_USTRAVELRULEWG",
          "createdAt",
          "createdBy",
          "updatedAt",
          "updatedBy",
          "lastSentDate",
          "lastReceivedDate",
          "documents",
          "hasAdmin",
          "isNotifiable",
          "issuers"
        ]
      },
      "TravelRuleGetAllVASPsResponse": {
        "type": "object",
        "properties": {
          "vasps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TravelRuleVASP"
            }
          }
        },
        "required": [
          "vasps"
        ]
      },
      "TravelRuleUpdateVASPDetails": {
        "type": "object",
        "properties": {
          "did": {
            "type": "string",
            "example": "did:ethr:0x44957e75d6ce4a5bf37aae117da86422c848f7c2",
            "description": "VASP의 분산 식별자"
          },
          "pii_didkey": {
            "type": "string",
            "example": "did:key:z6Mks5CZRaiooKYhq5TwtXQC1gWhwiZnmiKfFrMnYY62MhYf",
            "description": "VASP의 PII DID 키"
          }
        },
        "required": [
          "did",
          "pii_didkey"
        ]
      },
      "PolicySrcOrDestType": {
        "oneOf": [
          {
            "const": "EXCHANGE"
          },
          {
            "const": "UNMANAGED"
          },
          {
            "const": "VAULT"
          },
          {
            "const": "NETWORK_CONNECTION"
          },
          {
            "const": "COMPOUND"
          },
          {
            "const": "FIAT_ACCOUNT"
          },
          {
            "const": "ONE_TIME_ADDRESS"
          },
          {
            "const": "*"
          }
        ],
        "description": "* EXCHANGE - 작업 공간에 연결된 타사 거래소 계정 * UNMANAGED - Fireblocks 작업 공간 외부의 관리되지 않는 지갑 * VAULT - Fireblocks Vault의 계정 * NETWORK_CONNECTION - Fireblocks 네트워크의 연결 * COMPOUND - (더 이상 사용되지 않음) Compound DeFI 프로토콜을 사용하여 검색한 자산 * FIAT_ACCOUNT - 작업 공간에 연결된 타사 법정 통화 계정 * ONE_TIME_ADDRESS - Fireblocks 작업 공간의 허용 목록에 없는 자산 * &quot;*&quot; - 모든 유형"
      },
      "PolicySrcOrDestSubType": {
        "oneOf": [
          {
            "const": "EXTERNAL"
          },
          {
            "const": "INTERNAL"
          },
          {
            "const": "CONTRACT"
          },
          {
            "const": "EXCHANGETEST"
          },
          {
            "const": "*"
          }
        ],
        "description": "* EXTERNAL - 외부로 지정된 허용 목록 지갑은 일반적으로 클라이언트와 상대방이 관리하는 주소에 사용됩니다. * INTERNAL - 내부로 지정된 허용 목록 지갑은 일반적으로 Fireblocks 작업 공간 외부에서 제어하는 주소에 사용됩니다. * CONTRACT - 계약으로 지정된 허용 목록 지갑은 외부 스마트 계약을 식별하고 관리하기 위한 것입니다. * EXCHANGETEST - 테스트넷 자산에서만 작동하는 거래소 * &quot;*&quot; - 모든 하위 유형"
      },
      "PolicySrcOrDestId": {
        "type": "string",
        "description": "계정 ID를 정의합니다. 옵션은 다음과 같습니다. * &quot;*&quot; - 모든 계정 * 특정 계정 ID"
      },
      "AmountAggregationTimePeriodMethod": {
        "oneOf": [
          {
            "const": "PER_SINGLE_MATCH"
          },
          {
            "const": "ACROSS_ALL_MATCHES"
          }
        ],
        "description": "* PER_SINGLE_MATCH - 나열된 각 엔터티에 제한을 적용합니다. * ACROSS_ALL_MATCHES - 나열된 모든 엔터티의 합계에 제한을 적용합니다."
      },
      "PolicyRule": {
        "type": "object",
        "description": "거래에 적용되는 정책 규칙",
        "properties": {
          "operator": {
            "type": "string",
            "description": "(더 이상 사용되지 않음 - &quot;연산자&quot;로 대체됨) | 규칙이 적용되는 거래 유형을 시작할 수 있는 사용자를 정의합니다. 옵션은 다음과 같습니다. * &quot;*&quot; - 모든 사용자가 허용됩니다. * 특정 사용자 ID",
            "deprecated": true
          },
          "operators": {
            "type": "object",
            "description": "규칙이 적용되는 거래 유형을 시작할 수 있는 사용자/그룹을 정의합니다..",
            "properties": {
              "wildcard": {
                "const": "*",
                "description": "사용하는 경우 이 속성은 유일한 자식 속성으로 표시되어야 합니다. * &quot;*&quot; - 모든 사용자가 허용됩니다."
              },
              "users": {
                "type": "array",
                "description": "사용자 ID 세트",
                "items": {
                  "type": "string"
                }
              },
              "usersGroups": {
                "type": "array",
                "description": "그룹 ID 세트",
                "items": {
                  "type": "string"
                }
              },
              "services": {
                "type": "array",
                "description": "거래를 시작하기 위한 서비스 세트",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "transactionType": {
            "oneOf": [
              {
                "const": "TRANSFER"
              },
              {
                "const": "CONTRACT_CALL"
              },
              {
                "const": "APPROVE"
              },
              {
                "const": "MINT"
              },
              {
                "const": "BURN"
              },
              {
                "const": "SUPPLY"
              },
              {
                "const": "REDEEM"
              },
              {
                "const": "STAKE"
              },
              {
                "const": "RAW"
              },
              {
                "const": "TYPED_MESSAGE"
              }
            ],
            "description": "규칙이 적용되는 거래 유형을 정의합니다. * TRANSFER - 기본값. 한 계정에서 다른 계정으로 자금을 이체합니다. * CONTRACT_CALL - 주로 DeFi 작업을 위한 스마트 계약을 호출합니다. * APPROVE - 스마트 계약이 지정된 지갑에서 인출할 수 있도록 합니다. * MINT - 지원되는 토큰에서 민트 작업(공급 증가)을 수행합니다. * BURN - 지원되는 토큰에서 소각 작업(공급 감소)을 수행합니다. * SUPPLY - DeFi에서 자산을 대출하는 데 사용합니다. * REDEEM - DeFi에서 대출금을 돌려받는 데 사용합니다. * STAKE - 스테이킹 보상을 받기 위해 특정 자산을 할당하고 잠글 수 있도록 합니다. * RAW - 사전 정의된 형식이 없는 오프체인 메시지로, 개인 키로 모든 메시지에 서명하는 데 사용합니다. * TYPED_MESSAGE - 사전 정의된 형식을 따르는 오프체인 메시지 유형으로, 실제 거래가 아닌 특정 메시지에 서명하는 데 사용됩니다.."
          },
          "designatedSigner": {
            "type": "string",
            "description": "(더 이상 사용되지 않음 - &quot;designatedSigners&quot;로 대체됨) 특정 규칙과 일치하는 거래에 서명하는 사용자를 나타내는 ID",
            "deprecated": true
          },
          "designatedSigners": {
            "type": "object",
            "description": "특정 규칙과 일치하는 거래에 서명하는 사용자를 나타내는 ID 세트",
            "properties": {
              "users": {
                "type": "array",
                "description": "사용자 ID 세트",
                "items": {
                  "type": "string"
                }
              },
              "usersGroups": {
                "type": "array",
                "description": "그룹 ID 세트",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "type": {
            "const": "TRANSFER",
            "description": "정책 규칙 유형"
          },
          "action": {
            "oneOf": [
              {
                "const": "ALLOW"
              },
              {
                "const": "BLOCK"
              },
              {
                "const": "2-TIER"
              }
            ],
            "description": "거래가 규칙 기준을 충족할 때 발생하는 상황을 정의합니다. * 허용 - 거래가 진행되어 추가 승인 없이 서명할 수 있습니다. * 차단 - 거래가 자동으로 차단됩니다. * 2단계 - 이러한 사용자 또는 사용자 그룹만 승인할 수 있습니다. 필요한 승인 임계값에 도달하기 전에 거래를 거부하는 경우 거래가 진행되지 않습니다. 설정된 엔터티 목록은 &quot;authorizationGroups&quot; 필드입니다."
          },
          "asset": {
            "type": "string",
            "description": "거래되는 자산의 유형을 정의합니다. 옵션은 다음과 같습니다. * &quot;*&quot; - 모든 자산 * 특정 자산"
          },
          "srcType": {
            "description": "(더 이상 사용되지 않음 - &quot;src&quot;로 대체됨) 소스 계정 유형"
          },
          "srcSubType": {
            "description": "(더 이상 사용되지 않음 - &quot;src&quot;로 대체됨) 소스 하위 계정 유형"
          },
          "srcId": {
            "description": "(더 이상 사용되지 않음 - &quot;src&quot;로 대체됨) 소스 계정 ID"
          },
          "src": {
            "type": "object",
            "description": "규칙이 전송을 시작할 수 있는 소스 계정을 정의합니다.",
            "properties": {
              "ids": {
                "type": "array",
                "description": "ID의 집합",
                "items": {
                  "type": "array",
                  "description": "튜플 형식의 ID 세트",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PolicySrcOrDestId"
                      },
                      {
                        "$ref": "#/components/schemas/PolicySrcOrDestType"
                      },
                      {
                        "$ref": "#/components/schemas/PolicySrcOrDestSubType"
                      }
                    ]
                  },
                  "minItems": 1,
                  "maxItems": 3
                }
              }
            }
          },
          "dstType": {
            "description": "(더 이상 사용되지 않음 - &quot;dst&quot;로 대체됨) 대상 계정 유형"
          },
          "dstSubType": {
            "description": "(더 이상 사용되지 않음 - &quot;dst&quot;로 대체됨) 대상 하위 계정 유형"
          },
          "dstId": {
            "description": "(더 이상 사용되지 않음 - &quot;dst&quot;로 대체됨) 대상 계정 ID"
          },
          "dst": {
            "type": "object",
            "description": "규칙이 전송을 허용하는 대상 계정을 정의합니다.",
            "properties": {
              "ids": {
                "type": "array",
                "description": "ID의 집합",
                "items": {
                  "type": "array",
                  "description": "튜플 형식의 ID 세트",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PolicySrcOrDestId"
                      },
                      {
                        "$ref": "#/components/schemas/PolicySrcOrDestType"
                      },
                      {
                        "$ref": "#/components/schemas/PolicySrcOrDestSubType"
                      }
                    ]
                  },
                  "minItems": 1,
                  "maxItems": 3
                }
              }
            }
          },
          "dstAddressType": {
            "oneOf": [
              {
                "const": "WHITELISTED"
              },
              {
                "const": "ONE_TIME"
              },
              {
                "const": "*"
              }
            ],
            "description": "자금을 보내는 목적지가 허용 목록에 포함되어야 하는지, 허용 목록에 없는 외부 주소로의 일회성 이체를 허용해야 하는지, 아니면 둘 다 허용 목록에 포함되어야 하는지 정의합니다. 기본적으로 허용 목록에 추가된 이후에만 외부 주소로 이체할 수 있습니다. * 허용 목록에 추가됨 - 허용 목록에 있는 주소로만 보낼 수 있습니다. * ONE_TIME - 허용 목록에 없는 외부 주소로만 보낼 수 있습니다. * &quot;*&quot; - 허용 목록에 있는 주소 또는 허용 목록에 없는 외부 주소로 보낼 수 있습니다."
          },
          "amountCurrency": {
            "oneOf": [
              {
                "const": "USD"
              },
              {
                "const": "EUR"
              },
              {
                "const": "NATIVE"
              }
            ],
            "description": "* USD - 자산의 USD 환산액을 기준으로 사용자가 전송할 수 있는 자산의 금액을 제한합니다. * EUR - 자산의 EUR 환산액을 기준으로 사용자가 전송할 수 있는 자산의 금액을 제한합니다. * NATIVE - 특정 자산을 사용할 때 사용자가 전송할 수 있는 자산의 금액을 제한합니다.."
          },
          "amountScope": {
            "oneOf": [
              {
                "const": "SINGLE_TX"
              },
              {
                "const": "TIMEFRAME"
              }
            ],
            "description": "* SINGLE_TX - 한도는 단일 거래에 적용됩니다. * TIMEFRAME - 한도는 정의된 기간 내의 모든 거래에 적용됩니다."
          },
          "amount": {
            "type": "number",
            "description": "규칙이 적용되기 위해 거래가 초과해야 하는 값을 정의합니다(amountCurrency 필드에 따라)"
          },
          "periodSec": {
            "type": "number",
            "description": "amountScope 필드에서 규칙과 일치하는 거래에서 이체된 금액을 누적하는 데 적용되는 초 단위 기간으로, 총계가 최소값에서 지정한 값을 초과할 때까지입니다. 해당 기간 내에 지정된 금액에 도달하면(거래 하나 또는 여러 개) 해당 기간의 추가 거래는 실패하거나 추가 승인이 필요합니다.."
          },
          "authorizers": {
            "type": "array",
            "description": "(더 이상 사용되지 않음 - &quot;authorizationGroups&quot;로 대체됨) 거래를 승인할 수 있는 허용된 엔터티",
            "deprecated": true,
            "items": {
              "type": "string"
            }
          },
          "authorizersCount": {
            "type": "number",
            "description": "(더 이상 사용되지 않음 - &quot;authorizationGroups&quot;로 대체됨) 거래를 승인하는 데 필요한 최소 엔터티 수",
            "deprecated": true
          },
          "authorizationGroups": {
            "type": "object",
            "description": "거래 승인 조건을 정의합니다",
            "properties": {
              "logic": {
                "oneOf": [
                  {
                    "const": "AND"
                  },
                  {
                    "const": "OR"
                  }
                ],
                "description": "* AND - 모든 승인 그룹의 승인이 필요합니다. * OR - 최소한 하나의 승인 그룹의 승인이 필요합니다."
              },
              "allowOperatorAsAuthorizer": {
                "type": "boolean",
                "description": "거래를 시작한 사용자가 자신의 거래를 승인하고 해당 거래의 승인 임계값에 포함될 수 있는지 여부를 정의합니다."
              },
              "groups": {
                "type": "array",
                "description": "거래를 승인할 수 있는 엔터티 그룹",
                "items": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "description": "사용자 ID",
                      "items": {
                        "type": "string"
                      }
                    },
                    "usersGroups": {
                      "type": "array",
                      "description": "그룹 ID",
                      "items": {
                        "type": "string"
                      }
                    },
                    "th": {
                      "type": "number",
                      "description": "거래를 승인하는 데 필요한 최소 엔터티 수를 나타냅니다. 기본값은 1입니다.."
                    }
                  }
                }
              }
            }
          },
          "amountAggregation": {
            "type": "object",
            "description": "정책 엔진이 누적을 계산하는 방법을 정의합니다. 시작자, 소스 및 대상을 사용하여 최소값 아래의 값에 대한 누적을 계산하고 기간 아래의 시간 동안 누적을 계산합니다..",
            "properties": {
              "operators": {
                "$ref": "#/components/schemas/AmountAggregationTimePeriodMethod"
              },
              "srcTransferPeers": {
                "$ref": "#/components/schemas/AmountAggregationTimePeriodMethod"
              },
              "dstTransferPeers": {
                "$ref": "#/components/schemas/AmountAggregationTimePeriodMethod"
              }
            }
          },
          "rawMessageSigning": {
            "type": "object",
            "description": "원시 메시지 서명 구성",
            "properties": {
              "algorithm": {
                "type": "string"
              },
              "derivationPath": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "applyForApprove": {
            "type": "boolean",
            "description": "APPROVE 유형 거래에 이 규칙을 적용합니다(규칙의 거래 유형이 TRANSFER인 경우에만 활성화할 수 있음)"
          },
          "applyForTypedMessage": {
            "type": "boolean",
            "description": "TYPED_MESSAGE 유형 거래에 이 규칙을 적용합니다(규칙의 거래 유형이 CONTRACT_CALL인 경우에만 활성화할 수 있음)"
          },
          "externalDescriptor": {
            "type": "string",
            "description": "규칙을 식별하는 고유 ID"
          }
        },
        "required": [
          "type",
          "action",
          "asset",
          "amountCurrency",
          "amountScope",
          "amount",
          "periodSec",
          "externalDescriptor"
        ]
      },
      "PublishResult": {
        "type": "object",
        "description": "게시 정책 작업의 응답 객체",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/PolicyStatus"
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyRule"
            }
          },
          "checkResult": {
            "$ref": "#/components/schemas/PolicyCheckResult"
          },
          "metadata": {
            "$ref": "#/components/schemas/PolicyMetadata"
          }
        },
        "required": [
          "status",
          "rules",
          "checkResult",
          "metadata"
        ]
      },
      "PolicyStatus": {
        "oneOf": [
          {
            "const": "SUCCESS"
          },
          {
            "const": "UNVALIDATED"
          },
          {
            "const": "INVALID_CONFIGURATION"
          },
          {
            "const": "PENDING"
          },
          {
            "const": "PENDING_CONSOLE_APPROVAL"
          },
          {
            "const": "AWAITING_QUORUM"
          },
          {
            "const": "UNHANDLED_ERROR"
          }
        ],
        "description": "* SUCCESS - 성공 * UNVALIDATED - 아직 검증되지 않음 * INVALID_CONFIGURATION - 적어도 하나의 규칙이 잘못됨 * PENDING - 승인 보류 중 * PENDING_CONSOLE_APPROVAL - 콘솔 앱에서 승인 보류 중 * AWAITING_QUORUM - 쿼럼 승인 보류 중 * UNHANDLED_ERROR - 처리되지 않은 오류"
      },
      "PolicyMetadata": {
        "type": "object",
        "description": "정책 관련 메타데이터",
        "properties": {
          "editedBy": {
            "type": "string",
            "description": "정책을 마지막으로 편집한 사용자의 사용자 ID"
          },
          "editedAt": {
            "type": "string",
            "description": "정책의 마지막 편집 타임스탬프"
          },
          "publishedBy": {
            "type": "string",
            "description": "정책을 마지막으로 게시한 사용자의 사용자 ID"
          },
          "publishedAt": {
            "type": "string",
            "description": "정책의 마지막 게시 타임스탬프"
          }
        }
      },
      "PolicyCheckResult": {
        "type": "object",
        "description": "정책 규칙 검증 결과",
        "properties": {
          "errors": {
            "type": "number",
            "description": "오류의 수"
          },
          "result": {
            "type": "array",
            "description": "검증 결과 세트",
            "items": {
              "$ref": "#/components/schemas/PolicyRuleCheckResult"
            }
          }
        },
        "required": [
          "errors",
          "result"
        ]
      },
      "PolicyRuleCheckResult": {
        "type": "object",
        "description": "규칙 검증 결과",
        "properties": {
          "index": {
            "type": "number",
            "description": "정책의 규칙 인덱스 번호"
          },
          "status": {
            "oneOf": [
              {
                "const": "ok"
              },
              {
                "const": "failure"
              }
            ],
            "description": "검증 상태"
          },
          "errors": {
            "type": "array",
            "description": "규칙 검증 오류 개체 세트",
            "items": {
              "$ref": "#/components/schemas/PolicyRuleError"
            }
          }
        },
        "required": [
          "index",
          "status",
          "errors"
        ]
      },
      "PolicyRuleError": {
        "type": "object",
        "description": "규칙 검증 결과 오류",
        "properties": {
          "errorMessage": {
            "type": "string",
            "description": "오류 메시지"
          },
          "errorCode": {
            "type": "number",
            "description": "오류 코드"
          },
          "errorCodeName": {
            "type": "string",
            "description": "오류 코드 이름"
          },
          "errorField": {
            "oneOf": [
              {
                "const": "operator"
              },
              {
                "const": "operators"
              },
              {
                "const": "authorizationGroups"
              },
              {
                "const": "designatedSigner"
              },
              {
                "const": "designatedSigners"
              },
              {
                "const": "contractMethods"
              },
              {
                "const": "amountAggregation"
              },
              {
                "const": "src"
              },
              {
                "const": "dst"
              }
            ],
            "description": "오류가 관련된 필드 * operator - 거래 개시자 * operators - 거래 개시자 * authorizationGroups - 거래 승인자 그룹 * designatedSigner - 거래 서명자 * designatedSigners - 거래 서명자 * contractMethods - 계약 방법 * amountAggregation - 거래 금액 집계 구성 * src - 거래 소스 자산 구성 * dst - 거래 대상 자산 구성"
          }
        },
        "required": [
          "errorMessage",
          "errorCode",
          "errorCodeName",
          "errorField"
        ]
      },
      "DraftReviewAndValidationResponse": {
        "type": "object",
        "description": "초안 검증",
        "properties": {
          "draftResponse": {
            "$ref": "#/components/schemas/DraftResponse"
          },
          "validation": {
            "$ref": "#/components/schemas/PolicyValidation"
          }
        },
        "required": [
          "draftResponse",
          "validation"
        ]
      },
      "PolicyAndValidationResponse": {
        "type": "object",
        "description": "정책 검증",
        "properties": {
          "policy": {
            "$ref": "#/components/schemas/PolicyResponse"
          },
          "validation": {
            "$ref": "#/components/schemas/PolicyValidation"
          }
        },
        "required": [
          "policy",
          "validation"
        ]
      },
      "DraftResponse": {
        "type": "object",
        "description": "초안 작업에 대한 응답 객체",
        "properties": {
          "status": {
            "type": "string",
            "description": "작업 상태"
          },
          "rules": {
            "type": "array",
            "description": "초안 규칙",
            "items": {
              "$ref": "#/components/schemas/PolicyRule"
            }
          },
          "draftId": {
            "type": "string",
            "description": "고유 ID 초안"
          },
          "metadata": {
            "$ref": "#/components/schemas/PolicyMetadata"
          }
        },
        "required": [
          "draftId",
          "status",
          "rules",
          "metadata"
        ]
      },
      "PolicyResponse": {
        "type": "object",
        "description": "정책 작업에 대한 응답 개체",
        "properties": {
          "rules": {
            "type": "array",
            "description": "정책 규칙 세트",
            "items": {
              "$ref": "#/components/schemas/PolicyRule"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/PolicyMetadata"
          }
        },
        "required": [
          "rules",
          "metadata"
        ]
      },
      "PolicyValidation": {
        "type": "object",
        "description": "정책 검증 객체",
        "properties": {
          "status": {
            "type": "string",
            "description": "검증 상태"
          },
          "checkResult": {
            "$ref": "#/components/schemas/PolicyCheckResult"
          }
        },
        "required": [
          "status",
          "checkResult"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "type": {
                "oneOf": [
                  {
                    "const": "INTERNAL"
                  },
                  {
                    "const": "AUTHENTICATION"
                  },
                  {
                    "const": "AUTHORIZATION"
                  },
                  {
                    "const": "VALIDATION"
                  },
                  {
                    "const": "NOT_FOUND"
                  },
                  {
                    "const": "UNPROCESSABLE_ENTITY"
                  },
                  {
                    "const": "FORBIDDEN"
                  }
                ]
              },
              "message": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "message"
            ]
          }
        },
        "required": [
          "error"
        ]
      }
    },
    "securitySchemes": {
      "bearerTokenAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  },
  "x-samchon-emended": true
}