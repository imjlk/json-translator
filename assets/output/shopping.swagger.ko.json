{
  "openapi": "3.1.0",
  "servers": [
    {
      "url": "http://localhost:37001",
      "description": "로컬 서버"
    }
  ],
  "info": {
    "version": "0.5.0",
    "title": "@samchon/쇼핑백엔드",
    "description": "쇼핑을 위한 백엔드",
    "license": {
      "name": "MIT"
    }
  },
  "paths": {
    "/monitors/health": {
      "get": {
        "summary": "건강 검진 API",
        "description": "건강 검진 API.",
        "tags": [
          "Monitor"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/monitors/performance": {
      "get": {
        "summary": "성능 정보 얻기",
        "description": "성능 정보를 얻으세요. CPU, 메모리 및 리소스 사용량으로 구성된 성능 정보를 얻으세요..",
        "tags": [
          "Monitor"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "성능 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPerformance"
                }
              }
            }
          }
        }
      }
    },
    "/monitors/system": {
      "get": {
        "summary": "시스템 정보 얻기",
        "description": "시스템 정보를 가져옵니다. 커밋 및 패키지 정보와 함께 시스템 정보를 가져옵니다. 이러한 정보는 민감한 정보이므로 응답은 암호화되어야 합니다..",
        "tags": [
          "Monitor"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "시스템 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISystem"
                }
              }
            }
          }
        }
      }
    },
    "/monitors/system/internal_server_error": {
      "get": {
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/monitors/system/uncaught_exception": {
      "get": {
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/shoppings/admins/authenticate": {
      "get": {
        "summary": "관리자 정보 얻기",
        "description": "관리자 정보를 가져옵니다. 현재 {@link IShoppingCustomer 고객}의 {@link IShoppingAdministrator.IInvert 관리자} 정보를 가져옵니다. 현재 {@link IShoppingMember 멤버}가 관리자가 아니면 403 금지 예외를 throw합니다..",
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "관리자 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingAdministrator.IInvert"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "관리자로 가입하세요",
        "description": "관리자로 가입하세요. {@link IShoppingAdministrator.IJoin 가입 정보}를 사용하여 관리자로 가입하세요. 이 방법은 {@link IShoppingCustomer 고객}이 이미 {@link IShoppingMember 멤버십}에 가입한 경우에만 허용됩니다. 그렇지 않은 경우, 그(녀)는 그 전에 가입해야 합니다. 그렇지 않은 경우, 403 금지 예외가 발생합니다..",
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "가입요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingAdministrator.IJoin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "관리자 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingAdministrator.IInvert"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/authenticate/login": {
      "put": {
        "summary": "관리자로 로그인하세요",
        "description": "관리자로 로그인합니다. {@link IShoppingAdministrator.ILogin 로그인 정보}로 관리자로 로그인합니다. 이 메서드는 {@link ShoppingApi.functional.customers.authenticate.login} 함수와 정확히 동일한 효과를 갖지만 반환 유형이 약간 다릅니다. 유사한 함수는 고객 정보에서 시작하는 {@link IShoppingCustomer} 유형을 반환하므로 `customer.member.administrator`를 통해 관리자 정보에 액세스해야 합니다. 이와 대조적으로 이 메서드는 관리자 정보에서 시작하는 {@link IShoppingAdministrator.IInvert} 유형을 반환하므로 `administrator.customer`를 통해 고객 정보에 액세스할 수 있습니다. 물론 이 함수를 사용하려면 이전에 관리자로 {@link join}해야 했습니다. 그렇지 않으면 403 forbidden 예외가 발생합니다.",
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "로그인 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingMember.ILogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "관리자 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingAdministrator.IInvert"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/coupons/{id}/destroy": {
      "delete": {
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/coupons": {
      "post": {
        "summary": "새로운 쿠폰을 만드세요",
        "description": "새로운 쿠폰을 만드세요. 주어진 정보로 새로운 {@link IShoppingCoupon 쿠폰}을 만드세요. 그런데, 만약 당신이 {@link IShoppingSeller 판매자}라면, include direction의 {@link IShoppingCouponSellerCriteria} 또는 {@link IShoppingCouponSaleCriteria} 조건을 추가해야 합니다. 이는 {@link IShoppingAdministrator 관리자}만이 마켓 전체에서 사용할 수 있는 쿠폰을 만들 수 있기 때문입니다. 판매자는 자신의 {@link IShoppingSale 판매}로 사용 범위를 제한해야 합니다. 물론, 관리자가 마켓 전체에서 사용할 수 있는 일반 쿠폰을 만들 계획이라면, 관리자는 영향을 받을 판매자의 동의를 받아야 합니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [],
        "requestBody": {
          "description": "쿠폰 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingCoupon.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 쿠폰",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingCoupon"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "summary": "모든 쿠폰을 나열하세요",
        "description": "모든 쿠폰을 나열합니다. 페이지 번호가 있는 모든 {@link IShoppingCoupon 쿠폰}을 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingCoupon.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingCoupon.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 지정할 수 있습니다. 참고로, {@link IShoppingCustomer 고객}인 경우 {@link IShoppingCouponTicket ticketable} 쿠폰만 나열됩니다. 그렇지 않으면 티켓이 없는 쿠폰도 나열됩니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingCoupon.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 쿠폰",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingCoupon"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/coupons/{id}": {
      "delete": {
        "summary": "쿠폰 지우기",
        "description": "쿠폰을 지웁니다. 주어진 ID로 {@link IShoppingCoupon 쿠폰}을 지웁니다. 참고로, 대상 쿠폰에서 이미 발행된 {@link IShoppingCouponTicket 티켓}이 있다면 영향을 받지 않습니다. 해당 티켓은 만료 시간까지 유효합니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "타겟 쿠폰 {@link IShoppingCoupon.id }"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "쿠폰 정보 받기",
        "description": "쿠폰 정보를 얻으세요. {@link IShoppingCoupon 쿠폰} 정보를 얻으세요. {@link IShoppingCustomer 고객}인 경우, {@link IShoppingCouponTicket ticketable} 쿠폰만 이용할 수 있습니다. 티켓이 불가능한 쿠폰은 410 gone 오류를 일으킵니다. 그렇지 않은 경우, {@link IShoppingSeller 판매자} 또는 {@link IShoppingAdministrator 관리자}인 경우, 티켓이 불가능한 쿠폰도 이용할 수 있습니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "타겟 쿠폰 {@link IShoppingCoupon.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "쿠폰 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingCoupon"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/deposits": {
      "patch": {
        "summary": "입금 메타데이터 목록 가져오기",
        "description": "입금 메타데이터 목록을 가져옵니다. 모든 {@link IShoppingDeposit 입금} 메타데이터 정보를 {@link IPage 페이지 매김}으로 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingDeposit.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingDeposit.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingDeposit.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 입금 메타데이터 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingDeposit"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "새로운 입금 메타데이터 생성",
        "description": "새로운 입금 메타데이터를 만듭니다. 새로운 {@link IShoppingDeposit 입금} 메타데이터를 만듭니다. 이 작업은 입금의 수입/결과에 대한 새로운 출처 이유를 추가하는 것을 의미합니다. 물론, 새로운 입금 레코드를 만든다고 해서 레코드의 이유에 따라 {@link IShoppingCustomer 고객}의 잔액이 자동으로 증가하거나 감소하는 것은 아닙니다. 로직은 백엔드 측에서 수동으로 개발해야 합니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [],
        "requestBody": {
          "description": "예치 메타데이터 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingDeposit.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 입금 메타데이터",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingDeposit"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/deposits/{id}": {
      "get": {
        "summary": "입금 메타데이터 가져오기",
        "description": "입금 메타데이터를 가져옵니다. ID를 사용하여 {@link IShoppingDeposit 입금} 메타데이터 정보를 가져옵니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 입금 {@link IShoppingDeposit.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "입금 메타데이터",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingDeposit"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "입금 메타데이터 지우기",
        "description": "입금 메타데이터를 지웁니다. {@link IShoppingDeposit 입금} 메타데이터를 지웁니다. 그러면 더 이상 {@link IShoppingCustomer 고객}의 잔액이 입금 사유로 인해 증가하거나 감소하지 않습니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 입금 {@link IShoppingDeposit.id }"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/deposits/{code}/get": {
      "get": {
        "summary": "코드로 입금 메타데이터 가져오기",
        "description": "코드로 입금 메타데이터를 가져옵니다. 코드로 {@link IShoppingDeposit 입금} 메타데이터 정보를 가져옵니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "입금 메타데이터",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingDeposit"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/mileages": {
      "patch": {
        "summary": "마일리지 메타데이터 목록 가져오기",
        "description": "마일리지 메타데이터 목록을 가져옵니다. 모든 {@link IShoppingMileage 마일리지} 메타데이터 정보를 {@link IPage 페이지 매김}으로 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingMileage.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingMileage.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingMileage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 마일리지 메타데이터 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingMileage"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "새로운 마일리지 메타데이터를 생성하세요",
        "description": "새로운 마일리지 메타데이터를 만듭니다. 새로운 {@link IShoppingMileage 마일리지} 메타데이터를 만듭니다. 이 작업은 마일리지의 소득/결과에 대한 새로운 출처 이유를 추가하는 것을 의미합니다. 물론, 새로운 마일리지 레코드를 만든다고 해서 레코드의 이유에 따라 {@link IShoppingCustomer 고객}의 잔액이 자동으로 증가하거나 감소하는 것은 아닙니다. 로직은 백엔드 측에서 수동으로 개발해야 합니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [],
        "requestBody": {
          "description": "마일리지 메타데이터 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingMileage.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 마일리지 메타데이터",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingMileage"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/mileages/{id}": {
      "get": {
        "summary": "마일리지 메타데이터 가져오기",
        "description": "마일리지 메타데이터를 가져옵니다. ID를 사용하여 {@link IShoppingMileage 마일리지} 메타데이터 정보를 가져옵니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 마일리지의 {@link IShoppingMileage.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "마일리지 메타데이터",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingMileage"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "마일리지 메타데이터 지우기",
        "description": "마일리지 메타데이터를 지웁니다. {@link IShoppingMileage 마일리지} 메타데이터를 지웁니다. 그러면 더 이상 {@link IShoppingCustomer 고객}의 잔액이 마일리지 이유로 인해 증가하거나 감소하지 않습니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 마일리지의 {@link IShoppingMileage.id }"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/mileages/{code}/get": {
      "get": {
        "summary": "코드로 마일리지 메타데이터 가져오기",
        "description": "코드로 마일리지 메타데이터를 가져옵니다. 코드로 {@link IShoppingMileage 마일리지} 메타데이터 정보를 가져옵니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "마일리지 메타데이터",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingMileage"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/mileages/donations": {
      "patch": {
        "summary": "모든 마일리지 기부 내역을 나열하세요",
        "description": "모든 마일리지 기부 내역을 나열합니다. 모든 {@link IShoppingMileageDonation 마일리지 기부 내역}을 {@link IPage 페이지 번호}로 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingMileageDonation.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingMileageDonation.IRequest.sort 정렬}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingMileageDonation.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 마일리지 기부 내역 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingMileageDonation"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "시민에게 마일리지 기부하기",
        "description": "시민에게 마일리지 기부하기. 현재 {@link IShoppingAdministrator 관리자}의 특정 {@link IShoppingCitizen 시민}에게 자세한 이유와 함께 마일리지를 기부합니다. 마일리지 기부는 시민의 잔액과 현재 쇼핑몰의 운영 이익에 영향을 미치므로 관리자는 마일리지 기부에 대한 자세한 이유를 보관해야 합니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [],
        "requestBody": {
          "description": "마일리지 기부에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingMileageDonation.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "마일리지 기부 내역",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingMileageDonation"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/mileages/donations/{id}": {
      "get": {
        "summary": "마일리지 기부 내역 확인하기",
        "description": "마일리지 기부 내역을 받으세요. ID가 있는 {@link IShoppingMileageDonation 마일리지 기부 내역}을 받으세요..",
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 기록의 {@link IShoppingMileageDonation.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "마일리지 기부 내역",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingMileageDonation"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/orders": {
      "patch": {
        "summary": "모든 주문을 나열하세요",
        "description": "모든 주문을 나열합니다. 페이지 번호가 있는 모든 {@link IShoppingOrder 주문}을 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingOrder.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingOrder.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다. 참고로, {@link IShoppingCustomer 고객}인 경우 직접 주문을 나열할 수 있으며 주문이 {@link IShoppingOrderPublish.paid_at paid}되었는지 여부는 중요하지 않습니다. 그렇지 않은 경우 {@link IShoppingSeller 판매자} 또는 {@link IShoppingAdministrator 관리자}인 경우 유료 주문만 나열할 수 있습니다. 또한 판매자의 경우 관련 {@link IShoppingOrder.goods 상품}만 주문에 나열됩니다..",
        "tags": [
          "Order"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingOrder.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 주문",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingOrder"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/orders/{id}": {
      "get": {
        "summary": "주문 정보 받기",
        "description": "주문 정보를 얻으세요. 자세한 {@link IShoppingOrder 주문} 정보를 얻으세요. {@link IShoppingCustomer 고객}이 아니라면 아직 {@link IShoppingOrderPublish.paid_at paid}되지 않은 주문에 액세스할 수 없습니다. 이 경우 404 찾을 수 없음 오류가 발생합니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 주문의 {@link IShoppingOrder.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "주문 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingOrder"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/sales": {
      "patch": {
        "summary": "요약된 모든 판매 내역을 나열하세요",
        "description": "요약된 모든 판매를 나열합니다. 모든 {@link IShoppingSale.ISummary 요약된 판매}를 나열합니다. 보시다시피, 반환된 판매는 자세히 설명하지 않고 요약합니다. 판매에 대한 자세한 정보를 얻으려면 각 판매에 대해 {@link at} 함수를 사용합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매}에만 액세스할 수 있습니다. 그렇지 않은 경우 {@link IShoppingCustomer 고객}인 경우 시장에서 운영 중인 판매만 볼 수 있습니다. 미개봉, 마감 또는 중단된 판매는 볼 수 없습니다. 그런데 원하는 경우 요청 본문에서 {@link IShoppingSale.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingSale.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSale.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "요약된 정보가 있는 페이지별 판매",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSale.ISummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/sales/{id}": {
      "get": {
        "summary": "세일 정보 받기",
        "description": "판매 정보를 얻으세요. 자세한 정보가 포함된 {@link IShoppingSale 판매}를 얻으세요. {@link IShoppingSeller 판매자}인 경우, 본인 {@link IShoppingSale 판매}에만 액세스할 수 있습니다. 그렇지 않은 경우 {@link IShoppingCustomer 고객}인 경우, 마켓에서 운영 중인 판매에만 액세스할 수 있습니다. 미개봉, 마감 또는 중단된 판매에는 액세스할 수 없습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 세일 {@link IShoppingSale.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 판매 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSale"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/sales/{saleId}/questions/{inquiryId}/comments": {
      "patch": {
        "summary": "모든 문의사항을 나열하세요",
        "description": "모든 문의 댓글을 나열합니다. {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}의 모든 {@link IShoppingSaleInquiryComment 문의 댓글}을 {@link IPage 페이지 매김}과 함께 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingSaleInquiryComment.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingSaleInquiryComment.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다. 그런데, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매}의 문의에만 액세스할 수 있습니다. 그렇지 않은 경우 판매의 모든 문의에 액세스할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 문의사항은 {@link IShoppingSaleInquiry.id}에 있습니다."
          }
        ],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleInquiryComment.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 문의 댓글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleInquiryComment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "문의사항 작성하기",
        "description": "문의 댓글을 작성합니다. {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}에 대한 {@link IShoppingSaleInquiryComment 문의 댓글}을 작성합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 본인의 {@link IShoppingSale 판매} 문의에만 문의 댓글을 작성할 수 있습니다. 그렇지 않은 경우 판매의 모든 문의에 문의 댓글을 작성할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 문의 {@link IShoppingSaleInquiry.id }"
          }
        ],
        "requestBody": {
          "description": "문의사항 작성정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleInquiryComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 문의 댓글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryComment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/sales/{saleId}/questions/{inquiryId}/comments/{id}": {
      "get": {
        "summary": "문의사항 댓글 정보 받기",
        "description": "문의 댓글 정보를 얻으세요. {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}에 대한 자세한 {@link IShoppingSaleInquiryComment 문의 댓글} 정보를 얻으세요. 참고로, {@link IShoppingSeller 판매자}인 경우 본인의 {@link IShoppingSale 판매}의 문의 댓글에만 접근할 수 있습니다. 그렇지 않은 경우 판매의 모든 문의 댓글에 접근할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 문의사항은 {@link IShoppingSaleInquiry.id}에 있습니다."
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 문의 댓글 {@link IShoppingSaleInquiryComment.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 문의사항 댓글정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryComment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "문의사항 댓글 업데이트",
        "description": "문의 댓글을 업데이트합니다. {@link IShoppingSaleInquiryComment 문의 댓글}을 특정 {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}로 업데이트합니다. 그런데, 이 쇼핑몰의 댓글에 대한 일반 정책과 마찬가지로 댓글을 수정해도 기존 내용은 실제로 변경되지 않습니다. 수정된 내용은 누적되어 기존 댓글 기록에 새로운 {@link IShoppingSaleInquiryComment.ISnapshot 스냅샷}으로 기록됩니다. 그리고 이것은 이 문의 댓글을 읽을 수 있는 모든 사람에게 공개됩니다. 이는 고객이나 판매자가 댓글을 수정하고 분쟁이 쉽게 발생하는 전자상거래의 특성으로 인해 상황을 조작하는 것을 방지하기 위한 것입니다. 즉, 증거를 보존하기 위한 것입니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 문의사항은 {@link IShoppingSaleInquiry.id}에 있습니다."
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 문의 댓글 {@link IShoppingSaleInquiryComment.id }"
          }
        ],
        "requestBody": {
          "description": "문의사항 댓글 정보 업데이트",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleInquiryComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "문의사항에 대한 신규 생성 스냅샷 기록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryComment.ISnapshot"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/sales/{saleId}/questions": {
      "patch": {
        "summary": "요약된 모든 질문을 나열하세요",
        "description": "모든 요약된 질문을 나열합니다. {@link IShoppingSale 판매}의 모든 {@link IShoppingSaleQuestion.ISummary 요약된 질문}을 나열합니다. 보시다시피, 반환된 질문은 자세히 설명하지 않고 요약합니다. 질문의 자세한 정보를 얻으려면 각 기사에 대해 {@link adridges} 함수나 {@link at} 함수를 사용합니다. 또한 반환된 질문에는 {@link IShoppingSaleQuestion.ISummary.answer} 속성이 있는데, 이는 {@link IShoppingSeller}의 공식적인 답변을 의미합니다. 또한 반환된 질문에는 다른 원칙 속성에 마스킹된 또 다른 특수 속성 {@link IShoppingSaleQuestion.ISummary.secret}이 있는데, 이는 관련된 행위자만 질문을 {@link at 읽을} 수 있음을 의미합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매} 질문에만 액세스할 수 있습니다. 그렇지 않은 경우 판매의 모든 질문에 액세스할 수 있습니다. 그런데, 원하시면 요청 본문에 {@link IShoppingSaleQuestion.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한, {@link IShoppingSaleQuestion.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleQuestion.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "요약된 정보가 있는 페이지별 질문",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleQuestion.ISummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/sales/{saleId}/questions/abridges": {
      "patch": {
        "summary": "모든 요약된 질문을 나열하세요",
        "description": "모든 축약된 질문을 나열합니다. {@link IShoppingSale 판매}의 모든 {@link IShoppingSaleQuestion.IAbridge 축약된 질문}을 나열합니다. 보시다시피, 반환된 질문은 자세한 정보가 아닌 축약된 것입니다. 질문의 자세한 정보를 얻으려면 각 기사에 {@link at} 함수를 사용합니다. 또한 반환된 질문에는 {@link IShoppingSaleQuestion.IAridge.answer} 속성이 있는데, 이는 {@link IShoppingSeller}의 공식적인 답변을 의미합니다. 또한 반환된 질문에는 다른 원칙 속성에 대한 마스크 처리가 있는 또 다른 특수 속성 {@link IShoppingSaleQuestion.IAridge.secret}이 있는데, 이는 관련된 행위자만 질문을 {@link at 읽을 수 있음을 의미합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매} 질문에만 액세스할 수 있습니다. 그렇지 않은 경우 판매의 모든 질문에 액세스할 수 있습니다. 그런데, 원하시면 요청 본문에 {@link IShoppingSaleQuestion.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한, {@link IShoppingSaleQuestion.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleQuestion.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "요약된 정보가 있는 페이지별 질문",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleQuestion.IAbridge"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/sales/{saleId}/questions/{id}": {
      "get": {
        "summary": "질문 정보 받기",
        "description": "질문 정보를 얻으세요. {@link IShoppingSale 판매}에 대한 자세한 {@link IShoppingSaleQuestion 질문} 정보를 얻으세요. 참고로, {@link IShoppingSeller 판매자}인 경우 본인의 {@link IShoppingSale 판매} 질문에만 액세스할 수 있습니다. 그렇지 않은 경우 {@link IShoppingCustomer 고객}인 경우 판매의 모든 질문에 액세스할 수 있지만 {@link IShoppingSaleQuestion.secret} 값은 `false`입니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 질문의 {@link IShoppingSaleQuestion.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 질문 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleQuestion"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/sales/{saleId}/reviews/{inquiryId}/comments": {
      "patch": {
        "summary": "모든 문의사항을 나열하세요",
        "description": "모든 문의 댓글을 나열합니다. {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}의 모든 {@link IShoppingSaleInquiryComment 문의 댓글}을 {@link IPage 페이지 매김}과 함께 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingSaleInquiryComment.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingSaleInquiryComment.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다. 그런데, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매}의 문의에만 액세스할 수 있습니다. 그렇지 않은 경우 판매의 모든 문의에 액세스할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 문의사항은 {@link IShoppingSaleInquiry.id}에 있습니다."
          }
        ],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleInquiryComment.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 문의 댓글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleInquiryComment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "문의사항 작성하기",
        "description": "문의 댓글을 작성합니다. {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}에 대한 {@link IShoppingSaleInquiryComment 문의 댓글}을 작성합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 본인의 {@link IShoppingSale 판매} 문의에만 문의 댓글을 작성할 수 있습니다. 그렇지 않은 경우 판매의 모든 문의에 문의 댓글을 작성할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 문의 {@link IShoppingSaleInquiry.id }"
          }
        ],
        "requestBody": {
          "description": "문의사항 작성정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleInquiryComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 문의 댓글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryComment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/sales/{saleId}/reviews/{inquiryId}/comments/{id}": {
      "get": {
        "summary": "문의사항 댓글 정보 받기",
        "description": "문의 댓글 정보를 얻으세요. {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}에 대한 자세한 {@link IShoppingSaleInquiryComment 문의 댓글} 정보를 얻으세요. 참고로, {@link IShoppingSeller 판매자}인 경우 본인의 {@link IShoppingSale 판매}의 문의 댓글에만 접근할 수 있습니다. 그렇지 않은 경우 판매의 모든 문의 댓글에 접근할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 문의사항은 {@link IShoppingSaleInquiry.id}에 있습니다."
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 문의 댓글 {@link IShoppingSaleInquiryComment.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 문의사항 댓글정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryComment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "문의사항 댓글 업데이트",
        "description": "문의 댓글을 업데이트합니다. {@link IShoppingSaleInquiryComment 문의 댓글}을 특정 {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}로 업데이트합니다. 그런데, 이 쇼핑몰의 댓글에 대한 일반 정책과 마찬가지로 댓글을 수정해도 기존 내용은 실제로 변경되지 않습니다. 수정된 내용은 누적되어 기존 댓글 기록에 새로운 {@link IShoppingSaleInquiryComment.ISnapshot 스냅샷}으로 기록됩니다. 그리고 이것은 이 문의 댓글을 읽을 수 있는 모든 사람에게 공개됩니다. 이는 고객이나 판매자가 댓글을 수정하고 분쟁이 쉽게 발생하는 전자상거래의 특성으로 인해 상황을 조작하는 것을 방지하기 위한 것입니다. 즉, 증거를 보존하기 위한 것입니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 문의사항은 {@link IShoppingSaleInquiry.id}에 있습니다."
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 문의 댓글 {@link IShoppingSaleInquiryComment.id }"
          }
        ],
        "requestBody": {
          "description": "문의사항 댓글 정보 업데이트",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleInquiryComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "문의사항에 대한 신규 생성 스냅샷 기록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryComment.ISnapshot"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/sales/{saleId}/reviews": {
      "patch": {
        "summary": "요약된 모든 리뷰를 나열하세요",
        "description": "요약된 모든 리뷰를 나열합니다. {@link IShoppingSale 판매}의 모든 {@link IShoppingSaleReview.ISummary 요약된 리뷰}를 나열합니다. 보시다시피, 반환된 리뷰는 자세히 설명하지 않고 요약합니다. 리뷰의 자세한 정보를 얻으려면 각 기사에 대해 {@link adridges} 함수나 {@link at} 함수를 사용합니다. 또한, 반환된 리뷰에는 {@link IShoppingSaleReview.ISummary.answer} 속성이 있는데, 이는 {@link IShoppingSeller}의 공식적인 답변을 의미합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매} 리뷰에만 액세스할 수 있습니다. 그렇지 않은 경우 판매의 모든 리뷰에 액세스할 수 있습니다. 그런데, 원하는 경우 요청 본문에서 {@link IShoppingSaleReview.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한, {@link IShoppingSaleReview.IRequest.sort sort condition}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleReview.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "요약된 정보가 있는 페이지별 리뷰",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleReview.ISummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/sales/{saleId}/reviews/abridges": {
      "patch": {
        "summary": "모든 요약된 리뷰를 나열하세요",
        "description": "모든 요약된 리뷰를 나열합니다. {@link IShoppingSale 판매}의 모든 {@link IShoppingSaleReview.IAbridge 요약된 리뷰}를 나열합니다. 보시다시피, 반환된 리뷰는 자세한 정보가 아닌 요약된 것입니다. 리뷰의 자세한 정보를 얻으려면 각 기사에 {@link at} 함수를 사용합니다. 또한, 반환된 리뷰에는 {@link IShoppingSaleReview.IAridge.answer} 속성이 있는데, 이는 {@link IShoppingSeller}의 공식적인 답변을 의미합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매} 리뷰에만 액세스할 수 있습니다. 그렇지 않은 경우 판매의 모든 리뷰에 액세스할 수 있습니다. 그런데, 원하는 경우 요청 본문에서 {@link IShoppingSaleReview.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingSaleReview.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 지정할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleReview.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "요약된 정보가 포함된 페이지별 리뷰",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleReview.IAbridge"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/sales/{saleId}/reviews/{id}": {
      "get": {
        "summary": "리뷰 정보 받기",
        "description": "리뷰 정보를 얻으세요. {@link IShoppingSale 세일}에 대한 자세한 {@link IShoppingSaleReview 리뷰} 정보를 얻으세요. 참고로, {@link IShoppingSeller 판매자}인 경우 본인의 {@link IShoppingSale 세일} 리뷰에만 접근할 수 있습니다. 그렇지 않은 경우 {@link IShoppingCustomer 고객}인 경우 세일의 모든 리뷰에 접근할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 리뷰의 {@link IShoppingSaleReview.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 리뷰 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleReview"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/sales/{saleId}/snapshots": {
      "patch": {
        "summary": "모든 스냅샷을 나열하세요",
        "description": "모든 스냅샷을 나열합니다. {@link IShoppingSeller seller}가 {@link IShoppingSale sale}을 업데이트할 때마다 판매 기록은 업데이트되지 않지만 판매 내역의 무결성을 유지하기 위해 새로운 {@link IShoppingSaleSnapshot snapshot} 레코드가 생성됩니다. 이 API 함수는 이러한 스냅샷 레코드를 나열하기 위한 것입니다. 또한 반환 유형에서 볼 수 있듯이 반환된 스냅샷은 자세히 설명되지 않고 요약되어 있습니다. 스냅샷의 자세한 정보를 얻으려면 각 스냅샷에 대해 {@link at} 또는 {@link flipo} 함수를 사용합니다. 참고로, {@link IShoppingSeller seller}인 경우 자신의 {@link IShoppingSale sale}의 스냅샷에만 액세스할 수 있습니다. 그렇지 않으면 판매가 종료되거나 중단되었더라도 판매의 모든 스냅샷에 액세스할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 세일 {@link IShoppingSale.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 번호 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "요약된 정보가 있는 페이지별 스냅샷",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleSnapshot.ISummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/sales/{saleId}/snapshots/{id}": {
      "get": {
        "summary": "스냅샷 정보 얻기",
        "description": "스냅샷 정보를 가져옵니다. 자세한 정보가 포함된 {@link IShoppingSaleSnapshot 스냅샷}을 가져옵니다. 반환 유형에서 볼 수 있듯이 반환된 스냅샷에는 {@link IShoppingSale 판매} 정보가 포함되지 않습니다. 판매 정보를 가져오려면 대신 {@link flip} 함수를 사용하세요. 참고로, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매} 스냅샷에만 액세스할 수 있습니다. 그렇지 않으면 판매가 종료되거나 중단되었더라도 모든 판매 스냅샷에 액세스할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "대상 스냅샷의 {@link IShoppingSaleSnapshot.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "스냅샷의 자세한 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleSnapshot"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/sales/{saleId}/snapshots/{id}/flip": {
      "get": {
        "summary": "뒤집힌 스냅샷 정보 가져오기",
        "description": "뒤집힌 스냅샷 정보를 가져옵니다. 뒤집힌 스냅샷의 {@link IShoppingSale 판매} 정보를 가져옵니다. 반환 유형에서 볼 수 있듯이 이 함수는 {@link IShoppingSale 판매} 정보를 반환합니다. 그런데 판매 정보는 최신 정보가 아니라 스냅샷 측의 뒤집힌 정보입니다. 또한 {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매}의 스냅샷에만 액세스할 수 있습니다. 그렇지 않으면 판매가 종료되거나 중단되었더라도 판매의 모든 스냅샷에 액세스할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "대상 스냅샷의 {@link IShoppingSaleSnapshot.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "스냅샷 측면에서 자세한 판매 정보를 확인하세요",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSale"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/systematic/channels/{channelCode}/categories": {
      "post": {
        "summary": "새로운 카테고리를 만드세요",
        "description": "새 카테고리를 만듭니다. 주어진 이름으로 {@link IShoppingChannel 채널}의 새 {@link IShoppingChannelCategory 카테고리}를 만듭니다. 필요한 경우 ID로 부모 카테고리를 지정할 수 있습니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "소속 채널 {@link IShoppingChannel.code }"
          }
        ],
        "requestBody": {
          "description": "카테고리 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingChannelCategory.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 카테고리",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingChannelCategory"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "summary": "모든 카테고리를 자식 레코드와 함께 나열합니다.",
        "description": "모든 카테고리를 자식 레코드와 함께 나열합니다. 페이지 번호가 있는 {@link IShoppingChannelCategory.IHierarchical 카테고리}를 {@link IShoppingChannel 채널}의 모든 카테고리를 나열합니다. 반환된 카테고리에는 자식 카테고리도 포함됩니다. 원하는 경우 요청 본문에서 {@link IShoppingChannelCategory.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingChannelCategory.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "소속 채널 {@link IShoppingChannel.code }"
          }
        ],
        "responses": {
          "200": {
            "description": "자식 카테고리가 있는 페이지별 카테고리",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IShoppingChannelCategory.IHierarchical"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/systematic/channels/{channelCode}/categories/{id}": {
      "put": {
        "summary": "카테고리 업데이트",
        "description": "카테고리 업데이트. {@link IShoppingChannelCategory 카테고리}의 이름을 업데이트합니다. 필요한 경우 ID로 부모 카테고리를 변경할 수 있습니다. 물론 부모 카테고리에서 분리하여 루트 카테고리가 되는 것도 가능합니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "소속 채널 {@link IShoppingChannel.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "대상 카테고리의 {@link IShoppingChannelCategory.id }"
          }
        ],
        "requestBody": {
          "description": "카테고리 정보 업데이트",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingChannelCategory.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "카테고리 정보 받기",
        "description": "카테고리 정보를 가져옵니다. 자세한 {@link IShoppingChannelCategory 카테고리} 정보를 가져옵니다. 반환된 카테고리에는 계층적 자식 카테고리가 포함되어 있으며 재귀적 부모 카테고리도 포함되어 있습니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "소속 채널 {@link IShoppingChannel.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "대상 카테고리의 {@link IShoppingChannelCategory.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 카테고리 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingChannelCategory"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/systematic/channels/{channelCode}/categories/merge": {
      "delete": {
        "summary": "여러 카테고리를 하나로 병합",
        "description": "여러 카테고리를 하나로 병합합니다. 이 쇼핑몰 시스템에서는 {@link IShoppingChannelCategory 카테고리}를 삭제할 수 없습니다. 이는 {@link IShoppingSale sales}와 같은 다른 모든 핵심 엔터티에 영향을 미치는 체계적인 엔터티이기 때문입니다. 삭제하는 대신 여러 카테고리를 하나로 병합할 수 있습니다. 다른 카테고리를 흡수할 카테고리를 지정하면 다른 모든 카테고리가 지정된 카테고리로 병합됩니다. 또한 카테고리의 하위 엔터티도 병합되고 해당 참조도 계단식으로 병합됩니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "소속 채널 {@link IShoppingChannel.code }"
          }
        ],
        "requestBody": {
          "description": "카테고리 정보 병합",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IRecordMerge"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/systematic/channels/{channelCode}/categories/{id}/invert": {
      "get": {
        "summary": "역전된 카테고리 정보를 얻으세요",
        "description": "역전된 카테고리 정보를 가져옵니다. 역전된 {@link IShoppingChannelCategory.IInvert 카테고리} 정보를 가져옵니다. 반환된 카테고리에는 재귀적 부모 카테고리가 포함되지만 계층적 자식 카테고리는 포함되지 않습니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "소속 채널 {@link IShoppingChannel.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "대상 카테고리의 {@link IShoppingChannelCategory.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 카테고리 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingChannelCategory.IInvert"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/systematic/channels": {
      "post": {
        "summary": "새로운 채널을 만드세요",
        "description": "새 채널을 만듭니다. 주어진 코드와 이름으로 새 {@link IShoppingChannel 채널}을 만듭니다. 채널은 개별 시장을 의미하므로 {@link IShoppingAdministrator 관리자}는 새 애플리케이션이 등록될 때만 이 작업을 수행해야 합니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "채널 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingChannel.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 채널",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingChannel"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "summary": "모든 채널을 나열하세요",
        "description": "모든 채널을 나열합니다. 모든 {@link IShoppingChannel 채널}을 페이지 번호로 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingChannel.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingChannel.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingChannel.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 채널",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingChannel"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/systematic/channels/{id}": {
      "put": {
        "summary": "채널 업데이트",
        "description": "채널을 업데이트합니다. {@link IShoppingChannel 채널}의 이름을 업데이트합니다. 채널의 코드를 변경할 수 없다는 점에 유의하세요. 강제로 변경하려면 새 채널을 {@link create}하고 {@link merge}합니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 채널의 {@link IShoppingChannel.code }"
          }
        ],
        "requestBody": {
          "description": "채널 정보 업데이트",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingChannel.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "채널 정보 얻기",
        "description": "채널 정보를 가져옵니다. 자세한 {@link IShoppingChannel.IHierarchical 채널} 정보를 가져옵니다. 반환된 채널 인스턴스에는 중첩된 {@link IShoppingChannelCategory.IHierarchical 계층적 범주} 정보도 포함됩니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 채널의 {@link IShoppingChannel.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 채널 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingChannel.IHierarchical"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/systematic/channels/merge": {
      "delete": {
        "summary": "여러 채널을 하나로 병합",
        "description": "여러 채널을 하나로 병합합니다. 이 쇼핑몰 시스템에서는 고객, 회원, 판매와 같은 다른 모든 핵심 엔터티에 영향을 미치는 체계적인 엔터티이기 때문에 {@link IShoppingChannel 채널}을 삭제할 수 없습니다. 삭제하는 대신 여러 채널을 하나로 병합할 수 있습니다. 다른 채널을 흡수할 채널을 지정하면 다른 모든 채널이 지정된 채널로 병합됩니다. 또한 채널의 하위 엔터티도 병합되고 해당 참조도 계단식으로 병합됩니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "병합에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IRecordMerge"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/systematic/channels/hierarchical": {
      "patch": {
        "summary": "중첩된 카테고리로 모든 채널을 나열합니다.",
        "description": "중첩된 카테고리가 있는 모든 채널을 나열합니다. {@link IPage 페이지 매김}이 있는 모든 {@link IShoppingChannel.IHierarchical 채널}을 나열합니다. 반환된 채널에는 중첩된 계층적 {@link IShoppingChannelCategory.IHierarchical 카테고리}가 포함됩니다. 원하는 경우 요청 본문에서 {@link IShoppingChannel.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingChannel.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingChannel.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "중첩된 카테고리가 있는 페이지별 채널",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingChannel.IHierarchical"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/systematic/channels/{code}/get": {
      "get": {
        "summary": "코드로 채널 정보를 얻으세요",
        "description": "코드로 채널 정보를 가져옵니다. 코드로 자세한 {@link IShoppingChannel.IHierarchical 채널} 정보를 가져옵니다. 반환된 채널 인스턴스에는 중첩된 {@link IShoppingChannelCategory.IHierarchical 계층적 범주} 정보도 포함됩니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "타겟 채널의 {@link IShoppingChannel.code }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 채널 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingChannel.IHierarchical"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/systematic/sections": {
      "post": {
        "summary": "새로운 섹션을 만드세요",
        "description": "새 섹션을 만듭니다. 주어진 코드와 이름으로 새 {@link IShoppingSection 섹션}을 만듭니다. 섹션은 다른 섹션과 다른 유형의 제품을 처리하는 시장의 공간적 단위를 의미하므로 {@link IShoppingAdministrator 관리자}는 새 섹션이 필요할 때만 이 작업을 수행해야 합니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "섹션 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSection.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 섹션",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSection"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "summary": "모든 섹션을 나열하세요",
        "description": "모든 섹션을 나열합니다. 페이지 번호가 있는 모든 {@link IShoppingSection 섹션}을 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingSection.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingSection.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Section"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSection.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지 분할 섹션",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSection"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/systematic/sections/{id}": {
      "put": {
        "summary": "섹션 업데이트",
        "description": "섹션을 업데이트합니다. {@link IShoppingSection 섹션}의 이름을 업데이트합니다. 섹션의 코드를 변경할 수 없다는 점에 유의하세요. 강제로 변경하려면 {@link create}하여 새 섹션을 만들고 {@link merge}합니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 섹션의 {@link IShoppingSection.code }"
          }
        ],
        "requestBody": {
          "description": "섹션 정보 업데이트",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSection.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "섹션 정보 얻기",
        "description": "섹션 정보를 얻으세요. 자세한 {@link IShoppingSection 섹션} 정보를 얻으세요.",
        "tags": [
          "Section"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 섹션의 {@link IShoppingSection.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 섹션 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSection"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/systematic/sections/merge": {
      "delete": {
        "summary": "여러 섹션을 하나로 병합",
        "description": "여러 섹션을 하나로 병합합니다. 이 쇼핑몰 시스템에서는 {@link IShoppingSection 섹션}을 삭제할 수 없습니다. 이는 {@link IShoppingSale sales}와 같은 다른 모든 핵심 엔터티에 영향을 미치는 체계적인 엔터티이기 때문입니다. 삭제하는 대신 여러 섹션을 하나로 병합할 수 있습니다. 다른 섹션을 흡수할 섹션을 지정하면 다른 모든 섹션이 지정된 섹션으로 병합됩니다. 또한 섹션의 하위 엔터티도 병합되고 해당 참조도 연쇄적으로 병합됩니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "입력 병합 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IRecordMerge"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/admins/systematic/sections/{code}/get": {
      "get": {
        "summary": "코드로 섹션 정보를 얻으세요",
        "description": "코드로 섹션 정보를 얻으세요. 코드로 자세한 {@link IShoppingSection 섹션} 정보를 얻으세요.",
        "tags": [
          "Section"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "타겟 섹션의 {@link IShoppingSection.code }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 섹션 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSection"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/authenticate/refresh": {
      "patch": {
        "summary": "인증 토큰을 새로 고침합니다.",
        "description": "인증 토큰을 새로 고칩니다. 사전 발급된 {@link IShoppingCustomer.IToken.refresh 새로 고침} 토큰을 사용하여 {@link IShoppingCustomer 고객}의 새 {@link IShoppingCustomer.IToken.access 액세스 토큰}을 만듭니다. 이 기능은 {@link IShoppingCustomer.IToken.refreshable_until} 값까지 사용할 수 있습니다..",
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "토큰 새로 고침.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingCustomer.IRefresh"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "새로운 토큰을 사용한 고객 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingCustomer.IAuthorized"
                }
              }
            }
          }
        }
      }
    },
    "/shoppings/customers/authenticate": {
      "get": {
        "summary": "현재 고객 정보를 얻으세요",
        "description": "현재 고객 정보를 가져옵니다. {@link IShoppingCustomer.IToken.access 액세스 토큰}에서 현재 {@link IShoppingCustomer 고객} 정보를 가져옵니다..",
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "현재 고객 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingCustomer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "새로운 고객 레코드를 만듭니다",
        "description": "새로운 고객 레코드를 만듭니다. 이 쇼핑몰 시스템은 이 시장에 참여하는 모든 사람을 &quot;고객&quot;으로 정의합니다. 그리고 고객 레코드는 개별 {@link IShoppingCitizen people}에 따라 보관되지 않고 연결 단위에 따라 보관됩니다. 따라서 같은 사람이더라도 연결이 이루어질 때마다 새로운 {@link IShoppingCustomer} 레코드가 만들어집니다. 따라서 이 서비스에 액세스하는 모든 클라이언트 애플리케이션은 먼저 이 함수를 호출하고, 고객의 유입 경로를 서버에 보고하고, {@link IShoppingCustomer.IToken.access 액세스 토큰}을 만들어야 합니다. 이 함수 호출을 건너뛰면 다른 모든 API 함수가 금지됩니다. {@link IShoppingMember 회원 계정}으로 시민권을 {@link 활성화}하거나 {@link 로그인}하려는 경우에도 예외는 없습니다. 자신을 인증하거나 로그인하기 전에 먼저 이 함수를 호출해야 합니다. 이는 {@link IShoppingAdministrator 관리자} 또는 {@link IShoppingSeller 판매자}가 로그인할 때도 적용됩니다. 또한 인증 토큰에는 {@link IShoppingCustomer.IToken.expired_at 만료 시간}이 있으며 영구적으로 사용할 수 없습니다. 참고로 인증 토큰은 3시간 동안 유효하며 3시간 후에도 고객 인증을 유지하려면 {@link Refresh} 함수를 호출해야 합니다..",
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "고객의 생성정보.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingCustomer.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "토큰을 사용하여 고객 정보를 생성했습니다..",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingCustomer.IAuthorized"
                }
              }
            }
          }
        }
      }
    },
    "/shoppings/customers/authenticate/join": {
      "post": {
        "summary": "회원가입하기",
        "description": "회원가입. {@link IShoppingCustomer Customer}는 현재 쇼핑몰 시스템의 {@link IShoppingMember 멤버십}에 가입합니다. {@link IShoppingCitizen 시민권} {@link activate activation}도 수행했다면, 지금부터 로그인할 때마다 {@link activate} 함수 호출을 건너뛸 수 있습니다. 또한, 해당 사람이 {@link activate} 및 {@link external} 함수 호출로 {@link IShoppingOrder 구매}를 했다면, 주문 내역에도 접근할 수 있습니다. 즉, 멤버십 등록 전 활동 내역도 연속적으로 접근할 수 있습니다. 참고로, {@link create} 함수에서 설명한 대로, 이 `join` 함수를 호출하기 전에 먼저 {@link create} 함수를 호출하여 고객 레코드와 토큰을 생성해야 합니다..",
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "회원정보 가입하기",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingMember.IJoin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "고객정보 가입",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingCustomer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/authenticate/login": {
      "put": {
        "summary": "회원가입 로그인",
        "description": "회원 로그인. {@link IShoppingCustomer 고객}은 이메일과 비밀번호로 자신의 {@link IShoppingMember 회원} 계정으로 로그인합니다. {@link IShoppingMember 회원}이 이전에 {@link activate 시민권 활성화}를 수행한 경우 {@link IShoppingCustomer.citizen} 값이 그에 따라 채워집니다. 그리고 회원이 {@link IShoppingAdministrator 관리자} 또는 {@link IShoppingSeller 판매자}로 가입한 경우 관련 정보도 그에 따라 입력됩니다. 참고로, {@link create} 함수에서 설명한 대로 이 `login` 함수를 호출하기 전에 먼저 {@link create} 함수를 호출하여 고객 레코드와 토큰을 만들어야 합니다..",
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "로그인 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingMember.ILogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "로그인 고객 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingCustomer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/authenticate/activate": {
      "post": {
        "summary": "시민권 활성화",
        "description": "시민권 활성화. {@link IShoppingCustomer 고객}은 휴대전화 번호와 실명으로 {@link IShoppingCitizen 시민권}을 활성화합니다. 고객이 이미 {@link IShoppingMember 멤버십}에 {@link join 가입}한 경우, 지금부터 로그인할 때마다 시민권 {@link 활성화} 함수 호출을 건너뛸 수 있습니다. 물론, 이러한 스토리는 {@link external} 함수에도 동일합니다. 참고로, {@link create} 함수에서 설명한 대로 이 `activate` 함수를 호출하기 전에 먼저 {@link create} 함수를 호출하여 고객 레코드와 토큰을 만들어야 합니다..",
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "시민권 활성화 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingCitizen.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "활성화된 고객 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingCustomer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/authenticate/external": {
      "post": {
        "summary": "외부 사용자 정보 등록",
        "description": "외부 사용자 정보 등록. {@link IShoppingCustomer Customer}는 다른 서비스에서 자신의 {@link IShoppingExternalUser 외부 사용자} 정보를 등록합니다. 이는 {@link join membership joining} 함수와 비슷한 효과가 있으므로 {@link IShoppingCitizen citizenship} {@link activate activation}도 수행했다면 이제부터 같은 정보로 이 `외부` 함수를 호출할 때마다 {@link activate} 함수 호출을 건너뛸 수 있습니다. 또한 해당 사람이 {@link activate} 및 {@link join} 함수 호출로 {@link IShoppingOrder를 구매}한 경우 주문 내역에도 액세스할 수 있습니다. 즉, 외부 서버 등록 이전의 활동 세부 정보도 연속적으로 액세스할 수 있습니다. 참고로 {@link create} 함수에서 설명한 대로 이 `외부` 함수를 호출하기 전에 먼저 {@link create} 함수를 호출하여 고객 레코드와 토큰을 만들어야 합니다..",
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "외부 사용자의 정보 등록",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingExternalUser.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "외부 사용자 등록 고객 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingCustomer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/authenticate/password/change": {
      "put": {
        "summary": "비밀번호 변경",
        "description": "비밀번호 변경. {@link IShoppingMember 회원}의 비밀번호를 현재 비밀번호로 변경하세요. 현재 비밀번호가 필요한 이유는 보안 때문입니다..",
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "새 비밀번호와 현재 비밀번호",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingMember.IPasswordChange"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/coupons": {
      "patch": {
        "summary": "모든 쿠폰을 나열하세요",
        "description": "모든 쿠폰을 나열합니다. 페이지 번호가 있는 모든 {@link IShoppingCoupon 쿠폰}을 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingCoupon.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingCoupon.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 지정할 수 있습니다. 참고로, {@link IShoppingCustomer 고객}인 경우 {@link IShoppingCouponTicket ticketable} 쿠폰만 나열됩니다. 그렇지 않으면 티켓이 없는 쿠폰도 나열됩니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingCoupon.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 쿠폰",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingCoupon"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/coupons/{id}": {
      "get": {
        "summary": "쿠폰 정보 받기",
        "description": "쿠폰 정보를 얻으세요. {@link IShoppingCoupon 쿠폰} 정보를 얻으세요. {@link IShoppingCustomer 고객}인 경우, {@link IShoppingCouponTicket ticketable} 쿠폰만 이용할 수 있습니다. 티켓이 불가능한 쿠폰은 410 gone 오류를 일으킵니다. 그렇지 않은 경우, {@link IShoppingSeller 판매자} 또는 {@link IShoppingAdministrator 관리자}인 경우, 티켓이 불가능한 쿠폰도 이용할 수 있습니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "타겟 쿠폰 {@link IShoppingCoupon.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "쿠폰 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingCoupon"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/coupons/tickets": {
      "patch": {
        "summary": "모든 쿠폰 티켓을 나열하세요",
        "description": "모든 쿠폰 티켓을 나열합니다. {@link IPage 페이지 매김}을 사용하여 {@link IShoppingCustomer 고객}의 모든 {@link IShoppingCouponTicket 쿠폰 티켓}을 나열합니다. 참고로 쿠폰 티켓은 고객이 {@link IShoppingCoupon 쿠폰}을 사용했음을 의미합니다. 대상 쿠폰에 만료일 또는 날짜가 있는 경우 쿠폰 티켓에도 {@link IShoppingCouponTicket.expired_at 만료 시간}이 있으며 이러한 만료된 티켓은 나열되지 않습니다. 마찬가지로 {@link IShoppingOrder 주문}에 대해 {@link IShoppingCouponTicketPayment 지불}하는 데 사용된 티켓도 나열되지 않습니다. 또한 요청 본문에서 {@link IShoppingCouponTicket.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingCouponTicket.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 지정할 수 있습니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingCouponTicket.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 쿠폰 티켓",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingCouponTicket"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "새로운 쿠폰 티켓을 만드세요",
        "description": "새로운 쿠폰 티켓을 만듭니다. 특정 {@link IShoppingCoupon 쿠폰}의 새로운 {@link IShoppingCouponTicket 쿠폰 티켓}을 {@link IShoppingCustomer 고객}을 위해 만듭니다. 그런데, 타겟 쿠폰이 {@link IShoppingCoupon.expired_at 만료됨} 또는 {@link IShoppingCoupon.IInventory.volume 재고 없음} 또는 {@link IShoppingCoupon.IInventory.volume_per_citizen이 해당 쿠폰에 대해 소진됨}인 경우 410 gone 예외가 발생합니다. 또한 타겟 쿠폰에서 새로운 쿠폰 티켓을 만드는 데 성공하더라도 쿠폰에 만료일 또는 날짜가 있는 경우 새로 만든 티켓에도 {@link IShoppingCouponTicket.expired_at 만료 시간}이 있으며 만료 시간 이후에는 비활성화됩니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [],
        "requestBody": {
          "description": "쿠폰 티켓 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingCouponTicket.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 쿠폰 티켓",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingCouponTicket"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/coupons/tickets/{id}": {
      "get": {
        "summary": "쿠폰 티켓을 받으세요",
        "description": "쿠폰 티켓을 받으세요. ID로 {@link IShoppingCouponTicket 쿠폰 티켓} 정보를 받으세요. 그런데, 타겟 쿠폰 티켓이 {@link IShoppingCouponTicket.expired_at 만료}되었거나 {@link IShoppingOrder 주문}에 대해 {@link IShoppingCouponTicketPayment 지불}하는 데 사용된 경우 410 gone 예외가 발생합니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 쿠폰 티켓의 {@link IShoppingCouponTicket.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "쿠폰 티켓 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingCouponTicket"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/deposits/charges": {
      "patch": {
        "summary": "모든 보증금 비용을 나열하세요",
        "description": "모든 입금 비용을 나열합니다. {@link IPage 페이지 매김}을 사용하여 {@link IShoppingCustomer 고객}의 모든 {@link IShoppingDepositCharge 입금 비용}을 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingDepositCharge.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingDepositCharge.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingDepositCharge.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 입금 수수료",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingDepositCharge"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "신규 보증금 청구 신청서 작성",
        "description": "새로운 입금 수수료 신청을 만듭니다. 새로운 {@link IShoppingDepositCharge 입금 수수료 신청}을 만듭니다. 그런데, 이 기능은 입금 수수료를 완료하는 것을 의미하지 않고, 단지 {@link IShoppingCustomer customer}가 입금 수수료를 적용하는 것을 의미합니다. 입금 수수료는 고객이 {@link IShoppingDepositChargePublish.publish pay} 입금 수수료를 지불할 때만 완료됩니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [],
        "requestBody": {
          "description": "보증금 청구 정보 생성",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingDepositCharge.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 보증금 청구",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingDepositCharge"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/deposits/charges/{id}": {
      "get": {
        "summary": "보증금 청구 정보 받기",
        "description": "보증금 요금 정보를 얻으세요. {@link IShoppingDepositCharge 보증금 요금} 정보를 얻으세요.",
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "타겟 입금 수수료 {@link IShoppingDepositCharge.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "보증금 청구 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingDepositCharge"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "보증금 청구 신청서 업데이트",
        "description": "보증금 청구 신청을 업데이트합니다. {@link IShoppingCustomer}가 적용한 {@link IShoppingDepositCharge 보증금 청구 신청}의 값을 업데이트합니다. 청구가 {@link IShoppingDepositChargePublish 게시}된 경우 보증금 청구를 업데이트할 수 없습니다. 410 gone 예외만 발생합니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "타겟 입금 수수료 {@link IShoppingDepositCharge.id }"
          }
        ],
        "requestBody": {
          "description": "변경할 가치",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingDepositCharge.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "보증금 청구 신청서 삭제",
        "description": "보증금 청구 신청을 지웁니다. {@link IShoppingCustomer}가 적용한 {@link IShoppingDepositCharge 보증금 청구 신청}을 지웁니다. 청구가 {@link IShoppingDepositChargePublish 게시된} 경우 보증금 청구를 지울 수 없습니다. 이 경우 {@link publish.cancel} 함수를 호출하여 지불을 취소해야 합니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "타겟 입금 수수료 {@link IShoppingDepositCharge.id }"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/deposits/charges/{chargeId}/publish/able": {
      "get": {
        "summary": "게시 가능 확인",
        "description": "게시 가능 여부를 확인합니다. {@link IShoppingDepositCharge 요금}이 게시 가능한지 여부를 테스트합니다. 요금이 {@link IShoppingDepositChargePublish 게시되지 않았고 아직 삭제되지 않은 경우 요금을 게시할 수 있습니다.",
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "chargeId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 요금 {@link IShoppingDepositCharge.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "요금이 공개 가능한지 여부",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/deposits/charges/{chargeId}/publish": {
      "post": {
        "summary": "요금을 게시합니다",
        "description": "요금을 게시합니다. {@link IShoppingDepositChargePublish 결제 공급업체 시스템에서 얻은 결제 정보를 사용하여 {@link IShoppingCustomer}가 적용한 {@link IShoppingDepositCharge 요금}을 게시합니다. 또한, 결제 시간은 게시 시간과 다를 수 있습니다. 예를 들어, 결제 방법이 수동 은행 계좌 이체인 경우 고객이 실제로 돈을 이체할 때까지 결제가 지연됩니다. 이 경우 {@link IShoppingDepositChargePublish.paid_at}은 `null` 값이 되므로 이 게시 함수를 호출한 후에 확인해야 합니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "chargeId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 요금 {@link IShoppingDepositCharge.id }"
          }
        ],
        "requestBody": {
          "description": "게시물 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingDepositChargePublish.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 게시",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingDepositChargePublish"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/deposits/histories": {
      "patch": {
        "summary": "모든 입금 내역을 나열하세요",
        "description": "모든 입금 내역을 나열합니다. {@link IPage 페이지 매김}을 사용하여 {@link IShoppingCustomer 고객}의 모든 {@link IShoppingDepositHistory 입금 내역}을 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingDepositHistory.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingDepositHistory.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingDepositHistory.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 입금 내역",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingDepositHistory"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/deposits/histories/{id}": {
      "get": {
        "summary": "입금 내역 정보 받기",
        "description": "입금 내역 정보를 얻으세요. {@link IShoppingDepositHistory 입금 내역} 정보를 얻으세요.",
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "입금내역정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingDepositHistory"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/deposits/histories/balance": {
      "get": {
        "summary": "보증금 잔액을 받으세요",
        "description": "보증금 잔액을 받으세요. {@link IShoppingCustomer 고객}의 보증금의 현재 잔액을 받으세요..",
        "tags": [
          "Discount"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "보증금 잔액",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/mileages/histories": {
      "patch": {
        "summary": "모든 마일리지 내역을 나열하세요",
        "description": "모든 마일리지 내역을 나열합니다. {@link IShoppingCustomer 고객}의 모든 {@link IShoppingMileageHistory 마일리지 내역}을 {@link IPage 페이지 매김}과 함께 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingMileageHistory.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingMileageHistory.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingMileageHistory.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 마일리지 기록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingMileageHistory"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/mileages/histories/{id}": {
      "get": {
        "summary": "마일리지 내역 정보 받기",
        "description": "마일리지 내역 정보를 얻으세요. {@link IShoppingMileageHistory 마일리지 내역} 정보를 얻으세요.",
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 마일리지 내역의 {@link IShoppingMileageHistory.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "주행거리 내역 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingMileageHistory"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/mileages/histories/balance": {
      "get": {
        "summary": "마일리지 잔액을 얻으세요",
        "description": "마일리지 잔액을 받으세요. {@link IShoppingCustomer 고객}의 현재 마일리지 잔액을 받으세요..",
        "tags": [
          "Discount"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "마일리지 잔액",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/carts/{cartId}/commodities": {
      "patch": {
        "summary": "모든 상품 목록",
        "description": "모든 상품 목록. 쇼핑 카트에 있는 모든 {@link IShoppingCartCommodity 상품}을 {@link IPage 페이지 매김}과 함께 나열합니다. *cartId*가 지정되지 않았지만 `null` 값이 할당된 경우 모든 카트가 타겟팅됩니다. 또한 요청 본문에서 {@link IShoppingCartCommodity.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 더욱이 {@link IShoppingCartCommodity.IRequest.sort}를 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다. 참고로, 일부 상품이 {@link IShoppingOrder 주문}되고 {@link IShoppingOrderPublish 게시}되면 쇼핑 카트에 더 이상 표시되지 않습니다. 그렇지 않은 경우 주문이 아직 게시되지 않았으므로 쇼핑 카트에 표시되고 동일한 상품으로 새 {@link IShoppingOrder 주문 애플리케이션}을 만들 수 있습니다. 물론, 타겟 {@link IShoppingSale 세일}이 중단되었거나 {@link IShoppingSaleUnitStockInventory 재고 없음}인 경우 쇼핑 카트에 더 이상 표시되지 않습니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": "소유한 카트의 ID"
          }
        ],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingCartCommodity.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 상품",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingCartCommodity"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "새로운 상품을 만드세요",
        "description": "새로운 상품을 만듭니다. 특정 쇼핑 카트에 새로운 {@link IShoppingCartCommodity 상품}을 만듭니다. {@link IShoppingCartCommodity.ICreate.accumulate}에 `true` 값이 있고 동일한 {@link IShoppingSaleUnitStock.IInvert 재고 및 수량}으로 구성된 동일한 상품이 있는 경우 새로운 상품이 생성되지 않지만 볼륨이 누적됩니다. 또한 *cartId*가 지정되지 않았지만 `null` 값이 할당된 경우 일반 카트가 활용되거나 이전 카트의 존재를 고려하여 새 카트가 생성됩니다. 그런데 대상 {@link IShoppingSale 판매}가 중단되었거나 {@link IShoppingSaleUnitStockInventory 재고 없음}인 경우 410 오류가 발생합니다. 따라서 대상 판매 및 {@link IShoppingSaleUnitStock 재고}의 상태를 먼저 확인하는 것이 좋습니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": "소유한 카트의 ID"
          }
        ],
        "requestBody": {
          "description": "상품의 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingCartCommodity.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 상품",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingCartCommodity"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/carts/{cartId}/commodities/{id}": {
      "get": {
        "summary": "상품을 얻으세요",
        "description": "상품을 가져옵니다. 쇼핑 카트의 {@link IShoppingCartCommodity merchandise} 레코드를 가져옵니다. *cartId*가 속한 카트의 ID와 다르면 404 찾을 수 없음 예외가 발생합니다. 그렇지 않으면 *cartId*에 `null` 값이 있으면 이러한 종속성 검사는 건너뛰지만 소유권은 여전히 검증됩니다. 또한 대상 {@link IShoppingSale sale}이 중단되었거나 {@link IShoppingSaleUnitStockInventory out of stock}이면 410 gone 오류가 발생합니다. 따라서 {@link create} 메서드로 상품을 성공적으로 만들었더라도 이 {@link at} 메서드로 상품에 액세스하면 여전히 실패할 수 있습니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": "소유한 카트의 ID"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "대상 상품 {@link IShoppingCartCommodity.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 상품 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingCartCommodity"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "상품(볼륨) 업데이트",
        "description": "상품(볼륨)을 업데이트합니다. 쇼핑 카트에서 {@link IShoppingCartCommodity 상품}의 볼륨을 업데이트합니다. *cartId*가 속한 카트의 ID와 다르면 404 찾을 수 없음 예외가 발생합니다. 그렇지 않으면 *cartId*에 `null` 값이 있는 경우 이러한 종속성 검사는 건너뛰지만 소유권은 여전히 검증됩니다. 또한 대상 {@link IShoppingSale 판매}가 중단되거나 {@link IShoppingSaleUnitStockInventory 재고 없음}이 갑자기 발생하면 410 gone 오류가 발생합니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": "소유한 카트의 ID"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "대상 상품 {@link IShoppingCartCommodity.id }"
          }
        ],
        "requestBody": {
          "description": "상품정보(수량) 업데이트",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingCartCommodity.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "상품을 지우다",
        "description": "상품을 지웁니다. 쇼핑 카트에서 {@link IShoppingCartCommodity 상품}을 지웁니다. 상품이 {@link IShoppingOrder 주문} 프로세스에 있는 경우 지울 수 없습니다. 대신 주문이 {@link IShoppingOrderPublish 게시된 경우 쇼핑 카트에 더 이상 표시되지 않습니다. 주문이 지워지면 상품을 계속 지울 수도 있습니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": "소유한 카트의 ID"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "대상 상품 {@link IShoppingCartCommodity.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "새로 생성된 상품",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/carts/{cartId}/commodities/{id}/replica": {
      "get": {
        "summary": "상품의 복제품을 얻으세요",
        "description": "상품의 복제본을 가져옵니다. 복제를 위해 대상 상품의 {@link IShoppingCartCommodity.ICreate} 유형 정보를 가져옵니다. 그런데, *cartId*가 속한 카트의 ID와 다르면 404 찾을 수 없음 예외가 발생합니다. 그렇지 않으면 *cartId*에 `null` 값이 있으면 이러한 종속성 검사는 건너뛰지만 소유권은 여전히 검증됩니다. 또한 대상 {@link IShoppingSale 판매}가 중단되거나 {@link IShoppingSaleUnitStockInventory 재고 없음}이 갑자기 발생하면 410 사라짐 오류가 발생합니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": "소유한 카트의 ID"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "대상 상품 {@link IShoppingCartCommodity.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "복제를 위한 상품의 생성 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingCartCommodity.ICreate"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/carts/{cartId}/commodities/discountable": {
      "patch": {
        "summary": "할인 가능한 정보를 얻으세요",
        "description": "할인 가능한 정보를 얻으세요. 장바구니에 담기지 않은 {@link IShoppingSale 판매}를 포함하여 {@link IShoppingCartCommodity 쇼핑 카트}에 대한 할인 가능한 기능을 계산합니다. 반환된 {@link IShoppingCartDiscountable}에는 조정 가능한 {@link IShoppingCoupon 쿠폰}, 인출 가능한 {@link IShoppingDepositHistory 입금} 및 {@link IShoppingMileageHistory 마일리지}의 조합이 포함됩니다. 또한 아직 장바구니에 담기지 않은 특정 판매에 대한 할인 가능한 정보를 알고 싶다면 {@link IShoppingCartCommodity.ICreate 상품 생성 정보}를 구성하여 {@link IShoppingCartDiscountable.pseudos} 속성에 판매를 지정합니다. 그러면 할인 가능한 정보에 포함됩니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": "소유한 카트의 ID"
          }
        ],
        "requestBody": {
          "description": "할인 가능한 정보를 요청하세요",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingCartDiscountable.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "할인 가능한 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingCartDiscountable"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/orders": {
      "post": {
        "summary": "새로운 주문 신청서를 만드세요",
        "description": "새로운 주문 애플리케이션을 만듭니다. {@link IShoppingCustomer}가 구성한 {@link IShoppingCartCommodity 쇼핑 카트}에서 새로운 {@link IShoppingOrder 주문 애플리케이션}을 만듭니다. 물론 모든 상품을 주문에 넣을 필요는 없지만 고객이 일부 상품을 선택할 수 있습니다. 그런데 이 기능은 주문을 완료하는 것을 의미하지 않고 고객이 주문을 적용하는 것을 의미합니다. 고객이 {@link IShoppingOrderPublish.paid_at} 주문을 지불할 때만 주문이 완료됩니다..",
        "tags": [
          "Order"
        ],
        "parameters": [],
        "requestBody": {
          "description": "주문 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingOrder.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 주문",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingOrder"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "summary": "모든 주문을 나열하세요",
        "description": "모든 주문을 나열합니다. 페이지 번호가 있는 모든 {@link IShoppingOrder 주문}을 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingOrder.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingOrder.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다. 참고로, {@link IShoppingCustomer 고객}인 경우 직접 주문을 나열할 수 있으며 주문이 {@link IShoppingOrderPublish.paid_at paid}되었는지 여부는 중요하지 않습니다. 그렇지 않은 경우 {@link IShoppingSeller 판매자} 또는 {@link IShoppingAdministrator 관리자}인 경우 유료 주문만 나열할 수 있습니다. 또한 판매자의 경우 관련 {@link IShoppingOrder.goods 상품}만 주문에 나열됩니다..",
        "tags": [
          "Order"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingOrder.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 주문",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingOrder"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/orders/{id}": {
      "delete": {
        "summary": "주문신청 삭제",
        "description": "주문 신청을 지웁니다. {@link IShoppingCustomer}에서 신청한 주문 신청을 지웁니다. 주문이 {@link IShoppingOrderPublish 게시}된 경우 주문을 지울 수 없습니다. 이 경우 {@link publish.cancel} 함수를 호출하여 결제를 취소해야 합니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 주문의 {@link IShoppingOrder.id }"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "주문 정보 받기",
        "description": "주문 정보를 얻으세요. 자세한 {@link IShoppingOrder 주문} 정보를 얻으세요. {@link IShoppingCustomer 고객}이 아니라면 아직 {@link IShoppingOrderPublish.paid_at paid}되지 않은 주문에 액세스할 수 없습니다. 이 경우 404 찾을 수 없음 오류가 발생합니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 주문의 {@link IShoppingOrder.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "주문 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingOrder"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/orders/{id}/price": {
      "get": {
        "summary": "주문 가격을 알아보세요",
        "description": "주문 가격을 가져옵니다. {@link IShoppingOrder 주문}의 자세한 가격 정보를 가져옵니다. 반환된 가격 정보에는 주문 금액뿐만 아니라 {@link IShoppingCoupono 쿠폰}, {@link IShoppingDepositHistory 입금} 및 {@link IShoppingMileageHistory 마일리지}에 따른 할인 금액도 포함됩니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 주문의 {@link IShoppingOrder.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "할인된 가격의 자세한 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingOrderPrice"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/orders/{id}/discountable": {
      "patch": {
        "summary": "할인 가능한 정보를 얻으세요",
        "description": "할인 가능한 정보를 얻으세요. {@link IShoppingOrder}에 대한 할인 가능한 기능을 계산하세요. 반환된 {@link IShoppingOrderDiscountable}에는 조정 가능한 {@link IShoppingCoupon 쿠폰}, 인출 가능한 {@link IShoppingDepositHistory 입금} 및 {@link IShoppingMileageHistory 마일리지}의 조합이 포함됩니다. 물론 반환된 기능은 주문이 아직 {@link IShoppingOrderPublish 게시되지 않은} 경우에만 유효합니다. 주문이 이미 게시된 경우 가격을 더 이상 할인할 수 없습니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 주문의 {@link IShoppingOrder.id }"
          }
        ],
        "requestBody": {
          "description": "할인 가능한 정보를 요청하세요",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingOrderDiscountable.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "할인 가능한 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingOrderDiscountable"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/orders/{id}/discount": {
      "put": {
        "summary": "주문 할인",
        "description": "주문 할인. {@link IShoppingCoupon 쿠폰}, {@link IShoppingDepositHistory 입금} 및 {@link IShoppingMileageHistory 마일리지}를 조정하여 {@link IShoppingOrder}의 총 가격을 할인합니다. 할인 기능의 금액이 주문의 총 가격과 같으면 현금 없이도 {@link IShoppingOrderPublish 게시}할 수 있습니다. 그런데 할인 기능은 유효해야 합니다. 그렇지 않으면 428 처리 불가 엔터티 오류가 발생합니다. 어떤 기능이 조정 가능하거나 인출 가능한지 알아보려면 {@link discountable} 함수를 호출한 다음.",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 주문의 {@link IShoppingOrder.id }"
          }
        ],
        "requestBody": {
          "description": "할인 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingOrderPrice.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "할인된 가격의 자세한 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingOrderPrice"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/orders/{orderId}/goods/{id}/confirm": {
      "put": {
        "summary": "주문 확인",
        "description": "주문 상품을 확인합니다. 완료된 {@link IShoppingOrderGood 주문 상품}을 {@link IShoppingDelivery 배달}하여 {@link IShoppingCustomer 고객}에게 확인합니다. 즉, {@link IShoppingOrder 주문}은 {@link IShoppingPublish.paid_at published, paid} 상태여야 하며 상품 배송은 {@link IShoppingDeliveryJourney arrive}하여 고객에게 전달되어야 합니다. 그렇지 않으면 428 처리할 수 없는 엔터티 오류가 발생합니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 주문 {@link IShoppingOrder.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟상품 {@link IShoppingOrderGood.id }"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/orders/{orderId}/publish/able": {
      "get": {
        "summary": "게시 가능 확인",
        "description": "게시 가능 여부를 확인합니다. {@link IShoppingOrder 주문}이 게시 가능한지 여부를 테스트합니다. 주문이 {@link IShoppingOrderPublish 게시되지 않았고 아직 삭제되지 않은 경우 주문을 게시할 수 있습니다. 대상 {@link IShoppingSale 판매}가 중단되었거나 {@link IShoppingSaleUnitStockInventory 재고 없음}이더라도 주문이 이미 적용되었으므로 게시할 수 있습니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 주문의 {@link IShoppingOrder.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "주문이 공개 가능한지 여부",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/orders/{orderId}/publish": {
      "post": {
        "summary": "주문 게시",
        "description": "주문을 게시합니다. {@link IShoppingOrderPublish {@link IShoppingCustomer}가 {@link IShoppingAddress 주소}로 적용한 {@link IShoppingOrder 주문}을 결제 공급업체 시스템에서 얻은 배송 및 결제 정보에 게시합니다. 주문이 전체 주문 가격에 대해 할인된 경우 결제 공급업체 정보를 보낼 필요가 없습니다. 대신 주소 정보만 필요합니다. 또한 결제 시간은 게시 시간과 다를 수 있습니다. 예를 들어 결제 방법이 수동 은행 계좌 이체인 경우 고객이 실제로 돈을 이체할 때까지 결제가 지연됩니다. 이 경우 {@link IShoppingOrderPublish.paid_at}은 `null` 값이 되므로 이 게시 함수를 호출한 후에 확인해야 합니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 주문의 {@link IShoppingOrder.id }"
          }
        ],
        "requestBody": {
          "description": "게시물 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/IShoppingOrderPublish.ICashCreate"
                  },
                  {
                    "$ref": "#/components/schemas/IShoppingOrderPublish.IZeroCreate"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "cash": "#/components/schemas/IShoppingOrderPublish.ICashCreate",
                    "zero": "#/components/schemas/IShoppingOrderPublish.IZeroCreate"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 게시",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingOrderPublish"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "게시(결제) 취소",
        "description": "게시(결제)를 취소합니다. {@link IShoppingOrderPublish가 게시된} {@link IShoppingOrder 주문}의 결제를 취소합니다. 대상 게시의 결제 방법이 수동 은행 계좌 이체인 경우 직접 취소됩니다. 그렇지 않은 경우 결제 취소 요청이 결제 공급업체 시스템으로 전송됩니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 주문의 {@link IShoppingOrder.id }"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/sales": {
      "patch": {
        "summary": "요약된 모든 판매 내역을 나열하세요",
        "description": "요약된 모든 판매를 나열합니다. 모든 {@link IShoppingSale.ISummary 요약된 판매}를 나열합니다. 보시다시피, 반환된 판매는 자세히 설명하지 않고 요약합니다. 판매에 대한 자세한 정보를 얻으려면 각 판매에 대해 {@link at} 함수를 사용합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매}에만 액세스할 수 있습니다. 그렇지 않은 경우 {@link IShoppingCustomer 고객}인 경우 시장에서 운영 중인 판매만 볼 수 있습니다. 미개봉, 마감 또는 중단된 판매는 볼 수 없습니다. 그런데 원하는 경우 요청 본문에서 {@link IShoppingSale.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingSale.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSale.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "요약된 정보가 있는 페이지별 판매",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSale.ISummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/sales/{id}": {
      "get": {
        "summary": "세일 정보 받기",
        "description": "판매 정보를 얻으세요. 자세한 정보가 포함된 {@link IShoppingSale 판매}를 얻으세요. {@link IShoppingSeller 판매자}인 경우, 본인 {@link IShoppingSale 판매}에만 액세스할 수 있습니다. 그렇지 않은 경우 {@link IShoppingCustomer 고객}인 경우, 마켓에서 운영 중인 판매에만 액세스할 수 있습니다. 미개봉, 마감 또는 중단된 판매에는 액세스할 수 없습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 세일 {@link IShoppingSale.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 판매 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSale"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/sales/{saleId}/questions/{inquiryId}/comments": {
      "patch": {
        "summary": "모든 문의사항을 나열하세요",
        "description": "모든 문의 댓글을 나열합니다. {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}의 모든 {@link IShoppingSaleInquiryComment 문의 댓글}을 {@link IPage 페이지 매김}과 함께 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingSaleInquiryComment.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingSaleInquiryComment.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다. 그런데, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매}의 문의에만 액세스할 수 있습니다. 그렇지 않은 경우 판매의 모든 문의에 액세스할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 문의사항은 {@link IShoppingSaleInquiry.id}에 있습니다."
          }
        ],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleInquiryComment.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 문의 댓글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleInquiryComment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "문의사항 작성하기",
        "description": "문의 댓글을 작성합니다. {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}에 대한 {@link IShoppingSaleInquiryComment 문의 댓글}을 작성합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 본인의 {@link IShoppingSale 판매} 문의에만 문의 댓글을 작성할 수 있습니다. 그렇지 않은 경우 판매의 모든 문의에 문의 댓글을 작성할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 문의 {@link IShoppingSaleInquiry.id }"
          }
        ],
        "requestBody": {
          "description": "문의사항 작성정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleInquiryComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 문의 댓글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryComment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/sales/{saleId}/questions/{inquiryId}/comments/{id}": {
      "get": {
        "summary": "문의사항 댓글 정보 받기",
        "description": "문의 댓글 정보를 얻으세요. {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}에 대한 자세한 {@link IShoppingSaleInquiryComment 문의 댓글} 정보를 얻으세요. 참고로, {@link IShoppingSeller 판매자}인 경우 본인의 {@link IShoppingSale 판매}의 문의 댓글에만 접근할 수 있습니다. 그렇지 않은 경우 판매의 모든 문의 댓글에 접근할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 문의사항은 {@link IShoppingSaleInquiry.id}에 있습니다."
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 문의 댓글 {@link IShoppingSaleInquiryComment.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 문의사항 댓글정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryComment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "문의사항 댓글 업데이트",
        "description": "문의 댓글을 업데이트합니다. {@link IShoppingSaleInquiryComment 문의 댓글}을 특정 {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}로 업데이트합니다. 그런데, 이 쇼핑몰의 댓글에 대한 일반 정책과 마찬가지로 댓글을 수정해도 기존 내용은 실제로 변경되지 않습니다. 수정된 내용은 누적되어 기존 댓글 기록에 새로운 {@link IShoppingSaleInquiryComment.ISnapshot 스냅샷}으로 기록됩니다. 그리고 이것은 이 문의 댓글을 읽을 수 있는 모든 사람에게 공개됩니다. 이는 고객이나 판매자가 댓글을 수정하고 분쟁이 쉽게 발생하는 전자상거래의 특성으로 인해 상황을 조작하는 것을 방지하기 위한 것입니다. 즉, 증거를 보존하기 위한 것입니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 문의사항은 {@link IShoppingSaleInquiry.id}에 있습니다."
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 문의 댓글 {@link IShoppingSaleInquiryComment.id }"
          }
        ],
        "requestBody": {
          "description": "문의사항 댓글 정보 업데이트",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleInquiryComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "문의사항에 대한 신규 생성 스냅샷 기록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryComment.ISnapshot"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/sales/{saleId}/questions": {
      "post": {
        "summary": "질문글을 작성하세요",
        "description": "질문 기사를 작성합니다. {@link IShoppingCustomer 고객}이 특정 {@link IShoppingSale 세일}에 대해 무언가를 묻고 싶을 때, 새로운 {@link IShoppingSaleQuestion 질문 기사}를 작성하여 질문할 수 있습니다. 고객이 자신의 신원과 질문을 공개하고 싶지 않으면, 질문을 비밀 기사로 작성할 수 있습니다. 이 경우, 고객과 관련 {@link IShoppingSeller 판매자}만 {@link at details content}를 볼 수 있습니다. 또한, 이러한 비밀 질문의 제목과 작성자 이름은 {@link index pagiation API}에서 `*` 문자로 마스크됩니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          }
        ],
        "requestBody": {
          "description": "질문의 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleQuestion.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 질문",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleQuestion"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "summary": "요약된 모든 질문을 나열하세요",
        "description": "모든 요약된 질문을 나열합니다. {@link IShoppingSale 판매}의 모든 {@link IShoppingSaleQuestion.ISummary 요약된 질문}을 나열합니다. 보시다시피, 반환된 질문은 자세히 설명하지 않고 요약합니다. 질문의 자세한 정보를 얻으려면 각 기사에 대해 {@link adridges} 함수나 {@link at} 함수를 사용합니다. 또한 반환된 질문에는 {@link IShoppingSaleQuestion.ISummary.answer} 속성이 있는데, 이는 {@link IShoppingSeller}의 공식적인 답변을 의미합니다. 또한 반환된 질문에는 다른 원칙 속성에 마스킹된 또 다른 특수 속성 {@link IShoppingSaleQuestion.ISummary.secret}이 있는데, 이는 관련된 행위자만 질문을 {@link at 읽을} 수 있음을 의미합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매} 질문에만 액세스할 수 있습니다. 그렇지 않은 경우 판매의 모든 질문에 액세스할 수 있습니다. 그런데, 원하시면 요청 본문에 {@link IShoppingSaleQuestion.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한, {@link IShoppingSaleQuestion.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleQuestion.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "요약된 정보가 있는 페이지별 질문",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleQuestion.ISummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/sales/{saleId}/questions/{id}": {
      "post": {
        "summary": "질문 업데이트",
        "description": "질문을 업데이트합니다. {@link IShoppingSaleQuestion 질문}의 내용을 업데이트합니다. 그런데, 이 쇼핑몰의 게시물에 대한 일반 정책과 마찬가지로, 질문 게시물을 수정해도 실제로 기존 내용이 변경되지 않습니다. 수정된 내용은 기존 게시물 레코드에 새로운 {@link IShoppingSaleQuestion.ISnapshot 스냅샷}으로 누적되어 기록됩니다. 그리고 이는 {@link IShoppingCustomer 고객}과 {@link IShoppingSeller 판매자}를 포함한 모든 사람에게 공개되며, 게시물을 볼 수 있는 사람은 누구나 전체 편집 내역을 볼 수 있습니다. 이는 고객이나 판매자가 게시물을 수정하고 분쟁이 쉽게 발생하는 전자상거래의 특성상 상황을 조작하는 것을 방지하기 위한 것입니다. 즉, 증거를 보존하기 위한 것입니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 질문의 {@link IShoppingSaleQuestion.id }"
          }
        ],
        "requestBody": {
          "description": "질문의 정보를 업데이트하세요",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IBbsArticle.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "질문에 대한 새로 생성된 스냅샷 기록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IBbsArticle.ISnapshot"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "질문 정보 받기",
        "description": "질문 정보를 얻으세요. {@link IShoppingSale 판매}에 대한 자세한 {@link IShoppingSaleQuestion 질문} 정보를 얻으세요. 참고로, {@link IShoppingSeller 판매자}인 경우 본인의 {@link IShoppingSale 판매} 질문에만 액세스할 수 있습니다. 그렇지 않은 경우 {@link IShoppingCustomer 고객}인 경우 판매의 모든 질문에 액세스할 수 있지만 {@link IShoppingSaleQuestion.secret} 값은 `false`입니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 질문의 {@link IShoppingSaleQuestion.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 질문 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleQuestion"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/sales/{saleId}/questions/abridges": {
      "patch": {
        "summary": "모든 요약된 질문을 나열하세요",
        "description": "모든 축약된 질문을 나열합니다. {@link IShoppingSale 판매}의 모든 {@link IShoppingSaleQuestion.IAbridge 축약된 질문}을 나열합니다. 보시다시피, 반환된 질문은 자세한 정보가 아닌 축약된 것입니다. 질문의 자세한 정보를 얻으려면 각 기사에 {@link at} 함수를 사용합니다. 또한 반환된 질문에는 {@link IShoppingSaleQuestion.IAridge.answer} 속성이 있는데, 이는 {@link IShoppingSeller}의 공식적인 답변을 의미합니다. 또한 반환된 질문에는 다른 원칙 속성에 대한 마스크 처리가 있는 또 다른 특수 속성 {@link IShoppingSaleQuestion.IAridge.secret}이 있는데, 이는 관련된 행위자만 질문을 {@link at 읽을 수 있음을 의미합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매} 질문에만 액세스할 수 있습니다. 그렇지 않은 경우 판매의 모든 질문에 액세스할 수 있습니다. 그런데, 원하시면 요청 본문에 {@link IShoppingSaleQuestion.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한, {@link IShoppingSaleQuestion.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleQuestion.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "요약된 정보가 있는 페이지별 질문",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleQuestion.IAbridge"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/sales/{saleId}/reviews/{inquiryId}/comments": {
      "patch": {
        "summary": "모든 문의사항을 나열하세요",
        "description": "모든 문의 댓글을 나열합니다. {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}의 모든 {@link IShoppingSaleInquiryComment 문의 댓글}을 {@link IPage 페이지 매김}과 함께 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingSaleInquiryComment.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingSaleInquiryComment.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다. 그런데, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매}의 문의에만 액세스할 수 있습니다. 그렇지 않은 경우 판매의 모든 문의에 액세스할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 문의사항은 {@link IShoppingSaleInquiry.id}에 있습니다."
          }
        ],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleInquiryComment.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 문의 댓글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleInquiryComment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "문의사항 작성하기",
        "description": "문의 댓글을 작성합니다. {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}에 대한 {@link IShoppingSaleInquiryComment 문의 댓글}을 작성합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 본인의 {@link IShoppingSale 판매} 문의에만 문의 댓글을 작성할 수 있습니다. 그렇지 않은 경우 판매의 모든 문의에 문의 댓글을 작성할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 문의 {@link IShoppingSaleInquiry.id }"
          }
        ],
        "requestBody": {
          "description": "문의사항 작성정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleInquiryComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 문의 댓글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryComment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/sales/{saleId}/reviews/{inquiryId}/comments/{id}": {
      "get": {
        "summary": "문의사항 댓글 정보 받기",
        "description": "문의 댓글 정보를 얻으세요. {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}에 대한 자세한 {@link IShoppingSaleInquiryComment 문의 댓글} 정보를 얻으세요. 참고로, {@link IShoppingSeller 판매자}인 경우 본인의 {@link IShoppingSale 판매}의 문의 댓글에만 접근할 수 있습니다. 그렇지 않은 경우 판매의 모든 문의 댓글에 접근할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 문의사항은 {@link IShoppingSaleInquiry.id}에 있습니다."
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 문의 댓글 {@link IShoppingSaleInquiryComment.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 문의사항 댓글정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryComment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "문의사항 댓글 업데이트",
        "description": "문의 댓글을 업데이트합니다. {@link IShoppingSaleInquiryComment 문의 댓글}을 특정 {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}로 업데이트합니다. 그런데, 이 쇼핑몰의 댓글에 대한 일반 정책과 마찬가지로 댓글을 수정해도 기존 내용은 실제로 변경되지 않습니다. 수정된 내용은 누적되어 기존 댓글 기록에 새로운 {@link IShoppingSaleInquiryComment.ISnapshot 스냅샷}으로 기록됩니다. 그리고 이것은 이 문의 댓글을 읽을 수 있는 모든 사람에게 공개됩니다. 이는 고객이나 판매자가 댓글을 수정하고 분쟁이 쉽게 발생하는 전자상거래의 특성으로 인해 상황을 조작하는 것을 방지하기 위한 것입니다. 즉, 증거를 보존하기 위한 것입니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 문의사항은 {@link IShoppingSaleInquiry.id}에 있습니다."
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 문의 댓글 {@link IShoppingSaleInquiryComment.id }"
          }
        ],
        "requestBody": {
          "description": "문의사항 댓글 정보 업데이트",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleInquiryComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "문의사항에 대한 신규 생성 스냅샷 기록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryComment.ISnapshot"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/sales/{saleId}/reviews": {
      "post": {
        "summary": "리뷰기사를 작성하세요",
        "description": "리뷰 기사를 작성하세요. {@link IShoppingCustomer 고객}이 특정 {@link IShoppingSale 세일}을 구매하고 {@link IShoppingDelivery가 배달}되었을 때, 해당 세일에 대한 {@link IShoppingSaleReview 리뷰} 기사를 작성할 수 있습니다. 구매하지 않고 리뷰 기사를 작성하려고 하거나 배송이 완료되지 않은 경우 428 처리 불가 엔티티 오류가 발생합니다. 또한 고객은 주문당 여러 리뷰 기사를 작성할 수 있지만 다음 기사는 이전 기사로부터 2주 후에 작성할 수 있습니다. 그렇지 않은 경우 428 처리 불가 엔티티 오류가 발생합니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          }
        ],
        "requestBody": {
          "description": "리뷰 작성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleReview.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 리뷰",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleReview"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "summary": "요약된 모든 리뷰를 나열하세요",
        "description": "요약된 모든 리뷰를 나열합니다. {@link IShoppingSale 판매}의 모든 {@link IShoppingSaleReview.ISummary 요약된 리뷰}를 나열합니다. 보시다시피, 반환된 리뷰는 자세히 설명하지 않고 요약합니다. 리뷰의 자세한 정보를 얻으려면 각 기사에 대해 {@link adridges} 함수나 {@link at} 함수를 사용합니다. 또한, 반환된 리뷰에는 {@link IShoppingSaleReview.ISummary.answer} 속성이 있는데, 이는 {@link IShoppingSeller}의 공식적인 답변을 의미합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매} 리뷰에만 액세스할 수 있습니다. 그렇지 않은 경우 판매의 모든 리뷰에 액세스할 수 있습니다. 그런데, 원하는 경우 요청 본문에서 {@link IShoppingSaleReview.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한, {@link IShoppingSaleReview.IRequest.sort sort condition}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleReview.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "요약된 정보가 있는 페이지별 리뷰",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleReview.ISummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/sales/{saleId}/reviews/{id}": {
      "post": {
        "summary": "리뷰 업데이트",
        "description": "리뷰 업데이트. {@link IShoppingSaleReview 리뷰}의 내용과 점수를 업데이트합니다. 그런데, 이 쇼핑몰의 기사에 대한 일반 정책과 마찬가지로, 질문 기사를 수정해도 실제로 기존 내용은 변경되지 않습니다. 수정된 내용은 누적되어 기존 기사 레코드에 새로운 {@link IShoppingSaleReview.ISnapshot 스냅샷}으로 기록됩니다. 그리고 이는 {@link IShoppingCustomer 고객}과 {@link IShoppingSeller 판매자}를 포함한 모든 사람에게 공개되며, 기사를 볼 수 있는 사람은 누구나 전체 편집 내역을 볼 수 있습니다. 이는 고객이나 판매자가 분쟁이 쉽게 발생하는 전자상거래의 특성상 기사를 수정하고 상황을 조작하는 것을 방지하기 위한 것입니다. 즉, 증거를 보존하기 위한 것입니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 리뷰의 {@link IShoppingSaleReview.id }"
          }
        ],
        "requestBody": {
          "description": "리뷰 정보 업데이트",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleReview.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "리뷰의 새로 생성된 스냅샷 기록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleReview.ISnapshot"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "리뷰 정보 받기",
        "description": "리뷰 정보를 얻으세요. {@link IShoppingSale 세일}에 대한 자세한 {@link IShoppingSaleReview 리뷰} 정보를 얻으세요. 참고로, {@link IShoppingSeller 판매자}인 경우 본인의 {@link IShoppingSale 세일} 리뷰에만 접근할 수 있습니다. 그렇지 않은 경우 {@link IShoppingCustomer 고객}인 경우 세일의 모든 리뷰에 접근할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 리뷰의 {@link IShoppingSaleReview.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 리뷰 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleReview"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/sales/{saleId}/reviews/abridges": {
      "patch": {
        "summary": "모든 요약된 리뷰를 나열하세요",
        "description": "모든 요약된 리뷰를 나열합니다. {@link IShoppingSale 판매}의 모든 {@link IShoppingSaleReview.IAbridge 요약된 리뷰}를 나열합니다. 보시다시피, 반환된 리뷰는 자세한 정보가 아닌 요약된 것입니다. 리뷰의 자세한 정보를 얻으려면 각 기사에 {@link at} 함수를 사용합니다. 또한, 반환된 리뷰에는 {@link IShoppingSaleReview.IAridge.answer} 속성이 있는데, 이는 {@link IShoppingSeller}의 공식적인 답변을 의미합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매} 리뷰에만 액세스할 수 있습니다. 그렇지 않은 경우 판매의 모든 리뷰에 액세스할 수 있습니다. 그런데, 원하는 경우 요청 본문에서 {@link IShoppingSaleReview.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingSaleReview.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 지정할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleReview.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "요약된 정보가 포함된 페이지별 리뷰",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleReview.IAbridge"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/sales/{saleId}/snapshots": {
      "patch": {
        "summary": "모든 스냅샷을 나열하세요",
        "description": "모든 스냅샷을 나열합니다. {@link IShoppingSeller seller}가 {@link IShoppingSale sale}을 업데이트할 때마다 판매 기록은 업데이트되지 않지만 판매 내역의 무결성을 유지하기 위해 새로운 {@link IShoppingSaleSnapshot snapshot} 레코드가 생성됩니다. 이 API 함수는 이러한 스냅샷 레코드를 나열하기 위한 것입니다. 또한 반환 유형에서 볼 수 있듯이 반환된 스냅샷은 자세히 설명되지 않고 요약되어 있습니다. 스냅샷의 자세한 정보를 얻으려면 각 스냅샷에 대해 {@link at} 또는 {@link flipo} 함수를 사용합니다. 참고로, {@link IShoppingSeller seller}인 경우 자신의 {@link IShoppingSale sale}의 스냅샷에만 액세스할 수 있습니다. 그렇지 않으면 판매가 종료되거나 중단되었더라도 판매의 모든 스냅샷에 액세스할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 세일 {@link IShoppingSale.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 번호 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "요약된 정보가 있는 페이지별 스냅샷",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleSnapshot.ISummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/sales/{saleId}/snapshots/{id}": {
      "get": {
        "summary": "스냅샷 정보 얻기",
        "description": "스냅샷 정보를 가져옵니다. 자세한 정보가 포함된 {@link IShoppingSaleSnapshot 스냅샷}을 가져옵니다. 반환 유형에서 볼 수 있듯이 반환된 스냅샷에는 {@link IShoppingSale 판매} 정보가 포함되지 않습니다. 판매 정보를 가져오려면 대신 {@link flip} 함수를 사용하세요. 참고로, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매} 스냅샷에만 액세스할 수 있습니다. 그렇지 않으면 판매가 종료되거나 중단되었더라도 모든 판매 스냅샷에 액세스할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "대상 스냅샷의 {@link IShoppingSaleSnapshot.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "스냅샷의 자세한 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleSnapshot"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/sales/{saleId}/snapshots/{id}/flip": {
      "get": {
        "summary": "뒤집힌 스냅샷 정보 가져오기",
        "description": "뒤집힌 스냅샷 정보를 가져옵니다. 뒤집힌 스냅샷의 {@link IShoppingSale 판매} 정보를 가져옵니다. 반환 유형에서 볼 수 있듯이 이 함수는 {@link IShoppingSale 판매} 정보를 반환합니다. 그런데 판매 정보는 최신 정보가 아니라 스냅샷 측의 뒤집힌 정보입니다. 또한 {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매}의 스냅샷에만 액세스할 수 있습니다. 그렇지 않으면 판매가 종료되거나 중단되었더라도 판매의 모든 스냅샷에 액세스할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "대상 스냅샷의 {@link IShoppingSaleSnapshot.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "스냅샷 측면에서 자세한 판매 정보를 확인하세요",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSale"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/systematic/channels/{channelCode}/categories": {
      "patch": {
        "summary": "모든 카테고리를 자식 레코드와 함께 나열합니다.",
        "description": "모든 카테고리를 자식 레코드와 함께 나열합니다. 페이지 번호가 있는 {@link IShoppingChannelCategory.IHierarchical 카테고리}를 {@link IShoppingChannel 채널}의 모든 카테고리를 나열합니다. 반환된 카테고리에는 자식 카테고리도 포함됩니다. 원하는 경우 요청 본문에서 {@link IShoppingChannelCategory.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingChannelCategory.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "소속 채널 {@link IShoppingChannel.code }"
          }
        ],
        "responses": {
          "200": {
            "description": "자식 카테고리가 있는 페이지별 카테고리",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IShoppingChannelCategory.IHierarchical"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/systematic/channels/{channelCode}/categories/{id}": {
      "get": {
        "summary": "카테고리 정보 받기",
        "description": "카테고리 정보를 가져옵니다. 자세한 {@link IShoppingChannelCategory 카테고리} 정보를 가져옵니다. 반환된 카테고리에는 계층적 자식 카테고리가 포함되어 있으며 재귀적 부모 카테고리도 포함되어 있습니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "소속 채널 {@link IShoppingChannel.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "대상 카테고리의 {@link IShoppingChannelCategory.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 카테고리 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingChannelCategory"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/systematic/channels/{channelCode}/categories/{id}/invert": {
      "get": {
        "summary": "역전된 카테고리 정보를 얻으세요",
        "description": "역전된 카테고리 정보를 가져옵니다. 역전된 {@link IShoppingChannelCategory.IInvert 카테고리} 정보를 가져옵니다. 반환된 카테고리에는 재귀적 부모 카테고리가 포함되지만 계층적 자식 카테고리는 포함되지 않습니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "소속 채널 {@link IShoppingChannel.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "대상 카테고리의 {@link IShoppingChannelCategory.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 카테고리 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingChannelCategory.IInvert"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/systematic/channels": {
      "patch": {
        "summary": "모든 채널을 나열하세요",
        "description": "모든 채널을 나열합니다. 모든 {@link IShoppingChannel 채널}을 페이지 번호로 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingChannel.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingChannel.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingChannel.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 채널",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingChannel"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/systematic/channels/hierarchical": {
      "patch": {
        "summary": "중첩된 카테고리로 모든 채널을 나열합니다.",
        "description": "중첩된 카테고리가 있는 모든 채널을 나열합니다. {@link IPage 페이지 매김}이 있는 모든 {@link IShoppingChannel.IHierarchical 채널}을 나열합니다. 반환된 채널에는 중첩된 계층적 {@link IShoppingChannelCategory.IHierarchical 카테고리}가 포함됩니다. 원하는 경우 요청 본문에서 {@link IShoppingChannel.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingChannel.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingChannel.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "중첩된 카테고리가 있는 페이지별 채널",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingChannel.IHierarchical"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/systematic/channels/{id}": {
      "get": {
        "summary": "채널 정보 얻기",
        "description": "채널 정보를 가져옵니다. 자세한 {@link IShoppingChannel.IHierarchical 채널} 정보를 가져옵니다. 반환된 채널 인스턴스에는 중첩된 {@link IShoppingChannelCategory.IHierarchical 계층적 범주} 정보도 포함됩니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 채널의 {@link IShoppingChannel.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 채널 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingChannel.IHierarchical"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/systematic/channels/{code}/get": {
      "get": {
        "summary": "코드로 채널 정보를 얻으세요",
        "description": "코드로 채널 정보를 가져옵니다. 코드로 자세한 {@link IShoppingChannel.IHierarchical 채널} 정보를 가져옵니다. 반환된 채널 인스턴스에는 중첩된 {@link IShoppingChannelCategory.IHierarchical 계층적 범주} 정보도 포함됩니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "타겟 채널의 {@link IShoppingChannel.code }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 채널 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingChannel.IHierarchical"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/systematic/sections": {
      "patch": {
        "summary": "모든 섹션을 나열하세요",
        "description": "모든 섹션을 나열합니다. 페이지 번호가 있는 모든 {@link IShoppingSection 섹션}을 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingSection.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingSection.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Section"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSection.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지 분할 섹션",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSection"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/systematic/sections/{id}": {
      "get": {
        "summary": "섹션 정보 얻기",
        "description": "섹션 정보를 얻으세요. 자세한 {@link IShoppingSection 섹션} 정보를 얻으세요.",
        "tags": [
          "Section"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 섹션의 {@link IShoppingSection.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 섹션 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSection"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/customers/systematic/sections/{code}/get": {
      "get": {
        "summary": "코드로 섹션 정보를 얻으세요",
        "description": "코드로 섹션 정보를 얻으세요. 코드로 자세한 {@link IShoppingSection 섹션} 정보를 얻으세요.",
        "tags": [
          "Section"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "타겟 섹션의 {@link IShoppingSection.code }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 섹션 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSection"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/authenticate": {
      "get": {
        "summary": "판매자 정보 얻기",
        "description": "판매자 정보를 가져옵니다. 현재 {@link IShoppingCustomer 고객}의 {@link IShoppingSeller.IInvert 판매자} 정보를 가져옵니다. 현재 {@link IShoppingMember 회원}이 판매자가 아니면 403 forbidden 예외가 발생합니다..",
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "판매자 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSeller.IInvert"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "판매자로 가입하기",
        "description": "판매자로 가입하세요. {@link IShoppingSeller.IJoin 가입 정보}로 판매자로 가입하세요. 이 방법은 {@link IShoppingCustomer 고객}이 이미 {@link IShoppingMember 멤버십}에 가입한 경우에만 허용됩니다. 그렇지 않은 경우, 그(녀)는 그 전에 가입을 완료해야 합니다. 그렇지 않은 경우, 403 금지 예외가 발생합니다..",
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "가입요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSeller.IJoin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "판매자 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSeller.IInvert"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/authenticate/login": {
      "put": {
        "summary": "판매자로 로그인",
        "description": "판매자로 로그인합니다. {@link IShoppingSeller.ILogin 로그인 정보}로 판매자로 로그인합니다. 이 메서드는 {@link ShoppingApi.functional.customers.authenticate.login} 함수와 정확히 동일한 효과를 갖지만 반환 유형이 약간 다릅니다. 유사한 함수는 고객 정보에서 시작하는 {@link IShoppingCustomer} 유형을 반환하므로 `customer.member.seller`를 통해 판매자 정보에 액세스해야 합니다. 이와 대조적으로 이 메서드는 판매자 정보에서 시작하는 {@link IShoppingSeller.IInvert} 유형을 반환하므로 `seller.customer`를 통해 고객 정보에 액세스할 수 있습니다. 물론 이 함수를 사용하려면 이전에 판매자로서 {@link join}해야 했습니다. 그렇지 않으면 403 forbidden 예외가 발생합니다.",
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "로그인 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingMember.ILogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "판매자 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSeller.IInvert"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/deliveries": {
      "patch": {
        "summary": "배달 목록 가져오기",
        "description": "배송 목록을 가져옵니다. {@link IPage 페이지 번호}를 사용하여 현재 {@link IShoppingSeller 판매자}의 {@link IShoppingDelivery.IInvert 배송} 목록을 가져옵니다. 참고로, 반환된 배송에는 대상 {@link IShoppingOrder.IInvertFromDelivery 주문} 정보가 포함됩니다. 물론, 관련 {@link IShoppingOrderGood 상품}만 주문에 포함됩니다. 또한, 요청 본문에서 {@link IShoppingDelivery.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한, {@link IShoppingDelivery.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Order"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingDelivery.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 배달",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingDelivery.IInvert"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "배달 생성",
        "description": "배송을 만듭니다. {@link IShoppingOrder 주문}, 해당 {@link IShoppingOrderGood 상품} 및 {@link IShoppingSaleUnitStock 재고}({@link IShoppingDeliveryPiece})를 타겟팅하는 {@link IShoppingDelivery 배송} 레코드를 만듭니다. {@link IShoppingDeliveryJourney 여정} 및 {@link IShoppingDeliveryShipper 운송업체} 정보가 포함됩니다. {@link IShoppingDeliveryPiece}의 구성은 필수를 초과해서는 안 됩니다. 필요한 부분을 식별하려면 이 함수를 호출하기 전에 대상 주문의 {@link IShoppingOrderPublish.id}로 {@link incompletes} 함수를 호출하는 것이 좋습니다..",
        "tags": [
          "Order"
        ],
        "parameters": [],
        "requestBody": {
          "description": "배송정보 생성",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingDelivery.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 배송",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingDelivery"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/deliveries/{id}": {
      "get": {
        "summary": "배달을 받으세요",
        "description": "배달을 받으세요. ID로 {@link IShoppingDelivery.IInvert 배달} 정보를 받으세요. 참고로, 반환된 배달에는 대상 {@link IShoppingOrder.IInvertFromDelivery 주문} 정보가 포함됩니다. 물론, 관련된 {@link IShoppingOrderGood 상품}만 주문에 포함됩니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟배송의 {@link IShoppingDelivery.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "목표 주문에 따른 배송 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingDelivery.IInvert"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/deliveries/incompletes": {
      "patch": {
        "summary": "미완성 작품 목록 받기",
        "description": "미완료된 조각 목록을 가져옵니다. 대상 주문의 {@link IShoppingOrderPublish.id}의 {@link IShoppingDeliveryPiece 미완료 조각} 목록을 가져옵니다. 대상 주문의 게시 ID를 지정하면 이 함수는 {@link IShoppingDeliveryPiece.ICreate} 유형의 배열로 계산하여 주문의 미완료 조각을 반환합니다. 결과를 활용하여 통합 배송을 위한 거대한 {@link IShoppingDelivery 배송}을 만들 수 있으며, 분할 배송을 위해 여러 배송을 만들 수도 있습니다..",
        "tags": [
          "Order"
        ],
        "parameters": [],
        "requestBody": {
          "description": "목표 주문 목록&#39;",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingDeliveryPiece.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "미완성 작품 목록",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IShoppingDeliveryPiece.ICreate"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/deliveries/{deliveryId}/journeys": {
      "post": {
        "summary": "새로운 여행을 만들어보세요",
        "description": "새로운 여정을 만듭니다. {@link IShoppingDelivery 배송}의 새로운 {@link IShoppingDeliveryJourney 여정}을 만듭니다. 이 작업은 관련 {@link IShoppingOrderGood.state}를 변경할 수 있습니다. 또한 대상 여정의 유형이 &quot;배달 중&quot;인 경우 속성 {@link IShoppingDeliveryJourney.completed_at}이 null인지 여부는 관련 상품의 상태에 영향을 미칩니다. 속성이 null이 아닌 경우 상태가 &quot;도착&quot;이 됩니다. 그렇지 않은 경우 상태가 &quot;배달 중&quot;이 됩니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "deliveryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속 배달 {@link IShoppingDelivery.id }"
          }
        ],
        "requestBody": {
          "description": "여행의 창조 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingDeliveryJourney.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 만든 여행",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingDeliveryJourney"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/deliveries/{deliveryId}/journeys/{id}/complete": {
      "put": {
        "summary": "여행을 완료하세요",
        "description": "여정을 완료합니다. {@link IShoppingDelivery 배달}의 {@link IShoppingDeliveryJourney 여정}을 완료합니다. 즉, {@link IShoppingDeliveryJourney.completed_at} 속성을 현재 시간으로 채웁니다. 대상 여정의 유형이 &quot;배달 중&quot;인 경우 이 작업은 관련 {@link IShoppingOrderGood.state 상품의 상태}를 &quot;도착&quot;으로 변경할 수 있습니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "deliveryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속 배달 {@link IShoppingDelivery.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 여정의 {@link IShoppingDeliveryJourney.id }"
          }
        ],
        "requestBody": {
          "description": "여행 완료 시간",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingDeliveryJourney.IComplete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/deliveries/{deliveryId}/journeys/{id}": {
      "delete": {
        "summary": "여행을 지우다",
        "description": "여정을 지웁니다. {@link IShoppingDelivery 배송}의 {@link IShoppingDeliveryJourney 여정}을 지웁니다. 여정을 지우는 것이 속한 배송의 마지막 여정인 경우, 이 작업은 관련 {@link IShoppingOrderGood.state}를 변경할 수 있습니다. 마지막 여정을 지우면 상태가 이전 상태로 롤백됩니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "deliveryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속 배달 {@link IShoppingDelivery.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 여정의 {@link IShoppingDeliveryJourney.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "새로 만든 여행",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/deliveries/{deliveryId}/shippers": {
      "post": {
        "summary": "새로운 운송업체 생성",
        "description": "새로운 운송업체를 만듭니다. {@link IShoppingDelivery 배송}의 새로운 {@link IShoppingDeliveryShipper 운송업체}를 만듭니다. 이 작업은 관련된 {@link IShoppingOrder 주문}이나 {@link IShoppingOrderGood 상품}(예: {@link IShoppingDeliveryJourney} 또는 {@link IShoppingDeliveryPiece} 사례)에는 영향을 미치지 않지만, {@link IShoppingCustomer 고객}에게만 알립니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "deliveryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속 배달 {@link IShoppingDelivery.id }"
          }
        ],
        "requestBody": {
          "description": "발송인의 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingDeliveryShipper.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 발송자",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingDeliveryShipper"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/coupons": {
      "post": {
        "summary": "새로운 쿠폰을 만드세요",
        "description": "새로운 쿠폰을 만드세요. 주어진 정보로 새로운 {@link IShoppingCoupon 쿠폰}을 만드세요. 그런데, 만약 당신이 {@link IShoppingSeller 판매자}라면, include direction의 {@link IShoppingCouponSellerCriteria} 또는 {@link IShoppingCouponSaleCriteria} 조건을 추가해야 합니다. 이는 {@link IShoppingAdministrator 관리자}만이 마켓 전체에서 사용할 수 있는 쿠폰을 만들 수 있기 때문입니다. 판매자는 자신의 {@link IShoppingSale 판매}로 사용 범위를 제한해야 합니다. 물론, 관리자가 마켓 전체에서 사용할 수 있는 일반 쿠폰을 만들 계획이라면, 관리자는 영향을 받을 판매자의 동의를 받아야 합니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [],
        "requestBody": {
          "description": "쿠폰 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingCoupon.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 쿠폰",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingCoupon"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "summary": "모든 쿠폰을 나열하세요",
        "description": "모든 쿠폰을 나열합니다. 페이지 번호가 있는 모든 {@link IShoppingCoupon 쿠폰}을 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingCoupon.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingCoupon.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 지정할 수 있습니다. 참고로, {@link IShoppingCustomer 고객}인 경우 {@link IShoppingCouponTicket ticketable} 쿠폰만 나열됩니다. 그렇지 않으면 티켓이 없는 쿠폰도 나열됩니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingCoupon.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 쿠폰",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingCoupon"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/coupons/{id}": {
      "delete": {
        "summary": "쿠폰 지우기",
        "description": "쿠폰을 지웁니다. 주어진 ID로 {@link IShoppingCoupon 쿠폰}을 지웁니다. 참고로, 대상 쿠폰에서 이미 발행된 {@link IShoppingCouponTicket 티켓}이 있다면 영향을 받지 않습니다. 해당 티켓은 만료 시간까지 유효합니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "타겟 쿠폰 {@link IShoppingCoupon.id }"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "쿠폰 정보 받기",
        "description": "쿠폰 정보를 얻으세요. {@link IShoppingCoupon 쿠폰} 정보를 얻으세요. {@link IShoppingCustomer 고객}인 경우, {@link IShoppingCouponTicket ticketable} 쿠폰만 이용할 수 있습니다. 티켓이 불가능한 쿠폰은 410 gone 오류를 일으킵니다. 그렇지 않은 경우, {@link IShoppingSeller 판매자} 또는 {@link IShoppingAdministrator 관리자}인 경우, 티켓이 불가능한 쿠폰도 이용할 수 있습니다..",
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "타겟 쿠폰 {@link IShoppingCoupon.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "쿠폰 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingCoupon"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/orders": {
      "patch": {
        "summary": "모든 주문을 나열하세요",
        "description": "모든 주문을 나열합니다. 페이지 번호가 있는 모든 {@link IShoppingOrder 주문}을 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingOrder.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingOrder.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다. 참고로, {@link IShoppingCustomer 고객}인 경우 직접 주문을 나열할 수 있으며 주문이 {@link IShoppingOrderPublish.paid_at paid}되었는지 여부는 중요하지 않습니다. 그렇지 않은 경우 {@link IShoppingSeller 판매자} 또는 {@link IShoppingAdministrator 관리자}인 경우 유료 주문만 나열할 수 있습니다. 또한 판매자의 경우 관련 {@link IShoppingOrder.goods 상품}만 주문에 나열됩니다..",
        "tags": [
          "Order"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingOrder.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 주문",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingOrder"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/orders/{id}": {
      "get": {
        "summary": "주문 정보 받기",
        "description": "주문 정보를 얻으세요. 자세한 {@link IShoppingOrder 주문} 정보를 얻으세요. {@link IShoppingCustomer 고객}이 아니라면 아직 {@link IShoppingOrderPublish.paid_at paid}되지 않은 주문에 액세스할 수 없습니다. 이 경우 404 찾을 수 없음 오류가 발생합니다..",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 주문의 {@link IShoppingOrder.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "주문 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingOrder"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales": {
      "post": {
        "summary": "판매 만들기",
        "description": "판매를 만듭니다. {@link IShoppingSeller Seller}는 운영을 위해 새로운 {@link IShoppingSale}을 만듭니다. 참고로 판매는 {@link IShoppingSaleUnit 단위}, {@link IShoppingSaleUnitOption 옵션} 및 {@link IShoppingSaleUnitStock 주식}으로 구성된 복잡한 계층 구조를 가지고 있습니다. 따라서 새로운 판매를 만들기 전에 {@link IShoppingSale} 및 관련 DTO 문서를 읽어보시기를 권장합니다. ERD(Entity Relationship Diagram) 및 해당 설명 문서도 도움이 될 것입니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [],
        "requestBody": {
          "description": "판매 정보 생성",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSale.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 세일",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSale"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "summary": "요약된 모든 판매 내역을 나열하세요",
        "description": "요약된 모든 판매를 나열합니다. 모든 {@link IShoppingSale.ISummary 요약된 판매}를 나열합니다. 보시다시피, 반환된 판매는 자세히 설명하지 않고 요약합니다. 판매에 대한 자세한 정보를 얻으려면 각 판매에 대해 {@link at} 함수를 사용합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매}에만 액세스할 수 있습니다. 그렇지 않은 경우 {@link IShoppingCustomer 고객}인 경우 시장에서 운영 중인 판매만 볼 수 있습니다. 미개봉, 마감 또는 중단된 판매는 볼 수 없습니다. 그런데 원하는 경우 요청 본문에서 {@link IShoppingSale.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingSale.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSale.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "요약된 정보가 있는 페이지별 판매",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSale.ISummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{id}": {
      "put": {
        "summary": "판매 업데이트",
        "description": "판매 업데이트. 새로운 정보로 {@link IShoppingSale 판매}를 업데이트합니다. 그런데 판매는 실제로 수정되지 않고 판매의 새로운 {@link IShoppingSaleSnapshot 스냅샷} 기록을 만듭니다. 첫 번째 목적은 판매의 무결성을 유지하는 것입니다. 판매 수정으로 인해 판매에 이미 적용된 {@link IShoppingOrder 주문}에 영향을 미치지 않아야 합니다. 두 번째 목적은 A/B 테스트를 위한 것입니다. {@link IShoppingSeller 판매자}는 가격, 콘텐츠 및 제품 구성을 변경하여 운영 성과를 입증해야 합니다. 이 스냅샷 개념이 도움이 될 것입니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 세일 {@link IShoppingSale.id }"
          }
        ],
        "requestBody": {
          "description": "판매에 대한 새로운 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleSnapshot.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "새로운 스냅샷으로 업데이트된 판매",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSale"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "세일 정보 받기",
        "description": "판매 정보를 얻으세요. 자세한 정보가 포함된 {@link IShoppingSale 판매}를 얻으세요. {@link IShoppingSeller 판매자}인 경우, 본인 {@link IShoppingSale 판매}에만 액세스할 수 있습니다. 그렇지 않은 경우 {@link IShoppingCustomer 고객}인 경우, 마켓에서 운영 중인 판매에만 액세스할 수 있습니다. 미개봉, 마감 또는 중단된 판매에는 액세스할 수 없습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 세일 {@link IShoppingSale.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 판매 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSale"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{id}/open": {
      "put": {
        "summary": "판매 시작 및 종료 시간 변경",
        "description": "판매의 시작 및 종료 시간을 변경합니다. {@link IShoppingSale 판매}의 시작 및 종료 시간을 업데이트합니다. 그런데 판매가 아직 시작되거나 종료된 경우 시작 시간을 변경할 수 없습니다. 반대로 판매가 이미 시작되었지만 아직 종료되지 않은 경우 종료 시간을 변경할 수 있습니다. 물론 종료 시간이 시작 시간보다 짧거나 그렇지 않은 경우 428 처리 불가 엔터티 오류가 발생합니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 세일 {@link IShoppingSale.id }"
          }
        ],
        "requestBody": {
          "description": "새로운 오픈 및 마감 시간",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSale.IUpdateOpeningTime"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{id}/replica": {
      "post": {
        "summary": "판매품의 복제품을 얻으세요",
        "description": "판매의 복제본을 가져옵니다. 복제를 위한 대상 판매의 {@link IShoppingSale.ICreate} 유형 정보를 가져옵니다. 비슷한 정보로 새 복제 {@link IShoppingSale 판매}를 만드는 데 유용할 것입니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 세일 {@link IShoppingSale.id }"
          }
        ],
        "responses": {
          "201": {
            "description": "복제를 위한 판매 생성 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSale.ICreate"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{id}/pause": {
      "delete": {
        "summary": "판매 일시 중지",
        "description": "판매를 일시 중지합니다. {@link IShoppingSale 판매}를 {@link open opens} 상태에서 일시 중지합니다. 따라서 판매는 {@link restore restored}될 때까지 다시 운영될 수 없습니다. 그런데, {@link IShoppingCustomer customer}는 여전히 {@link index}와 {@link at} API endpint에서 판매할 수 있지만 &quot;paused&quot; 레이블이 붙습니다. 또한, 고객은 더 이상 쇼핑 카트에 넣을 수 없습니다. 판매가 이미 쇼핑 카트에 들어갔더라도 {@link IShoppingCartCommodity merchandise}는 쇼핑 카트에 나열되지 않습니다. 또한, 일시 중지된 판매의 상품에 {@link IShoppingOrder 주문}을 적용할 수도 없습니다. 그런데, 판매가 이미 주문에 적용된 경우, 주문은 {@link IShoppingOrderPublish published}될 수 있으며 {@link IShoppingSeller seller}는 상품을 고객에게 {@link IShoppingDelivery 배송}해야 합니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 세일 {@link IShoppingSale.id }"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{id}/suspend": {
      "delete": {
        "summary": "판매 중단",
        "description": "판매 중단. {@link IShoppingSale 판매}를 {@link open opens} 상태에서 중단합니다. 따라서 판매는 {@link restore restored}될 때까지 다시 운영될 수 없으며 {@link IShoppingCustomer customer}는 {@link index} 및 {@link at} API에서 판매를 볼 수 없습니다. 또한 고객은 더 이상 쇼핑 카트에 넣을 수 없습니다. 판매가 이미 쇼핑 카트에 들어갔더라도 {@link IShoppingCartCommodity merchandise}는 쇼핑 카트에 나열되지 않습니다. 또한 중단된 판매의 상품에 {@link IShoppingOrder 주문}을 적용할 수도 없습니다. 그런데 판매가 이미 주문에 적용된 경우 주문을 {@link IShoppingOrderPublish published}할 수 있으며 {@link IShoppingSeller seller}는 상품을 고객에게 {@link IShoppingDelivery 배송}해야 합니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 세일 {@link IShoppingSale.id }"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{id}/restore": {
      "put": {
        "description": "판매 복원 {@link IShoppingSale 판매}를 {@link pause paused} 또는 {@link suspension suspended} 상태에서 복원합니다. 따라서 판매는 {@link IShoppingSale.closed_at closing time}에 도달하지 않은 경우 다시 운영될 수 있습니다. 또한 {@link IShoppingCustomer 고객}이 일시 중지 또는 일시 중지될 때 판매를 쇼핑 카트에 넣은 경우 {@link IShoppingCartCommodity 상품}이 쇼핑 카트에 다시 나열됩니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 세일 {@link IShoppingSale.id }"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{saleId}/questions/{questionId}/answer": {
      "post": {
        "summary": "답변글을 작성하세요",
        "description": "답변 기사를 작성하세요. {@link IShoppingCustomer}가 작성한 특정 {@link IShoppingSaleInquiry 질문 기사}에 대한 공식적인 {@link IShoppingSaleInquiryAnswer 답변 기사}를 작성하세요. 이것은 질문 기사당 하나만 작성할 수 있는 공식적인 답변입니다(하지만 {@link update updatable}). 따라서 {@link IShoppingSeller 판매자}가 신중하게 작성하도록 안내해야 합니다. 또한 판매자는 질문 기사에 원하는 만큼 {@link IShoppingSaleInquiryComment 댓글}을 작성할 수 있으므로 추가 커뮤니케이션에 유용할 것입니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "questionId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 질문의 {@link IShoppingSaleQuestion.id }"
          }
        ],
        "requestBody": {
          "description": "답변글 작성정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IBbsArticle.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 답변 문서",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryAnswer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "답변 기사 업데이트",
        "description": "답변 기사 업데이트. 공식적인 {@link IShoppingSaleInquiryAnswer 답변 기사}를 {@link IShoppingCustomer}가 작성한 특정 {@link IShoppingSaleInquiry 질문 기사}로 업데이트합니다. 그런데 이 쇼핑몰의 기사에 대한 일반 정책과 마찬가지로 질문 기사를 수정해도 실제로 기존 내용은 변경되지 않습니다. 수정된 내용은 기존 기사 레코드에 새로운 {@link IShoppingSaleInquiryAnswer.ISnapshot 스냅샷}으로 누적되어 기록됩니다. 그리고 이는 {@link IShoppingCustomer 고객}과 {@link IShoppingSeller 판매자}를 포함한 모든 사람에게 공개되며, 기사를 볼 수 있는 사람은 누구나 전체 편집 내역을 볼 수 있습니다. 이는 고객이나 판매자가 분쟁이 쉽게 발생하는 전자상거래의 특성상 기사를 수정하고 상황을 조작하는 것을 방지하기 위한 것입니다. 즉, 증거를 보존하기 위한 것입니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "questionId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 질문의 {@link IShoppingSaleQuestion.id }"
          }
        ],
        "requestBody": {
          "description": "답변 기사의 정보를 업데이트합니다",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IBbsArticle.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "답변 기사의 새로 생성된 스냅샷 기록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryAnswer.ISnapshot"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{saleId}/questions/{inquiryId}/comments": {
      "patch": {
        "summary": "모든 문의사항을 나열하세요",
        "description": "모든 문의 댓글을 나열합니다. {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}의 모든 {@link IShoppingSaleInquiryComment 문의 댓글}을 {@link IPage 페이지 매김}과 함께 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingSaleInquiryComment.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingSaleInquiryComment.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다. 그런데, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매}의 문의에만 액세스할 수 있습니다. 그렇지 않은 경우 판매의 모든 문의에 액세스할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 문의사항은 {@link IShoppingSaleInquiry.id}에 있습니다."
          }
        ],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleInquiryComment.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 문의 댓글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleInquiryComment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "문의사항 작성하기",
        "description": "문의 댓글을 작성합니다. {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}에 대한 {@link IShoppingSaleInquiryComment 문의 댓글}을 작성합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 본인의 {@link IShoppingSale 판매} 문의에만 문의 댓글을 작성할 수 있습니다. 그렇지 않은 경우 판매의 모든 문의에 문의 댓글을 작성할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 문의 {@link IShoppingSaleInquiry.id }"
          }
        ],
        "requestBody": {
          "description": "문의사항 작성정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleInquiryComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 문의 댓글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryComment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{saleId}/questions/{inquiryId}/comments/{id}": {
      "get": {
        "summary": "문의사항 댓글 정보 받기",
        "description": "문의 댓글 정보를 얻으세요. {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}에 대한 자세한 {@link IShoppingSaleInquiryComment 문의 댓글} 정보를 얻으세요. 참고로, {@link IShoppingSeller 판매자}인 경우 본인의 {@link IShoppingSale 판매}의 문의 댓글에만 접근할 수 있습니다. 그렇지 않은 경우 판매의 모든 문의 댓글에 접근할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 문의사항은 {@link IShoppingSaleInquiry.id}에 있습니다."
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 문의 댓글 {@link IShoppingSaleInquiryComment.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 문의사항 댓글정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryComment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "문의사항 댓글 업데이트",
        "description": "문의 댓글을 업데이트합니다. {@link IShoppingSaleInquiryComment 문의 댓글}을 특정 {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}로 업데이트합니다. 그런데, 이 쇼핑몰의 댓글에 대한 일반 정책과 마찬가지로 댓글을 수정해도 기존 내용은 실제로 변경되지 않습니다. 수정된 내용은 누적되어 기존 댓글 기록에 새로운 {@link IShoppingSaleInquiryComment.ISnapshot 스냅샷}으로 기록됩니다. 그리고 이것은 이 문의 댓글을 읽을 수 있는 모든 사람에게 공개됩니다. 이는 고객이나 판매자가 댓글을 수정하고 분쟁이 쉽게 발생하는 전자상거래의 특성으로 인해 상황을 조작하는 것을 방지하기 위한 것입니다. 즉, 증거를 보존하기 위한 것입니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 문의사항은 {@link IShoppingSaleInquiry.id}에 있습니다."
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 문의 댓글 {@link IShoppingSaleInquiryComment.id }"
          }
        ],
        "requestBody": {
          "description": "문의사항 댓글 정보 업데이트",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleInquiryComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "문의사항에 대한 신규 생성 스냅샷 기록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryComment.ISnapshot"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{saleId}/questions": {
      "patch": {
        "summary": "요약된 모든 질문을 나열하세요",
        "description": "모든 요약된 질문을 나열합니다. {@link IShoppingSale 판매}의 모든 {@link IShoppingSaleQuestion.ISummary 요약된 질문}을 나열합니다. 보시다시피, 반환된 질문은 자세히 설명하지 않고 요약합니다. 질문의 자세한 정보를 얻으려면 각 기사에 대해 {@link adridges} 함수나 {@link at} 함수를 사용합니다. 또한 반환된 질문에는 {@link IShoppingSaleQuestion.ISummary.answer} 속성이 있는데, 이는 {@link IShoppingSeller}의 공식적인 답변을 의미합니다. 또한 반환된 질문에는 다른 원칙 속성에 마스킹된 또 다른 특수 속성 {@link IShoppingSaleQuestion.ISummary.secret}이 있는데, 이는 관련된 행위자만 질문을 {@link at 읽을} 수 있음을 의미합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매} 질문에만 액세스할 수 있습니다. 그렇지 않은 경우 판매의 모든 질문에 액세스할 수 있습니다. 그런데, 원하시면 요청 본문에 {@link IShoppingSaleQuestion.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한, {@link IShoppingSaleQuestion.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleQuestion.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "요약된 정보가 있는 페이지별 질문",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleQuestion.ISummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{saleId}/questions/abridges": {
      "patch": {
        "summary": "모든 요약된 질문을 나열하세요",
        "description": "모든 축약된 질문을 나열합니다. {@link IShoppingSale 판매}의 모든 {@link IShoppingSaleQuestion.IAbridge 축약된 질문}을 나열합니다. 보시다시피, 반환된 질문은 자세한 정보가 아닌 축약된 것입니다. 질문의 자세한 정보를 얻으려면 각 기사에 {@link at} 함수를 사용합니다. 또한 반환된 질문에는 {@link IShoppingSaleQuestion.IAridge.answer} 속성이 있는데, 이는 {@link IShoppingSeller}의 공식적인 답변을 의미합니다. 또한 반환된 질문에는 다른 원칙 속성에 대한 마스크 처리가 있는 또 다른 특수 속성 {@link IShoppingSaleQuestion.IAridge.secret}이 있는데, 이는 관련된 행위자만 질문을 {@link at 읽을 수 있음을 의미합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매} 질문에만 액세스할 수 있습니다. 그렇지 않은 경우 판매의 모든 질문에 액세스할 수 있습니다. 그런데, 원하시면 요청 본문에 {@link IShoppingSaleQuestion.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한, {@link IShoppingSaleQuestion.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleQuestion.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "요약된 정보가 있는 페이지별 질문",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleQuestion.IAbridge"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{saleId}/questions/{id}": {
      "get": {
        "summary": "질문 정보 받기",
        "description": "질문 정보를 얻으세요. {@link IShoppingSale 판매}에 대한 자세한 {@link IShoppingSaleQuestion 질문} 정보를 얻으세요. 참고로, {@link IShoppingSeller 판매자}인 경우 본인의 {@link IShoppingSale 판매} 질문에만 액세스할 수 있습니다. 그렇지 않은 경우 {@link IShoppingCustomer 고객}인 경우 판매의 모든 질문에 액세스할 수 있지만 {@link IShoppingSaleQuestion.secret} 값은 `false`입니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 질문의 {@link IShoppingSaleQuestion.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 질문 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleQuestion"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{saleId}/reviews/{reviewId}/answer": {
      "post": {
        "summary": "답변글을 작성하세요",
        "description": "답변 기사를 작성하세요. {@link IShoppingCustomer}가 작성한 특정 {@link IShoppingSaleInquiry 리뷰 기사}에 대한 공식적인 {@link IShoppingSaleInquiryAnswer 답변 기사}를 작성하세요. 이는 리뷰 기사당 하나만 작성할 수 있는 공식적인 답변입니다(하지만 {@link update updatable}). 따라서 {@link IShoppingSeller 판매자}가 신중하게 작성하도록 안내해야 합니다. 또한 판매자는 리뷰 기사에 원하는 만큼 {@link IShoppingSaleInquiryComment 댓글}을 작성할 수 있으므로 추가 커뮤니케이션에 유용할 것입니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "reviewId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 리뷰의 {@link IShoppingSaleReview.id }"
          }
        ],
        "requestBody": {
          "description": "답변글 작성정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IBbsArticle.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 답변 문서",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryAnswer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "답변 기사 업데이트",
        "description": "답변 기사 업데이트. 공식적인 {@link IShoppingSaleInquiryAnswer 답변 기사}를 {@link IShoppingCustomer}가 작성한 특정 {@link IShoppingSaleInquiry 리뷰 기사}로 업데이트합니다. 그런데 이 쇼핑몰의 기사에 대한 일반 정책과 마찬가지로 리뷰 기사를 수정해도 실제로 기존 내용은 변경되지 않습니다. 수정된 내용은 기존 기사 레코드에 새로운 {@link IShoppingSaleInquiryAnswer.ISnapshot 스냅샷}으로 누적되어 기록됩니다. 그리고 이는 {@link IShoppingCustomer 고객}과 {@link IShoppingSeller 판매자}를 포함한 모든 사람에게 공개되며, 기사를 볼 수 있는 사람은 누구나 전체 편집 내역을 볼 수 있습니다. 이는 고객이나 판매자가 분쟁이 쉽게 발생하는 전자상거래의 특성상 기사를 수정하고 상황을 조작하는 것을 방지하기 위한 것입니다. 즉, 증거를 보존하기 위한 것입니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "reviewId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 리뷰의 {@link IShoppingSaleReview.id }"
          }
        ],
        "requestBody": {
          "description": "답변 기사의 정보를 업데이트합니다",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IBbsArticle.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "답변 기사의 새로 생성된 스냅샷 기록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryAnswer.ISnapshot"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{saleId}/reviews/{inquiryId}/comments": {
      "patch": {
        "summary": "모든 문의사항을 나열하세요",
        "description": "모든 문의 댓글을 나열합니다. {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}의 모든 {@link IShoppingSaleInquiryComment 문의 댓글}을 {@link IPage 페이지 매김}과 함께 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingSaleInquiryComment.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingSaleInquiryComment.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다. 그런데, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매}의 문의에만 액세스할 수 있습니다. 그렇지 않은 경우 판매의 모든 문의에 액세스할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 문의사항은 {@link IShoppingSaleInquiry.id}에 있습니다."
          }
        ],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleInquiryComment.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 문의 댓글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleInquiryComment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "문의사항 작성하기",
        "description": "문의 댓글을 작성합니다. {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}에 대한 {@link IShoppingSaleInquiryComment 문의 댓글}을 작성합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 본인의 {@link IShoppingSale 판매} 문의에만 문의 댓글을 작성할 수 있습니다. 그렇지 않은 경우 판매의 모든 문의에 문의 댓글을 작성할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 문의 {@link IShoppingSaleInquiry.id }"
          }
        ],
        "requestBody": {
          "description": "문의사항 작성정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleInquiryComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로 생성된 문의 댓글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryComment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{saleId}/reviews/{inquiryId}/comments/{id}": {
      "get": {
        "summary": "문의사항 댓글 정보 받기",
        "description": "문의 댓글 정보를 얻으세요. {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}에 대한 자세한 {@link IShoppingSaleInquiryComment 문의 댓글} 정보를 얻으세요. 참고로, {@link IShoppingSeller 판매자}인 경우 본인의 {@link IShoppingSale 판매}의 문의 댓글에만 접근할 수 있습니다. 그렇지 않은 경우 판매의 모든 문의 댓글에 접근할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 문의사항은 {@link IShoppingSaleInquiry.id}에 있습니다."
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 문의 댓글 {@link IShoppingSaleInquiryComment.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 문의사항 댓글정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryComment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "문의사항 댓글 업데이트",
        "description": "문의 댓글을 업데이트합니다. {@link IShoppingSaleInquiryComment 문의 댓글}을 특정 {@link IShoppingSaleQuestion 질문} 또는 {@link IShoppingSaleReview 리뷰}로 업데이트합니다. 그런데, 이 쇼핑몰의 댓글에 대한 일반 정책과 마찬가지로 댓글을 수정해도 기존 내용은 실제로 변경되지 않습니다. 수정된 내용은 누적되어 기존 댓글 기록에 새로운 {@link IShoppingSaleInquiryComment.ISnapshot 스냅샷}으로 기록됩니다. 그리고 이것은 이 문의 댓글을 읽을 수 있는 모든 사람에게 공개됩니다. 이는 고객이나 판매자가 댓글을 수정하고 분쟁이 쉽게 발생하는 전자상거래의 특성으로 인해 상황을 조작하는 것을 방지하기 위한 것입니다. 즉, 증거를 보존하기 위한 것입니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 문의사항은 {@link IShoppingSaleInquiry.id}에 있습니다."
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 문의 댓글 {@link IShoppingSaleInquiryComment.id }"
          }
        ],
        "requestBody": {
          "description": "문의사항 댓글 정보 업데이트",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleInquiryComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "문의사항에 대한 신규 생성 스냅샷 기록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleInquiryComment.ISnapshot"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{saleId}/reviews": {
      "patch": {
        "summary": "요약된 모든 리뷰를 나열하세요",
        "description": "요약된 모든 리뷰를 나열합니다. {@link IShoppingSale 판매}의 모든 {@link IShoppingSaleReview.ISummary 요약된 리뷰}를 나열합니다. 보시다시피, 반환된 리뷰는 자세히 설명하지 않고 요약합니다. 리뷰의 자세한 정보를 얻으려면 각 기사에 대해 {@link adridges} 함수나 {@link at} 함수를 사용합니다. 또한, 반환된 리뷰에는 {@link IShoppingSaleReview.ISummary.answer} 속성이 있는데, 이는 {@link IShoppingSeller}의 공식적인 답변을 의미합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매} 리뷰에만 액세스할 수 있습니다. 그렇지 않은 경우 판매의 모든 리뷰에 액세스할 수 있습니다. 그런데, 원하는 경우 요청 본문에서 {@link IShoppingSaleReview.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한, {@link IShoppingSaleReview.IRequest.sort sort condition}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleReview.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "요약된 정보가 있는 페이지별 리뷰",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleReview.ISummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{saleId}/reviews/abridges": {
      "patch": {
        "summary": "모든 요약된 리뷰를 나열하세요",
        "description": "모든 요약된 리뷰를 나열합니다. {@link IShoppingSale 판매}의 모든 {@link IShoppingSaleReview.IAbridge 요약된 리뷰}를 나열합니다. 보시다시피, 반환된 리뷰는 자세한 정보가 아닌 요약된 것입니다. 리뷰의 자세한 정보를 얻으려면 각 기사에 {@link at} 함수를 사용합니다. 또한, 반환된 리뷰에는 {@link IShoppingSaleReview.IAridge.answer} 속성이 있는데, 이는 {@link IShoppingSeller}의 공식적인 답변을 의미합니다. 참고로, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매} 리뷰에만 액세스할 수 있습니다. 그렇지 않은 경우 판매의 모든 리뷰에 액세스할 수 있습니다. 그런데, 원하는 경우 요청 본문에서 {@link IShoppingSaleReview.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingSaleReview.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 지정할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleReview.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "요약된 정보가 포함된 페이지별 리뷰",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleReview.IAbridge"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{saleId}/reviews/{id}": {
      "get": {
        "summary": "리뷰 정보 받기",
        "description": "리뷰 정보를 얻으세요. {@link IShoppingSale 세일}에 대한 자세한 {@link IShoppingSaleReview 리뷰} 정보를 얻으세요. 참고로, {@link IShoppingSeller 판매자}인 경우 본인의 {@link IShoppingSale 세일} 리뷰에만 접근할 수 있습니다. 그렇지 않은 경우 {@link IShoppingCustomer 고객}인 경우 세일의 모든 리뷰에 접근할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 리뷰의 {@link IShoppingSaleReview.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 리뷰 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleReview"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{saleId}/snapshots/{id}/replica": {
      "post": {
        "summary": "스냅샷의 복제본을 얻으세요",
        "description": "스냅샷의 복제본을 가져옵니다. 복제를 위해 대상 {@link IShoppingSaleSnapshot snapshot} 레코드의 {@link IShoppingSale.ICreate} 유형 정보를 가져옵니다. 이전 스냅샷에서 새 복제 {@link IShoppingSale sale}를 만드는 데 유용할 것입니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "대상 스냅샷의 {@link IShoppingSaleSnapshot.id }"
          }
        ],
        "responses": {
          "201": {
            "description": "복제를 위한 판매 생성 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSale.ICreate"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{saleId}/snapshots": {
      "patch": {
        "summary": "모든 스냅샷을 나열하세요",
        "description": "모든 스냅샷을 나열합니다. {@link IShoppingSeller seller}가 {@link IShoppingSale sale}을 업데이트할 때마다 판매 기록은 업데이트되지 않지만 판매 내역의 무결성을 유지하기 위해 새로운 {@link IShoppingSaleSnapshot snapshot} 레코드가 생성됩니다. 이 API 함수는 이러한 스냅샷 레코드를 나열하기 위한 것입니다. 또한 반환 유형에서 볼 수 있듯이 반환된 스냅샷은 자세히 설명되지 않고 요약되어 있습니다. 스냅샷의 자세한 정보를 얻으려면 각 스냅샷에 대해 {@link at} 또는 {@link flipo} 함수를 사용합니다. 참고로, {@link IShoppingSeller seller}인 경우 자신의 {@link IShoppingSale sale}의 스냅샷에만 액세스할 수 있습니다. 그렇지 않으면 판매가 종료되거나 중단되었더라도 판매의 모든 스냅샷에 액세스할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 세일 {@link IShoppingSale.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 번호 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "요약된 정보가 있는 페이지별 스냅샷",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleSnapshot.ISummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{saleId}/snapshots/{id}": {
      "get": {
        "summary": "스냅샷 정보 얻기",
        "description": "스냅샷 정보를 가져옵니다. 자세한 정보가 포함된 {@link IShoppingSaleSnapshot 스냅샷}을 가져옵니다. 반환 유형에서 볼 수 있듯이 반환된 스냅샷에는 {@link IShoppingSale 판매} 정보가 포함되지 않습니다. 판매 정보를 가져오려면 대신 {@link flip} 함수를 사용하세요. 참고로, {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매} 스냅샷에만 액세스할 수 있습니다. 그렇지 않으면 판매가 종료되거나 중단되었더라도 모든 판매 스냅샷에 액세스할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "대상 스냅샷의 {@link IShoppingSaleSnapshot.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "스냅샷의 자세한 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleSnapshot"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{saleId}/snapshots/{id}/flip": {
      "get": {
        "summary": "뒤집힌 스냅샷 정보 가져오기",
        "description": "뒤집힌 스냅샷 정보를 가져옵니다. 뒤집힌 스냅샷의 {@link IShoppingSale 판매} 정보를 가져옵니다. 반환 유형에서 볼 수 있듯이 이 함수는 {@link IShoppingSale 판매} 정보를 반환합니다. 그런데 판매 정보는 최신 정보가 아니라 스냅샷 측의 뒤집힌 정보입니다. 또한 {@link IShoppingSeller 판매자}인 경우 자신의 {@link IShoppingSale 판매}의 스냅샷에만 액세스할 수 있습니다. 그렇지 않으면 판매가 종료되거나 중단되었더라도 판매의 모든 스냅샷에 액세스할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "대상 스냅샷의 {@link IShoppingSaleSnapshot.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "스냅샷 측면에서 자세한 판매 정보를 확인하세요",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSale"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{saleId}/units/{unitId}/stocks/{stockId}/supplements": {
      "patch": {
        "summary": "모든 보충제를 나열하세요",
        "description": "모든 보충제를 나열합니다. 특정 {@link IShoppingSaleUnitStock 주식}의 모든 {@link IShoppingSaleUnitStockSupplement 보충제 내역}을 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingSaleUnitStockSupplement.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingSaleUnitStockSupplement.IRequest.sort} 속성을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "unitId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 유닛 {@link IShoppingSaleUnit.id }"
          },
          {
            "name": "stockId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 주식 {@link IShoppingSaleUnitStock.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleUnitStockSupplement.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지가 매겨진 보충 자료",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSaleUnitStockSupplement"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "보충제 만들기",
        "description": "보충제를 만듭니다. 특정 {@link IShoppingSaleUnitStock 주식}의 {@link IShoppingSaleUnitStockSupplement 보충제 기록}을 만듭니다. 따라서 대상 주식의 {@link IShoppingSaleUnitStockInventory.income 재고}는 {@link IShoppingSaleUnitStockSupplement.value 보충제의 가치}만큼 증가합니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "unitId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 유닛 {@link IShoppingSaleUnit.id }"
          },
          {
            "name": "stockId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 주식 {@link IShoppingSaleUnitStock.id }"
          }
        ],
        "requestBody": {
          "description": "보충제 정보 생성",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleUnitStockSupplement.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "보충제 생성됨",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSaleUnitStockSupplement"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/sales/{saleId}/units/{unitId}/stocks/{stockId}/supplements/{id}": {
      "put": {
        "summary": "보충제 업데이트",
        "description": "보충제 업데이트. 특정 {@link IShoppingSaleUnitStock 주식}의 {@link IShoppingSaleUnitStockSupplement 보충제}의 수량 값을 업데이트합니다. 따라서 대상 주식의 {@link IShoppingSaleUnitStockInventory.income 재고}는 {@link IShoppingSaleUnitStockSupplement.value 보충제의 값}에 따라 변경됩니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "unitId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 유닛 {@link IShoppingSaleUnit.id }"
          },
          {
            "name": "stockId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 주식 {@link IShoppingSaleUnitStock.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 보충제 {@link IShoppingSaleUnitStockSupplement.id }"
          }
        ],
        "requestBody": {
          "description": "보충제 정보(수량) 업데이트",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSaleUnitStockSupplement.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "보충제 지우기",
        "description": "보충제를 지웁니다. 특정 {@link IShoppingSaleUnitStock 주식}의 {@link IShoppingSaleUnitStockSupplement 보충제}를 지웁니다. 따라서 대상 주식의 {@link IShoppingSaleUnitStockInventory.income 재고}는 {@link IShoppingSaleUnitStockSupplement.value 보충제의 가치}만큼 감소합니다..",
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소유한 세일 {@link IShoppingSale.id }"
          },
          {
            "name": "unitId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "소속된 유닛 {@link IShoppingSaleUnit.id }"
          },
          {
            "name": "stockId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 주식 {@link IShoppingSaleUnitStock.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 보충제 {@link IShoppingSaleUnitStockSupplement.id }"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/systematic/channels/{channelCode}/categories": {
      "patch": {
        "summary": "모든 카테고리를 자식 레코드와 함께 나열합니다.",
        "description": "모든 카테고리를 자식 레코드와 함께 나열합니다. 페이지 번호가 있는 {@link IShoppingChannelCategory.IHierarchical 카테고리}를 {@link IShoppingChannel 채널}의 모든 카테고리를 나열합니다. 반환된 카테고리에는 자식 카테고리도 포함됩니다. 원하는 경우 요청 본문에서 {@link IShoppingChannelCategory.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingChannelCategory.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "소속 채널 {@link IShoppingChannel.code }"
          }
        ],
        "responses": {
          "200": {
            "description": "자식 카테고리가 있는 페이지별 카테고리",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IShoppingChannelCategory.IHierarchical"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/systematic/channels/{channelCode}/categories/{id}": {
      "get": {
        "summary": "카테고리 정보 받기",
        "description": "카테고리 정보를 가져옵니다. 자세한 {@link IShoppingChannelCategory 카테고리} 정보를 가져옵니다. 반환된 카테고리에는 계층적 자식 카테고리가 포함되어 있으며 재귀적 부모 카테고리도 포함되어 있습니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "소속 채널 {@link IShoppingChannel.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "대상 카테고리의 {@link IShoppingChannelCategory.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 카테고리 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingChannelCategory"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/systematic/channels/{channelCode}/categories/{id}/invert": {
      "get": {
        "summary": "역전된 카테고리 정보를 얻으세요",
        "description": "역전된 카테고리 정보를 가져옵니다. 역전된 {@link IShoppingChannelCategory.IInvert 카테고리} 정보를 가져옵니다. 반환된 카테고리에는 재귀적 부모 카테고리가 포함되지만 계층적 자식 카테고리는 포함되지 않습니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "소속 채널 {@link IShoppingChannel.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "대상 카테고리의 {@link IShoppingChannelCategory.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 카테고리 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingChannelCategory.IInvert"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/systematic/channels": {
      "patch": {
        "summary": "모든 채널을 나열하세요",
        "description": "모든 채널을 나열합니다. 모든 {@link IShoppingChannel 채널}을 페이지 번호로 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingChannel.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingChannel.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingChannel.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지별 채널",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingChannel"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/systematic/channels/hierarchical": {
      "patch": {
        "summary": "중첩된 카테고리로 모든 채널을 나열합니다.",
        "description": "중첩된 카테고리가 있는 모든 채널을 나열합니다. {@link IPage 페이지 매김}이 있는 모든 {@link IShoppingChannel.IHierarchical 채널}을 나열합니다. 반환된 채널에는 중첩된 계층적 {@link IShoppingChannelCategory.IHierarchical 카테고리}가 포함됩니다. 원하는 경우 요청 본문에서 {@link IShoppingChannel.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingChannel.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingChannel.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "중첩된 카테고리가 있는 페이지별 채널",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingChannel.IHierarchical"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/systematic/channels/{id}": {
      "get": {
        "summary": "채널 정보 얻기",
        "description": "채널 정보를 가져옵니다. 자세한 {@link IShoppingChannel.IHierarchical 채널} 정보를 가져옵니다. 반환된 채널 인스턴스에는 중첩된 {@link IShoppingChannelCategory.IHierarchical 계층적 범주} 정보도 포함됩니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 채널의 {@link IShoppingChannel.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 채널 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingChannel.IHierarchical"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/systematic/channels/{code}/get": {
      "get": {
        "summary": "코드로 채널 정보를 얻으세요",
        "description": "코드로 채널 정보를 가져옵니다. 코드로 자세한 {@link IShoppingChannel.IHierarchical 채널} 정보를 가져옵니다. 반환된 채널 인스턴스에는 중첩된 {@link IShoppingChannelCategory.IHierarchical 계층적 범주} 정보도 포함됩니다..",
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "타겟 채널의 {@link IShoppingChannel.code }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 채널 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingChannel.IHierarchical"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/systematic/sections": {
      "patch": {
        "summary": "모든 섹션을 나열하세요",
        "description": "모든 섹션을 나열합니다. 페이지 번호가 있는 모든 {@link IShoppingSection 섹션}을 나열합니다. 원하는 경우 요청 본문에서 {@link IShoppingSection.IRequest.search 검색 조건}을 구성하여 결과를 제한할 수 있습니다. 또한 {@link IShoppingSection.IRequest.sort 정렬 조건}을 구성하여 레코드의 시퀀스 순서를 사용자 정의할 수 있습니다..",
        "tags": [
          "Section"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 번호 매기기, 검색 및 정렬에 대한 정보 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShoppingSection.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지 분할 섹션",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIShoppingSection"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/systematic/sections/{id}": {
      "get": {
        "summary": "섹션 정보 얻기",
        "description": "섹션 정보를 얻으세요. 자세한 {@link IShoppingSection 섹션} 정보를 얻으세요.",
        "tags": [
          "Section"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "타겟 섹션의 {@link IShoppingSection.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 섹션 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSection"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/shoppings/sellers/systematic/sections/{code}/get": {
      "get": {
        "summary": "코드로 섹션 정보를 얻으세요",
        "description": "코드로 섹션 정보를 얻으세요. 코드로 자세한 {@link IShoppingSection 섹션} 정보를 얻으세요.",
        "tags": [
          "Section"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "타겟 섹션의 {@link IShoppingSection.code }"
          }
        ],
        "responses": {
          "200": {
            "description": "자세한 섹션 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShoppingSection"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "IPerformance": {
        "type": "object",
        "properties": {
          "cpu": {
            "$ref": "#/components/schemas/process.global.NodeJS.CpuUsage"
          },
          "memory": {
            "$ref": "#/components/schemas/process.global.NodeJS.MemoryUsage"
          },
          "resource": {
            "$ref": "#/components/schemas/process.global.NodeJS.ResourceUsage"
          }
        },
        "required": [
          "cpu",
          "memory",
          "resource"
        ]
      },
      "process.global.NodeJS.CpuUsage": {
        "type": "object",
        "properties": {
          "user": {
            "type": "number"
          },
          "system": {
            "type": "number"
          }
        },
        "required": [
          "user",
          "system"
        ]
      },
      "process.global.NodeJS.MemoryUsage": {
        "type": "object",
        "properties": {
          "rss": {
            "type": "number",
            "description": "Resident Set Size는 프로세스에 대해 주 메모리 장치(할당된 총 메모리의 하위 집합)에서 차지하는 공간의 양으로, 여기에는 모든 C++ 및 JavaScript 객체와 코드가 포함됩니다.."
          },
          "heapTotal": {
            "type": "number",
            "title": "V8의 메모리 사용량을 말합니다.",
            "description": "V8의 메모리 사용량을 말합니다.."
          },
          "heapUsed": {
            "type": "number",
            "title": "V8의 메모리 사용량을 말합니다.",
            "description": "V8의 메모리 사용량을 말합니다.."
          },
          "external": {
            "type": "number"
          },
          "arrayBuffers": {
            "type": "number",
            "description": "모든 Node.js 버퍼를 포함하여 `ArrayBuffer` 및 `SharedArrayBuffer`에 할당된 메모리를 나타냅니다. 이는 외부 값에도 포함됩니다. Node.js가 임베디드 라이브러리로 사용되는 경우 이 값은 `0`일 수 있습니다. 이 경우 `ArrayBuffer`에 대한 할당이 추적되지 않을 수 있기 때문입니다.."
          }
        },
        "required": [
          "rss",
          "heapTotal",
          "heapUsed",
          "external",
          "arrayBuffers"
        ]
      },
      "process.global.NodeJS.ResourceUsage": {
        "type": "object",
        "properties": {
          "fsRead": {
            "type": "number"
          },
          "fsWrite": {
            "type": "number"
          },
          "involuntaryContextSwitches": {
            "type": "number"
          },
          "ipcReceived": {
            "type": "number"
          },
          "ipcSent": {
            "type": "number"
          },
          "majorPageFault": {
            "type": "number"
          },
          "maxRSS": {
            "type": "number"
          },
          "minorPageFault": {
            "type": "number"
          },
          "sharedMemorySize": {
            "type": "number"
          },
          "signalsCount": {
            "type": "number"
          },
          "swappedOut": {
            "type": "number"
          },
          "systemCPUTime": {
            "type": "number"
          },
          "unsharedDataSize": {
            "type": "number"
          },
          "unsharedStackSize": {
            "type": "number"
          },
          "userCPUTime": {
            "type": "number"
          },
          "voluntaryContextSwitches": {
            "type": "number"
          }
        },
        "required": [
          "fsRead",
          "fsWrite",
          "involuntaryContextSwitches",
          "ipcReceived",
          "ipcSent",
          "majorPageFault",
          "maxRSS",
          "minorPageFault",
          "sharedMemorySize",
          "signalsCount",
          "swappedOut",
          "systemCPUTime",
          "unsharedDataSize",
          "unsharedStackSize",
          "userCPUTime",
          "voluntaryContextSwitches"
        ]
      },
      "ISystem": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "number",
            "title": "무작위 고유 ID",
            "description": "무작위 고유 ID."
          },
          "arguments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "`프로세스.argv`"
          },
          "commit": {
            "$ref": "#/components/schemas/ISystem.ICommit",
            "title": "Git 커밋 정보",
            "description": "Git 커밋 정보."
          },
          "package": {
            "$ref": "#/components/schemas/ISystem.IPackage",
            "description": "`패키지.json`"
          },
          "created_at": {
            "type": "string",
            "title": "이 서버의 생성 시간",
            "description": "이 서버의 생성 시간."
          }
        },
        "required": [
          "uid",
          "arguments",
          "commit",
          "package",
          "created_at"
        ],
        "description": "시스템 정보."
      },
      "ISystem.ICommit": {
        "type": "object",
        "properties": {
          "shortHash": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "sanitizedSubject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "author": {
            "$ref": "#/components/schemas/ISystem.ICommit.IUser"
          },
          "committer": {
            "$ref": "#/components/schemas/ISystem.ICommit.IUser"
          },
          "authored_at": {
            "type": "string"
          },
          "commited_at": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "shortHash",
          "branch",
          "hash",
          "subject",
          "sanitizedSubject",
          "body",
          "author",
          "committer",
          "authored_at",
          "commited_at",
          "tags"
        ],
        "description": "Git 커밋 정보."
      },
      "ISystem.ICommit.IUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "email"
        ],
        "description": "Git 사용자 계정 정보."
      },
      "ISystem.IPackage": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "main": {
            "type": "string"
          },
          "typings": {
            "type": "string"
          },
          "scripts": {
            "$ref": "#/components/schemas/Recordstringstring"
          },
          "repository": {
            "type": "object",
            "properties": {
              "type": {
                "const": "git"
              },
              "url": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "url"
            ]
          },
          "author": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "bugs": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              }
            },
            "required": [
              "url"
            ]
          },
          "homepage": {
            "type": "string"
          },
          "devDependencies": {
            "$ref": "#/components/schemas/Recordstringstring"
          },
          "dependencies": {
            "$ref": "#/components/schemas/Recordstringstring"
          },
          "publishConfig": {
            "type": "object",
            "properties": {
              "registry": {
                "type": "string"
              }
            },
            "required": [
              "registry"
            ]
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "version",
          "description",
          "scripts",
          "repository",
          "author",
          "license",
          "bugs",
          "homepage",
          "dependencies"
        ],
        "description": "NPM 패키지 정보."
      },
      "Recordstringstring": {
        "type": "object",
        "properties": {},
        "description": "T 유형의 속성 K 집합을 갖는 유형을 구성합니다.",
        "additionalProperties": {
          "type": "string"
        }
      },
      "IShoppingAdministrator.IInvert": {
        "type": "object",
        "properties": {
          "type": {
            "const": "administrator",
            "title": "고객 유형에 따른 판별",
            "description": "고객 유형에 따른 판별."
          },
          "member": {
            "$ref": "#/components/schemas/IShoppingMember.IInvert",
            "title": "회원가입 안내",
            "description": "회원가입 안내."
          },
          "customer": {
            "$ref": "#/components/schemas/IShoppingCustomer.IInvert",
            "title": "고객님, 연결정보",
            "description": "고객님, 연결정보."
          },
          "citizen": {
            "$ref": "#/components/schemas/IShoppingCitizen",
            "title": "실명 및 휴대폰 번호 인증 정보",
            "description": "실명 및 휴대폰 번호 인증 정보."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간. 즉, 관리자가 등록한 시간입니다.."
          }
        },
        "required": [
          "type",
          "member",
          "customer",
          "citizen",
          "id",
          "created_at"
        ],
        "description": "관리자 정보에서 시작하여 정보를 반전합니다. {@link IShoppingCustomer.member} -&gt; {@link IShoppingMember.administrator}에서 관리자 정보에 액세스하는 대신 `IShoppingAdministrator.IInvert`는 관리자 정보에서 시작하여 고객, 회원 및 {@link IShoppingCitizen 시민} 정보에 역으로 액세스합니다.."
      },
      "IShoppingMember.IInvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "nickname": {
            "type": "string",
            "title": "회원을 고유하게 식별하는 별명",
            "description": "회원을 고유하게 식별하는 별명."
          },
          "emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingMemberEmail"
            },
            "title": "이메일 목록",
            "description": "이메일 목록."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간. 즉, 회원이 가입한 시간입니다.."
          }
        },
        "required": [
          "id",
          "nickname",
          "emails",
          "created_at"
        ],
        "description": "회원 정보 반전. 이 반전 회원 정보는 아래와 같이 판매자와 관리자의 다른 반전 정보에 사용되도록 설계되었습니다. - {@link IShoppingSeller.IInvert} - {@link IShoppingAdministrator.IInvert}"
      },
      "IShoppingMemberEmail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "value": {
            "type": "string",
            "format": "email",
            "title": "이메일 주소 값",
            "description": "이메일 주소 값."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간."
          }
        },
        "required": [
          "id",
          "value",
          "created_at"
        ],
        "description": "회원의 이메일 주소. 이 쇼핑몰 시스템은 한 명의 {@link IShoppingMember 회원}에 대해 여러 개의 이메일 주소를 등록할 수 있도록 허용합니다. 여러 개의 이메일 주소를 계획할 필요가 없다면 하나만 사용하세요.."
      },
      "IShoppingCustomer.IInvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "channel": {
            "$ref": "#/components/schemas/IShoppingChannel",
            "title": "소속채널",
            "description": "소속채널."
          },
          "external_user": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingExternalUser"
              }
            ],
            "title": "외부 사용자 정보",
            "description": "외부 사용자 정보. 고객이 외부 서비스에서 왔을 때."
          },
          "href": {
            "type": "string",
            "format": "uri",
            "title": "연결 주소",
            "description": "연결 주소. 클라이언트의 {@link window.location.href}와 동일."
          },
          "referrer": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "추천인 주소",
            "description": "레퍼러 주소. 클라이언트의 {@link window.document.referrer}와 동일."
          },
          "ip": {
            "oneOf": [
              {
                "type": "string",
                "format": "ipv4"
              },
              {
                "type": "string",
                "format": "ipv6"
              }
            ],
            "title": "연결 IP 주소",
            "description": "연결 IP 주소."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "연결 레코드 생성 시간",
            "description": "연결 레코드 생성 시간."
          }
        },
        "required": [
          "id",
          "channel",
          "external_user",
          "href",
          "referrer",
          "ip",
          "created_at"
        ],
        "description": "역전된 고객 정보. 이 역전된 고객 정보는 아래와 같이 판매자와 관리자의 다른 역전된 정보에 사용되도록 설계되었습니다. - {@link IShoppingSeller.IInvert} - {@link IShoppingAdministrator.IInvert}"
      },
      "IShoppingChannel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간."
          },
          "code": {
            "type": "string",
            "title": "식별자 코드",
            "description": "식별자 코드."
          },
          "name": {
            "type": "string",
            "title": "채널 이름",
            "description": "채널 이름."
          }
        },
        "required": [
          "id",
          "created_at",
          "code",
          "name"
        ],
        "description": "채널 정보. `IShoppingChannel`은 시장에서 유통 채널을 형성하는 개념입니다. 따라서 이 전자상거래 시스템에서 채널의 차이는 다른 사이트 또는 애플리케이션이라는 것을 의미합니다. 그런데, 쇼핑몰 시스템에 채널이 하나만 필요한 경우 하나만 사용하면 됩니다. 이 개념은 미래에 확장 가능하도록 설계되었습니다.."
      },
      "IShoppingExternalUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "citizen": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingCitizen"
              }
            ],
            "title": "시민 활성화 정보",
            "description": "시민 활성화 정보."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "레코드 생성 시간. 다른 말로, 외부 사용자가 처음 접속한 시간입니다.."
          },
          "uid": {
            "type": "string",
            "title": "외부 시스템의 외부 사용자의 식별자 키",
            "description": "외부 시스템의 외부 사용자의 식별자 키."
          },
          "application": {
            "type": "string",
            "title": "외부 서비스의 식별자 코드",
            "description": "외부 서비스의 식별자 코드입니다. {@link IShoppingChannel.code}와 공통적으로 동일할 수 있습니다.."
          },
          "nickname": {
            "type": "string",
            "title": "외부 시스템의 외부 사용자의 별명",
            "description": "외부 시스템의 외부 사용자의 별명."
          },
          "data": {
            "description": "외부 시스템의 외부 사용자에 대한 추가 정보."
          }
        },
        "required": [
          "id",
          "citizen",
          "created_at",
          "uid",
          "application",
          "nickname",
          "data"
        ],
        "description": "외부 사용자 정보. `IShoppingExternalUser`는 이 시스템이 외부 서비스에 연결하고 해당 사용자를 이 서비스의 {@link IShoppingCustomer 고객}으로 환영해야 할 때 지정된 엔터티입니다. 참고로, 외부 서비스에서 연결하는 고객은 이 레코드가 있어야 하며, 외부 서비스 사용자는 두 가지 속성 {@link application}과 {@link uid}를 통해 식별됩니다. 외부 서비스에서 연결된 고객이 이 서비스에서 {@link IShoppingCitizen 실명 인증}을 완료하면 외부 서비스 사용자가 이 서비스에 다시 연결하고 새 고객 인증 토큰을 발급할 때마다 실명 인증은 completed로 시작됩니다. 그리고 {@link password}는 외부 서비스 시스템에서 사용자에게 발급한 비밀번호(소위 영구 사용자 인증 토큰)이며, 실제 사용자 비밀번호가 아닙니다. 그러나 현재 외부 시스템 사용자와 동일한 애플리케이션과 uid를 입력한 고객의 경우 이를 올바른 외부 시스템 사용자로 볼지 아니면 위반으로 볼지 여부를 결정하기 위한 것입니다. 또한 외부 서비스에서 수신한 추가 정보를 JSON 형식으로 데이터 필드에 기록할 수 있습니다.."
      },
      "IShoppingCitizen": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간."
          },
          "mobile": {
            "type": "string",
            "pattern": "^[0-9]*$",
            "title": "휴대폰 번호",
            "description": "휴대폰 번호."
          },
          "name": {
            "type": "string",
            "title": "실제 이름 또는 이에 상응하는 별명",
            "description": "실제 이름 또는 이에 상응하는 별명."
          }
        },
        "required": [
          "id",
          "created_at",
          "mobile",
          "name"
        ],
        "description": "국민인증정보 `IShoppingCitizen`은 사용자의 {@link name 실명}과 {@link mobile} 입력정보를 기록하는 엔티티입니다. 참고로, 한국에서는 이커머스 참여자에게 실명인증이 필수이므로 name 속성이 중요합니다. 하지만 해외는 상황이 다르기 때문에 실제로는 모바일 속성이 가장 중요하며, 개인 식별도 이 모바일을 기반으로 이루어집니다. 물론 실명과 휴대전화 인증정보는 암호화되어 저장됩니다.."
      },
      "IShoppingAdministrator.IJoin": {
        "type": "object",
        "properties": {},
        "description": "가입요청 정보."
      },
      "IShoppingMember.ILogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "회원의 이메일 주소",
            "description": "회원의 이메일 주소. 회원이 여러 개의 이메일 주소를 가지고 있는 경우 그 중 하나만 사용하십시오.."
          },
          "password": {
            "type": "string",
            "title": "회원 계정의 비밀번호",
            "description": "회원 계정의 비밀번호."
          }
        },
        "required": [
          "email",
          "password"
        ],
        "description": "로그인 요청 정보."
      },
      "IShoppingCoupon": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "designer": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IShoppingAdministrator"
              },
              {
                "$ref": "#/components/schemas/IShoppingSeller"
              }
            ],
            "title": "쿠폰을 만든 디자이너",
            "description": "쿠폰을 만든 디자이너."
          },
          "inventory": {
            "$ref": "#/components/schemas/IShoppingCouponInventory",
            "title": "재고 정보",
            "description": "재고 정보."
          },
          "criterias": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IShoppingCouponChannelCriteria"
                },
                {
                  "$ref": "#/components/schemas/IShoppingCouponSectionCriteria"
                },
                {
                  "$ref": "#/components/schemas/IShoppingCouponSellerCriteria"
                },
                {
                  "$ref": "#/components/schemas/IShoppingCouponSaleCriteria"
                },
                {
                  "$ref": "#/components/schemas/IShoppingCouponFunnelCriteria"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "channel": "#/components/schemas/IShoppingCouponChannelCriteria",
                  "section": "#/components/schemas/IShoppingCouponSectionCriteria",
                  "seller": "#/components/schemas/IShoppingCouponSellerCriteria",
                  "sale": "#/components/schemas/IShoppingCouponSaleCriteria",
                  "funnel": "#/components/schemas/IShoppingCouponFunnelCriteria"
                }
              }
            },
            "title": "기준 정보 목록",
            "description": "기준 정보 목록."
          },
          "discount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IShoppingCouponDiscount.IAmount"
              },
              {
                "$ref": "#/components/schemas/IShoppingCouponDiscount.IPercent"
              }
            ],
            "discriminator": {
              "propertyName": "unit",
              "mapping": {
                "amount": "#/components/schemas/IShoppingCouponDiscount.IAmount",
                "percent": "#/components/schemas/IShoppingCouponDiscount.IPercent"
              }
            },
            "title": "할인정보",
            "description": "할인정보."
          },
          "restriction": {
            "$ref": "#/components/schemas/IShoppingCouponRestriction",
            "title": "제한 정보",
            "description": "제한 정보."
          },
          "name": {
            "type": "string",
            "title": "쿠폰의 대표 명칭",
            "description": "쿠폰의 대표 명칭."
          },
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "쿠폰 오픈시간",
            "description": "쿠폰 오픈시간."
          },
          "closed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "쿠폰 사용 마감 시간",
            "description": "쿠폰 마감 시간입니다. 이 시간 이후에는 티켓을 발급할 수 없습니다. 그러나 이전에 발급된 티켓은 만료일까지 계속 사용할 수 있습니다.."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록의 창조 동점",
            "description": "기록의 창조 동점."
          }
        },
        "required": [
          "id",
          "designer",
          "inventory",
          "criterias",
          "discount",
          "restriction",
          "name",
          "opened_at",
          "closed_at",
          "created_at"
        ],
        "description": "할인 쿠폰. `IShoppingCoupon`은 쇼핑몰에서 할인 쿠폰을 상징하는 엔티티입니다. `IShoppingCoupon`은 할인 쿠폰에 대한 사양 정보만 포함합니다. 이것은 할인 쿠폰의 발급을 의미하는 {@link IShoppingCouponTicket}이나 지불을 의미하는 {@link IShoppingCouponTicketPayment}와는 다른 개념이라는 점에 유의하세요. 또한 할인 쿠폰은 주문별로 적용되지만 각각 고유한 제한이 있습니다. 예를 들어, {@link IShoppingCouponSellerCriteria}가 있는 쿠폰은 {@link IShoppingSeller}가 등록한 목록의 {@link IShoppingSale}에만 사용할 수도 있고 사용하지 않을 수도 있습니다. 또한 할인 쿠폰을 사용하기 위한 {@link IShoppingCouponDiscount.threshold 최소 금액 제한} 및 {@link IShoppingCouponDiscount.limit 최대 할인 금액 제한}과 같은 제한이 있습니다. 또한 할인 쿠폰을 공개적으로 발행할지, 특정 발행 코드를 아는 사람에게만 제공할지 설정할 수 있습니다. 또한 발행된 할인 쿠폰에 {@link IShoppingCouponRestriction.expired_at 만료일}이 있거나 {@link IShoppingCouponFunnelCriteria 특정 퍼널}을 통해 들어온 고객에게만 발행되는 것과 같은 제한이 있습니다. 자세한 내용은 아래 속성과 나중에 설명하는 자회사를 참조하세요.."
      },
      "IShoppingAdministrator": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간. 즉, 관리자가 등록한 시간입니다.."
          }
        },
        "required": [
          "id",
          "created_at"
        ],
        "description": "관리자 계정. `IShoppingAdministrator`는 쇼핑몰 시스템을 관리하는 사람을 구현한 엔티티로, {@link IShoppingMember 멤버십}에 가입합니다. 참고로, 멤버십에 가입하지 않아도 참여할 수 있는 {@link IShoppingCustomer 고객}과 달리 관리자는 멤버십에 가입해야 관리를 운영할 수 있습니다. 또한 관리자는 {@link IShoppingCitizen 실명 및 모바일 인증}도 수행해야 합니다.."
      },
      "IShoppingSeller": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록의 생성 시간",
            "description": "기록의 생성 시간. 다른 말로, 판매자가 가입한 시간입니다.."
          }
        },
        "required": [
          "id",
          "created_at"
        ],
        "description": "판매자 정보. `IShoppingSeller`는 {@link IShoppingSale sales}에 등록하여 판매 활동을 운영하는 사람을 구체화한 엔티티로, {@link IShoppingMember membership}에 가입합니다. 참고로, 멤버십 가입 없이도 참여할 수 있는 {@link IShoppingCustomer customers}와 달리 판매자는 멤버십에 가입해야 판매를 운영할 수 있습니다. 또한 판매자는 {@link IShoppingCitizen 실명 및 모바일 인증}도 해야 합니다.."
      },
      "IShoppingCouponInventory": {
        "type": "object",
        "properties": {
          "volume": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ],
            "title": "모든 사람을 위한 남은 볼륨",
            "description": "모든 사람을 위한 남은 볼륨. 발행 수량에 제한이 있는 경우 이 값을 초과하는 티켓을 발행하는 것은 불가능해집니다. 즉, N개의 쿠폰을 선착순으로 발행하는 개념이 만들어집니다.."
          },
          "volume_per_citizen": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ],
            "title": "시민당 남은 볼륨",
            "description": "시민당 남은 볼륨. 1인당 총 발행량에 대한 제한으로, 동일한 시민에 대한 중복 발행을 제한하기 위해 1을 할당하거나, `nul` 값을 사용하여 제한을 설정하지 않는 것이 일반적입니다. 물론, N 값을 할당하면 동일한 시민에게 발행되는 총량을 제한할 수 있습니다.."
          }
        },
        "required": [
          "volume",
          "volume_per_citizen"
        ],
        "description": "쿠폰의 재고 정보. {@link IShoppingCoupon 쿠폰}이 제한된 재고로 디자인된 경우, 이 `IShoppingCouponInventory` 구조는 남은 재고 정보를 나타냅니다.."
      },
      "IShoppingCouponChannelCriteria": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingCouponChannelCriteria.IChannelTo"
            },
            "minItems": 1,
            "title": "타겟 채널 및 카테고리 목록",
            "description": "타겟 채널 및 카테고리 목록."
          },
          "type": {
            "const": "channel",
            "title": "디스크리매네이터 유형",
            "description": "디스크리매네이터 유형."
          },
          "direction": {
            "oneOf": [
              {
                "const": "include"
              },
              {
                "const": "exclude"
              }
            ],
            "title": "기준의 방향",
            "description": "기준의 방향."
          }
        },
        "required": [
          "channels",
          "type",
          "direction"
        ],
        "description": "할인 쿠폰 채널에 대한 조건. `ishoppingcouponchannelcriteria`는 {@link IShoppingCouponCriteriaBase}의 하위 유형 엔터티이며 해당 채널의 특정 {@link IShoppingChannel 채널} 또는 {@link IShoppingChannelCategory 카테고리}에 대한 조건을 설정할 때 사용됩니다. {@link direction} 값이 &quot;include&quot;인 경우 쿠폰은 대상 채널(또는 카테고리)에만 사용할 수 있습니다. 반대로 &quot;exclude&quot;인 경우 쿠폰을 사용할 수 없습니다.."
      },
      "IShoppingCouponChannelCriteria.IChannelTo": {
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/IShoppingChannel",
            "title": "타겟 채널",
            "description": "타겟 채널."
          },
          "categories": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IShoppingChannelCategory.IInvert"
                },
                "minItems": 1
              }
            ],
            "title": "대상 카테고리 목록",
            "description": "대상 카테고리 목록."
          }
        },
        "required": [
          "channel",
          "categories"
        ]
      },
      "IShoppingChannelCategory.IInvert": {
        "type": "object",
        "properties": {
          "parent": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingChannelCategory.IInvert"
              }
            ],
            "title": "재귀적 구조를 갖춘 상위 카테고리 정보",
            "description": "재귀적 구조를 가진 부모 카테고리 정보. 부모가 없으면 `null`이 됩니다.."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "상위 카테고리의 ID",
            "description": "상위 카테고리의 ID."
          },
          "name": {
            "type": "string",
            "title": "해당 카테고리의 대표 이름",
            "description": "카테고리의 대표 이름입니다. 이름은 부모 카테고리 내에서 고유해야 합니다. 부모가 없는 경우 부모 카테고리가 없는 채널 내에서 이름은 고유해야 합니다.."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간."
          }
        },
        "required": [
          "parent",
          "id",
          "parent_id",
          "name",
          "created_at"
        ],
        "description": "부모 카테고리와 카테고리 정보를 반전합니다.."
      },
      "IShoppingCouponSectionCriteria": {
        "type": "object",
        "properties": {
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSection"
            },
            "minItems": 1,
            "title": "포함하거나 제외할 대상 섹션",
            "description": "포함하거나 제외할 대상 섹션."
          },
          "type": {
            "const": "section",
            "title": "디스크리매네이터 유형",
            "description": "디스크리매네이터 유형."
          },
          "direction": {
            "oneOf": [
              {
                "const": "include"
              },
              {
                "const": "exclude"
              }
            ],
            "title": "기준의 방향",
            "description": "기준의 방향."
          }
        },
        "required": [
          "sections",
          "type",
          "direction"
        ],
        "description": "할인 쿠폰 섹션에 대한 조건. `IShoppingCouponSectionCriteria`는 {@link IShoppingCouponCriteriaBase}의 하위 유형 엔터티이며 특정 {@link IShoppingSection 섹션}에 대한 조건을 설정할 때 사용됩니다. {@link direction} 값이 &quot;include&quot;인 경우 쿠폰은 대상 {@link 섹션}에만 사용할 수 있습니다. 반대로 &quot;exclude&quot;인 경우 쿠폰을 사용할 수 없습니다.."
      },
      "IShoppingSection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "code": {
            "type": "string",
            "title": "식별자 코드",
            "description": "식별자 코드."
          },
          "name": {
            "type": "string",
            "title": "섹션의 대표 이름",
            "description": "섹션의 대표 이름."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간."
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "created_at"
        ],
        "description": "섹션 정보. `IShoppingSection`은 시장의 공간적 정보를 지칭하는 개념입니다. 여기서 언급된 섹션을 오프라인 시장과 비교해보면, &quot;과일 코너&quot;나 &quot;정육점 코너&quot;와 같이 매장 내에서 공간적으로 분리된 영역을 의미합니다. 따라서 {@link IShoppingSale sale} 엔티티에서는 여러 섹션을 동시에 분류할 수 없고, 오직 하나의 섹션만 분류할 수 있습니다. 그런데, 쇼핑몰 시스템에 섹션이 하나만 필요한 경우, 그냥 하나만 사용하면 됩니다. 이 개념은 향후 확장 가능하도록 설계되었습니다.."
      },
      "IShoppingCouponSellerCriteria": {
        "type": "object",
        "properties": {
          "sellers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSeller"
            },
            "minItems": 1,
            "title": "포함하거나 제외할 판매자를 타겟팅합니다.",
            "description": "포함하거나 제외할 판매자를 타겟팅합니다.."
          },
          "type": {
            "const": "seller",
            "title": "디스크리매네이터 유형",
            "description": "디스크리매네이터 유형."
          },
          "direction": {
            "oneOf": [
              {
                "const": "include"
              },
              {
                "const": "exclude"
              }
            ],
            "title": "기준의 방향",
            "description": "기준의 방향."
          }
        },
        "required": [
          "sellers",
          "type",
          "direction"
        ],
        "description": "할인 쿠폰 판매자를 위한 조건. `IShoppingCouponSellerCriteria`는 {@link IShoppingCouponCriteriaBase}의 하위 유형 엔터티이며 특정 {@link IShoppingSeller 판매자}에 대한 조건을 설정할 때 사용됩니다. {@link direction} 값이 &quot;include&quot;인 경우 쿠폰은 대상 {@link seller}에만 사용할 수 있습니다. 반대로 &quot;exclude&quot;인 경우 쿠폰을 사용할 수 없습니다.."
      },
      "IShoppingCouponSaleCriteria": {
        "type": "object",
        "properties": {
          "sales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSale.ISummary"
            },
            "minItems": 1,
            "title": "포함하거나 제외할 타겟 판매",
            "description": "포함하거나 제외할 타겟 판매."
          },
          "type": {
            "const": "sale",
            "title": "디스크리매네이터 유형",
            "description": "디스크리매네이터 유형."
          },
          "direction": {
            "oneOf": [
              {
                "const": "include"
              },
              {
                "const": "exclude"
              }
            ],
            "title": "기준의 방향",
            "description": "기준의 방향."
          }
        },
        "required": [
          "sales",
          "type",
          "direction"
        ],
        "description": "할인 쿠폰 판매 조건. `IShoppingCouponSaleCriteria`는 {@link IShoppingCouponCriteriaBase}의 하위 유형 엔터티이며 특정 {@link IShoppingSale 판매}에 대한 조건을 설정할 때 사용됩니다. {@link direction} 값이 &quot;include&quot;인 경우 쿠폰은 대상 {@link 판매}에만 사용할 수 있습니다. 반대로 &quot;exclude&quot;인 경우 쿠폰을 사용할 수 없습니다.."
      },
      "IShoppingSale.ISummary": {
        "type": "object",
        "properties": {
          "section": {
            "$ref": "#/components/schemas/IShoppingSection",
            "title": "소속된 섹션",
            "description": "소속된 섹션."
          },
          "seller": {
            "$ref": "#/components/schemas/IShoppingSeller.IInvert",
            "title": "판매를 등록한 판매자",
            "description": "판매를 등록한 판매자."
          },
          "price_range": {
            "$ref": "#/components/schemas/IShoppingSalePriceRange",
            "title": "단위의 가격 범위",
            "description": "단위의 가격 범위."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "판매의 주요 키",
            "description": "판매의 주요 키."
          },
          "snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "스냅샷의 기본 키",
            "description": "스냅샷의 기본 키."
          },
          "latest": {
            "type": "boolean",
            "title": "스냅샷이 최신인지 아닌지",
            "description": "스냅샷이 최신인지 아닌지."
          },
          "content": {
            "$ref": "#/components/schemas/IShoppingSaleContent.IInvert",
            "title": "판매를 설명하는 설명 및 이미지 콘텐츠",
            "description": "판매를 설명하는 설명 및 이미지 콘텐츠."
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleChannel"
            },
            "minItems": 1,
            "title": "채널 및 카테고리 목록",
            "description": "채널 및 카테고리 목록. 판매가 등록된 채널 및 카테고리."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "검색 태그 목록",
            "description": "검색 태그 목록."
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleUnit.ISummary"
            },
            "minItems": 1,
            "title": "단위 목록",
            "description": "단위 목록. 판매에서 판매되는 개별 제품 구성 정보에 대한 기록. 각 {@link IShoppingSaleUnit 단위} 기록에는 구성 가능한 {@link IShoppingSaleUnitOption 옵션}, 각 옵션에 대한 {@link IShoppingSaleUnitOptionCandidate 후보} 값, 각 옵션의 모든 후보 값을 선택하여 결정된 {@link IShoppingSaleUnitStock 최종 재고}가 있습니다.."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록의 생성 시간입니다. 이 속성은 {@link opens_at}와 다릅니다. 즉, 판매 시점이 열린다는 의미입니다.."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록의 마지막 업데이트 시간",
            "description": "레코드의 마지막 업데이트 시간. 다시 말해, 마지막 스냅샷의 생성 시간."
          },
          "paused_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 일시 정지 시간",
            "description": "판매 일시 중지 시간. 판매자가 어떤 이유로 판매를 일시 중지했습니다. {@link IShoppingCustomer Customers}는 목록과 세부 정보 페이지에서 판매를 계속 볼 수 있지만 판매에는 &quot;판매자가 판매를 일시 중지했습니다&quot;라는 경고 라벨이 있습니다.."
          },
          "suspended_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 중단 시간",
            "description": "판매 중단 시간. 판매자가 어떤 이유로 판매를 중단했습니다. {@link IShoppingCustomer Customers}는 목록과 세부 정보 페이지에서 모두 판매를 볼 수 없습니다. 소프트 삭제와 거의 동일하지만 소유자 {@link IShoppingSeller seller}는 여전히 판매를 보고 재개할 수 있다는 약간의 차이가 있습니다. 물론 이미 판매를 구매한 {@link IShoppingCustomer customers}는 여전히 {@link IShoppingOrder order} 페이지에서 판매를 볼 수 있습니다.."
          },
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 시작 시간",
            "description": "판매 시작 시간."
          },
          "closed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 마감 시간",
            "description": "판매 종료 시간입니다. 이 값이 `null`이면 판매가 영원히 계속됩니다.."
          }
        },
        "required": [
          "section",
          "seller",
          "price_range",
          "id",
          "snapshot_id",
          "latest",
          "content",
          "channels",
          "tags",
          "units",
          "created_at",
          "updated_at",
          "paused_at",
          "suspended_at",
          "opened_at",
          "closed_at"
        ],
        "description": "판매에 대한 요약 정보. 이 요약 정보는 페이지 매김에 사용됩니다.."
      },
      "IShoppingSeller.IInvert": {
        "type": "object",
        "properties": {
          "type": {
            "const": "seller",
            "title": "고객 유형에 따른 판별",
            "description": "고객 유형에 따른 판별."
          },
          "member": {
            "$ref": "#/components/schemas/IShoppingMember.IInvert",
            "title": "회원가입 안내",
            "description": "회원가입 안내."
          },
          "customer": {
            "$ref": "#/components/schemas/IShoppingCustomer.IInvert",
            "title": "고객님, 연결정보",
            "description": "고객님, 연결정보."
          },
          "citizen": {
            "$ref": "#/components/schemas/IShoppingCitizen",
            "title": "실명 및 휴대폰 번호 인증 정보",
            "description": "실명 및 휴대폰 번호 인증 정보."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록의 생성 시간",
            "description": "기록의 생성 시간. 다른 말로, 판매자가 가입한 시간입니다.."
          }
        },
        "required": [
          "type",
          "member",
          "customer",
          "citizen",
          "id",
          "created_at"
        ],
        "description": "판매자 정보에서 시작하여 정보를 반전합니다. 판매자 정보에 {@link IShoppingCustomer.member} -&gt; {@link IShoppingMember.seller}에서 액세스하는 대신, `IShoppingSeller.IInvert`는 판매자 정보에서 시작하여 고객, 회원 및 {@link IShoppingCitizen 시민} 정보에 역으로 액세스합니다.."
      },
      "IShoppingSalePriceRange": {
        "type": "object",
        "properties": {
          "lowest": {
            "$ref": "#/components/schemas/IShoppingPrice"
          },
          "highest": {
            "$ref": "#/components/schemas/IShoppingPrice"
          }
        },
        "required": [
          "lowest",
          "highest"
        ]
      },
      "IShoppingPrice": {
        "type": "object",
        "properties": {
          "nominal": {
            "type": "number",
            "minimum": 0,
            "title": "명목 가격",
            "description": "명목 가격. 이것은 지불해야 할 {@link real real price}가 아니라, 보여야 할 명목 가격일 뿐입니다. 이 값이 {@link real real price}보다 크면, {@link IShoppingSeller seller}가 할인을 제공하는 것처럼 표시됩니다.."
          },
          "real": {
            "type": "number",
            "minimum": 0,
            "title": "지불해야 할 실제 가격",
            "description": "지불해야 할 실제 가격."
          }
        },
        "required": [
          "nominal",
          "real"
        ],
        "description": "쇼핑 가격 인터페이스."
      },
      "IShoppingSaleContent.IInvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "thumbnails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile"
            }
          }
        },
        "required": [
          "id",
          "title",
          "thumbnails"
        ]
      },
      "IAttachmentFile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "첨부파일 생성시간",
            "description": "첨부파일 생성시간."
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "확장자를 제외한 파일 이름",
            "description": "확장자를 제외한 파일 이름. `.gitignore` 파일이 있는 경우 이름은 빈 문자열입니다.."
          },
          "extension": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "minLength": 1,
                "maxLength": 8
              }
            ],
            "title": "확대",
            "description": "확장자. `README`와 같은 경우 생략 가능."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "title": "실제 파일의 URL 경로",
            "description": "실제 파일의 URL 경로."
          }
        },
        "required": [
          "id",
          "created_at",
          "name",
          "extension",
          "url"
        ],
        "description": "첨부 파일. 현재 시스템에서 관리하는 모든 첨부 파일. 참고로, `.gitignore` 또는 `README` 케이스처럼 파일 {@link name} 또는 {@link extension} 중 하나를 생략할 수 있지만, 둘 다 생략할 수는 없습니다.."
      },
      "IShoppingSaleChannel": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingChannelCategory.IInvert"
            },
            "title": "판매를 등록한 채널의 카테고리 목록",
            "description": "판매를 나열한 채널의 카테고리 목록입니다. 비어 있는 경우 채널의 모든 카테고리가 판매를 나열하고 있음을 의미합니다.."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간."
          },
          "code": {
            "type": "string",
            "title": "식별자 코드",
            "description": "식별자 코드."
          },
          "name": {
            "type": "string",
            "title": "채널 이름",
            "description": "채널 이름."
          }
        },
        "required": [
          "categories",
          "id",
          "created_at",
          "code",
          "name"
        ],
        "description": "판매할 판매 대상 채널(및 카테고리). `IShoppingSaleChannel`은 {@link IShoppingChannel channel}을 통해 목록 {@link IShoppingSale}이 판매되는 것을 표현하는 엔티티입니다. 또한 {@link IShoppingChannelCategory categories}가 지정된 경우 판매가 판매됨을 의미합니다. 그렇지 않은 경우 채널의 카테고리가 지정되지 않으면 채널의 모든 카테고리가 대상 판매를 나열함을 의미합니다.."
      },
      "IShoppingSaleUnit.ISummary": {
        "type": "object",
        "properties": {
          "price_range": {
            "$ref": "#/components/schemas/IShoppingSalePriceRange"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "name": {
            "type": "string",
            "title": "단위의 대표적 명칭",
            "description": "단위의 대표적 명칭."
          },
          "primary": {
            "type": "boolean",
            "title": "해당 단위가 1차 단위인지 아닌지",
            "description": "단위가 기본 단위인지 아닌지. 단지 라벨링 값일 뿐."
          },
          "required": {
            "type": "boolean",
            "title": "단위가 필요한지 여부",
            "description": "단위가 필요한지 여부. 단위가 필요한 경우, 고객은 단위를 선택해야 합니다. 선택하지 않으면, 고객은 구매할 수 없습니다. 예를 들어, &quot;Macbook Set&quot; 세일이 있고 단위 중 하나가 &quot;Main Body&quot;인 경우, &quot;Main Body&quot; 단위 없이 &quot;Macbook Set&quot;을 구매할 수 있습니까? 이 속성은 그런 경우를 위한 것입니다.."
          }
        },
        "required": [
          "price_range",
          "id",
          "name",
          "primary",
          "required"
        ]
      },
      "IShoppingCouponFunnelCriteria": {
        "type": "object",
        "properties": {
          "funnels": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IShoppingCouponFunnelCriteria.IValueFunnel"
                },
                {
                  "$ref": "#/components/schemas/IShoppingCouponFunnelCriteria.IVariableFunnel"
                }
              ]
            },
            "minItems": 1,
            "title": "타겟 퍼널 목록",
            "description": "타겟 퍼널 목록."
          },
          "type": {
            "const": "funnel",
            "title": "디스크리매네이터 유형",
            "description": "디스크리매네이터 유형."
          },
          "direction": {
            "oneOf": [
              {
                "const": "include"
              },
              {
                "const": "exclude"
              }
            ],
            "title": "기준의 방향",
            "description": "기준의 방향."
          }
        },
        "required": [
          "funnels",
          "type",
          "direction"
        ],
        "description": "할인 쿠폰의 퍼널을 제한합니다. `ishoppingcouponfunnelcriteria`는 {@link IShoppingCouponCriteria}의 하위 유형 엔터티이며, 특정 경로에서 온 {@link IShoppingCustomer 고객}에게만 할인 쿠폰을 발급하거나 제외하려는 경우 사용됩니다. 그리고 퍼널 제한은 3가지 방법으로 가능합니다. 첫 번째는 {@link IShoppingCustomer.referrer}이며, 고객의 액세스 주소를 기록하는 {@link IShoppingCustomer.href}를 구문 분석하여 특정 URL 또는 변수 단위로 제한을 만들 수 있습니다.."
      },
      "IShoppingCouponFunnelCriteria.IValueFunnel": {
        "type": "object",
        "properties": {
          "kind": {
            "oneOf": [
              {
                "const": "url"
              },
              {
                "const": "referrer"
              }
            ],
            "title": "퍼널 제한의 종류",
            "description": "퍼널 제한의 종류."
          },
          "value": {
            "type": "string",
            "title": "목표값",
            "description": "목표값."
          }
        },
        "required": [
          "kind",
          "value"
        ],
        "description": "값에 따른 퍼널 제한의 종류."
      },
      "IShoppingCouponFunnelCriteria.IVariableFunnel": {
        "type": "object",
        "properties": {
          "kind": {
            "const": "variable",
            "title": "퍼널 제한의 종류",
            "description": "퍼널 제한의 종류."
          },
          "key": {
            "type": "string",
            "title": "대상 변수의 키",
            "description": "대상 변수의 키."
          },
          "value": {
            "type": "string",
            "title": "타겟 변수의 값",
            "description": "타겟 변수의 값."
          }
        },
        "required": [
          "kind",
          "key",
          "value"
        ],
        "description": "변수에 의한 퍼널 제한의 종류."
      },
      "IShoppingCouponDiscount.IAmount": {
        "type": "object",
        "properties": {
          "unit": {
            "const": "amount",
            "title": "할인 단위를 금액으로 표시",
            "description": "할인 단위를 금액으로 표시합니다. 즉, 주문 가격이 금액 값만큼 할인된다는 의미입니다.."
          },
          "value": {
            "type": "number",
            "title": "할인가치를 금액으로 표시",
            "description": "할인가치를 금액으로 표시."
          },
          "threshold": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number",
                "minimum": 0
              }
            ],
            "title": "할인을 위한 최소 구매 금액",
            "description": "할인을 위한 최소 구매 금액입니다. 이 값을 설정하면 이 값보다 적은 주문 총액에는 할인 쿠폰을 적용할 수 없습니다.."
          },
          "limit": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number",
                "exclusiveMinimum": true,
                "minimum": 0
              }
            ],
            "title": "할인 가능한 최대 금액",
            "description": "할인 가능한 최대 금액입니다. 이 값을 설정하면 주문 수량에 관계없이 추가 할인이 제공되지 않습니다. 이 속성은 {@link multiplicative}가 `true`일 때만 의미가 있습니다.."
          },
          "multiplicative": {
            "type": "boolean",
            "title": "곱셈이 가능한지 아닌지",
            "description": "곱셈 여부. 이 속성이 `true`이면 할인 값은 {@link IShoppingCartCommodity.volume} 또는 {@link IShoppingOrderGood.volume} 값에 곱해집니다. 또한 이 경우 {@link limit} 속성이 의미가 있습니다.."
          }
        },
        "required": [
          "unit",
          "value",
          "threshold",
          "limit",
          "multiplicative"
        ],
        "description": "금액 단위별 할인 정보."
      },
      "IShoppingCouponDiscount.IPercent": {
        "type": "object",
        "properties": {
          "unit": {
            "const": "percent",
            "title": "할인 단위(백분율)",
            "description": "할인 단위를 백분율로 표시합니다. 즉, 주문 가격이 백분율 값만큼 할인된다는 의미입니다.."
          },
          "value": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "title": "할인율로 나타낸 값",
            "description": "할인율로 나타낸 값."
          },
          "threshold": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number",
                "minimum": 0
              }
            ],
            "title": "할인을 위한 최소 구매 금액",
            "description": "할인을 위한 최소 구매 금액입니다. 이 값을 설정하면 이 값보다 적은 주문 총액에는 할인 쿠폰을 적용할 수 없습니다.."
          },
          "limit": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number",
                "exclusiveMinimum": true,
                "minimum": 0
              }
            ],
            "title": "할인 가능한 최대 금액",
            "description": "할인 가능한 최대 금액입니다. 이 값을 설정하면 주문량에 관계없이 추가 할인이 제공되지 않습니다.."
          }
        },
        "required": [
          "unit",
          "value",
          "threshold",
          "limit"
        ],
        "description": "퍼센트 단위로 할인 정보."
      },
      "IShoppingCouponRestriction": {
        "type": "object",
        "properties": {
          "access": {
            "oneOf": [
              {
                "const": "public"
              },
              {
                "const": "private"
              }
            ],
            "title": "쿠폰 접근 레벨",
            "description": "쿠폰 접근 레벨 - public: 공개 API에서 검색 가능 - private: 공개 API에서 검색 불가 - 판매자 또는 관리자가 임의로 지정 - 일회성 링크에서 발급"
          },
          "exclusive": {
            "type": "boolean",
            "title": "독점권이 있느냐 없느냐",
            "description": "배타성 여부. 배타적 할인 쿠폰은 다른 할인 쿠폰과 배타적 관계가 있고 단독으로만 사용할 수 있는 할인 쿠폰을 말합니다. 즉, 배타적 할인 쿠폰을 사용하면 다른 할인 쿠폰을 같은 {@link IShoppingOrder 주문} 또는 {@link IShoppingOrderGood 상품}에 사용할 수 없습니다. 이 배타적 속성은 곱셈과 매우 다른 개념이라는 점에 유의하세요. 곱셈은 같은 쿠폰을 곱하여 같은 주문의 여러 쿠폰에 적용할 수 있는지 여부를 의미하므로 혼동하지 마십시오.."
          },
          "volume": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ],
            "title": "한정수량 발행",
            "description": "발행 수량 제한. 발행 수량에 제한이 있는 경우 이 값을 초과하는 티켓을 발행하는 것은 불가능해집니다. 즉, 선착순으로 N개의 쿠폰을 발행하는 개념이 만들어집니다.."
          },
          "volume_per_citizen": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ],
            "title": "1인당 한정수량 발행",
            "description": "1인당 발행되는 수량 제한. 1인당 발행 총액에 대한 제한으로, 같은 시민에게 중복 발행을 제한하기 위해 1을 할당하거나, NULL 값을 사용하여 제한을 설정하지 않는 것이 일반적입니다. 물론, N 값을 할당하면 같은 시민에게 발행되는 총액을 제한할 수 있습니다.."
          },
          "expired_in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ],
            "title": "유효기간 일수 값",
            "description": "만료일 값. 할인 쿠폰 티켓이 발행된 후 N일 후에 만료된다는 개념입니다. 따라서 고객은 가능하면 발행된 날로부터 N일 이내에 티켓을 사용해야 합니다.."
          },
          "expired_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "유효기간",
            "description": "만료일. 할인 쿠폰 티켓이 발행된 후 YYYY-MM-DD 이후에 만료되는 개념입니다. expired_in을 사용하면 두 가지 제한이 가능하며, 그 중 만료일이 짧은 것을 사용합니다.."
          }
        },
        "required": [
          "access",
          "exclusive",
          "volume",
          "volume_per_citizen",
          "expired_in",
          "expired_at"
        ],
        "description": "쿠폰 사용 제한 안내."
      },
      "IShoppingCoupon.ICreate": {
        "type": "object",
        "properties": {
          "discount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IShoppingCouponDiscount.IAmount"
              },
              {
                "$ref": "#/components/schemas/IShoppingCouponDiscount.IPercent"
              }
            ],
            "discriminator": {
              "propertyName": "unit",
              "mapping": {
                "amount": "#/components/schemas/IShoppingCouponDiscount.IAmount",
                "percent": "#/components/schemas/IShoppingCouponDiscount.IPercent"
              }
            },
            "title": "할인정보",
            "description": "할인정보."
          },
          "restriction": {
            "$ref": "#/components/schemas/IShoppingCouponRestriction",
            "title": "제한 정보",
            "description": "제한 정보."
          },
          "criterias": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IShoppingCouponChannelCriteria.ICreate"
                },
                {
                  "$ref": "#/components/schemas/IShoppingCouponSectionCriteria.ICreate"
                },
                {
                  "$ref": "#/components/schemas/IShoppingCouponSellerCriteria.ICreate"
                },
                {
                  "$ref": "#/components/schemas/IShoppingCouponSaleCriteria.ICreate"
                },
                {
                  "$ref": "#/components/schemas/IShoppingCouponFunnelCriteria.ICreate"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "channel": "#/components/schemas/IShoppingCouponChannelCriteria.ICreate",
                  "section": "#/components/schemas/IShoppingCouponSectionCriteria.ICreate",
                  "seller": "#/components/schemas/IShoppingCouponSellerCriteria.ICreate",
                  "sale": "#/components/schemas/IShoppingCouponSaleCriteria.ICreate",
                  "funnel": "#/components/schemas/IShoppingCouponFunnelCriteria.ICreate"
                }
              }
            }
          },
          "disposable_codes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "title": "쿠폰의 대표 명칭",
            "description": "쿠폰의 대표 명칭."
          },
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "쿠폰 오픈시간",
            "description": "쿠폰 오픈시간."
          },
          "closed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "쿠폰 사용 마감 시간",
            "description": "쿠폰 마감 시간입니다. 이 시간 이후에는 티켓을 발급할 수 없습니다. 그러나 이전에 발급된 티켓은 만료일까지 계속 사용할 수 있습니다.."
          }
        },
        "required": [
          "discount",
          "restriction",
          "criterias",
          "disposable_codes",
          "name",
          "opened_at",
          "closed_at"
        ],
        "description": "쿠폰 생성 정보."
      },
      "IShoppingCouponChannelCriteria.ICreate": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingCouponChannelCriteria.IChannelTo.ICreate"
            },
            "minItems": 1,
            "title": "타겟 채널 및 카테고리 목록",
            "description": "타겟 채널 및 카테고리 목록."
          },
          "type": {
            "const": "channel"
          },
          "direction": {
            "oneOf": [
              {
                "const": "include"
              },
              {
                "const": "exclude"
              }
            ]
          }
        },
        "required": [
          "channels",
          "type",
          "direction"
        ],
        "description": "채널 기준 생성 정보."
      },
      "IShoppingCouponChannelCriteria.IChannelTo.ICreate": {
        "type": "object",
        "properties": {
          "channel_code": {
            "type": "string",
            "title": "타겟 채널의 {@link IShoppingChannel.code}",
            "description": "타겟 채널의 {@link IShoppingChannel.code}."
          },
          "category_ids": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            ],
            "title": "타겟 카테고리 {@link IShoppingChannelCategory.id}",
            "description": "타겟 카테고리 {@link IShoppingChannelCategory.id}."
          }
        },
        "required": [
          "channel_code",
          "category_ids"
        ],
        "description": "타겟 채널 및 카테고리."
      },
      "IShoppingCouponSectionCriteria.ICreate": {
        "type": "object",
        "properties": {
          "section_codes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "title": "대상 섹션의 {@link IShoppingSection.code} 목록",
            "description": "대상 섹션의 {@link IShoppingSection.code} 목록."
          },
          "type": {
            "const": "section"
          },
          "direction": {
            "oneOf": [
              {
                "const": "include"
              },
              {
                "const": "exclude"
              }
            ]
          }
        },
        "required": [
          "section_codes",
          "type",
          "direction"
        ],
        "description": "섹션 기준의 생성 정보."
      },
      "IShoppingCouponSellerCriteria.ICreate": {
        "type": "object",
        "properties": {
          "seller_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "minItems": 1,
            "title": "타겟 판매자의 {@link IShoppingSeller.id} 목록",
            "description": "타겟 판매자의 {@link IShoppingSeller.id} 목록."
          },
          "type": {
            "const": "seller"
          },
          "direction": {
            "oneOf": [
              {
                "const": "include"
              },
              {
                "const": "exclude"
              }
            ]
          }
        },
        "required": [
          "seller_ids",
          "type",
          "direction"
        ],
        "description": "판매자 기준 생성 정보."
      },
      "IShoppingCouponSaleCriteria.ICreate": {
        "type": "object",
        "properties": {
          "sale_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "minItems": 1,
            "title": "타겟 세일 목록 {@link IShoppingSale.id}",
            "description": "타겟 세일 목록 {@link IShoppingSale.id}."
          },
          "type": {
            "const": "sale"
          },
          "direction": {
            "oneOf": [
              {
                "const": "include"
              },
              {
                "const": "exclude"
              }
            ]
          }
        },
        "required": [
          "sale_ids",
          "type",
          "direction"
        ],
        "description": "판매기준 생성정보."
      },
      "IShoppingCouponFunnelCriteria.ICreate": {
        "type": "object",
        "properties": {
          "funnels": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IShoppingCouponFunnelCriteria.IValueFunnel"
                },
                {
                  "$ref": "#/components/schemas/IShoppingCouponFunnelCriteria.IVariableFunnel"
                }
              ]
            },
            "minItems": 1,
            "title": "타겟 퍼널 목록",
            "description": "타겟 퍼널 목록."
          },
          "type": {
            "const": "funnel"
          },
          "direction": {
            "oneOf": [
              {
                "const": "include"
              },
              {
                "const": "exclude"
              }
            ]
          }
        },
        "required": [
          "funnels",
          "type",
          "direction"
        ],
        "description": "퍼널 기준 생성 정보."
      },
      "IPageIShoppingCoupon": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingCoupon"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IPage.IPagination": {
        "type": "object",
        "properties": {
          "current": {
            "type": "integer",
            "title": "현재 페이지 번호",
            "description": "현재 페이지 번호."
          },
          "limit": {
            "type": "integer",
            "title": "페이지당 레코드 수 제한",
            "description": "페이지당 레코드 수 제한."
          },
          "records": {
            "type": "integer",
            "title": "데이터베이스의 총 레코드",
            "description": "데이터베이스의 총 레코드."
          },
          "pages": {
            "type": "integer",
            "title": "총 페이지 수",
            "description": "총 페이지 수. 상한이 있는 {@link 레코드} / {@link 제한}과 동일."
          }
        },
        "required": [
          "current",
          "limit",
          "records",
          "pages"
        ],
        "description": "페이지 정보."
      },
      "IShoppingCoupon.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IShoppingCoupon.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-coupon.name"
                },
                {
                  "const": "-coupon.unit"
                },
                {
                  "const": "-coupon.value"
                },
                {
                  "const": "-coupon.created_at"
                },
                {
                  "const": "-coupon.opened_at"
                },
                {
                  "const": "-coupon.closed_at"
                },
                {
                  "const": "+coupon.name"
                },
                {
                  "const": "+coupon.unit"
                },
                {
                  "const": "+coupon.value"
                },
                {
                  "const": "+coupon.created_at"
                },
                {
                  "const": "+coupon.opened_at"
                },
                {
                  "const": "+coupon.closed_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "페이지 번호",
            "description": "페이지 번호."
          },
          "limit": {
            "type": "integer",
            "title": "페이지당 레코드 수 제한",
            "description": "페이지당 레코드 수 제한."
          }
        }
      },
      "IShoppingCoupon.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "IPageIShoppingDeposit": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingDeposit"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingDeposit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "code": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "direction": {
            "oneOf": [
              {
                "const": -1
              },
              {
                "const": 1
              }
            ]
          }
        },
        "required": [
          "id",
          "created_at",
          "code",
          "source",
          "direction"
        ]
      },
      "IShoppingDeposit.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IShoppingDeposit.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-deposit.source"
                },
                {
                  "const": "-deposit.code"
                },
                {
                  "const": "-deposit.direction"
                },
                {
                  "const": "+deposit.source"
                },
                {
                  "const": "+deposit.code"
                },
                {
                  "const": "+deposit.direction"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "페이지 번호",
            "description": "페이지 번호."
          },
          "limit": {
            "type": "integer",
            "title": "페이지당 레코드 수 제한",
            "description": "페이지당 레코드 수 제한."
          }
        }
      },
      "IShoppingDeposit.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "direction": {
            "oneOf": [
              {
                "const": -1
              },
              {
                "const": 1
              }
            ]
          }
        }
      },
      "IShoppingDeposit.ICreate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "direction": {
            "oneOf": [
              {
                "const": -1
              },
              {
                "const": 1
              }
            ]
          }
        },
        "required": [
          "code",
          "source",
          "direction"
        ]
      },
      "IPageIShoppingMileage": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingMileage"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingMileage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "code": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "direction": {
            "oneOf": [
              {
                "const": -1
              },
              {
                "const": 1
              }
            ]
          }
        },
        "required": [
          "id",
          "value",
          "created_at",
          "code",
          "source",
          "direction"
        ]
      },
      "IShoppingMileage.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IShoppingMileage.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-mileage.source"
                },
                {
                  "const": "-mileage.code"
                },
                {
                  "const": "-mileage.direction"
                },
                {
                  "const": "+mileage.source"
                },
                {
                  "const": "+mileage.code"
                },
                {
                  "const": "+mileage.direction"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "페이지 번호",
            "description": "페이지 번호."
          },
          "limit": {
            "type": "integer",
            "title": "페이지당 레코드 수 제한",
            "description": "페이지당 레코드 수 제한."
          }
        }
      },
      "IShoppingMileage.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "direction": {
            "oneOf": [
              {
                "const": -1
              },
              {
                "const": 1
              }
            ]
          }
        }
      },
      "IShoppingMileage.ICreate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "direction": {
            "oneOf": [
              {
                "const": -1
              },
              {
                "const": 1
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          }
        },
        "required": [
          "code",
          "source",
          "direction",
          "value"
        ]
      },
      "IPageIShoppingMileageDonation": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingMileageDonation"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingMileageDonation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "administrator": {
            "$ref": "#/components/schemas/IShoppingAdministrator.IInvert"
          },
          "citizen": {
            "$ref": "#/components/schemas/IShoppingCitizen"
          },
          "value": {
            "type": "number"
          },
          "reason": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "administrator",
          "citizen",
          "value",
          "reason",
          "created_at"
        ]
      },
      "IShoppingMileageDonation.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IShoppingMileageDonation.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-donation.created_at"
                },
                {
                  "const": "-donation.value"
                },
                {
                  "const": "-donation.reason"
                },
                {
                  "const": "+donation.created_at"
                },
                {
                  "const": "+donation.value"
                },
                {
                  "const": "+donation.reason"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "페이지 번호",
            "description": "페이지 번호."
          },
          "limit": {
            "type": "integer",
            "title": "페이지당 레코드 수 제한",
            "description": "페이지당 레코드 수 제한."
          }
        }
      },
      "IShoppingMileageDonation.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "citizen": {
            "$ref": "#/components/schemas/IShoppingCitizen.IRequest.ISearch"
          },
          "minimum": {
            "type": "number",
            "minimum": 0
          },
          "maximum": {
            "type": "number",
            "minimum": 0
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IShoppingCitizen.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "mobile": {
            "type": "string",
            "pattern": "^[0-9]*$"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "IShoppingMileageDonation.ICreate": {
        "type": "object",
        "properties": {
          "citizen_id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "number"
          },
          "reason": {
            "type": "string"
          }
        },
        "required": [
          "citizen_id",
          "value",
          "reason"
        ]
      },
      "IPageIShoppingOrder": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingOrder"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingOrder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "customer": {
            "$ref": "#/components/schemas/IShoppingCustomer",
            "title": "주문을 신청한 고객",
            "description": "주문을 신청한 고객."
          },
          "goods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingOrderGood"
            },
            "minItems": 1,
            "title": "주문 상품 목록",
            "description": "주문 상품 목록."
          },
          "price": {
            "$ref": "#/components/schemas/IShoppingOrderPrice",
            "title": "할인을 포함한 가격 정보",
            "description": "할인을 포함한 가격 정보. 참고로, 이 가격 값은 {@link volume} 값에 곱해졌습니다. 따라서 {@link volume} 값이 목표 {@link IShoppingCartCommodity.volume}과 같더라도 이 가격 값은 {@link IShoppingCartCommodity.price} 값과 다를 수 있습니다.."
          },
          "publish": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingOrderPublish"
              }
            ],
            "title": "주문 완료 및 결제 정보",
            "description": "주문 완료 및 결제 정보."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간."
          }
        },
        "required": [
          "id",
          "customer",
          "goods",
          "price",
          "publish",
          "created_at"
        ],
        "description": "주문 신청 정보. `IShoppingOrder`는 {@link IShoppingCustomer customer}의 주문 신청 정보를 구현하는 엔티티입니다. 그러나 현재는 &quot;주문 확인&quot; 단계가 아닌 &quot;주문 신청&quot; 단계에 있다는 점에 유의하세요. 그리고 고객이 주문을 신청하자마자 대상 쇼핑 카트의 모든 {@link IShoppingCartCommodity 상품}이 {@link IShoppingOrderGood 상품}으로 승격되고, 이러한 상품 레코드는 이 `IShoppingOrder` 아래에 생성됩니다. 물론 대상 쇼핑 카트의 모든 상품이 {@link IShoppingOrderGood}가 되는 것은 아니지만, 고객이 선택한 상품만 {@link IShoppingOrderGood}가 됩니다.."
      },
      "IShoppingCustomer": {
        "type": "object",
        "properties": {
          "type": {
            "const": "customer",
            "title": "고객 유형에 따른 판별",
            "description": "고객 유형에 따른 판별."
          },
          "member": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingMember"
              }
            ],
            "title": "회원정보",
            "description": "회원정보. 고객이 회원으로 가입한 경우."
          },
          "citizen": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingCitizen"
              }
            ],
            "title": "시민정보",
            "description": "시민정보. 고객이 실명과 휴대폰번호를 확인했다면."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "channel": {
            "$ref": "#/components/schemas/IShoppingChannel",
            "title": "소속채널",
            "description": "소속채널."
          },
          "external_user": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingExternalUser"
              }
            ],
            "title": "외부 사용자 정보",
            "description": "외부 사용자 정보. 고객이 외부 서비스에서 왔을 때."
          },
          "href": {
            "type": "string",
            "format": "uri",
            "title": "연결 주소",
            "description": "연결 주소. 클라이언트의 {@link window.location.href}와 동일."
          },
          "referrer": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "추천인 주소",
            "description": "레퍼러 주소. 클라이언트의 {@link window.document.referrer}와 동일."
          },
          "ip": {
            "oneOf": [
              {
                "type": "string",
                "format": "ipv4"
              },
              {
                "type": "string",
                "format": "ipv6"
              }
            ],
            "title": "연결 IP 주소",
            "description": "연결 IP 주소."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "연결 레코드 생성 시간",
            "description": "연결 레코드 생성 시간."
          }
        },
        "required": [
          "type",
          "member",
          "citizen",
          "id",
          "channel",
          "external_user",
          "href",
          "referrer",
          "ip",
          "created_at"
        ],
        "description": "고객 정보이지만 사람이 아니라 연결 기준입니다. `IShoppingCustomer`는 고객으로서 마켓에 참여한 사람들의 정보를 문자 그대로 구체화한 개체입니다. 그런데 `IShoppingCustomer`는 사람이 아니라 연결 기준을 의미합니다. 따라서 같은 사람이 쇼핑몰에 여러 번 접속하더라도 `IShoppingCustomer`에 여러 개의 레코드가 생성됩니다. 이것의 첫 번째 목적은 고객의 유입 경로를 자세히 추적하는 것이고, 같은 사람이 비회원으로 들어왔을 때, {@link IShoppingCartCommodity가 쇼핑 카트에 상품을 넣습니다} 미리 {@link IShoppingCitizen 실명}만 인증하거나 {@link IShoppingOrderPublish 결제} 순간에만 등록/로그인하는 경우를 위한 것입니다. 두 번째입니다. 마지막으로 아래와 같이 다양한 방법으로 사람이 쇼핑몰에서 수행하는 활동을 정확하게 추적하는 것입니다. - 동일한 사람이 {@link IShoppingExternalUser 외부 서비스}에서 온 경우 - 동일한 사람이 여러 계정을 만든 경우 - 동일한 사람이 비회원으로 {@link IShoppingCitizen 실명 인증}만으로 {@link IShoppingOrderPublish 구매}를 하는 경우 - 동일한 사람이 동시에 {@link IShoppingSeller 판매자}와 {@link IShoppingAdministrator 관리자} 역할을 하는 경우 따라서 `IShoppingCustomer`는 동일한 {@link IShoppingCitizen}, {@link IShoppingMember}, {@link IShoppingExternalUser}를 가진 여러 레코드를 가질 수 있습니다. 또한 고객이 실명 인증 후 멤버십에 가입하거나 외부 서비스 사용자였던 후 당사 서비스에 가입하는 경우 모든 관련 레코드가 한 번에 변경됩니다. 따라서 고객의 식별 및 추적을 매우 체계적으로 수행할 수 있습니다.."
      },
      "IShoppingMember": {
        "type": "object",
        "properties": {
          "citizen": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingCitizen"
              }
            ],
            "title": "시민정보",
            "description": "시민정보. 시민으로 인증된 경우에만, 휴대폰 번호와 실명으로. 참고로, 회원이 판매자 또는 관리자로 가입한 경우, 이 시민정보는 반드시."
          },
          "seller": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingSeller"
              }
            ],
            "title": "판매자 정보",
            "description": "판매자 정보. 회원이 판매자로 가입한 경우."
          },
          "administrator": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingAdministrator"
              }
            ],
            "title": "관리자 정보",
            "description": "관리자 정보. 회원이 관리자로 등록한 경우."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "nickname": {
            "type": "string",
            "title": "회원을 고유하게 식별하는 별명",
            "description": "회원을 고유하게 식별하는 별명."
          },
          "emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingMemberEmail"
            },
            "title": "이메일 목록",
            "description": "이메일 목록."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간. 즉, 회원이 가입한 시간입니다.."
          }
        },
        "required": [
          "citizen",
          "seller",
          "administrator",
          "id",
          "nickname",
          "emails",
          "created_at"
        ],
        "description": "회원 계정. `IShoppingMember`는 {@link IShoppingCustomer}가 이 쇼핑몰 시스템의 회원으로 가입할 때의 경우를 상징하는 엔티티입니다. `IShoppingMember`가 판매자 또는 관리자 속성을 가지고 있는 경우, {@link IShoppingCustomer}가 동시에 {@link IShoppingSeller 판매자} 또는 {@link IShoppingAdministrator 관리자} 역할을 한다는 것을 의미합니다.."
      },
      "IShoppingOrderGood": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "commodity": {
            "$ref": "#/components/schemas/IShoppingCartCommodity",
            "title": "상품의 기초가 되는 상품",
            "description": "상품의 기초가 되는 상품."
          },
          "volume": {
            "type": "integer",
            "title": "좋은 것의 양",
            "description": "상품의 양. {@link IShoppingCartCommodityStock.quantity}에 곱해진 값. 그 목적은 {@link IShoppingCartCommodity.volume}과 정확히 동일하지만, {@link IShoppingCartCommodity} 레코드는 결제까지 재사용 가능하기 때문에 다시 작성되었습니다.."
          },
          "price": {
            "$ref": "#/components/schemas/IShoppingOrderPrice.ISummary",
            "title": "할인 및 다중 볼륨을 포함한 가격 정보",
            "description": "할인 및 다중 볼륨을 포함한 가격 정보."
          },
          "state": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "none"
              },
              {
                "const": "underway"
              },
              {
                "const": "preparing"
              },
              {
                "const": "manufacturing"
              },
              {
                "const": "shipping"
              },
              {
                "const": "delivering"
              },
              {
                "const": "arrived"
              }
            ],
            "title": "좋은 것에 대한 배달 상태",
            "description": "좋은 것에 대한 배달 상태."
          },
          "confirmed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "주문 확인 시간",
            "description": "주문 확인 시간 상품. 확인되면 고객은 환불이나 교환을 요청할 수 없습니다. 확인은 다음 경우에 따라 이루어집니다. - 고객이 직접 합니다. - 배송 후 14일."
          }
        },
        "required": [
          "id",
          "commodity",
          "volume",
          "price",
          "state",
          "confirmed_at"
        ],
        "description": "주문을 구성하는 개별 상품에 대한 정보입니다. `IShoppingOrderGood`는 {@link IShoppingCustomer 고객}이 주문한 각 상품을 나타내는 엔터티이며, 고객의 {@link IShoppingOrder 주문} 요청으로 인해 쇼핑 카트에 있는 제품 {@link IShoppingCartCommodity 상품}을 상품으로 업그레이드하는 과정에서 레코드가 생성됩니다. 그리고 `IShoppingOrderGood`는 {@link IShoppingCartCommodity}와 마찬가지로 목록 {@link IShoppingSaleSnapshot 판매 스냅샷}에 해당하는 개념입니다. 참고로 `IShoppingOrderGood`에는 {@link IShoppingCartCommodity.volume}에 속하는 것과 별도로 {@link volume} 정보도 포함되어 있습니다. 쇼핑 카트에 3권의 책을 넣은 후 실제 주문 신청 과정에서 4권으로 변경하는 경우가 있기 때문입니다. 이는 상품 정보를 직접 변경하는 대신 현재 엔터티의 volume 속성을 변경하여 쇼핑 카트의 재사용성을 높이기 위한 것입니다. 또한 `IShoppingOrderGood`는 주문 후 프로세스, 즉 애프터 서비스(A/S)의 가장 기본적인 단위가 됩니다. 예를 들어, 고객의 제품을 받은 후 주문 확인은 {@link confirmed_at} 속성에 기록됩니다. 또한 `IShoppingOrderGood`는 고객이 주문한 제품에 대한 교환 또는 환불을 발급하거나 요청하는 단위입니다.."
      },
      "IShoppingCartCommodity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "sale": {
            "$ref": "#/components/schemas/IShoppingSaleSnapshot.IInvert",
            "title": "상품 관점에서 판매 정보(스냅샷)를 반전합니다.",
            "description": "상품 관점에서 판매 정보(스냅샷)를 반전합니다.."
          },
          "orderable": {
            "type": "boolean",
            "title": "현재 상품이 주문 가능한지 여부",
            "description": "현재 상품이 주문 가능한지 여부. 이 속성이 `false`이면 상품은 이미 주문되었으므로 주문할 수 없습니다.."
          },
          "pseudo": {
            "type": "boolean",
            "title": "현재 상품이 가짜상품인지 아닌지",
            "description": "현재 상품이 가짜 상품인지 아닌지. 이 속성이 `참`이면 상품은 진짜 상품이 아니라, {@link IShoppingCoupon 쿠폰}으로 할인 효과를 계산하기 위한 가짜 정보일 뿐입니다.."
          },
          "volume": {
            "type": "integer",
            "minimum": 1,
            "title": "구매할 상품의 양",
            "description": "구매할 상품의 양. 자식 {@link IShoppingSaleUnitStock.IInvert.quantity} 값에 곱해지는 세트 수를 나타내는 값."
          },
          "price": {
            "$ref": "#/components/schemas/IShoppingPrice",
            "title": "상품의 가격",
            "description": "상품의 가격입니다. 참고로, 이 가격 값은 {@link volume} 값에 곱해지지 않았습니다. 그저 자식 {@link IShoppingSaleUnitStock.IInvert.price} 값의 가격을 합산한 것입니다.."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간."
          }
        },
        "required": [
          "id",
          "sale",
          "orderable",
          "pseudo",
          "volume",
          "price",
          "created_at"
        ],
        "description": "쇼핑 카트의 항목. `IShoppingCartCommodity`는 {@link IShoppingCustomer customer}가 {@link IShoppingOrder 구매}를 염두에 두고 쇼핑 카트에 넣은 항목의 {@link IShoppingSaleSnapshot 스냅샷}을 나타내는 엔터티입니다. 그리고 고객이 이를 나중에 실제 주문으로 이어갈 경우 `IShoppingCartCommodity`는 {@link IShoppingOrderGood}로 변경됩니다. 그리고 쇼핑 카트에 판매 스냅샷을 추가하는 동안 고객은 불가피하게 목록 스냅샷 내에서 특정 {@link IShoppingSaleUnit 단위}와 {@link IShoppingSaleUnitStock 최종 재고}를 선택합니다. 이러한 단위와 재고에 대한 정보는 자회사인 {@link IShoppingCartCommodityStock}에 기록됩니다. 또한 대상 상품의 스냅샷 세트가 얼마나 구매될지 나타내는 속성 {@link volume}이 있습니다. 이 &quot;볼륨&quot;은 각 구성 요소의 수량인 {@link IShoppingSaleUnitStock.IInvert.quantity}에 곱해지는 값입니다.."
      },
      "IShoppingSaleSnapshot.IInvert": {
        "type": "object",
        "properties": {
          "section": {
            "$ref": "#/components/schemas/IShoppingSection",
            "title": "소속 섹션 정보",
            "description": "소속 섹션 정보."
          },
          "seller": {
            "$ref": "#/components/schemas/IShoppingSeller.IInvert",
            "title": "판매를 등록한 판매자",
            "description": "판매를 등록한 판매자."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "판매의 주요 키",
            "description": "판매의 주요 키."
          },
          "snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "스냅샷의 기본 키",
            "description": "스냅샷의 기본 키."
          },
          "latest": {
            "type": "boolean",
            "title": "스냅샷이 최신인지 아닌지",
            "description": "스냅샷이 최신인지 아닌지."
          },
          "content": {
            "$ref": "#/components/schemas/IShoppingSaleContent.IInvert",
            "title": "판매를 설명하는 설명 및 이미지 콘텐츠",
            "description": "판매를 설명하는 설명 및 이미지 콘텐츠."
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleChannel"
            },
            "minItems": 1,
            "title": "채널 및 카테고리 목록",
            "description": "채널 및 카테고리 목록. 판매가 등록된 채널 및 카테고리."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "검색 태그 목록",
            "description": "검색 태그 목록."
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleUnit.IInvert"
            },
            "minItems": 1,
            "title": "단위 목록",
            "description": "단위 목록. 판매에서 판매되는 개별 제품 구성 정보에 대한 기록. 각 {@link IShoppingSaleUnit 단위} 기록에는 구성 가능한 {@link IShoppingSaleUnitOption 옵션}, 각 옵션에 대한 {@link IShoppingSaleUnitOptionCandidate 후보} 값, 각 옵션의 모든 후보 값을 선택하여 결정된 {@link IShoppingSaleUnitStock 최종 재고}가 있습니다.."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록의 생성 시간입니다. 이 속성은 {@link opens_at}와 다릅니다. 즉, 판매 시점이 열린다는 의미입니다.."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록의 마지막 업데이트 시간",
            "description": "레코드의 마지막 업데이트 시간. 다시 말해, 마지막 스냅샷의 생성 시간."
          },
          "paused_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 일시 정지 시간",
            "description": "판매 일시 중지 시간. 판매자가 어떤 이유로 판매를 일시 중지했습니다. {@link IShoppingCustomer Customers}는 목록과 세부 정보 페이지에서 판매를 계속 볼 수 있지만 판매에는 &quot;판매자가 판매를 일시 중지했습니다&quot;라는 경고 라벨이 있습니다.."
          },
          "suspended_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 중단 시간",
            "description": "판매 중단 시간. 판매자가 어떤 이유로 판매를 중단했습니다. {@link IShoppingCustomer Customers}는 목록과 세부 정보 페이지에서 모두 판매를 볼 수 없습니다. 소프트 삭제와 거의 동일하지만 소유자 {@link IShoppingSeller seller}는 여전히 판매를 보고 재개할 수 있다는 약간의 차이가 있습니다. 물론 이미 판매를 구매한 {@link IShoppingCustomer customers}는 여전히 {@link IShoppingOrder order} 페이지에서 판매를 볼 수 있습니다.."
          },
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 시작 시간",
            "description": "판매 시작 시간."
          },
          "closed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 마감 시간",
            "description": "판매 종료 시간입니다. 이 값이 `null`이면 판매가 영원히 계속됩니다.."
          }
        },
        "required": [
          "section",
          "seller",
          "id",
          "snapshot_id",
          "latest",
          "content",
          "channels",
          "tags",
          "units",
          "created_at",
          "updated_at",
          "paused_at",
          "suspended_at",
          "opened_at",
          "closed_at"
        ],
        "description": "상품 관점에서 판매 스냅샷의 정보를 반전합니다. `IShoppingSaleSnapshot.IInvert`는 {@link IShoppingCommodity} 관점에서 스냅샷을 표현하는 데 사용되는 구조로, {@link IShoppingCartCommodityStock} 엔터티에 해당합니다. 따라서 `IShoppingSaleSnapshot.IInvert`는 스냅샷 레코드의 모든 {@link IShoppingSaleUnit 단위}와 {@link IShoppingSaleUnitStock 재고}를 포함하지 않고, {@link IShoppingCartCommodity 쇼핑 카트}에 넣은 일부 레코드만 포함합니다.."
      },
      "IShoppingSaleUnit.IInvert": {
        "type": "object",
        "properties": {
          "stocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleUnitStock.IInvert"
            },
            "minItems": 1,
            "title": "최종 재고 목록",
            "description": "최종 재고 목록."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "name": {
            "type": "string",
            "title": "단위의 대표적 명칭",
            "description": "단위의 대표적 명칭."
          },
          "primary": {
            "type": "boolean",
            "title": "해당 단위가 1차 단위인지 아닌지",
            "description": "단위가 기본 단위인지 아닌지. 단지 라벨링 값일 뿐."
          },
          "required": {
            "type": "boolean",
            "title": "단위가 필요한지 여부",
            "description": "단위가 필요한지 여부. 단위가 필요한 경우, 고객은 단위를 선택해야 합니다. 선택하지 않으면, 고객은 구매할 수 없습니다. 예를 들어, &quot;Macbook Set&quot; 세일이 있고 단위 중 하나가 &quot;Main Body&quot;인 경우, &quot;Main Body&quot; 단위 없이 &quot;Macbook Set&quot;을 구매할 수 있습니까? 이 속성은 그런 경우를 위한 것입니다.."
          }
        },
        "required": [
          "stocks",
          "id",
          "name",
          "primary",
          "required"
        ]
      },
      "IShoppingSaleUnitStock.IInvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "name": {
            "type": "string",
            "title": "주식의 대표명",
            "description": "주식의 대표명."
          },
          "price": {
            "$ref": "#/components/schemas/IShoppingPrice",
            "title": "주식의 가격",
            "description": "주식의 가격."
          },
          "quantity": {
            "type": "integer",
            "minimum": 1,
            "title": "장바구니에 있는 재고 수량",
            "description": "장바구니에 있는 재고 수량."
          },
          "inventory": {
            "$ref": "#/components/schemas/IShoppingSaleUnitStockInventory",
            "title": "재고의 현재 재고 현황",
            "description": "재고의 현재 재고 현황."
          },
          "choices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleUnitStockChoice.IInvert"
            },
            "title": "선택 목록",
            "description": "선택 목록. 각 옵션에 대해 어떤 값이 쓰여지는가."
          }
        },
        "required": [
          "id",
          "name",
          "price",
          "quantity",
          "inventory",
          "choices"
        ],
        "description": "장바구니에서 정보 반전."
      },
      "IShoppingSaleUnitStockInventory": {
        "type": "object",
        "properties": {
          "income": {
            "type": "integer",
            "title": "총수입금액",
            "description": "총수입금액."
          },
          "outcome": {
            "type": "integer",
            "title": "총 결과 수량",
            "description": "총 결과 수량."
          }
        },
        "required": [
          "income",
          "outcome"
        ],
        "description": "최종재고의 재고정보."
      },
      "IShoppingSaleUnitStockChoice.IInvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "option": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IShoppingSaleUnitSelectableOption.IInvert"
              },
              {
                "$ref": "#/components/schemas/IShoppingSaleUnitDescriptiveOption"
              }
            ],
            "title": "타겟 옵션",
            "description": "타겟 옵션."
          },
          "candidate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingSaleUnitOptionCandidate"
              }
            ],
            "title": "선택된 후보 값",
            "description": "선택된 후보 값."
          },
          "value": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              }
            ],
            "title": "서면 가치",
            "description": "서면 가치."
          }
        },
        "required": [
          "id",
          "option",
          "candidate",
          "value"
        ],
        "description": "장바구니에서 정보 반전."
      },
      "IShoppingSaleUnitSelectableOption.IInvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "type": {
            "const": "select",
            "title": "선택 가능한 옵션 유형에 대한 판별식",
            "description": "선택 가능한 옵션 유형에 대한 판별식."
          },
          "name": {
            "type": "string",
            "title": "옵션의 이름을 나타냅니다",
            "description": "옵션의 이름을 나타냅니다."
          },
          "variable": {
            "type": "boolean",
            "title": "옵션이 가변적인지 아닌지",
            "description": "옵션이 가변적인지 여부. 현재 옵션의 유형이 &quot;선택&quot;인 경우 이 속성은 다른 후보 값을 선택하는 것이 최종 주식에 영향을 미치는지 여부를 의미합니다.."
          }
        },
        "required": [
          "id",
          "type",
          "name",
          "variable"
        ]
      },
      "IShoppingSaleUnitDescriptiveOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "type": {
            "oneOf": [
              {
                "const": "string"
              },
              {
                "const": "number"
              },
              {
                "const": "boolean"
              }
            ],
            "title": "설명 옵션의 유형",
            "description": "설명 옵션의 종류입니다. 구매 시 입력해야 하는 입력값은 무엇입니까?."
          },
          "name": {
            "type": "string",
            "title": "옵션의 읽을 수 있는 이름",
            "description": "옵션의 읽을 수 있는 이름."
          }
        },
        "required": [
          "id",
          "type",
          "name"
        ],
        "description": "설명적 옵션. 옵션 유형이 `&quot;선택&quot;`이 아닌 경우, 해당 옵션은 설명적이므로 {@link IShoppingCustomer 고객}이 {@link IShoppingOrder 구매}에 대한 가치를 작성해야 합니다. 또한, 고객이 옵션에 대해 무엇을 작성하든 {@link IShoppingSaleUnitStock 최종 재고}에는 영향을 미치지 않습니다. 다시 말해, 설명적 옵션은 정보 전달을 위한 것일 뿐입니다.."
      },
      "IShoppingSaleUnitOptionCandidate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "name": {
            "type": "string",
            "title": "후보값의 이름을 나타냅니다.",
            "description": "후보값의 이름을 나타냅니다.."
          }
        },
        "required": [
          "id",
          "name"
        ],
        "description": "옵션 내에서 선택 가능한 후보 값. `IShoppingSaleUnitOptionCandidate`는 {@link &quot;select&quot; 유형의 IShoppingSaleUnitSelectableOption 옵션}에서 선택할 수 있는 개별 후보 값을 나타내는 엔터티입니다. - 예 - RAM: 8GB, 16GB, 32GB - GPU: RTX 3060, RTX 4080, TESLA - 라이선스: 개인, 상업, 교육 그런데, 속한 옵션이 &quot;select&quot; 유형이 아니면 이 엔터티는 결코 사용되지 않습니다.."
      },
      "IShoppingOrderPrice.ISummary": {
        "type": "object",
        "properties": {
          "cash": {
            "type": "number",
            "minimum": 0,
            "title": "현금결제금액",
            "description": "현금결제금액."
          },
          "deposit": {
            "type": "number",
            "minimum": 0,
            "title": "보증금 지불 금액",
            "description": "보증금 지불 금액."
          },
          "mileage": {
            "type": "number",
            "minimum": 0,
            "title": "마일리지 결제금액",
            "description": "마일리지 결제금액."
          },
          "ticket": {
            "type": "number",
            "minimum": 0,
            "title": "할인쿠폰 티켓 결제금액",
            "description": "할인쿠폰 티켓 결제금액."
          },
          "nominal": {
            "type": "number",
            "minimum": 0,
            "title": "명목 가격",
            "description": "명목 가격. 이것은 지불해야 할 {@link real real price}가 아니라, 보여야 할 명목 가격일 뿐입니다. 이 값이 {@link real real price}보다 크면, {@link IShoppingSeller seller}가 할인을 제공하는 것처럼 표시됩니다.."
          },
          "real": {
            "type": "number",
            "minimum": 0,
            "title": "지불해야 할 실제 가격",
            "description": "지불해야 할 실제 가격."
          }
        },
        "required": [
          "cash",
          "deposit",
          "mileage",
          "ticket",
          "nominal",
          "real"
        ],
        "description": "주문가격의 요약정보."
      },
      "IShoppingOrderPrice": {
        "type": "object",
        "properties": {
          "ticket_payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingCouponTicketPayment"
            },
            "title": "할인쿠폰 티켓 결제내역 목록",
            "description": "할인쿠폰 티켓 결제내역 목록."
          },
          "cash": {
            "type": "number",
            "minimum": 0,
            "title": "현금결제금액",
            "description": "현금결제금액."
          },
          "deposit": {
            "type": "number",
            "minimum": 0,
            "title": "보증금 지불 금액",
            "description": "보증금 지불 금액."
          },
          "mileage": {
            "type": "number",
            "minimum": 0,
            "title": "마일리지 결제금액",
            "description": "마일리지 결제금액."
          },
          "ticket": {
            "type": "number",
            "minimum": 0,
            "title": "할인쿠폰 티켓 결제금액",
            "description": "할인쿠폰 티켓 결제금액."
          },
          "nominal": {
            "type": "number",
            "minimum": 0,
            "title": "명목 가격",
            "description": "명목 가격. 이것은 지불해야 할 {@link real real price}가 아니라, 보여야 할 명목 가격일 뿐입니다. 이 값이 {@link real real price}보다 크면, {@link IShoppingSeller seller}가 할인을 제공하는 것처럼 표시됩니다.."
          },
          "real": {
            "type": "number",
            "minimum": 0,
            "title": "지불해야 할 실제 가격",
            "description": "지불해야 할 실제 가격."
          }
        },
        "required": [
          "ticket_payments",
          "cash",
          "deposit",
          "mileage",
          "ticket",
          "nominal",
          "real"
        ],
        "description": "할인을 포함한 주문 가격 정보."
      },
      "IShoppingCouponTicketPayment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "ticket": {
            "$ref": "#/components/schemas/IShoppingCouponTicket",
            "title": "타겟 티켓",
            "description": "타겟 티켓."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간."
          }
        },
        "required": [
          "id",
          "ticket",
          "created_at"
        ],
        "description": "할인 쿠폰 티켓 결제 정보. `IShoppingCouponTicketPayment`는 {@link IShoppingCouponTicket}의 {@link IShoppingOrder 주문}에 대한 결제 정보를 구현하는 엔터티이며, 소비자가 발급받은 할인 쿠폰 티켓을 사용하여 주문하고 결제 금액을 공제할 때 사용됩니다. 그리고 {@link IShoppingOrder} 자체는 주문이 완료된 상황에서 사용되는 엔터티가 아니라 주문 요청을 표현하도록 설계된 엔터티이므로 이 `IShoppingCouponTicketPayment` 레코드를 생성한다고 해서 실제로 첨부된 티켓이 사라지는 것은 아닙니다. {@link IShoppingCustomer 고객} {@link IShoppingOrderPublish.paid_at이 결제를 완료하고 주문을 확인할 때까지 티켓은 일종의 보증금으로 이해될 수 있습니다. 또한 이 레코드는 고객이 티켓 결제를 취소하면 삭제될 수 있지만 귀속 주문 자체가 취소되면 삭제될 수도 있습니다.."
      },
      "IShoppingCouponTicket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "customer": {
            "$ref": "#/components/schemas/IShoppingCustomer",
            "title": "쿠폰티켓을 이용하신 고객님",
            "description": "쿠폰티켓을 이용하신 고객님."
          },
          "coupon": {
            "$ref": "#/components/schemas/IShoppingCoupon",
            "title": "타겟쿠폰",
            "description": "타겟쿠폰."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간."
          },
          "expired_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "티켓의 유효기간",
            "description": "티켓의 유효기간."
          }
        },
        "required": [
          "id",
          "customer",
          "coupon",
          "created_at",
          "expired_at"
        ],
        "description": "할인 쿠폰 티켓 발행 세부 정보. `IShoppingCouponTicket`은 {@link IShoppingCustomer 고객}이 발행한 {@link IShoppingCoupon 할인 쿠폰} 티켓을 상징하는 엔티티입니다. 그리고 대상 할인 쿠폰 사양 자체에 만료일이 있는 경우 만료일은 expired_at에 기록되고 해당 만료일 이후에는 자동으로 삭제됩니다. 물론, 마감일 내에 주문에 할인 쿠폰을 사용하더라도 상관없습니다.."
      },
      "IShoppingOrderPublish": {
        "type": "object",
        "properties": {
          "deliveries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingDelivery"
            },
            "title": "배달 목록",
            "description": "배달 목록. {@link IShoppingOrder 주문}은 여러 번 배달될 수 있습니다. 물론, 반대의 경우도 가능합니다. 즉, {@link IShoppingDelivery 배달}은 여러 주문으로 구성될 수 있습니다.."
          },
          "state": {
            "oneOf": [
              {
                "const": "none"
              },
              {
                "const": "underway"
              },
              {
                "const": "preparing"
              },
              {
                "const": "manufacturing"
              },
              {
                "const": "shipping"
              },
              {
                "const": "delivering"
              },
              {
                "const": "arrived"
              }
            ],
            "title": "주문 현황, 배송에 대한 정보",
            "description": "주문 현황, 배송에 대한 정보."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간."
          },
          "paid_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "주문이 결제된 시간",
            "description": "주문이 결제된 시간."
          },
          "cancelled_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "결제가 취소된 시간",
            "description": "결제가 취소된 시간."
          },
          "address": {
            "$ref": "#/components/schemas/IShoppingAddress",
            "title": "{@link IShoppingOrderGood 상품}을 배송받을 주소",
            "description": "{@link IShoppingOrderGood 상품}을 배송받을 주소."
          }
        },
        "required": [
          "deliveries",
          "state",
          "id",
          "created_at",
          "paid_at",
          "cancelled_at",
          "address"
        ],
        "description": "주문 완료 및 결제 정보. `IShoppingOrderPublish`는 {@link IShoppingCustomer 고객}이 {@link IShoppingOrder 주문}에 대한 결제를 완료하여 주문을 완료하는 일련의 프로세스를 구현하는 엔티티입니다. 그리고 주문이 {@link paid_at 완료}된 후에야 {@link IShoppingSeller 판매자}는 고객이 자신의 상품을 구매했다는 것을 인식할 수 있습니다. 그런데 `IShoppingOrderPublish` 레코드가 있다고 해서 결제가 완료되었다는 의미는 아니라는 점에 유의하세요. 물론 &quot;신용카드&quot;와 &quot;Google Pay&quot;의 경우 결제 신청과 결제가 동시에 이루어집니다. 그러나 &quot;은행 송금&quot;이나 &quot;가상계좌 결제&quot;와 같이 결제 신청 후에 결제가 이루어지는 경우도 있습니다. 따라서 결제 완료를 확인하려면 반드시 {@link paid_at} 속성을 확인하세요. 또한 결제가 이루어진 후에도 갑자기 취소되는 경우가 있을 수 있으므로 이 점도 유의하세요.."
      },
      "IShoppingDelivery": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "seller": {
            "$ref": "#/components/schemas/IShoppingSeller",
            "title": "상품을 배달한 판매자",
            "description": "상품을 배달한 판매자."
          },
          "journeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingDeliveryJourney"
            },
            "title": "배달 여정 목록",
            "description": "배달 여정 목록."
          },
          "pieces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingDeliveryPiece"
            },
            "minItems": 1,
            "title": "납품품 목록",
            "description": "납품품 목록."
          },
          "shippers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingDeliveryShipper"
            },
            "title": "배송업체 목록",
            "description": "배송업체 목록."
          },
          "state": {
            "oneOf": [
              {
                "const": "none"
              },
              {
                "const": "underway"
              },
              {
                "const": "preparing"
              },
              {
                "const": "manufacturing"
              },
              {
                "const": "shipping"
              },
              {
                "const": "delivering"
              },
              {
                "const": "arrived"
              }
            ],
            "title": "배송 상태",
            "description": "배송 상태."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간."
          }
        },
        "required": [
          "id",
          "seller",
          "journeys",
          "pieces",
          "shippers",
          "state",
          "created_at"
        ],
        "description": "배송 정보. {@link IShoppingOrderGood 상품}을 {@link IShoppingCustomer 고객}에게 배송할 때, {@link IShoppingSeller 판매자}는 여러 {@link IShoppingSaleUnitStock 재고} 상품을 한 번에 배송할 수 있습니다. 또한, 부피나 무게 문제와 같은 물리적 제약으로 인해 재고나 상품을 여러 번 배송할 수도 있습니다. 위에서 볼 수 있듯이, 배송과 {@link IShoppingOrder 주문}(또는 {@link IShoppingOrderGood 상품}) 간의 관계는 1:1 또는 N:1이 아니라 M:N입니다. 엔티티 `IShoppingDelivery`는 자회사 {@link IShoppingDeliveryPiece}를 통해 대상 재고나 상품을 참조하여 이러한 관계를 나타내도록 설계되었습니다. 또한 배송은 한 단계로 끝나지 않습니다. 제조, 계획, 배송 및 배송과 같은 여러 프로세스가 있습니다. 이러한 단계는 다른 자회사 {@link IShoppingDeliveryJourney}에서 나타냅니다.."
      },
      "IShoppingDeliveryJourney": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간."
          },
          "deleted_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "기록 삭제 시간",
            "description": "기록 삭제 시간."
          },
          "type": {
            "oneOf": [
              {
                "const": "preparing"
              },
              {
                "const": "manufacturing"
              },
              {
                "const": "shipping"
              },
              {
                "const": "delivering"
              }
            ],
            "title": "여행 유형",
            "description": "여행 유형 - 준비 - 제조 - 운송 - 배달"
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "여행의 제목",
            "description": "여행의 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "여행 설명",
            "description": "여행 설명."
          },
          "started_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "여행 시작 시간",
            "description": "여행 시작 시간."
          },
          "completed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "여행 완료 시간",
            "description": "여행 완료 시간."
          }
        },
        "required": [
          "id",
          "created_at",
          "deleted_at",
          "type",
          "title",
          "description",
          "started_at",
          "completed_at"
        ],
        "description": "배송 여정. `IShoppingDeliveryJourney`는 {@link IShoppingDelivery}의 자회사로, 배송의 각 여정을 설명합니다. 참고로, 여정이라는 단어는 {@link IShoppingOrderGood 상품을 {@link IShoppingCustomer 고객}에게 준비, 배송, 배달하는 것과 같은 배송 프로세스의 각 단계를 의미합니다.."
      },
      "IShoppingDeliveryPiece": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "publish_id": {
            "type": "string",
            "format": "uuid",
            "title": "타겟 주문의 {@link IShoppingOrderPublish.id}",
            "description": "타겟 주문의 {@link IShoppingOrderPublish.id}."
          },
          "good_id": {
            "type": "string",
            "format": "uuid",
            "title": "타겟상품 {@link IShoppingOrderGood.id}",
            "description": "타겟상품 {@link IShoppingOrderGood.id}."
          },
          "stock_id": {
            "type": "string",
            "format": "uuid",
            "title": "타겟 주식 {@link IShoppingSaleUnitStock.id}",
            "description": "타겟 주식 {@link IShoppingSaleUnitStock.id}."
          },
          "quantity": {
            "type": "number",
            "minimum": 0,
            "title": "재고량",
            "description": "재고 수량입니다. 분할 배송을 표현하는 정밀한 값이 될 수 있습니다.."
          }
        },
        "required": [
          "id",
          "publish_id",
          "good_id",
          "stock_id",
          "quantity"
        ],
        "description": "어떤 재고가 배달되는지. `IShoppingDeliveryPiece`는 {@link IShoppingDelivery}의 자회사로, {@link IShoppingOrder}의 각 {@link IShoppingSaleUnitStock 재고}에 대해 얼마나 많은 수량이 배달되는지 설명합니다. 참고로, 주문은 양이나 무게 문제로 인해 여러 번 배달될 수 있으므로 단일 재고에 대해 여러 개의 `IShoppingDeliveryPiece` 레코드가 있을 수 있습니다.."
      },
      "IShoppingDeliveryShipper": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "company": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "company",
          "name",
          "mobile"
        ]
      },
      "IShoppingAddress": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간."
          },
          "mobile": {
            "type": "string",
            "pattern": "^[0-9]*$",
            "title": "연락할 휴대폰 번호",
            "description": "연락할 휴대폰 번호."
          },
          "name": {
            "type": "string",
            "title": "주소의 대표 이름",
            "description": "주소의 대표 이름. 수신자 이름이 될 때도 있고, 지명이 될 때도 있습니다.."
          },
          "country": {
            "type": "string",
            "title": "국가 이름",
            "description": "국가 이름."
          },
          "province": {
            "type": "string",
            "title": "도 이름",
            "description": "도 이름."
          },
          "city": {
            "type": "string",
            "title": "도시 이름",
            "description": "도시 이름."
          },
          "department": {
            "type": "string",
            "title": "부서 이름",
            "description": "부서 이름."
          },
          "possession": {
            "type": "string",
            "title": "도로명, 건물번호, 방번호 등을 포함한 상세 주소",
            "description": "도로명, 건물번호, 방번호 등을 포함한 상세 주소."
          },
          "zip_code": {
            "type": "string",
            "title": "우편번호 또는 우편번호",
            "description": "우편번호 또는 우편번호."
          },
          "special_note": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "필요한 경우 특별 설명",
            "description": "필요한 경우 특별 설명."
          }
        },
        "required": [
          "id",
          "created_at",
          "mobile",
          "name",
          "country",
          "province",
          "city",
          "department",
          "possession",
          "zip_code",
          "special_note"
        ],
        "description": "주소 정보."
      },
      "IShoppingOrder.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IShoppingOrder.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-order.price"
                },
                {
                  "const": "-order.quantity"
                },
                {
                  "const": "-order.created_at"
                },
                {
                  "const": "-order.publish.paid_at"
                },
                {
                  "const": "+order.price"
                },
                {
                  "const": "+order.quantity"
                },
                {
                  "const": "+order.created_at"
                },
                {
                  "const": "+order.publish.paid_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "페이지 번호",
            "description": "페이지 번호."
          },
          "limit": {
            "type": "integer",
            "title": "페이지당 레코드 수 제한",
            "description": "페이지당 레코드 수 제한."
          }
        },
        "description": "페이지 번호 및 검색/정렬 조건이 포함된 주문 요청."
      },
      "IShoppingOrder.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "min_price": {
            "type": "number"
          },
          "max_price": {
            "type": "number"
          },
          "paid": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "sale": {
            "$ref": "#/components/schemas/IShoppingSale.IRequest.ISearch"
          }
        }
      },
      "IShoppingSale.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "show_paused": {
            "type": "boolean"
          },
          "show_suspended": {
            "oneOf": [
              {
                "const": "only"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "title_or_content": {
            "type": "string"
          },
          "price": {
            "$ref": "#/components/schemas/IShoppingPrice.ISearch"
          },
          "review": {
            "$ref": "#/components/schemas/IShoppingSaleReview.IInvertSearch"
          },
          "section_codes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "channel_codes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "channel_category_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "seller": {
            "$ref": "#/components/schemas/IShoppingSeller.IRequest.ISearch"
          }
        }
      },
      "IShoppingPrice.ISearch": {
        "type": "object",
        "properties": {
          "minimum": {
            "type": "number"
          },
          "maximum": {
            "type": "number"
          }
        }
      },
      "IShoppingSaleReview.IInvertSearch": {
        "type": "object",
        "properties": {
          "score": {
            "$ref": "#/components/schemas/IShoppingSaleReview.IInvertSearch.IScoreRange"
          },
          "count": {
            "$ref": "#/components/schemas/IShoppingSaleReview.IInvertSearch.ICountRange"
          }
        }
      },
      "IShoppingSaleReview.IInvertSearch.IScoreRange": {
        "type": "object",
        "properties": {
          "minimum": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "maximum": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          }
        }
      },
      "IShoppingSaleReview.IInvertSearch.ICountRange": {
        "type": "object",
        "properties": {
          "minimum": {
            "type": "integer"
          },
          "maximum": {
            "type": "integer"
          }
        }
      },
      "IShoppingSeller.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "mobile": {
            "type": "string",
            "pattern": "^[0-9]*$"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "nickname": {
            "type": "string"
          }
        }
      },
      "IPageIShoppingSale.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSale.ISummary"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingSale.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IShoppingSale.IRequest.ISearch",
            "title": "검색 조건",
            "description": "검색 조건."
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-seller.created_at"
                },
                {
                  "const": "-seller.goods.payments.real"
                },
                {
                  "const": "-seller.goods.publish_count"
                },
                {
                  "const": "-seller.reviews.average"
                },
                {
                  "const": "-seller.reviews.count"
                },
                {
                  "const": "-goods.publish_count"
                },
                {
                  "const": "-goods.payments.real"
                },
                {
                  "const": "-reviews.average"
                },
                {
                  "const": "-reviews.count"
                },
                {
                  "const": "-sale.created_at"
                },
                {
                  "const": "-sale.updated_at"
                },
                {
                  "const": "-sale.opened_at"
                },
                {
                  "const": "-sale.closed_at"
                },
                {
                  "const": "-sale.content.title"
                },
                {
                  "const": "-sale.price_range.lowest.real"
                },
                {
                  "const": "-sale.price_range.highest.real"
                },
                {
                  "const": "+seller.created_at"
                },
                {
                  "const": "+seller.goods.payments.real"
                },
                {
                  "const": "+seller.goods.publish_count"
                },
                {
                  "const": "+seller.reviews.average"
                },
                {
                  "const": "+seller.reviews.count"
                },
                {
                  "const": "+goods.publish_count"
                },
                {
                  "const": "+goods.payments.real"
                },
                {
                  "const": "+reviews.average"
                },
                {
                  "const": "+reviews.count"
                },
                {
                  "const": "+sale.created_at"
                },
                {
                  "const": "+sale.updated_at"
                },
                {
                  "const": "+sale.opened_at"
                },
                {
                  "const": "+sale.closed_at"
                },
                {
                  "const": "+sale.content.title"
                },
                {
                  "const": "+sale.price_range.lowest.real"
                },
                {
                  "const": "+sale.price_range.highest.real"
                }
              ]
            },
            "title": "정렬 조건",
            "description": "정렬 조건."
          },
          "page": {
            "type": "integer",
            "title": "페이지 번호",
            "description": "페이지 번호."
          },
          "limit": {
            "type": "integer",
            "title": "페이지당 레코드 수 제한",
            "description": "페이지당 레코드 수 제한."
          }
        },
        "description": "페이지 번호 매기기 및 검색/정렬 옵션이 포함된 요약 판매 요청."
      },
      "IShoppingSale": {
        "type": "object",
        "properties": {
          "section": {
            "$ref": "#/components/schemas/IShoppingSection",
            "title": "소속된 섹션",
            "description": "소속된 섹션."
          },
          "seller": {
            "$ref": "#/components/schemas/IShoppingSeller.IInvert",
            "title": "판매를 등록한 판매자",
            "description": "판매를 등록한 판매자."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "판매의 주요 키",
            "description": "판매의 주요 키."
          },
          "snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "스냅샷의 기본 키",
            "description": "스냅샷의 기본 키."
          },
          "latest": {
            "type": "boolean",
            "title": "스냅샷이 최신인지 아닌지",
            "description": "스냅샷이 최신인지 아닌지."
          },
          "content": {
            "$ref": "#/components/schemas/IShoppingSaleContent",
            "title": "판매를 설명하는 설명 및 이미지 콘텐츠",
            "description": "판매를 설명하는 설명 및 이미지 콘텐츠."
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleChannel"
            },
            "minItems": 1,
            "title": "채널 및 카테고리 목록",
            "description": "채널 및 카테고리 목록. 판매가 등록된 채널 및 카테고리."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "검색 태그 목록",
            "description": "검색 태그 목록."
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleUnit"
            },
            "minItems": 1,
            "title": "단위 목록",
            "description": "단위 목록. 판매에서 판매되는 개별 제품 구성 정보에 대한 기록. 각 {@link IShoppingSaleUnit 단위} 기록에는 구성 가능한 {@link IShoppingSaleUnitOption 옵션}, 각 옵션에 대한 {@link IShoppingSaleUnitOptionCandidate 후보} 값, 각 옵션의 모든 후보 값을 선택하여 결정된 {@link IShoppingSaleUnitStock 최종 재고}가 있습니다.."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록의 생성 시간입니다. 이 속성은 {@link opens_at}와 다릅니다. 즉, 판매 시점이 열린다는 의미입니다.."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록의 마지막 업데이트 시간",
            "description": "레코드의 마지막 업데이트 시간. 다시 말해, 마지막 스냅샷의 생성 시간."
          },
          "paused_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 일시 정지 시간",
            "description": "판매 일시 중지 시간. 판매자가 어떤 이유로 판매를 일시 중지했습니다. {@link IShoppingCustomer Customers}는 목록과 세부 정보 페이지에서 판매를 계속 볼 수 있지만 판매에는 &quot;판매자가 판매를 일시 중지했습니다&quot;라는 경고 라벨이 있습니다.."
          },
          "suspended_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 중단 시간",
            "description": "판매 중단 시간. 판매자가 어떤 이유로 판매를 중단했습니다. {@link IShoppingCustomer Customers}는 목록과 세부 정보 페이지에서 모두 판매를 볼 수 없습니다. 소프트 삭제와 거의 동일하지만 소유자 {@link IShoppingSeller seller}는 여전히 판매를 보고 재개할 수 있다는 약간의 차이가 있습니다. 물론 이미 판매를 구매한 {@link IShoppingCustomer customers}는 여전히 {@link IShoppingOrder order} 페이지에서 판매를 볼 수 있습니다.."
          },
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 시작 시간",
            "description": "판매 시작 시간."
          },
          "closed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 마감 시간",
            "description": "판매 종료 시간입니다. 이 값이 `null`이면 판매가 영원히 계속됩니다.."
          }
        },
        "required": [
          "section",
          "seller",
          "id",
          "snapshot_id",
          "latest",
          "content",
          "channels",
          "tags",
          "units",
          "created_at",
          "updated_at",
          "paused_at",
          "suspended_at",
          "opened_at",
          "closed_at"
        ],
        "description": "판매자 판매 제품. `IShoppingSale`은 {@link ISoppingSeller 판매자}가 등록한 &quot;제품 판매&quot;(판매) 정보를 구현하는 엔터티입니다. 그리고 판매의 주요 정보는 주요 `IShoppingSale`가 아닌 하위 {@link IShoppingSaleSnapshot}에 기록됩니다. 판매자가 이전에 등록된 품목을 변경하면 기존 `IShoppingSale` 레코드는 변경되지 않지만 새로운 {@link IShoppingSaleSnapshot 스냅샷} 레코드가 생성됩니다. 이는 판매자가 품목의 구성 요소나 가격을 변경하더라도 고객이 특정 품목을 구매한 후 {@link IShoppingCustomer 고객}의 {@link IShoppingOrder 구매 내역}을 완벽하게 보존하기 위한 것입니다. 또한 구성 요소나 가격을 변경하고 각 사례에서 성과를 측정하는 소위 A/B 테스트에서 판매자를 지원하기 위한 것입니다.."
      },
      "IShoppingSaleContent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "title": {
            "type": "string",
            "title": "콘텐츠 제목",
            "description": "콘텐츠 제목."
          },
          "format": {
            "oneOf": [
              {
                "const": "html"
              },
              {
                "const": "md"
              },
              {
                "const": "txt"
              }
            ],
            "title": "본문 내용의 형식",
            "description": "본문 내용의 형식. `html`, `md`, `txt`와 같은 파일 확장자와 동일한 의미."
          },
          "body": {
            "type": "string",
            "title": "본문 내용",
            "description": "본문 내용."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile"
            },
            "title": "첨부파일 목록",
            "description": "첨부파일 목록."
          },
          "thumbnails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile"
            },
            "title": "썸네일 목록",
            "description": "썸네일 목록."
          }
        },
        "required": [
          "id",
          "title",
          "format",
          "body",
          "files",
          "thumbnails"
        ],
        "description": "판매 스냅샷의 콘텐츠 정보. `IShoppingSaleContent`는 {@link IShoppingSale}의 설명 콘텐츠를 구현하는 엔티티입니다.."
      },
      "IShoppingSaleUnit": {
        "type": "object",
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IShoppingSaleUnitSelectableOption"
                },
                {
                  "$ref": "#/components/schemas/IShoppingSaleUnitDescriptiveOption"
                }
              ]
            },
            "title": "옵션 목록",
            "description": "옵션 목록."
          },
          "stocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleUnitStock"
            },
            "minItems": 1,
            "title": "최종 재고 목록",
            "description": "최종 재고 목록."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "name": {
            "type": "string",
            "title": "단위의 대표적 명칭",
            "description": "단위의 대표적 명칭."
          },
          "primary": {
            "type": "boolean",
            "title": "해당 단위가 1차 단위인지 아닌지",
            "description": "단위가 기본 단위인지 아닌지. 단지 라벨링 값일 뿐."
          },
          "required": {
            "type": "boolean",
            "title": "단위가 필요한지 여부",
            "description": "단위가 필요한지 여부. 단위가 필요한 경우, 고객은 단위를 선택해야 합니다. 선택하지 않으면, 고객은 구매할 수 없습니다. 예를 들어, &quot;Macbook Set&quot; 세일이 있고 단위 중 하나가 &quot;Main Body&quot;인 경우, &quot;Main Body&quot; 단위 없이 &quot;Macbook Set&quot;을 구매할 수 있습니까? 이 속성은 그런 경우를 위한 것입니다.."
          }
        },
        "required": [
          "options",
          "stocks",
          "id",
          "name",
          "primary",
          "required"
        ],
        "description": "판매에서 처리하는 제품 구성 정보. `IShoppingSaleUnit`은 {@link IShoppingSale 판매}에서 처리하는 &quot;개별 제품&quot; 정보를 구체화하는 엔티티입니다. 참고로, `IShoppingSaleUnit`이 1:N의 대수 관계로 {@link IShoppingSaleSnapshot}과 분리된 이유는 여러 제품이 하나의 상품으로 판매되는 경우가 있기 때문입니다. 이는 소위 &quot;묶음 제품&quot;의 경우입니다. - 일반 제품(Mackbook 세트)에서 묶음 - 본체 - 키보드 - 마우스 - Apple Care(무료 A/S 바우처) 그리고 다시 말하지만, `IShoppingSaleUnit`은 그 자체로 {@link IShoppingCustomer 고객}이 {@link IShoppingOrder 구매할 {@link IShoppingSaleUnitStock 최종 재고}를 참조하지 않습니다. 최종 재고는 주어진 모든 {@link IShoppingSaleUnitOption 옵션}과 {@link IShoppingSaleUnitOptionCandidate 후보 값}을 선택한 후에만 찾을 수 있습니다. 예를 들어, Macbook을 구매하더라도 최종 재고는 모든 옵션(CPU/RAM/SSD) 등을 선택한 후에만 결정됩니다.."
      },
      "IShoppingSaleUnitSelectableOption": {
        "type": "object",
        "properties": {
          "candidates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleUnitOptionCandidate"
            },
            "minItems": 1,
            "title": "후보 값 목록",
            "description": "후보 값 목록."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "type": {
            "const": "select",
            "title": "선택 가능한 옵션 유형에 대한 판별식",
            "description": "선택 가능한 옵션 유형에 대한 판별식."
          },
          "name": {
            "type": "string",
            "title": "옵션의 이름을 나타냅니다",
            "description": "옵션의 이름을 나타냅니다."
          },
          "variable": {
            "type": "boolean",
            "title": "옵션이 가변적인지 아닌지",
            "description": "옵션이 가변적인지 여부. 현재 옵션의 유형이 &quot;선택&quot;인 경우 이 속성은 다른 후보 값을 선택하는 것이 최종 주식에 영향을 미치는지 여부를 의미합니다.."
          }
        },
        "required": [
          "candidates",
          "id",
          "type",
          "name",
          "variable"
        ],
        "description": "판매용 단위에 대한 개별 옵션 정보. `IShoppingSaleUnitSelectableOption`은 {@link IShoppingSale 판매}에서 개별 제품을 나타내는 {@link IShoppingSaleUnit}의 자회사이며, 단위에 대한 개별 선택 가능 옵션 정보를 나타내도록 설계된 엔터티입니다. - 옵션의 예 - 선택 가능 옵션 - 컴퓨터: CPU, RAM, SSD 등 - 의류: 사이즈, 색상, 스타일 등 - 설명적 옵션 - 조각 - 간단한 질문 {@link variable} 속성 값이 `true`이면 {@link IShoppingCustomer 고객}이 구매할 최종 재고는 {@link IShoppingSaleUnitOptionCandidate 후보 값}의 선택에 따라 달라집니다. 반대로 &quot;select&quot;가 아닌 유형이거나 {@link variable} 속성 값이 &quot;false&quot;인 경우 이는 단순한 정보 전달 이상의 의미가 없는 옵션입니다. 따라서 고객이 구매 시 어떤 값을 선택하더라도 이 경우 옵션은 {@link IShoppingSaleUnitStock 최종 재고}에 영향을 미치지 않습니다.."
      },
      "IShoppingSaleUnitStock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "name": {
            "type": "string",
            "title": "주식의 대표명",
            "description": "주식의 대표명."
          },
          "price": {
            "$ref": "#/components/schemas/IShoppingPrice",
            "title": "주식의 가격",
            "description": "주식의 가격."
          },
          "inventory": {
            "$ref": "#/components/schemas/IShoppingSaleUnitStockInventory",
            "title": "재고의 현재 재고 현황",
            "description": "재고의 현재 재고 현황."
          },
          "choices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleUnitStockChoice"
            },
            "title": "선택 목록",
            "description": "선택 사항 목록. 각 옵션에 대해 선택되는 후보 값."
          }
        },
        "required": [
          "id",
          "name",
          "price",
          "inventory",
          "choices"
        ],
        "description": "판매용 단위에 대한 최종 구성 요소 정보. `IShoppingSaleUnitStock`은 판매용 제품 카탈로그를 나타내는 {@link IShoppingSaleUnit}의 자회사이며, 소속 단위에서 모든 {@link IShoppingSaleUnitSelectableOption 옵션}(변수 &quot;select&quot; 유형)과 해당 {@link IShoppingSaleUnitOptionCandidate candidate} 값을 선택하여 구성된 일종의 최종 재고입니다. 고객이 실제로 구매하는 것은 &quot;상품&quot; 그 자체입니다. - 제품 이름) MacBook - 옵션 - CPU: {i3, i5, i7, i9} - RAM: {8GB, 16GB, 32GB, 64GB, 96GB} - SSD: {256GB, 512GB, 1TB} - 최종 재고 수: 4 * 5 * 3 = 60 참고로, 귀속 단위의 `IShoppingSaleUnitStock` 레코드의 총 수는 데카르트 곱을 사용하여 얻을 수 있습니다. 즉, 각 (변수 &quot;select&quot; 유형) 옵션이 가질 수 있는 모든 후보 값을 케이스 수로 곱하여 얻은 값은 단위의 최종 주식 총 수입니다. 물론 단일 변수 &quot;select&quot; 유형 옵션이 없으면 단위의 최종 주식 수는 1에 불과합니다.."
      },
      "IShoppingSaleUnitStockChoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "option_id": {
            "type": "string",
            "format": "uuid",
            "description": "대상 옵션의 {@link IShoppingSaleUnitOption.id}"
          },
          "candidate_id": {
            "type": "string",
            "format": "uuid",
            "description": "대상 후보자의 {@link IShoppingSaleUnitOptionCandidate.id}"
          }
        },
        "required": [
          "id",
          "option_id",
          "candidate_id"
        ],
        "description": "최종 재고의 선택 정보. `IShoppingSaleUnitStockChoice`는 각 변수 &quot;select&quot; 유형의 {@link IShoppingSaleUnitSelectableOption 옵션}이 각 {@link IShoppingSaleUnitStock 재고}에 대해 선택되었는지와 그 안에서 어떤 {@link IShoppingSaleUnitOptionCandidate 후보 값}이 선택되었는지를 나타내는 엔티티입니다. 물론, 바인딩된 {@link IShoppingSaleUnit 단위}에 옵션이 없는 경우 이 엔티티도 무시할 수 있습니다.."
      },
      "IPageIShoppingSaleInquiryComment": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleInquiryComment"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingSaleInquiryComment": {
        "type": "object",
        "properties": {
          "writer": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IShoppingAdministrator.IInvert"
              },
              {
                "$ref": "#/components/schemas/IShoppingCustomer"
              },
              {
                "$ref": "#/components/schemas/IShoppingSeller.IInvert"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "administrator": "#/components/schemas/IShoppingAdministrator.IInvert",
                "customer": "#/components/schemas/IShoppingCustomer",
                "seller": "#/components/schemas/IShoppingSeller.IInvert"
              }
            },
            "title": "댓글 작성자",
            "description": "댓글 작성자. 고객과 판매자 모두 판매 문의에 댓글을 쓸 수 있습니다. 그런데, 고객에 대한 제한은 없지만 판매자는 판매를 등록한 사람이어야 합니다.."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "부모의 댓글 ID",
            "description": "부모의 댓글 ID."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IBbsArticleComment.ISnapshot"
            },
            "minItems": 1,
            "title": "스냅샷 내용 목록",
            "description": "스냅샷 내용 목록입니다. 댓글이 생성될 때 처음 생성되며, 댓글이 수정될 때마다 누적됩니다.."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "댓글 작성 시간",
            "description": "댓글 작성 시간."
          }
        },
        "required": [
          "writer",
          "id",
          "parent_id",
          "snapshots",
          "created_at"
        ],
        "description": "문의 게시물에 작성된 댓글입니다. `IShoppingSaleInquiryComment`는 {@link IBbsArticleComment}의 하위 유형 엔터티이며, {@link IShoppingCustomer 고객}이 작성한 {@link IShoppingSaleInquiry 문의}에 대해 여러 사람과 소통하고자 할 때 사용됩니다. 참고로, 관련 당사자만 {@link IShoppingSeller 판매자}에 대한 댓글을 작성할 수 있지만, {@link IShoppingCustomer 고객}에 대한 댓글에는 제한이 없습니다. 즉, 문의를 작성한 사람이 아니더라도 모든 고객이 자유롭게 댓글을 작성할 수 있습니다.."
      },
      "IBbsArticleComment.ISnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "스냅샷 레코드 생성 시간",
            "description": "스냅샷 레코드의 생성 시간. 즉, 생성 시간 또는 업데이트 시간 또는 주석."
          },
          "format": {
            "oneOf": [
              {
                "const": "html"
              },
              {
                "const": "md"
              },
              {
                "const": "txt"
              }
            ],
            "title": "본문 형식",
            "description": "본문 형식. `html`, `md`, `txt`와 같은 확장자와 동일한 의미."
          },
          "body": {
            "type": "string",
            "title": "댓글의 내용 본문",
            "description": "댓글의 내용 본문."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "첨부파일 목록",
            "description": "첨부파일 목록."
          }
        },
        "required": [
          "id",
          "created_at",
          "format",
          "body",
          "files"
        ],
        "description": "댓글의 스냅샷. `IBbsArticleComment.ISnapshot`은 댓글의 내용을 담고 있는 스냅샷 엔티티입니다. {@link IBbsArticleComment}에서 언급했듯이 증거를 보관하고 사기를 방지하도록 설계되었습니다.."
      },
      "IAttachmentFile.ICreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "확장자를 제외한 파일 이름",
            "description": "확장자를 제외한 파일 이름. `.gitignore` 파일이 있는 경우 이름은 빈 문자열입니다.."
          },
          "extension": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "minLength": 1,
                "maxLength": 8
              }
            ],
            "title": "확대",
            "description": "확장자. `README`와 같은 경우 생략 가능."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "title": "실제 파일의 URL 경로",
            "description": "실제 파일의 URL 경로."
          }
        },
        "required": [
          "name",
          "extension",
          "url"
        ]
      },
      "IShoppingSaleInquiryComment.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IShoppingSaleInquiryComment.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-created_at"
                },
                {
                  "const": "+created_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "페이지 번호",
            "description": "페이지 번호."
          },
          "limit": {
            "type": "integer",
            "title": "페이지당 레코드 수 제한",
            "description": "페이지당 레코드 수 제한."
          }
        },
        "description": "페이지 번호 매기기 및 검색/정렬 옵션을 포함한 댓글 요청."
      },
      "IShoppingSaleInquiryComment.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "body": {
            "type": "string"
          }
        }
      },
      "IShoppingSaleInquiryComment.ICreate": {
        "type": "object",
        "properties": {
          "format": {
            "oneOf": [
              {
                "const": "html"
              },
              {
                "const": "md"
              },
              {
                "const": "txt"
              }
            ],
            "title": "본문 형식",
            "description": "본문 형식. `html`, `md`, `txt`와 같은 확장자와 동일한 의미."
          },
          "body": {
            "type": "string",
            "title": "댓글의 내용 본문",
            "description": "댓글의 내용 본문."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "첨부파일 목록",
            "description": "첨부파일 목록."
          }
        },
        "required": [
          "format",
          "body",
          "files"
        ],
        "description": "댓글 작성 정보."
      },
      "IShoppingSaleInquiryComment.ISnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "스냅샷 레코드 생성 시간",
            "description": "스냅샷 레코드의 생성 시간. 즉, 생성 시간 또는 업데이트 시간 또는 주석."
          },
          "format": {
            "oneOf": [
              {
                "const": "html"
              },
              {
                "const": "md"
              },
              {
                "const": "txt"
              }
            ],
            "title": "본문 형식",
            "description": "본문 형식. `html`, `md`, `txt`와 같은 확장자와 동일한 의미."
          },
          "body": {
            "type": "string",
            "title": "댓글의 내용 본문",
            "description": "댓글의 내용 본문."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "첨부파일 목록",
            "description": "첨부파일 목록."
          }
        },
        "required": [
          "id",
          "created_at",
          "format",
          "body",
          "files"
        ],
        "description": "댓글의 스냅샷 내용."
      },
      "IPageIShoppingSaleQuestion.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleQuestion.ISummary"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingSaleQuestion.ISummary": {
        "type": "object",
        "properties": {
          "secret": {
            "type": "boolean",
            "title": "질문글이 비밀글인지 아닌지",
            "description": "질문글이 비밀글인지 아닌지. 비밀글이면 작성자 고객과 관련 판매자만 자세한 내용을 볼 수 있음."
          },
          "customer": {
            "$ref": "#/components/schemas/IShoppingCustomer",
            "title": "문의사항을 작성하신 고객님",
            "description": "문의사항을 작성하신 고객님."
          },
          "answer": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingSaleInquiryAnswer.ISummary"
              }
            ],
            "title": "판매자 문의에 대한 공식 답변",
            "description": "판매자 문의에 대한 공식 답변."
          },
          "read_by_seller": {
            "type": "boolean",
            "title": "판매자가 문의사항을 확인했는지 여부",
            "description": "판매자가 문의사항을 확인했는지 여부."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "title": {
            "type": "string",
            "title": "마지막 스냅샷의 제목",
            "description": "마지막 스냅샷의 제목."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기사 작성 시간",
            "description": "기사 작성 시간."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "기사 수정 시간",
            "description": "기사의 수정 시간. 즉, 마지막 스냅샷이 생성된 시간입니다.."
          }
        },
        "required": [
          "secret",
          "customer",
          "answer",
          "read_by_seller",
          "id",
          "title",
          "created_at",
          "updated_at"
        ],
        "description": "질문의 요약된 정보."
      },
      "IShoppingSaleInquiryAnswer.ISummary": {
        "type": "object",
        "properties": {
          "seller": {
            "$ref": "#/components/schemas/IShoppingSeller"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "title": {
            "type": "string",
            "title": "마지막 스냅샷의 제목",
            "description": "마지막 스냅샷의 제목."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기사 작성 시간",
            "description": "기사 작성 시간."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "기사 수정 시간",
            "description": "기사의 수정 시간. 즉, 마지막 스냅샷이 생성된 시간입니다.."
          }
        },
        "required": [
          "seller",
          "id",
          "title",
          "created_at",
          "updated_at"
        ]
      },
      "IShoppingSaleQuestion.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IShoppingSaleInquiry.IRequest.ISearch",
            "title": "검색 조건",
            "description": "검색 조건."
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-nickname"
                },
                {
                  "const": "-answered_at"
                },
                {
                  "const": "-created_at"
                },
                {
                  "const": "-updated_at"
                },
                {
                  "const": "-title"
                },
                {
                  "const": "+nickname"
                },
                {
                  "const": "+answered_at"
                },
                {
                  "const": "+created_at"
                },
                {
                  "const": "+updated_at"
                },
                {
                  "const": "+title"
                }
              ]
            },
            "title": "정렬 조건",
            "description": "정렬 조건."
          },
          "page": {
            "type": "integer",
            "title": "페이지 번호",
            "description": "페이지 번호."
          },
          "limit": {
            "type": "integer",
            "title": "페이지당 레코드 수 제한",
            "description": "페이지당 레코드 수 제한."
          }
        },
        "description": "페이지 검색/정렬 옵션을 포함한 요약 정보 요청."
      },
      "IShoppingSaleInquiry.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "answered": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "title_or_body": {
            "type": "string"
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IPageIShoppingSaleQuestion.IAbridge": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleQuestion.IAbridge"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingSaleQuestion.IAbridge": {
        "type": "object",
        "properties": {
          "secret": {
            "type": "boolean",
            "title": "질문글이 비밀글인지 아닌지",
            "description": "질문글이 비밀글인지 아닌지. 비밀글이면 작성자 고객과 관련 판매자만 자세한 내용을 볼 수 있음."
          },
          "customer": {
            "$ref": "#/components/schemas/IShoppingCustomer",
            "title": "문의사항을 작성하신 고객님",
            "description": "문의사항을 작성하신 고객님."
          },
          "answer": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingSaleInquiryAnswer.IAbridge"
              }
            ],
            "title": "판매자 문의에 대한 공식 답변",
            "description": "판매자 문의에 대한 공식 답변."
          },
          "read_by_seller": {
            "type": "boolean",
            "title": "판매자가 문의사항을 확인했는지 여부",
            "description": "판매자가 문의사항을 확인했는지 여부."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "title": {
            "type": "string",
            "title": "마지막 스냅샷의 제목",
            "description": "마지막 스냅샷의 제목."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기사 작성 시간",
            "description": "기사 작성 시간."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "기사 수정 시간",
            "description": "기사의 수정 시간. 즉, 마지막 스냅샷이 생성된 시간입니다.."
          },
          "format": {
            "oneOf": [
              {
                "const": "html"
              },
              {
                "const": "md"
              },
              {
                "const": "txt"
              }
            ],
            "title": "본문 형식",
            "description": "본문 형식. `html`, `md`, `txt`와 같은 확장자와 동일한 의미."
          },
          "body": {
            "type": "string",
            "title": "기사의 내용 본문",
            "description": "기사의 내용 본문."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "첨부파일 목록",
            "description": "첨부파일 목록."
          }
        },
        "required": [
          "secret",
          "customer",
          "answer",
          "read_by_seller",
          "id",
          "title",
          "created_at",
          "updated_at",
          "format",
          "body",
          "files"
        ],
        "description": "질문에 대한 요약 정보."
      },
      "IShoppingSaleInquiryAnswer.IAbridge": {
        "type": "object",
        "properties": {
          "seller": {
            "$ref": "#/components/schemas/IShoppingSeller"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "title": {
            "type": "string",
            "title": "마지막 스냅샷의 제목",
            "description": "마지막 스냅샷의 제목."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기사 작성 시간",
            "description": "기사 작성 시간."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "기사 수정 시간",
            "description": "기사의 수정 시간. 즉, 마지막 스냅샷이 생성된 시간입니다.."
          },
          "format": {
            "oneOf": [
              {
                "const": "html"
              },
              {
                "const": "md"
              },
              {
                "const": "txt"
              }
            ],
            "title": "본문 형식",
            "description": "본문 형식. `html`, `md`, `txt`와 같은 확장자와 동일한 의미."
          },
          "body": {
            "type": "string",
            "title": "기사의 내용 본문",
            "description": "기사의 내용 본문."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "첨부파일 목록",
            "description": "첨부파일 목록."
          }
        },
        "required": [
          "seller",
          "id",
          "title",
          "created_at",
          "updated_at",
          "format",
          "body",
          "files"
        ]
      },
      "IShoppingSaleQuestion": {
        "type": "object",
        "properties": {
          "secret": {
            "type": "boolean",
            "title": "질문글이 비밀글인지 아닌지",
            "description": "질문글이 비밀글인지 아닌지. 비밀글이면 작성자 고객과 관련 판매자만 자세한 내용을 볼 수 있음."
          },
          "type": {
            "const": "question",
            "title": "파생된 문의의 유형",
            "description": "파생된 문의 유형. - `question`: {@link IShoppingSaleQuestion} - `review`: {@link IShoppingSaleReview}"
          },
          "customer": {
            "$ref": "#/components/schemas/IShoppingCustomer",
            "title": "문의사항을 작성하신 고객님",
            "description": "문의사항을 작성하신 고객님."
          },
          "answer": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingSaleInquiryAnswer"
              }
            ],
            "title": "판매자 문의에 대한 공식 답변",
            "description": "판매자 문의에 대한 공식 답변."
          },
          "read_by_seller": {
            "type": "boolean",
            "title": "판매자가 문의사항을 확인했는지 여부",
            "description": "판매자가 문의사항을 확인했는지 여부."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IBbsArticle.ISnapshot"
            },
            "minItems": 1,
            "title": "스냅샷 내용 목록",
            "description": "스냅샷 내용 목록입니다. 기사가 생성될 때 처음 생성되며, 기사가 수정될 때마다 누적됩니다.."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기사 작성 시간",
            "description": "기사 작성 시간."
          }
        },
        "required": [
          "secret",
          "type",
          "customer",
          "answer",
          "read_by_seller",
          "id",
          "snapshots",
          "created_at"
        ],
        "description": "판매 스냅샷에 대한 질문. `IShoppingSaleQuestion`은 {@link IShoppingSaleInquiry}의 하위 유형 엔터티이며, {@link IShoppingCustomer 고객}이 {@link IShoppingSeller 판매자}가 등록한 {@link IShoppingSale 판매}(당시 {@link IShoppingSaleSnapshot 스냅샷})에 대해 무언가를 묻고자 할 때 사용됩니다. 그리고 대부분의 쇼핑몰과 마찬가지로 `IShoppingSaleQuestion`도 {@link secret} 속성을 제공하여 판매자와 질문을 작성한 고객만 볼 수 있는 &quot;비밀 메시지&quot;를 만들 수 있습니다.."
      },
      "IShoppingSaleInquiryAnswer": {
        "type": "object",
        "properties": {
          "seller": {
            "$ref": "#/components/schemas/IShoppingSeller",
            "title": "답변을 작성한 판매자",
            "description": "답변을 작성한 판매자."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IBbsArticle.ISnapshot"
            },
            "minItems": 1,
            "title": "스냅샷 내용 목록",
            "description": "스냅샷 내용 목록입니다. 기사가 생성될 때 처음 생성되며, 기사가 수정될 때마다 누적됩니다.."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기사 작성 시간",
            "description": "기사 작성 시간."
          }
        },
        "required": [
          "seller",
          "id",
          "snapshots",
          "created_at"
        ],
        "description": "판매 스냅샷에 대한 질문에 대한 답변. `IShoppingSaleInquiryAnswer`는 {@link IShoppingCustomer 고객}이 작성한 {@link IShoppingSaleInquiry 문의}에 {@link IShoppingSeller 판매자}가 작성한 공식 답변을 구현한 엔티티입니다. 물론 이와 같은 공식 답변을 작성하는 것 외에도 판매자가 귀속 문의에서 {@link IShoppingSaleInquiryComment 댓글}을 통해 문의한 고객 및 여러 고객과 소통할 수도 있습니다. 참조를 위해 이 답변에 댓글을 쓸 수 없습니다. 사람들이 문의 문서에 댓글을 쓰도록 장려하세요. 이는 댓글이 문의 및 답변 문서에 분산되는 것을 방지하기 위한 것입니다.."
      },
      "IBbsArticle.ISnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "기본 키",
            "description": "기본 키."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "스냅샷 레코드 생성 시간",
            "description": "스냅샷 레코드의 생성 시간. 즉, 생성 시간 또는 업데이트 시간 또는 기사."
          },
          "format": {
            "oneOf": [
              {
                "const": "html"
              },
              {
                "const": "md"
              },
              {
                "const": "txt"
              }
            ],
            "title": "본문 형식",
            "description": "본문 형식. `html`, `md`, `txt`와 같은 확장자와 동일한 의미."
          },
          "title": {
            "type": "string",
            "title": "기사 제목",
            "description": "기사 제목."
          },
          "body": {
            "type": "string",
            "title": "기사의 내용 본문",
            "description": "기사의 내용 본문."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "첨부파일 목록",
            "description": "첨부파일 목록."
          }
        },
        "required": [
          "id",
          "created_at",
          "format",
          "title",
          "body",
          "files"
        ],
        "description": "기사의 스냅샷. `IBbsArticle.ISnapshot`은 {@link IBbsArticle}에서 언급된 대로 기사의 내용을 포함하는 스냅샷 엔터티이며, 기사의 내용은 증거를 보관하고 사기를 방지하기 위해 기사 기록과 분리됩니다.."
      },
      "IPageIShoppingSaleReview.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleReview.ISummary"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingSaleReview.ISummary": {
        "type": "object",
        "properties": {
          "score": {
            "type": "number",
            "title": "리뷰의 점수",
            "description": "리뷰의 점수."
          },
          "customer": {
            "$ref": "#/components/schemas/IShoppingCustomer",
            "title": "문의사항을 작성하신 고객님",
            "description": "문의사항을 작성하신 고객님."
          },
          "answer": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingSaleInquiryAnswer.ISummary"
              }
            ],
            "title": "판매자 문의에 대한 공식 답변",
            "description": "판매자 문의에 대한 공식 답변."
          },
          "read_by_seller": {
            "type": "boolean",
            "title": "판매자가 문의사항을 확인했는지 여부",
            "description": "판매자가 문의사항을 확인했는지 여부."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "title": {
            "type": "string",
            "title": "마지막 스냅샷의 제목",
            "description": "마지막 스냅샷의 제목."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기사 작성 시간",
            "description": "기사 작성 시간."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "기사 수정 시간",
            "description": "기사의 수정 시간. 즉, 마지막 스냅샷이 생성된 시간입니다.."
          }
        },
        "required": [
          "score",
          "customer",
          "answer",
          "read_by_seller",
          "id",
          "title",
          "created_at",
          "updated_at"
        ],
        "description": "리뷰의 요약 정보."
      },
      "IShoppingSaleReview.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IShoppingSaleReview.IRequest.ISearch",
            "title": "검색 조건",
            "description": "검색 조건."
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-nickname"
                },
                {
                  "const": "-answered_at"
                },
                {
                  "const": "-created_at"
                },
                {
                  "const": "-updated_at"
                },
                {
                  "const": "-title"
                },
                {
                  "const": "-score"
                },
                {
                  "const": "+nickname"
                },
                {
                  "const": "+answered_at"
                },
                {
                  "const": "+created_at"
                },
                {
                  "const": "+updated_at"
                },
                {
                  "const": "+title"
                },
                {
                  "const": "+score"
                }
              ]
            },
            "title": "정렬 조건",
            "description": "정렬 조건."
          },
          "page": {
            "type": "integer",
            "title": "페이지 번호",
            "description": "페이지 번호."
          },
          "limit": {
            "type": "integer",
            "title": "페이지당 레코드 수 제한",
            "description": "페이지당 레코드 수 제한."
          }
        },
        "description": "페이지 검색/정렬 옵션을 포함한 요약 정보 요청."
      },
      "IShoppingSaleReview.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "answered": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "title_or_body": {
            "type": "string"
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "minimum": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "maximum": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          }
        }
      },
      "IPageIShoppingSaleReview.IAbridge": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleReview.IAbridge"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingSaleReview.IAbridge": {
        "type": "object",
        "properties": {
          "score": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "title": "리뷰의 점수",
            "description": "리뷰의 점수."
          },
          "customer": {
            "$ref": "#/components/schemas/IShoppingCustomer",
            "title": "문의사항을 작성하신 고객님",
            "description": "문의사항을 작성하신 고객님."
          },
          "answer": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingSaleInquiryAnswer.IAbridge"
              }
            ],
            "title": "판매자 문의에 대한 공식 답변",
            "description": "판매자 문의에 대한 공식 답변."
          },
          "read_by_seller": {
            "type": "boolean",
            "title": "판매자가 문의사항을 확인했는지 여부",
            "description": "판매자가 문의사항을 확인했는지 여부."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "title": {
            "type": "string",
            "title": "마지막 스냅샷의 제목",
            "description": "마지막 스냅샷의 제목."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기사 작성 시간",
            "description": "기사 작성 시간."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "기사 수정 시간",
            "description": "기사의 수정 시간. 즉, 마지막 스냅샷이 생성된 시간입니다.."
          },
          "format": {
            "oneOf": [
              {
                "const": "html"
              },
              {
                "const": "md"
              },
              {
                "const": "txt"
              }
            ],
            "title": "본문 형식",
            "description": "본문 형식. `html`, `md`, `txt`와 같은 확장자와 동일한 의미."
          },
          "body": {
            "type": "string",
            "title": "기사의 내용 본문",
            "description": "기사의 내용 본문."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "첨부파일 목록",
            "description": "첨부파일 목록."
          }
        },
        "required": [
          "score",
          "customer",
          "answer",
          "read_by_seller",
          "id",
          "title",
          "created_at",
          "updated_at",
          "format",
          "body",
          "files"
        ],
        "description": "리뷰의 요약 정보."
      },
      "IShoppingSaleReview": {
        "type": "object",
        "properties": {
          "type": {
            "const": "review",
            "title": "파생된 문의의 유형",
            "description": "파생된 문의 유형. - `question`: {@link IShoppingSaleQuestion} - `review`: {@link IShoppingSaleReview}"
          },
          "customer": {
            "$ref": "#/components/schemas/IShoppingCustomer",
            "title": "문의사항을 작성하신 고객님",
            "description": "문의사항을 작성하신 고객님."
          },
          "answer": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingSaleInquiryAnswer"
              }
            ],
            "title": "판매자 문의에 대한 공식 답변",
            "description": "판매자 문의에 대한 공식 답변."
          },
          "read_by_seller": {
            "type": "boolean",
            "title": "판매자가 문의사항을 확인했는지 여부",
            "description": "판매자가 문의사항을 확인했는지 여부."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleReview.ISnapshot"
            },
            "minItems": 1,
            "title": "스냅샷 내용 목록",
            "description": "스냅샷 내용 목록입니다. 기사가 생성될 때 처음 생성되며, 기사가 수정될 때마다 누적됩니다.."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기사 작성 시간",
            "description": "기사 작성 시간."
          }
        },
        "required": [
          "type",
          "customer",
          "answer",
          "read_by_seller",
          "id",
          "snapshots",
          "created_at"
        ],
        "description": "판매 스냅샷에 대한 리뷰. `IShoppingSaleReview`는 {@link IShoppingSaleInquiry}의 하위 유형 엔터티이며, {@link IShoppingCustomer 고객}이 {@link IShoppingSeller 판매자}가 상품으로 등록한 {@link IShoppingSale 판매}(당시 {@link IShoppingSaleSnapshot 스냅샷})를 구매하고 이에 대한 리뷰와 평가를 남길 때 사용됩니다. 참고로 `IShoppingSaleReview`와 {@link IShoppingOrderGod shopping_order_goods}는 N: 1의 대수적 관계를 가지고 있지만, 이는 고객이 같은 상품에 대한 리뷰를 무기한으로 계속 쓸 수 있다는 것을 의미하지는 않습니다. 리뷰를 한 번 작성하면 한 달 후에 추가 리뷰를 작성할 수 있는 것과 같은 제한이 있지 않을까요?"
      },
      "IShoppingSaleReview.ISnapshot": {
        "type": "object",
        "properties": {
          "score": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "title": "리뷰의 점수",
            "description": "리뷰의 점수."
          },
          "id": {
            "type": "string",
            "title": "기본 키",
            "description": "기본 키."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "스냅샷 레코드 생성 시간",
            "description": "스냅샷 레코드의 생성 시간. 즉, 생성 시간 또는 업데이트 시간 또는 기사."
          },
          "format": {
            "oneOf": [
              {
                "const": "html"
              },
              {
                "const": "md"
              },
              {
                "const": "txt"
              }
            ],
            "title": "본문 형식",
            "description": "본문 형식. `html`, `md`, `txt`와 같은 확장자와 동일한 의미."
          },
          "title": {
            "type": "string",
            "title": "기사 제목",
            "description": "기사 제목."
          },
          "body": {
            "type": "string",
            "title": "기사의 내용 본문",
            "description": "기사의 내용 본문."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "첨부파일 목록",
            "description": "첨부파일 목록."
          }
        },
        "required": [
          "score",
          "id",
          "created_at",
          "format",
          "title",
          "body",
          "files"
        ],
        "description": "리뷰 기사의 스냅샷 내용."
      },
      "IPageIShoppingSaleSnapshot.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleSnapshot.ISummary"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingSaleSnapshot.ISummary": {
        "type": "object",
        "properties": {
          "price_range": {
            "$ref": "#/components/schemas/IShoppingSalePriceRange",
            "title": "단위의 가격 범위",
            "description": "단위의 가격 범위."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "판매의 주요 키",
            "description": "판매의 주요 키."
          },
          "snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "스냅샷의 기본 키",
            "description": "스냅샷의 기본 키."
          },
          "latest": {
            "type": "boolean",
            "title": "스냅샷이 최신인지 아닌지",
            "description": "스냅샷이 최신인지 아닌지."
          },
          "content": {
            "$ref": "#/components/schemas/IShoppingSaleContent.IInvert",
            "title": "판매를 설명하는 설명 및 이미지 콘텐츠",
            "description": "판매를 설명하는 설명 및 이미지 콘텐츠."
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleChannel"
            },
            "minItems": 1,
            "title": "채널 및 카테고리 목록",
            "description": "채널 및 카테고리 목록. 판매가 등록된 채널 및 카테고리."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "검색 태그 목록",
            "description": "검색 태그 목록."
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleUnit.ISummary"
            },
            "minItems": 1,
            "title": "단위 목록",
            "description": "단위 목록. 판매에서 판매되는 개별 제품 구성 정보에 대한 기록. 각 {@link IShoppingSaleUnit 단위} 기록에는 구성 가능한 {@link IShoppingSaleUnitOption 옵션}, 각 옵션에 대한 {@link IShoppingSaleUnitOptionCandidate 후보} 값, 각 옵션의 모든 후보 값을 선택하여 결정된 {@link IShoppingSaleUnitStock 최종 재고}가 있습니다.."
          }
        },
        "required": [
          "price_range",
          "id",
          "snapshot_id",
          "latest",
          "content",
          "channels",
          "tags",
          "units"
        ],
        "description": "판매 스냅샷의 요약 정보."
      },
      "IPage.IRequest": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "title": "페이지 번호",
            "description": "페이지 번호."
          },
          "limit": {
            "type": "integer",
            "title": "페이지당 레코드 수 제한",
            "description": "페이지당 레코드 수 제한."
          }
        },
        "description": "페이지 요청 데이터"
      },
      "IShoppingSaleSnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "판매의 주요 키",
            "description": "판매의 주요 키."
          },
          "snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "스냅샷의 기본 키",
            "description": "스냅샷의 기본 키."
          },
          "latest": {
            "type": "boolean",
            "title": "스냅샷이 최신인지 아닌지",
            "description": "스냅샷이 최신인지 아닌지."
          },
          "content": {
            "$ref": "#/components/schemas/IShoppingSaleContent",
            "title": "판매를 설명하는 설명 및 이미지 콘텐츠",
            "description": "판매를 설명하는 설명 및 이미지 콘텐츠."
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleChannel"
            },
            "minItems": 1,
            "title": "채널 및 카테고리 목록",
            "description": "채널 및 카테고리 목록. 판매가 등록된 채널 및 카테고리."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "검색 태그 목록",
            "description": "검색 태그 목록."
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleUnit"
            },
            "minItems": 1,
            "title": "단위 목록",
            "description": "단위 목록. 판매에서 판매되는 개별 제품 구성 정보에 대한 기록. 각 {@link IShoppingSaleUnit 단위} 기록에는 구성 가능한 {@link IShoppingSaleUnitOption 옵션}, 각 옵션에 대한 {@link IShoppingSaleUnitOptionCandidate 후보} 값, 각 옵션의 모든 후보 값을 선택하여 결정된 {@link IShoppingSaleUnitStock 최종 재고}가 있습니다.."
          }
        },
        "required": [
          "id",
          "snapshot_id",
          "latest",
          "content",
          "channels",
          "tags",
          "units"
        ],
        "description": "판매의 스냅샷 기록. `IShoppingSaleSnapshot`은 판매의 스냅샷을 구현하는 엔터티이며, ERD(엔터티 관계 다이어그램)는 `shopping_sale_snapshots` 테이블의 역할을 다음과 같이 설명합니다. &gt; {@link IShoppingSale shopping_sales}는 {@link IShoppingSeller 판매자가 등록한 &quot;제품 판매&quot;(판매) 정보를 구현하는 엔터티입니다. 그리고 판매의 주요 정보는 메인 {@link IShoppingSale shopping_sales}가 아닌 하위 `shopping_sale_snapshots`에 기록됩니다. 판매자가 이전에 등록된 항목을 변경하면 기존 {@link IShoppingSale shopping_sales} 레코드는 변경되지 않지만 새 스냅샷 레코드가 생성됩니다. &gt; &gt; 이는 판매자가 품목의 구성 요소나 가격을 변경하더라도 고객이 특정 품목을 구매한 후 {@link IShoppingCustomer 고객}의 {@link IShoppingOrder 구매 내역}을 완벽하게 보존하기 위한 것입니다. 또한 구성 요소나 가격을 변경하고 각 경우에 성과를 측정하는 소위 A/B 테스트에서 판매자를 지원하기 위한 것입니다. 그런데 프런트엔드 개발자가 사용하는 DTO(Data Transfer Object) 수준에서는 {@link IShoppingSale}과 `IShoppingSaleSnapshot`을 엄격하게 구분하지 않고 일반적으로 {@link IShoppingSale}과 스냅샷을 함께 처리합니다. 하지만 DTO 수준에서 이를 엄격하게 구분하지 않더라도 &quot;스냅샷&quot;이라는 단어와 개념은 여전히 중요하므로 &quot;스냅샷&quot;이라는 개념을 제대로 이해하는 것이 좋습니다.."
      },
      "IShoppingChannelCategory": {
        "type": "object",
        "properties": {
          "parent": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingChannelCategory.IInvert"
              }
            ],
            "title": "상위 카테고리 정보",
            "description": "상위 카테고리 정보."
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingChannelCategory.IHierarchical"
            },
            "title": "계층 구조의 자식 카테고리 목록",
            "description": "계층 구조의 자식 카테고리 목록."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "상위 카테고리의 ID",
            "description": "상위 카테고리의 ID."
          },
          "name": {
            "type": "string",
            "title": "해당 카테고리의 대표 이름",
            "description": "카테고리의 대표 이름입니다. 이름은 부모 카테고리 내에서 고유해야 합니다. 부모가 없는 경우 부모 카테고리가 없는 채널 내에서 이름은 고유해야 합니다.."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간."
          }
        },
        "required": [
          "parent",
          "children",
          "id",
          "parent_id",
          "name",
          "created_at"
        ],
        "description": "채널의 카테고리. `IShoppingChannelCategory`는 특정 {@link IShoppingChannel 채널} 내의 분류 카테고리를 지칭하는 개념으로, 쇼핑몰에서 일반적으로 말하는 &quot;카테고리&quot;라는 개념과 정확히 같다. 그리고 `IShoppingChannelCategory`는 {@link IShoppingSection}과 다르다. {@link IShoppingSection}은 오프라인 시장에서 독립적인 공간 정보인 &quot;코너&quot;를 지칭하는데, 이는 {@link IShoppingSale 세일}에서 동시에 분류될 수 없다. 또한 `IShoppingChannelCategory`는 세일에서 동시에 여러 카테고리로 분류될 수 있다. 상품 | 섹션(코너) | 카테고리 ---------|------------------|----------------------------------- 쇠고기 | 정육점 코너 | 냉동식품, 육류, 선호식품 포도 | 과일 코너 | 신선식품, 선호식품 또한 `IShoppingChannelCategory`는 1:N 자기 재귀적 관계를 가지므로 아래와 같은 계층적 구조로 표현할 수 있다. 따라서 각 채널은 원하는 대로 자체 카테고리 분류를 설정할 수 있습니다. - 식품 &gt; 육류 &gt; 냉동 - 전자제품 &gt; 노트북 &gt; 15인치 - 기타 &gt; 지갑 또한 `IShoppingChannelCategory`는 채널끼리 병합되도록 설계되어 언제든지 카테고리를 편집할 부담이 없습니다.."
      },
      "IShoppingChannelCategory.IHierarchical": {
        "type": "object",
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingChannelCategory.IHierarchical"
            },
            "title": "계층 구조의 자식 카테고리 목록",
            "description": "계층 구조의 자식 카테고리 목록."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "상위 카테고리의 ID",
            "description": "상위 카테고리의 ID."
          },
          "name": {
            "type": "string",
            "title": "해당 카테고리의 대표 이름",
            "description": "카테고리의 대표 이름입니다. 이름은 부모 카테고리 내에서 고유해야 합니다. 부모가 없는 경우 부모 카테고리가 없는 채널 내에서 이름은 고유해야 합니다.."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간."
          }
        },
        "required": [
          "children",
          "id",
          "parent_id",
          "name",
          "created_at"
        ],
        "description": "자식 카테고리를 포함한 계층적 카테고리 정보."
      },
      "IShoppingChannelCategory.ICreate": {
        "type": "object",
        "properties": {
          "parent_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "상위 카테고리의 ID",
            "description": "상위 카테고리의 ID."
          },
          "name": {
            "type": "string",
            "title": "해당 카테고리의 대표 이름",
            "description": "카테고리의 대표 이름입니다. 이름은 부모 카테고리 내에서 고유해야 합니다. 부모가 없는 경우 부모 카테고리가 없는 채널 내에서 이름은 고유해야 합니다.."
          }
        },
        "required": [
          "parent_id",
          "name"
        ],
        "description": "카테고리 생성 정보."
      },
      "IRecordMerge": {
        "type": "object",
        "properties": {
          "keep": {
            "type": "string",
            "format": "uuid",
            "title": "병합 후 보관할 대상 레코드",
            "description": "병합 후 보관할 대상 레코드. 병합 프로세스 후, {@link 흡수} 레코드가 이 {@link keep} 레코드로 병합됩니다.."
          },
          "absorbed": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "title": "병합 후 {@link keep}에 흡수됩니다.",
            "description": "병합 후 {@link keep}에 흡수됩니다.."
          }
        },
        "required": [
          "keep",
          "absorbed"
        ],
        "description": "레코드 병합 DTO. `IRecordMerge`는 레코드를 병합하기 위한 구조입니다. `merge`는 {@link IRecordMerge.absorbed} 레코드를 삭제하는 대신 여러 개의 {@link IRecordMerge.absorbed} 레코드를 {@link IRecordMerge.keep}에 병합하는 것을 의미합니다. 대상 `table`의 종속 테이블 중 외래 키 열에 고유 제약 조건이 있는 경우 이러한 종속 테이블도 병합 프로세스를 수행합니다. 물론 해당 종속 테이블 아래에 다른 종속 테이블이 있는 경우 병합 프로세스도 재귀적으로 수행합니다. 이러한 재귀적 병합 프로세스는 자체 재귀적(트리 구조) 테이블에도 여전히 작동합니다.."
      },
      "IShoppingChannel.ICreate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "title": "식별자 코드",
            "description": "식별자 코드."
          },
          "name": {
            "type": "string",
            "title": "채널 이름",
            "description": "채널 이름."
          }
        },
        "required": [
          "code",
          "name"
        ],
        "description": "채널 생성 정보."
      },
      "IShoppingChannel.IUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "채널 이름",
            "description": "채널 이름."
          }
        },
        "required": [
          "name"
        ],
        "description": "채널 정보 업데이트."
      },
      "IPageIShoppingChannel": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingChannel"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingChannel.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IShoppingChannel.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-channel.code"
                },
                {
                  "const": "-channel.name"
                },
                {
                  "const": "-channel.created_at"
                },
                {
                  "const": "+channel.code"
                },
                {
                  "const": "+channel.name"
                },
                {
                  "const": "+channel.created_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "페이지 번호",
            "description": "페이지 번호."
          },
          "limit": {
            "type": "integer",
            "title": "페이지당 레코드 수 제한",
            "description": "페이지당 레코드 수 제한."
          }
        },
        "description": "페이지 번호 매기기 및 검색/정렬 옵션이 있는 채널 요청."
      },
      "IShoppingChannel.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "IPageIShoppingChannel.IHierarchical": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingChannel.IHierarchical"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingChannel.IHierarchical": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingChannelCategory.IHierarchical"
            },
            "title": "계층 구조의 자식 카테고리",
            "description": "계층 구조의 자식 카테고리."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간."
          },
          "code": {
            "type": "string",
            "title": "식별자 코드",
            "description": "식별자 코드."
          },
          "name": {
            "type": "string",
            "title": "채널 이름",
            "description": "채널 이름."
          }
        },
        "required": [
          "categories",
          "id",
          "created_at",
          "code",
          "name"
        ],
        "description": "자식 카테고리가 있는 계층적 채널 정보."
      },
      "IShoppingSection.ICreate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "title": "식별자 코드",
            "description": "식별자 코드."
          },
          "name": {
            "type": "string",
            "title": "섹션의 대표 이름",
            "description": "섹션의 대표 이름."
          }
        },
        "required": [
          "code",
          "name"
        ],
        "description": "섹션 생성 정보."
      },
      "IShoppingSection.IUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "섹션의 대표 이름",
            "description": "섹션의 대표 이름."
          }
        },
        "required": [
          "name"
        ],
        "description": "섹션 정보 업데이트."
      },
      "IPageIShoppingSection": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSection"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingSection.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IShoppingSection.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-section.code"
                },
                {
                  "const": "-section.name"
                },
                {
                  "const": "-section.created_at"
                },
                {
                  "const": "+section.code"
                },
                {
                  "const": "+section.name"
                },
                {
                  "const": "+section.created_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "페이지 번호",
            "description": "페이지 번호."
          },
          "limit": {
            "type": "integer",
            "title": "페이지당 레코드 수 제한",
            "description": "페이지당 레코드 수 제한."
          }
        },
        "description": "페이지 번호 매기기 및 검색/정렬 옵션이 있는 섹션 요청."
      },
      "IShoppingSection.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "IShoppingCustomer.IAuthorized": {
        "type": "object",
        "properties": {
          "setHeaders": {
            "type": "object",
            "properties": {
              "Authorization": {
                "type": "string"
              }
            },
            "required": [
              "Authorization"
            ]
          },
          "token": {
            "$ref": "#/components/schemas/IShoppingCustomer.IToken"
          },
          "type": {
            "const": "customer",
            "title": "고객 유형에 따른 판별",
            "description": "고객 유형에 따른 판별."
          },
          "member": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingMember"
              }
            ],
            "title": "회원정보",
            "description": "회원정보. 고객이 회원으로 가입한 경우."
          },
          "citizen": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingCitizen"
              }
            ],
            "title": "시민정보",
            "description": "시민정보. 고객이 실명과 휴대폰번호를 확인했다면."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "channel": {
            "$ref": "#/components/schemas/IShoppingChannel",
            "title": "소속채널",
            "description": "소속채널."
          },
          "external_user": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingExternalUser"
              }
            ],
            "title": "외부 사용자 정보",
            "description": "외부 사용자 정보. 고객이 외부 서비스에서 왔을 때."
          },
          "href": {
            "type": "string",
            "format": "uri",
            "title": "연결 주소",
            "description": "연결 주소. 클라이언트의 {@link window.location.href}와 동일."
          },
          "referrer": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "추천인 주소",
            "description": "레퍼러 주소. 클라이언트의 {@link window.document.referrer}와 동일."
          },
          "ip": {
            "oneOf": [
              {
                "type": "string",
                "format": "ipv4"
              },
              {
                "type": "string",
                "format": "ipv6"
              }
            ],
            "title": "연결 IP 주소",
            "description": "연결 IP 주소."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "연결 레코드 생성 시간",
            "description": "연결 레코드 생성 시간."
          }
        },
        "required": [
          "setHeaders",
          "token",
          "type",
          "member",
          "citizen",
          "id",
          "channel",
          "external_user",
          "href",
          "referrer",
          "ip",
          "created_at"
        ]
      },
      "IShoppingCustomer.IToken": {
        "type": "object",
        "properties": {
          "access": {
            "type": "string"
          },
          "refresh": {
            "type": "string"
          },
          "expired_at": {
            "type": "string",
            "format": "date-time"
          },
          "refreshable_until": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "access",
          "refresh",
          "expired_at",
          "refreshable_until"
        ]
      },
      "IShoppingCustomer.IRefresh": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "required": [
          "value"
        ]
      },
      "IShoppingCustomer.ICreate": {
        "type": "object",
        "properties": {
          "channel_code": {
            "type": "string"
          },
          "external_user": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingExternalUser.ICreate"
              }
            ]
          },
          "href": {
            "type": "string",
            "format": "uri"
          },
          "referrer": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ]
          },
          "ip": {
            "oneOf": [
              {
                "type": "string",
                "format": "ipv4"
              },
              {
                "type": "string",
                "format": "ipv6"
              }
            ]
          }
        },
        "required": [
          "channel_code",
          "external_user",
          "href",
          "referrer"
        ]
      },
      "IShoppingExternalUser.ICreate": {
        "type": "object",
        "properties": {
          "citizen": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingCitizen.ICreate"
              }
            ],
            "title": "시민 활성화 정보",
            "description": "시민 활성화 정보."
          },
          "application": {
            "type": "string",
            "title": "외부 서비스의 식별자 코드",
            "description": "외부 서비스의 식별자 코드입니다. {@link IShoppingChannel.code}와 공통적으로 동일할 수 있습니다.."
          },
          "uid": {
            "type": "string",
            "title": "외부 시스템의 외부 사용자의 식별자 키",
            "description": "외부 시스템의 외부 사용자의 식별자 키."
          },
          "nickname": {
            "type": "string",
            "title": "외부 시스템의 외부 사용자의 별명",
            "description": "외부 시스템의 외부 사용자의 별명."
          },
          "password": {
            "type": "string",
            "title": "외부 시스템의 외부 사용자의 비밀번호",
            "description": "외부 시스템의 외부 사용자의 비밀번호입니다. 이는 외부 서비스에서 사용자에게 발급한 비밀번호이며, 실제 사용자 비밀번호는 아닙니다. 그러나 현재 외부 시스템 사용자와 동일한 애플리케이션과 코드를 입력한 {@link IShoppingCustomer 고객}의 경우, 이를 올바른 외부 시스템 사용자로 볼지 아니면 위반으로 볼지 여부를 결정하기 위한 것입니다.."
          },
          "data": {
            "description": "외부 시스템의 외부 사용자에 대한 추가 정보."
          }
        },
        "required": [
          "citizen",
          "application",
          "uid",
          "nickname",
          "password",
          "data"
        ],
        "description": "외부 사용자의 생성 정보."
      },
      "IShoppingCitizen.ICreate": {
        "type": "object",
        "properties": {
          "mobile": {
            "type": "string",
            "pattern": "^[0-9]*$",
            "title": "휴대폰 번호",
            "description": "휴대폰 번호."
          },
          "name": {
            "type": "string",
            "title": "실제 이름 또는 이에 상응하는 별명",
            "description": "실제 이름 또는 이에 상응하는 별명."
          }
        },
        "required": [
          "mobile",
          "name"
        ],
        "description": "국민인증 생성정보."
      },
      "IShoppingMember.IJoin": {
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string",
            "title": "회원을 고유하게 식별하는 별명",
            "description": "회원을 고유하게 식별하는 별명."
          },
          "citizen": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingCitizen.ICreate"
              }
            ],
            "title": "시민정보",
            "description": "시민정보."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "회원의 이메일 주소",
            "description": "회원의 이메일 주소. 회원이 여러 개의 이메일 주소를 가지고 있는 경우 그 중 하나만 사용하십시오.."
          },
          "password": {
            "type": "string",
            "title": "회원 계정의 비밀번호",
            "description": "회원 계정의 비밀번호."
          }
        },
        "required": [
          "nickname",
          "citizen",
          "email",
          "password"
        ],
        "description": "가입요청 정보."
      },
      "IShoppingMember.IPasswordChange": {
        "type": "object",
        "properties": {
          "oldbie": {
            "type": "string",
            "title": "현재 비밀번호",
            "description": "현재 비밀번호."
          },
          "newbie": {
            "type": "string",
            "title": "변경할 새로운 비밀번호",
            "description": "변경할 새로운 비밀번호."
          }
        },
        "required": [
          "oldbie",
          "newbie"
        ],
        "description": "비밀번호 변경에 대한 정보 요청."
      },
      "IPageIShoppingCouponTicket": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingCouponTicket"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingCouponTicket.IRequest": {
        "type": "object",
        "properties": {
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-ticket.created_at"
                },
                {
                  "const": "-ticket.expired_at"
                },
                {
                  "const": "+ticket.created_at"
                },
                {
                  "const": "+ticket.expired_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "페이지 번호",
            "description": "페이지 번호."
          },
          "limit": {
            "type": "integer",
            "title": "페이지당 레코드 수 제한",
            "description": "페이지당 레코드 수 제한."
          }
        }
      },
      "IShoppingCouponTicket.ICreate": {
        "type": "object",
        "properties": {
          "coupon_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "coupon_id"
        ]
      },
      "IPageIShoppingDepositCharge": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingDepositCharge"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingDepositCharge": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "customer": {
            "$ref": "#/components/schemas/IShoppingCustomer"
          },
          "publish": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingDepositChargePublish"
              }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "customer",
          "publish",
          "created_at",
          "value"
        ]
      },
      "IShoppingDepositChargePublish": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "paid_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "cancelled_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        },
        "required": [
          "id",
          "created_at",
          "paid_at",
          "cancelled_at"
        ]
      },
      "IShoppingDepositCharge.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IShoppingDepositCharge.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-created_at"
                },
                {
                  "const": "+created_at"
                },
                {
                  "const": "-value"
                },
                {
                  "const": "-publish.created_at"
                },
                {
                  "const": "-publish.paid_at"
                },
                {
                  "const": "+value"
                },
                {
                  "const": "+publish.created_at"
                },
                {
                  "const": "+publish.paid_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "페이지 번호",
            "description": "페이지 번호."
          },
          "limit": {
            "type": "integer",
            "title": "페이지당 레코드 수 제한",
            "description": "페이지당 레코드 수 제한."
          }
        }
      },
      "IShoppingDepositCharge.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "minimum": {
            "type": "number"
          },
          "maximum": {
            "type": "number"
          },
          "state": {
            "oneOf": [
              {
                "const": "published"
              },
              {
                "const": "pending"
              },
              {
                "const": "payed"
              },
              {
                "const": "cancelled"
              }
            ]
          },
          "publish": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "format": "date-time"
              },
              "to": {
                "type": "string",
                "format": "date-time"
              },
              "payment": {
                "type": "object",
                "properties": {
                  "from": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "to": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "required": [
          "state"
        ]
      },
      "IShoppingDepositCharge.ICreate": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number"
          }
        },
        "required": [
          "value"
        ]
      },
      "IShoppingDepositChargePublish.ICreate": {
        "type": "object",
        "properties": {
          "vendor": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "required": [
          "vendor",
          "uid"
        ]
      },
      "IPageIShoppingDepositHistory": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingDepositHistory"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingDepositHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "citizen": {
            "$ref": "#/components/schemas/IShoppingCitizen"
          },
          "deposit": {
            "$ref": "#/components/schemas/IShoppingDeposit"
          },
          "source_id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "number"
          },
          "balance": {
            "type": "number"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "citizen",
          "deposit",
          "source_id",
          "value",
          "balance",
          "created_at"
        ]
      },
      "IShoppingDepositHistory.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IShoppingDepositHistory.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-deposit.source"
                },
                {
                  "const": "-deposit.code"
                },
                {
                  "const": "-deposit.direction"
                },
                {
                  "const": "+deposit.source"
                },
                {
                  "const": "+deposit.code"
                },
                {
                  "const": "+deposit.direction"
                },
                {
                  "const": "-history.value"
                },
                {
                  "const": "-history.created_at"
                },
                {
                  "const": "+history.value"
                },
                {
                  "const": "+history.created_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "페이지 번호",
            "description": "페이지 번호."
          },
          "limit": {
            "type": "integer",
            "title": "페이지당 레코드 수 제한",
            "description": "페이지당 레코드 수 제한."
          }
        }
      },
      "IShoppingDepositHistory.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "deposit": {
            "$ref": "#/components/schemas/IShoppingDeposit.IRequest.ISearch"
          },
          "citizen_id": {
            "type": "string",
            "format": "uuid"
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "minimum": {
            "type": "number",
            "minimum": 0
          },
          "maximum": {
            "type": "number",
            "minimum": 0
          }
        }
      },
      "IPageIShoppingMileageHistory": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingMileageHistory"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingMileageHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "citizen": {
            "$ref": "#/components/schemas/IShoppingCitizen"
          },
          "mileage": {
            "$ref": "#/components/schemas/IShoppingMileage"
          },
          "source_id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "number"
          },
          "balance": {
            "type": "number"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "citizen",
          "mileage",
          "source_id",
          "value",
          "balance",
          "created_at"
        ]
      },
      "IShoppingMileageHistory.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IShoppingMileageHistory.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-mileage.source"
                },
                {
                  "const": "-mileage.code"
                },
                {
                  "const": "-mileage.direction"
                },
                {
                  "const": "+mileage.source"
                },
                {
                  "const": "+mileage.code"
                },
                {
                  "const": "+mileage.direction"
                },
                {
                  "const": "-history.value"
                },
                {
                  "const": "-history.created_at"
                },
                {
                  "const": "+history.value"
                },
                {
                  "const": "+history.created_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "페이지 번호",
            "description": "페이지 번호."
          },
          "limit": {
            "type": "integer",
            "title": "페이지당 레코드 수 제한",
            "description": "페이지당 레코드 수 제한."
          }
        }
      },
      "IShoppingMileageHistory.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "mileage": {
            "$ref": "#/components/schemas/IShoppingMileage.IRequest.ISearch"
          },
          "citizen_id": {
            "type": "string",
            "format": "uuid"
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "minimum": {
            "type": "number",
            "minimum": 0
          },
          "maximum": {
            "type": "number",
            "minimum": 0
          }
        }
      },
      "IPageIShoppingCartCommodity": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingCartCommodity"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingCartCommodity.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IShoppingCartCommodity.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-seller.created_at"
                },
                {
                  "const": "-seller.goods.payments.real"
                },
                {
                  "const": "-seller.goods.publish_count"
                },
                {
                  "const": "-seller.reviews.average"
                },
                {
                  "const": "-seller.reviews.count"
                },
                {
                  "const": "-goods.publish_count"
                },
                {
                  "const": "-goods.payments.real"
                },
                {
                  "const": "-reviews.average"
                },
                {
                  "const": "-reviews.count"
                },
                {
                  "const": "-sale.created_at"
                },
                {
                  "const": "-sale.updated_at"
                },
                {
                  "const": "-sale.opened_at"
                },
                {
                  "const": "-sale.closed_at"
                },
                {
                  "const": "-sale.content.title"
                },
                {
                  "const": "-sale.price_range.lowest.real"
                },
                {
                  "const": "-sale.price_range.highest.real"
                },
                {
                  "const": "+seller.created_at"
                },
                {
                  "const": "+seller.goods.payments.real"
                },
                {
                  "const": "+seller.goods.publish_count"
                },
                {
                  "const": "+seller.reviews.average"
                },
                {
                  "const": "+seller.reviews.count"
                },
                {
                  "const": "+goods.publish_count"
                },
                {
                  "const": "+goods.payments.real"
                },
                {
                  "const": "+reviews.average"
                },
                {
                  "const": "+reviews.count"
                },
                {
                  "const": "+sale.created_at"
                },
                {
                  "const": "+sale.updated_at"
                },
                {
                  "const": "+sale.opened_at"
                },
                {
                  "const": "+sale.closed_at"
                },
                {
                  "const": "+sale.content.title"
                },
                {
                  "const": "+sale.price_range.lowest.real"
                },
                {
                  "const": "+sale.price_range.highest.real"
                },
                {
                  "const": "-commodity.price"
                },
                {
                  "const": "-commodity.volume"
                },
                {
                  "const": "-commodity.volumed_price"
                },
                {
                  "const": "-commodity.created_at"
                },
                {
                  "const": "+commodity.price"
                },
                {
                  "const": "+commodity.volume"
                },
                {
                  "const": "+commodity.volumed_price"
                },
                {
                  "const": "+commodity.created_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "페이지 번호",
            "description": "페이지 번호."
          },
          "limit": {
            "type": "integer",
            "title": "페이지당 레코드 수 제한",
            "description": "페이지당 레코드 수 제한."
          }
        }
      },
      "IShoppingCartCommodity.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "min_price": {
            "type": "number"
          },
          "max_price": {
            "type": "number"
          },
          "min_volumed_price": {
            "type": "number"
          },
          "max_volumed_price": {
            "type": "number"
          },
          "sale": {
            "$ref": "#/components/schemas/IShoppingSale.IRequest.ISearch"
          }
        }
      },
      "IShoppingCartCommodity.ICreate": {
        "type": "object",
        "properties": {
          "sale_id": {
            "type": "string",
            "format": "uuid",
            "title": "타겟 세일 {@link IShoppingSale.id}",
            "description": "타겟 세일 {@link IShoppingSale.id}."
          },
          "stocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingCartCommodityStock.ICreate"
            },
            "minItems": 1,
            "title": "매수할 주식 목록",
            "description": "매수할 주식 목록."
          },
          "volume": {
            "type": "integer",
            "minimum": 1,
            "title": "구매할 상품의 양",
            "description": "구매할 상품의 양. 자식 {@link IShoppingSaleUnitStock.IInvert.quantity} 값에 곱해지는 세트 수를 나타내는 값."
          },
          "accumulate": {
            "type": "boolean",
            "title": "볼륨을 축적할 것인가 말 것인가",
            "description": "볼륨을 누적할지 여부. 이 속성이 `false`가 아니고 동일한 주식 및 옵션으로 구성된 동일한 상품이 있는 경우 볼륨은 기존 상품에 누적됩니다. 그렇지 않으면 중복된 상품이 새로 생성됩니다.."
          }
        },
        "required": [
          "sale_id",
          "stocks",
          "volume"
        ],
        "description": "장바구니 상품 생성 정보."
      },
      "IShoppingCartCommodityStock.ICreate": {
        "type": "object",
        "properties": {
          "unit_id": {
            "type": "string",
            "format": "uuid",
            "title": "타겟 유닛의 {@link IShoppingSaleUnit.id}",
            "description": "타겟 유닛의 {@link IShoppingSaleUnit.id}."
          },
          "stock_id": {
            "type": "string",
            "format": "uuid",
            "title": "타겟 주식 {@link IShoppingSaleUnitStock.id}",
            "description": "대상 주식의 {@link IShoppingSaleUnitStock.id}. {@link choices} 속성과 일치해야 합니다.."
          },
          "choices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingCartCommodityStockChoice.ICreate"
            },
            "title": "각 옵션에 대한 선택사항의 생성 정보",
            "description": "각 옵션에 대한 선택사항의 생성 정보."
          },
          "quantity": {
            "type": "integer",
            "minimum": 1,
            "title": "구매할 재고 수량",
            "description": "구매할 재고 수량입니다. 이 값은 {@link IShoppingCartCommodity.volume}에 곱해집니다.."
          }
        },
        "required": [
          "unit_id",
          "stock_id",
          "choices",
          "quantity"
        ],
        "description": "쇼핑 카트의 상품 재고에 대한 생성 정보. 레코드가 생성될 때 해당 구조는 {@link IShoppingSaleSnapshotUnit.IInvert} 및 {@link IShoppingSaleSnapshotUnitStock.IInvert}가 됩니다.."
      },
      "IShoppingCartCommodityStockChoice.ICreate": {
        "type": "object",
        "properties": {
          "option_id": {
            "type": "string",
            "format": "uuid",
            "title": "대상 옵션의 {@link IShoppingSaleUnitOption.id}",
            "description": "대상 옵션의 {@link IShoppingSaleUnitOption.id}."
          },
          "candidate_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "대상 후보자의 {@link IShoppingSaleUnitOptionCandidate.id}",
            "description": "대상 후보자의 {@link IShoppingSaleUnitOptionCandidate.id}. 대상 옵션의 유형이 `select`인 경우 이 속성은 `null`이 아니지만 값을 갖습니다.."
          },
          "value": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              }
            ],
            "title": "옵션에 대한 서면 가치",
            "description": "옵션에 대한 서면 값. 대상 옵션의 유형이 `select`가 아니라 `boolean`, `number` 또는 `string`과 같은 원자 유형 값인 경우 이 속성은 `null`이 아니지만 일치하는 원자 값을 갖습니다.."
          }
        },
        "required": [
          "option_id",
          "candidate_id",
          "value"
        ],
        "description": "각 옵션에 대한 선택 사항의 생성 정보. 레코드가 생성될 때 해당 구조는 {@link IShoppingSaleUnitStockChoice.IInvert}가 됩니다.."
      },
      "IShoppingCartCommodity.IUpdate": {
        "type": "object",
        "properties": {
          "volume": {
            "type": "integer",
            "minimum": 1,
            "title": "구매할 상품의 양",
            "description": "구매할 상품의 양. 자식 {@link IShoppingSaleUnitStock.IInvert.quantity} 값에 곱해지는 세트 수를 나타내는 값."
          }
        },
        "required": [
          "volume"
        ],
        "description": "장바구니 상품 정보 업데이트."
      },
      "IShoppingCartDiscountable": {
        "type": "object",
        "properties": {
          "deposit": {
            "type": "number"
          },
          "mileage": {
            "type": "number"
          },
          "combinations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingCartDiscountable.ICombination"
            }
          }
        },
        "required": [
          "deposit",
          "mileage",
          "combinations"
        ]
      },
      "IShoppingCartDiscountable.ICombination": {
        "type": "object",
        "properties": {
          "coupons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingCoupon"
            }
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingCouponTicket"
            }
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingCartDiscountable.IEntry"
            }
          },
          "amount": {
            "type": "number"
          }
        },
        "required": [
          "coupons",
          "tickets",
          "entries",
          "amount"
        ]
      },
      "IShoppingCartDiscountable.IEntry": {
        "type": "object",
        "properties": {
          "commodity_id": {
            "type": "string",
            "format": "uuid"
          },
          "pseudo": {
            "type": "boolean"
          },
          "coupon_id": {
            "type": "string",
            "format": "uuid"
          },
          "amount": {
            "type": "number"
          }
        },
        "required": [
          "commodity_id",
          "pseudo",
          "coupon_id",
          "amount"
        ]
      },
      "IShoppingCartDiscountable.IRequest": {
        "type": "object",
        "properties": {
          "commodity_ids": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            ]
          },
          "pseudos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingCartCommodity.ICreate"
            }
          }
        },
        "required": [
          "commodity_ids",
          "pseudos"
        ]
      },
      "IShoppingOrder.ICreate": {
        "type": "object",
        "properties": {
          "goods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingOrderGood.ICreate"
            },
            "title": "주문 상품 목록",
            "description": "주문 상품 목록."
          }
        },
        "required": [
          "goods"
        ],
        "description": "주문 어플라이언스의 생성 정보."
      },
      "IShoppingOrderGood.ICreate": {
        "type": "object",
        "properties": {
          "commodity_id": {
            "type": "string",
            "format": "uuid",
            "title": "대상 상품 {@link IShoppingCartCommodity.id}",
            "description": "대상 상품 {@link IShoppingCartCommodity.id}."
          },
          "volume": {
            "type": "integer",
            "title": "좋은 것의 양",
            "description": "상품의 양. {@link IShoppingCartCommodityStock.quantity}에 곱해진 값. 그 목적은 {@link IShoppingCartCommodity.volume}과 정확히 동일하지만, {@link IShoppingCartCommodity} 레코드는 결제까지 재사용 가능하기 때문에 다시 작성되었습니다.."
          }
        },
        "required": [
          "commodity_id",
          "volume"
        ],
        "description": "선의 창조 정보."
      },
      "IShoppingOrderDiscountable": {
        "type": "object",
        "properties": {
          "deposit": {
            "type": "number"
          },
          "mileage": {
            "type": "number"
          },
          "combinations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingOrderDiscountable.ICombination"
            }
          }
        },
        "required": [
          "deposit",
          "mileage",
          "combinations"
        ]
      },
      "IShoppingOrderDiscountable.ICombination": {
        "type": "object",
        "properties": {
          "coupons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingCoupon"
            }
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingCouponTicket"
            }
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingOrderDiscountable.IEntry"
            }
          },
          "amount": {
            "type": "number"
          }
        },
        "required": [
          "coupons",
          "tickets",
          "entries",
          "amount"
        ]
      },
      "IShoppingOrderDiscountable.IEntry": {
        "type": "object",
        "properties": {
          "good_id": {
            "type": "string",
            "format": "uuid"
          },
          "coupon_id": {
            "type": "string",
            "format": "uuid"
          },
          "amount": {
            "type": "number"
          }
        },
        "required": [
          "good_id",
          "coupon_id",
          "amount"
        ]
      },
      "IShoppingOrderDiscountable.IRequest": {
        "type": "object",
        "properties": {
          "good_ids": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            ]
          }
        },
        "required": [
          "good_ids"
        ]
      },
      "IShoppingOrderPrice.ICreate": {
        "type": "object",
        "properties": {
          "deposit": {
            "type": "number"
          },
          "mileage": {
            "type": "number"
          },
          "coupon_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "deposit",
          "mileage",
          "coupon_ids"
        ]
      },
      "IShoppingOrderPublish.ICashCreate": {
        "type": "object",
        "properties": {
          "type": {
            "const": "cash"
          },
          "address": {
            "$ref": "#/components/schemas/IShoppingAddress.ICreate"
          },
          "vendor": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "address",
          "vendor",
          "uid"
        ]
      },
      "IShoppingAddress.ICreate": {
        "type": "object",
        "properties": {
          "mobile": {
            "type": "string",
            "pattern": "^[0-9]*$",
            "title": "연락할 휴대폰 번호",
            "description": "연락할 휴대폰 번호."
          },
          "name": {
            "type": "string",
            "title": "주소의 대표 이름",
            "description": "주소의 대표 이름. 수신자 이름이 될 때도 있고, 지명이 될 때도 있습니다.."
          },
          "country": {
            "type": "string",
            "title": "국가 이름",
            "description": "국가 이름."
          },
          "province": {
            "type": "string",
            "title": "도 이름",
            "description": "도 이름."
          },
          "city": {
            "type": "string",
            "title": "도시 이름",
            "description": "도시 이름."
          },
          "department": {
            "type": "string",
            "title": "부서 이름",
            "description": "부서 이름."
          },
          "possession": {
            "type": "string",
            "title": "도로명, 건물번호, 방번호 등을 포함한 상세 주소",
            "description": "도로명, 건물번호, 방번호 등을 포함한 상세 주소."
          },
          "zip_code": {
            "type": "string",
            "title": "우편번호 또는 우편번호",
            "description": "우편번호 또는 우편번호."
          },
          "special_note": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "필요한 경우 특별 설명",
            "description": "필요한 경우 특별 설명."
          }
        },
        "required": [
          "mobile",
          "name",
          "country",
          "province",
          "city",
          "department",
          "possession",
          "zip_code",
          "special_note"
        ]
      },
      "IShoppingOrderPublish.IZeroCreate": {
        "type": "object",
        "properties": {
          "type": {
            "const": "zero"
          },
          "address": {
            "$ref": "#/components/schemas/IShoppingAddress.ICreate"
          }
        },
        "required": [
          "type",
          "address"
        ]
      },
      "IShoppingSaleQuestion.ICreate": {
        "type": "object",
        "properties": {
          "secret": {
            "type": "boolean",
            "title": "질문글이 비밀글인지 아닌지",
            "description": "질문글이 비밀글인지 아닌지. 비밀글이면 작성자 고객과 관련 판매자만 자세한 내용을 볼 수 있음."
          },
          "format": {
            "oneOf": [
              {
                "const": "html"
              },
              {
                "const": "md"
              },
              {
                "const": "txt"
              }
            ],
            "title": "본문 형식",
            "description": "본문 형식. `html`, `md`, `txt`와 같은 확장자와 동일한 의미."
          },
          "title": {
            "type": "string",
            "title": "기사 제목",
            "description": "기사 제목."
          },
          "body": {
            "type": "string",
            "title": "기사의 내용 본문",
            "description": "기사의 내용 본문."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "첨부파일 목록",
            "description": "첨부파일 목록."
          }
        },
        "required": [
          "secret",
          "format",
          "title",
          "body",
          "files"
        ],
        "description": "질문의 생성 정보."
      },
      "IBbsArticle.ICreate": {
        "type": "object",
        "properties": {
          "format": {
            "oneOf": [
              {
                "const": "html"
              },
              {
                "const": "md"
              },
              {
                "const": "txt"
              }
            ],
            "title": "본문 형식",
            "description": "본문 형식. `html`, `md`, `txt`와 같은 확장자와 동일한 의미."
          },
          "title": {
            "type": "string",
            "title": "기사 제목",
            "description": "기사 제목."
          },
          "body": {
            "type": "string",
            "title": "기사의 내용 본문",
            "description": "기사의 내용 본문."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "첨부파일 목록",
            "description": "첨부파일 목록."
          }
        },
        "required": [
          "format",
          "title",
          "body",
          "files"
        ],
        "description": "기사 작성 정보."
      },
      "IShoppingSaleReview.ICreate": {
        "type": "object",
        "properties": {
          "good_id": {
            "type": "string",
            "format": "uuid",
            "title": "타겟상품 {@link IShoppingOrderGood.id}",
            "description": "타겟상품 {@link IShoppingOrderGood.id}."
          },
          "score": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "title": "리뷰의 점수",
            "description": "리뷰의 점수."
          },
          "format": {
            "oneOf": [
              {
                "const": "html"
              },
              {
                "const": "md"
              },
              {
                "const": "txt"
              }
            ],
            "title": "본문 형식",
            "description": "본문 형식. `html`, `md`, `txt`와 같은 확장자와 동일한 의미."
          },
          "title": {
            "type": "string",
            "title": "기사 제목",
            "description": "기사 제목."
          },
          "body": {
            "type": "string",
            "title": "기사의 내용 본문",
            "description": "기사의 내용 본문."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "첨부파일 목록",
            "description": "첨부파일 목록."
          }
        },
        "required": [
          "good_id",
          "score",
          "format",
          "title",
          "body",
          "files"
        ],
        "description": "리뷰 작성 정보."
      },
      "IShoppingSaleReview.IUpdate": {
        "type": "object",
        "properties": {
          "score": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "title": "리뷰의 점수",
            "description": "리뷰의 점수."
          },
          "format": {
            "oneOf": [
              {
                "const": "html"
              },
              {
                "const": "md"
              },
              {
                "const": "txt"
              }
            ],
            "title": "본문 형식",
            "description": "본문 형식. `html`, `md`, `txt`와 같은 확장자와 동일한 의미."
          },
          "title": {
            "type": "string",
            "title": "기사 제목",
            "description": "기사 제목."
          },
          "body": {
            "type": "string",
            "title": "기사의 내용 본문",
            "description": "기사의 내용 본문."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "첨부파일 목록",
            "description": "첨부파일 목록."
          }
        },
        "required": [
          "score",
          "format",
          "title",
          "body",
          "files"
        ],
        "description": "리뷰 정보 업데이트."
      },
      "IShoppingSeller.IJoin": {
        "type": "object",
        "properties": {}
      },
      "IPageIShoppingDelivery.IInvert": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingDelivery.IInvert"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingDelivery.IInvert": {
        "type": "object",
        "properties": {
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingOrder.IInvertFromDelivery"
            },
            "minItems": 1,
            "title": "배달 주문 목록",
            "description": "배달 주문 목록."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "seller": {
            "$ref": "#/components/schemas/IShoppingSeller",
            "title": "상품을 배달한 판매자",
            "description": "상품을 배달한 판매자."
          },
          "journeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingDeliveryJourney"
            },
            "title": "배달 여정 목록",
            "description": "배달 여정 목록."
          },
          "pieces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingDeliveryPiece"
            },
            "minItems": 1,
            "title": "납품품 목록",
            "description": "납품품 목록."
          },
          "shippers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingDeliveryShipper"
            },
            "title": "배송업체 목록",
            "description": "배송업체 목록."
          },
          "state": {
            "oneOf": [
              {
                "const": "none"
              },
              {
                "const": "underway"
              },
              {
                "const": "preparing"
              },
              {
                "const": "manufacturing"
              },
              {
                "const": "shipping"
              },
              {
                "const": "delivering"
              },
              {
                "const": "arrived"
              }
            ],
            "title": "배송 상태",
            "description": "배송 상태."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간."
          }
        },
        "required": [
          "orders",
          "id",
          "seller",
          "journeys",
          "pieces",
          "shippers",
          "state",
          "created_at"
        ],
        "description": "배송정보 반전."
      },
      "IShoppingOrder.IInvertFromDelivery": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "customer": {
            "$ref": "#/components/schemas/IShoppingCustomer",
            "title": "주문을 신청한 고객",
            "description": "주문을 신청한 고객."
          },
          "goods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingOrderGood"
            },
            "minItems": 1,
            "title": "주문 상품 목록",
            "description": "주문 상품 목록."
          },
          "price": {
            "$ref": "#/components/schemas/IShoppingOrderPrice",
            "title": "할인을 포함한 가격 정보",
            "description": "할인을 포함한 가격 정보."
          },
          "publish": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IShoppingOrderPublish.IInvertFromDelivery"
              }
            ],
            "title": "주문 완료 및 결제 정보",
            "description": "주문 완료 및 결제 정보."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간."
          }
        },
        "required": [
          "id",
          "customer",
          "goods",
          "price",
          "publish",
          "created_at"
        ],
        "description": "배달 정보 반전."
      },
      "IShoppingOrderPublish.IInvertFromDelivery": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록 생성 시간."
          },
          "paid_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "주문이 결제된 시간",
            "description": "주문이 결제된 시간."
          },
          "cancelled_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "결제가 취소된 시간",
            "description": "결제가 취소된 시간."
          },
          "address": {
            "$ref": "#/components/schemas/IShoppingAddress",
            "title": "{@link IShoppingOrderGood 상품}을 배송받을 주소",
            "description": "{@link IShoppingOrderGood 상품}을 배송받을 주소."
          }
        },
        "required": [
          "id",
          "created_at",
          "paid_at",
          "cancelled_at",
          "address"
        ],
        "description": "배달 정보 반전."
      },
      "IShoppingDelivery.IRequest": {
        "type": "object",
        "properties": {
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-delivery.created_at"
                },
                {
                  "const": "+delivery.created_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "페이지 번호",
            "description": "페이지 번호."
          },
          "limit": {
            "type": "integer",
            "title": "페이지당 레코드 수 제한",
            "description": "페이지당 레코드 수 제한."
          }
        }
      },
      "IShoppingDelivery.ICreate": {
        "type": "object",
        "properties": {
          "pieces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingDeliveryPiece.ICreate"
            },
            "minItems": 1,
            "title": "납품품 목록",
            "description": "납품품 목록."
          },
          "journeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingDeliveryJourney.ICreate"
            },
            "title": "배달 여정 목록",
            "description": "배달 여정 목록. 이는 초기 데이터이며 배달 생성 후 여정 데이터를 축적할 수도 있습니다.."
          },
          "shippers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingDeliveryShipper.ICreate"
            },
            "title": "배송업체 목록",
            "description": "배송업체 목록."
          }
        },
        "required": [
          "pieces",
          "journeys",
          "shippers"
        ],
        "description": "배송정보 생성."
      },
      "IShoppingDeliveryPiece.ICreate": {
        "type": "object",
        "properties": {
          "publish_id": {
            "type": "string",
            "format": "uuid",
            "title": "타겟 주문의 {@link IShoppingOrderPublish.id}",
            "description": "타겟 주문의 {@link IShoppingOrderPublish.id}."
          },
          "good_id": {
            "type": "string",
            "format": "uuid",
            "title": "타겟상품 {@link IShoppingOrderGood.id}",
            "description": "타겟상품 {@link IShoppingOrderGood.id}."
          },
          "stock_id": {
            "type": "string",
            "format": "uuid",
            "title": "타겟 주식 {@link IShoppingSaleUnitStock.id}",
            "description": "타겟 주식 {@link IShoppingSaleUnitStock.id}."
          },
          "quantity": {
            "type": "number",
            "minimum": 0,
            "title": "재고량",
            "description": "재고 수량입니다. 분할 배송을 표현하는 정밀한 값이 될 수 있습니다.."
          }
        },
        "required": [
          "publish_id",
          "good_id",
          "stock_id",
          "quantity"
        ],
        "description": "배송품 제작 정보."
      },
      "IShoppingDeliveryJourney.ICreate": {
        "type": "object",
        "properties": {
          "type": {
            "oneOf": [
              {
                "const": "preparing"
              },
              {
                "const": "manufacturing"
              },
              {
                "const": "shipping"
              },
              {
                "const": "delivering"
              }
            ],
            "title": "여행 유형",
            "description": "여행 유형 - 준비 - 제조 - 운송 - 배달"
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "여행의 제목",
            "description": "여행의 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "여행 설명",
            "description": "여행 설명."
          },
          "started_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "여행 시작 시간",
            "description": "여행 시작 시간."
          },
          "completed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "여행 완료 시간",
            "description": "여행 완료 시간."
          }
        },
        "required": [
          "type",
          "title",
          "description",
          "started_at",
          "completed_at"
        ],
        "description": "배송 여정의 생성 정보."
      },
      "IShoppingDeliveryShipper.ICreate": {
        "type": "object",
        "properties": {
          "company": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          }
        },
        "required": [
          "company",
          "name",
          "mobile"
        ]
      },
      "IShoppingDeliveryPiece.IRequest": {
        "type": "object",
        "properties": {
          "publish_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "publish_ids"
        ]
      },
      "IShoppingDeliveryJourney.IComplete": {
        "type": "object",
        "properties": {
          "completed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "여행 완료 시간",
            "description": "여행 완료 시간."
          }
        },
        "required": [
          "completed_at"
        ],
        "description": "배송 여정 완료 정보."
      },
      "IShoppingSale.ICreate": {
        "type": "object",
        "properties": {
          "section_code": {
            "type": "string",
            "title": "소속 섹션의 {@link IShoppingSection.code}",
            "description": "소속 섹션의 {@link IShoppingSection.code}."
          },
          "status": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "paused"
              },
              {
                "const": "suspended"
              }
            ],
            "title": "판매 초기 상태",
            "description": "판매의 초기 상태. `null` 또는 `undefined`: 제한 없음 `paused`: {@link ITimestamps.paused_at paused} 상태로 시작 `suspended`: {@link ITimestamps.suspended_at suspended} 상태로 시작"
          },
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 시작 시간",
            "description": "판매 시작 시간."
          },
          "closed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 마감 시간",
            "description": "판매 종료 시간입니다. 이 값이 `null`이면 판매가 영원히 계속됩니다.."
          },
          "content": {
            "$ref": "#/components/schemas/IShoppingSaleContent.ICreate"
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleChannel.ICreate"
            }
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleUnit.ICreate"
            },
            "minItems": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "section_code",
          "opened_at",
          "closed_at",
          "content",
          "channels",
          "units",
          "tags"
        ],
        "description": "판매정보 생성."
      },
      "IShoppingSaleContent.ICreate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "format": {
            "oneOf": [
              {
                "const": "html"
              },
              {
                "const": "md"
              },
              {
                "const": "txt"
              }
            ]
          },
          "body": {
            "type": "string"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            }
          },
          "thumbnails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            }
          }
        },
        "required": [
          "title",
          "format",
          "body",
          "files",
          "thumbnails"
        ]
      },
      "IShoppingSaleChannel.ICreate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "title": "타겟 채널의 {@link IShoppingChannel.code}",
            "description": "타겟 채널의 {@link IShoppingChannel.code}."
          },
          "category_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "title": "대상 카테고리 목록 {@link IShoppingChannelCategory.id}",
            "description": "대상 카테고리의 {@link IShoppingChannelCategory.id} 목록입니다. 비어 있으면 채널의 모든 카테고리가 판매를 나열하고 있음을 의미합니다.."
          }
        },
        "required": [
          "code",
          "category_ids"
        ],
        "description": "판매할 타겟 채널(및 카테고리)의 생성 정보."
      },
      "IShoppingSaleUnit.ICreate": {
        "type": "object",
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IShoppingSaleUnitSelectableOption.ICreate"
                },
                {
                  "$ref": "#/components/schemas/IShoppingSaleUnitDescriptiveOption.ICreate"
                }
              ]
            },
            "title": "옵션 목록",
            "description": "옵션 목록."
          },
          "stocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleUnitStock.ICreate"
            },
            "minItems": 1,
            "title": "최종 재고 목록",
            "description": "최종 재고 목록."
          },
          "name": {
            "type": "string",
            "title": "단위의 대표적 명칭",
            "description": "단위의 대표적 명칭."
          },
          "primary": {
            "type": "boolean",
            "title": "해당 단위가 1차 단위인지 아닌지",
            "description": "단위가 기본 단위인지 아닌지. 단지 라벨링 값일 뿐."
          },
          "required": {
            "type": "boolean",
            "title": "단위가 필요한지 여부",
            "description": "단위가 필요한지 여부. 단위가 필요한 경우, 고객은 단위를 선택해야 합니다. 선택하지 않으면, 고객은 구매할 수 없습니다. 예를 들어, &quot;Macbook Set&quot; 세일이 있고 단위 중 하나가 &quot;Main Body&quot;인 경우, &quot;Main Body&quot; 단위 없이 &quot;Macbook Set&quot;을 구매할 수 있습니까? 이 속성은 그런 경우를 위한 것입니다.."
          }
        },
        "required": [
          "options",
          "stocks",
          "name",
          "primary",
          "required"
        ],
        "description": "판매단위 생성정보."
      },
      "IShoppingSaleUnitSelectableOption.ICreate": {
        "type": "object",
        "properties": {
          "type": {
            "const": "select",
            "title": "선택 가능한 옵션 유형에 대한 판별식",
            "description": "선택 가능한 옵션 유형에 대한 판별식."
          },
          "name": {
            "type": "string",
            "title": "옵션의 이름을 나타냅니다",
            "description": "옵션의 이름을 나타냅니다."
          },
          "variable": {
            "type": "boolean",
            "title": "옵션이 가변적인지 아닌지",
            "description": "옵션이 가변적인지 여부. 현재 옵션의 유형이 &quot;선택&quot;인 경우 이 속성은 다른 후보 값을 선택하는 것이 최종 주식에 영향을 미치는지 여부를 의미합니다.."
          },
          "candidates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleUnitOptionCandidate.ICreate"
            },
            "minItems": 1,
            "title": "후보 값 목록",
            "description": "후보 값 목록."
          }
        },
        "required": [
          "type",
          "name",
          "variable",
          "candidates"
        ],
        "description": "선택 가능한 옵션의 생성 정보."
      },
      "IShoppingSaleUnitOptionCandidate.ICreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "후보값의 이름을 나타냅니다.",
            "description": "후보값의 이름을 나타냅니다.."
          }
        },
        "required": [
          "name"
        ],
        "description": "후보값 생성정보."
      },
      "IShoppingSaleUnitDescriptiveOption.ICreate": {
        "type": "object",
        "properties": {
          "type": {
            "oneOf": [
              {
                "const": "string"
              },
              {
                "const": "number"
              },
              {
                "const": "boolean"
              }
            ],
            "title": "설명 옵션의 유형",
            "description": "설명 옵션의 종류입니다. 구매 시 입력해야 하는 입력값은 무엇입니까?."
          },
          "name": {
            "type": "string",
            "title": "옵션의 읽을 수 있는 이름",
            "description": "옵션의 읽을 수 있는 이름."
          }
        },
        "required": [
          "type",
          "name"
        ],
        "description": "설명 옵션의 생성 정보."
      },
      "IShoppingSaleUnitStock.ICreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "주식의 대표명",
            "description": "주식의 대표명."
          },
          "price": {
            "$ref": "#/components/schemas/IShoppingPrice",
            "title": "주식의 가격",
            "description": "주식의 가격."
          },
          "quantity": {
            "type": "integer",
            "minimum": 1,
            "title": "초기 재고 수량",
            "description": "초기 재고 수량."
          },
          "choices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleUnitStockChoice.ICreate"
            },
            "title": "선택 목록",
            "description": "선택 사항 목록. 각 옵션에 대해 선택되는 후보 값."
          }
        },
        "required": [
          "name",
          "price",
          "quantity",
          "choices"
        ],
        "description": "주식의 생성정보."
      },
      "IShoppingSaleUnitStockChoice.ICreate": {
        "type": "object",
        "properties": {
          "option_index": {
            "type": "integer",
            "description": "{@link IShoppingSaleUnit.ICreate.options}의 대상 옵션 인덱스 번호."
          },
          "candidate_index": {
            "type": "integer",
            "description": "{@link IShoppingSaleUnitSelectableOption.ICreate.candidates}에서 대상 후보자의 인덱스 번호."
          }
        },
        "required": [
          "option_index",
          "candidate_index"
        ],
        "description": "주식선택정보 생성."
      },
      "IShoppingSaleSnapshot.ICreate": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/IShoppingSaleContent.ICreate"
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleChannel.ICreate"
            }
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleUnit.ICreate"
            },
            "minItems": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "content",
          "channels",
          "units",
          "tags"
        ],
        "description": "스냅샷 생성 정보."
      },
      "IShoppingSale.IUpdateOpeningTime": {
        "type": "object",
        "properties": {
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 시작 시간",
            "description": "판매 시작 시간."
          },
          "closed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 마감 시간",
            "description": "판매 종료 시간입니다. 이 값이 `null`이면 판매가 영원히 계속됩니다.."
          }
        },
        "required": [
          "opened_at",
          "closed_at"
        ],
        "description": "판매 오픈 시간 정보 업데이트."
      },
      "IShoppingSaleInquiryAnswer.ISnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "기본 키",
            "description": "기본 키."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "스냅샷 레코드 생성 시간",
            "description": "스냅샷 레코드의 생성 시간. 즉, 생성 시간 또는 업데이트 시간 또는 기사."
          },
          "format": {
            "oneOf": [
              {
                "const": "html"
              },
              {
                "const": "md"
              },
              {
                "const": "txt"
              }
            ],
            "title": "본문 형식",
            "description": "본문 형식. `html`, `md`, `txt`와 같은 확장자와 동일한 의미."
          },
          "title": {
            "type": "string",
            "title": "기사 제목",
            "description": "기사 제목."
          },
          "body": {
            "type": "string",
            "title": "기사의 내용 본문",
            "description": "기사의 내용 본문."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "첨부파일 목록",
            "description": "첨부파일 목록."
          }
        },
        "required": [
          "id",
          "created_at",
          "format",
          "title",
          "body",
          "files"
        ]
      },
      "IPageIShoppingSaleUnitStockSupplement": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "페이지 정보",
            "description": "페이지 정보."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShoppingSaleUnitStockSupplement"
            },
            "title": "기록 목록",
            "description": "기록 목록."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "페이지. 페이지 번호 정보가 있는 레코드 모음."
      },
      "IShoppingSaleUnitStockSupplement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본 키",
            "description": "기본 키."
          },
          "value": {
            "type": "integer",
            "title": "보충량",
            "description": "보충량."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "기록 생성 시간",
            "description": "기록의 생성 시간. 즉, 보충되는 재고의 재고가 있는 시간."
          }
        },
        "required": [
          "id",
          "value",
          "created_at"
        ],
        "description": "재고 수량의 보충. 알아요? {@link IShoppingSaleUnitStock 재고}가 {@link IShoppingSaleUnitStock.ICreate.quantity 초기 재고 수량}을 초과하여 판매된 경우, 재고가 품절되어 더 이상 판매할 수 없습니다. 그런 경우, {@link IShoppingSeller}는 어떻게 해야 할까요? 재고가 매진되면 판매자는 이 `IShoppingSaleUnitStockSupplement` 레코드를 등록하여 재고 레코드를 보충할 수 있습니다. 맞아요, 이 `IShoppingSaleUnitStockSupplement`는 소유한 재고의 재고 수량 보충을 구현하는 엔티티입니다.."
      },
      "IShoppingSaleUnitStockSupplement.IRequest": {
        "type": "object",
        "properties": {
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-created_at"
                },
                {
                  "const": "+created_at"
                }
              ]
            },
            "title": "정렬 가능한 열",
            "description": "정렬 가능한 열."
          },
          "page": {
            "type": "integer",
            "title": "페이지 번호",
            "description": "페이지 번호."
          },
          "limit": {
            "type": "integer",
            "title": "페이지당 레코드 수 제한",
            "description": "페이지당 레코드 수 제한."
          }
        },
        "description": "주식보충목록 정보요청."
      },
      "IShoppingSaleUnitStockSupplement.ICreate": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "title": "보충량",
            "description": "보충량."
          }
        },
        "required": [
          "value"
        ],
        "description": "보충제의 생성 정보."
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "Monitor"
    },
    {
      "name": "Authenticate"
    },
    {
      "name": "Discount"
    },
    {
      "name": "Order"
    },
    {
      "name": "Sale"
    },
    {
      "name": "Systematic"
    },
    {
      "name": "Section"
    }
  ],
  "x-samchon-emended": true
}