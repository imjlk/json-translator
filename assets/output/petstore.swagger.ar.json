{
  "openapi": "3.1.0",
  "info": {
    "title": "متجر Swagger Petstore - OpenAPI 3.0",
    "description": "هذا هو خادم متجر الحيوانات الأليفة النموذجي المستند إلى مواصفات OpenAPI 3.0. يمكنك معرفة المزيد عن Swagger على [http://swagger.io](http://swagger.io). في الإصدار الثالث من متجر الحيوانات الأليفة، تحولنا إلى نهج التصميم أولاً! يمكنك الآن مساعدتنا في تحسين واجهة برمجة التطبيقات سواء من خلال إجراء تغييرات على التعريف نفسه أو على الكود. بهذه الطريقة، مع مرور الوقت، يمكننا تحسين واجهة برمجة التطبيقات بشكل عام، وكشف بعض الميزات الجديدة في OAS3. بعض الروابط المفيدة: - [مستودع متجر الحيوانات الأليفة](https://github.com/swagger-api/swagger-petstore) - [تعريف واجهة برمجة التطبيقات المصدر لمتجر الحيوانات الأليفة](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.17"
  },
  "externalDocs": {
    "description": "اكتشف المزيد عن Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "/api/v3"
    }
  ],
  "tags": [
    {
      "name": "pet",
      "description": "كل شيء عن حيواناتك الأليفة",
      "externalDocs": {
        "description": "إعرف المزيد",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "store",
      "description": "الوصول إلى طلبات متجر الحيوانات الأليفة",
      "externalDocs": {
        "description": "تعرف على المزيد عن متجرنا",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "user",
      "description": "عمليات حول المستخدم"
    }
  ],
  "paths": {
    "/pet": {
      "put": {
        "tags": [
          "pet"
        ],
        "summary": "تحديث حيوان أليف موجود",
        "description": "تحديث حيوان أليف موجود عن طريق معرف",
        "operationId": "updatePet",
        "requestBody": {
          "description": "تحديث حيوان أليف موجود في المتجر",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "عملية ناجحة",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "400": {
            "description": "تم تقديم معرف غير صالح"
          },
          "404": {
            "description": "لم يتم العثور على الحيوان الأليف"
          },
          "405": {
            "description": "استثناء التحقق"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "أضف حيوانًا أليفًا جديدًا إلى المتجر",
        "description": "أضف حيوانًا أليفًا جديدًا إلى المتجر",
        "operationId": "addPet",
        "requestBody": {
          "description": "إنشاء حيوان أليف جديد في المتجر",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "عملية ناجحة",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "405": {
            "description": "إدخال غير صالح"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/pet/findByStatus": {
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "العثور على الحيوانات الأليفة حسب الحالة",
        "description": "يمكن توفير قيم حالة متعددة بسلاسل مفصولة بفاصلة",
        "operationId": "findPetsByStatus",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "قيم الحالة التي يجب مراعاتها للتصفية",
            "required": false,
            "explode": true,
            "schema": {
              "oneOf": [
                {
                  "const": "available"
                },
                {
                  "const": "pending"
                },
                {
                  "const": "sold"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "عملية ناجحة",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            }
          },
          "400": {
            "description": "قيمة الحالة غير صالحة"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/pet/findByTags": {
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "البحث عن الحيوانات الأليفة عن طريق العلامات",
        "description": "يمكن توفير علامات متعددة بسلاسل منفصلة بفاصلة. استخدم tag1 وtag2 وtag3 للاختبار.",
        "operationId": "findPetsByTags",
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "العلامات التي يجب تصفيتها",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "عملية ناجحة",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            }
          },
          "400": {
            "description": "قيمة العلامة غير صالحة"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/pet/{petId}": {
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "البحث عن الحيوان الأليف عن طريق معرفه",
        "description": "يعيد حيوان أليف واحد",
        "operationId": "getPetById",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "معرف الحيوان الأليف المراد إرجاعه",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "عملية ناجحة",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "400": {
            "description": "تم تقديم معرف غير صالح"
          },
          "404": {
            "description": "لم يتم العثور على الحيوان الأليف"
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "تحديث حيوان أليف في المتجر باستخدام بيانات النموذج",
        "description": "",
        "operationId": "updatePetWithForm",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "معرف الحيوان الأليف الذي يحتاج إلى التحديث",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "اسم الحيوان الأليف الذي يحتاج إلى التحديث",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "حالة الحيوان الأليف الذي يحتاج إلى تحديث",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "إدخال غير صالح"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "pet"
        ],
        "summary": "يحذف حيوان أليف",
        "description": "",
        "operationId": "deletePet",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "petId",
            "in": "path",
            "description": "معرف الحيوان الأليف الذي سيتم حذفه",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "قيمة حيوان أليف غير صالحة"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/pet/{petId}/uploadImage": {
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "يقوم بتحميل صورة",
        "description": "",
        "operationId": "uploadFile",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "معرف الحيوان الأليف المراد تحديثه",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additionalMetadata",
            "in": "query",
            "description": "بيانات وصفية إضافية",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "عملية ناجحة",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/store/inventory": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "إرجاع مخزونات الحيوانات الأليفة حسب الحالة",
        "description": "إرجاع خريطة لرموز الحالة للكميات",
        "operationId": "getInventory",
        "responses": {
          "200": {
            "description": "عملية ناجحة",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/store/order": {
      "post": {
        "tags": [
          "store"
        ],
        "summary": "وضع طلب لشراء حيوان أليف",
        "description": "وضع طلب جديد في المتجر",
        "operationId": "placeOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "عملية ناجحة",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "405": {
            "description": "إدخال غير صالح"
          }
        }
      }
    },
    "/store/order/{orderId}": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "البحث عن طلب الشراء عن طريق معرف",
        "description": "للحصول على استجابة صالحة، جرّب معرفات عددية صحيحة بقيمة &lt;= 5 أو &gt; 10. ستؤدي القيم الأخرى إلى توليد استثناءات.",
        "operationId": "getOrderById",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "معرف الطلب الذي يحتاج إلى جلبه",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "عملية ناجحة",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "تم تقديم معرف غير صالح"
          },
          "404": {
            "description": "لم يتم العثور على الطلب"
          }
        }
      },
      "delete": {
        "tags": [
          "store"
        ],
        "summary": "حذف طلب الشراء عن طريق المعرف",
        "description": "للحصول على استجابة صالحة، جرِّب معرفات عددية صحيحة بقيمة &lt; 1000. أي شيء أعلى من 1000 أو غير صحيح سيؤدي إلى إنشاء أخطاء API",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "معرف الطلب الذي يحتاج إلى الحذف",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "تم تقديم معرف غير صالح"
          },
          "404": {
            "description": "لم يتم العثور على الطلب"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "إنشاء المستخدم",
        "description": "لا يمكن القيام بذلك إلا من قبل المستخدم المسجل الدخول.",
        "operationId": "createUser",
        "requestBody": {
          "description": "تم إنشاء كائن المستخدم",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "عملية ناجحة",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/user/createWithList": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "إنشاء قائمة بالمستخدمين باستخدام مجموعة الإدخال المحددة",
        "description": "إنشاء قائمة بالمستخدمين باستخدام مجموعة الإدخال المحددة",
        "operationId": "createUsersWithListInput",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "عملية ناجحة",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "عملية ناجحة"
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "تسجيل دخول المستخدم إلى النظام",
        "description": "",
        "operationId": "loginUser",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "اسم المستخدم لتسجيل الدخول",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "كلمة المرور لتسجيل الدخول بنص واضح",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "عملية ناجحة",
            "headers": {
              "X-Rate-Limit": {
                "description": "عدد المكالمات المسموح بها للمستخدم في الساعة",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                },
                "in": "header"
              },
              "X-Expires-After": {
                "description": "التاريخ بالتوقيت العالمي المنسق عندما تنتهي صلاحية الرمز المميز",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                },
                "in": "header"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "تم إدخال اسم مستخدم/كلمة مرور غير صالحة"
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "تسجيل خروج المستخدم المسجل الدخول إلى الجلسة الحالية",
        "description": "",
        "operationId": "logoutUser",
        "parameters": [],
        "responses": {
          "default": {
            "description": "عملية ناجحة"
          }
        }
      }
    },
    "/user/{username}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "الحصول على المستخدم عن طريق اسم المستخدم",
        "description": "",
        "operationId": "getUserByName",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "الاسم الذي يجب جلبه. استخدم user1 للاختبار.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "عملية ناجحة",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "تم إدخال اسم مستخدم غير صالح"
          },
          "404": {
            "description": "لم يتم العثور على المستخدم"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "تحديث المستخدم",
        "description": "لا يمكن القيام بذلك إلا من قبل المستخدم المسجل الدخول.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "الاسم الذي يجب حذفه",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "تحديث مستخدم موجود في المتجر",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "عملية ناجحة"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "حذف المستخدم",
        "description": "لا يمكن القيام بذلك إلا من قبل المستخدم المسجل الدخول.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "الاسم الذي يجب حذفه",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "تم إدخال اسم مستخدم غير صالح"
          },
          "404": {
            "description": "لم يتم العثور على المستخدم"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "petId": {
            "type": "integer",
            "format": "int64",
            "example": 198772
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "example": 7
          },
          "shipDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "oneOf": [
              {
                "const": "placed"
              },
              {
                "const": "approved"
              },
              {
                "const": "delivered"
              }
            ],
            "description": "حالة الطلب",
            "example": "approved"
          },
          "complete": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "order"
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 100000
          },
          "username": {
            "type": "string",
            "example": "fehguy"
          },
          "address": {
            "type": "array",
            "xml": {
              "name": "addresses",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          }
        },
        "xml": {
          "name": "customer"
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "example": "437 Lytton"
          },
          "city": {
            "type": "string",
            "example": "Palo Alto"
          },
          "state": {
            "type": "string",
            "example": "CA"
          },
          "zip": {
            "type": "string",
            "example": "94301"
          }
        },
        "xml": {
          "name": "address"
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Dogs"
          }
        },
        "xml": {
          "name": "category"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "username": {
            "type": "string",
            "example": "theUser"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "James"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "phone": {
            "type": "string",
            "example": "12345"
          },
          "userStatus": {
            "type": "integer",
            "description": "حالة المستخدم",
            "format": "int32",
            "example": 1
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "tag"
        }
      },
      "Pet": {
        "required": [
          "name",
          "photoUrls"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "doggie"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "photoUrls": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "photoUrl"
              }
            }
          },
          "tags": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "status": {
            "oneOf": [
              {
                "const": "available"
              },
              {
                "const": "pending"
              },
              {
                "const": "sold"
              }
            ],
            "description": "حالة الحيوان الأليف في المتجر"
          }
        },
        "xml": {
          "name": "pet"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "##default"
        }
      }
    },
    "securitySchemes": {
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  },
  "x-samchon-emended": true
}