{
  "openapi": "3.1.0",
  "info": {
    "title": "Damoa API 仕様",
    "description": "Damoa API 仕様",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.queenit.kr",
      "description": "production"
    },
    {
      "url": "https://api.dev.queenit.kr",
      "description": "開発"
    },
    {
      "url": "http://localhost:8080",
      "description": "local"
    },
    {
      "url": "https://{namespace}-app-api.dev.rapportlabs.cloud",
      "variables": {
        "namespace": {
          "default": "damoa"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "metadata",
      "description": "metadata api"
    },
    {
      "name": "verification",
      "description": "verification api"
    },
    {
      "name": "hello",
      "description": "hello api"
    },
    {
      "name": "favorite",
      "description": "favorite api"
    },
    {
      "name": "best",
      "description": "best api"
    },
    {
      "name": "product",
      "description": "product api"
    },
    {
      "name": "ageGroup",
      "description": "ageGroup api"
    },
    {
      "name": "home",
      "description": "home api"
    },
    {
      "name": "newArrival",
      "description": "new arrival api"
    },
    {
      "name": "hotDeal",
      "description": "hot deal api"
    },
    {
      "name": "recommendation",
      "description": "recommendation api"
    },
    {
      "name": "promotion",
      "description": "promotion api"
    },
    {
      "name": "cart",
      "description": "cart api"
    },
    {
      "name": "account",
      "description": "account api"
    },
    {
      "name": "order",
      "description": "order api"
    },
    {
      "name": "payment",
      "description": "payment api"
    },
    {
      "name": "banner",
      "description": "banner api"
    },
    {
      "name": "collection",
      "description": "collection api"
    },
    {
      "name": "search",
      "description": "search api"
    },
    {
      "name": "autocomplete",
      "description": "autocomplete api"
    },
    {
      "name": "coupon",
      "description": "coupon api"
    },
    {
      "name": "review",
      "description": "review api"
    },
    {
      "name": "reviewStatistics",
      "description": "reviewStatistics api"
    },
    {
      "name": "userProfile",
      "description": "user profile api"
    },
    {
      "name": "image",
      "description": "image api"
    },
    {
      "name": "prompt",
      "description": "prompt api"
    },
    {
      "name": "shopLive",
      "description": "shopLive api"
    },
    {
      "name": "point",
      "description": "point api"
    },
    {
      "name": "productRanking",
      "description": "productRanking api"
    },
    {
      "name": "tier",
      "description": "tier api"
    },
    {
      "name": "styleShot",
      "description": "style shot api"
    },
    {
      "name": "attendanceCheck",
      "description": "attendance check api"
    },
    {
      "name": "tag",
      "description": "tag api"
    }
  ],
  "paths": {
    "/metadata": {
      "get": {
        "description": "metadata api",
        "operationId": "getMetadata",
        "tags": [
          "metadata"
        ],
        "responses": {
          "200": {
            "description": "metadata response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/hello": {
      "get": {
        "summary": "hello world",
        "operationId": "hello",
        "tags": [
          "hello"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to hello",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/verifications/sms": {
      "post": {
        "summary": "send verification code by sms [invalid phone number -&gt; ApiErrorType.INVALID_VALUE]",
        "operationId": "sendVerifCodeBySms",
        "tags": [
          "verification"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendVerifCodeRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to send verification code",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendVerifCodeResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/verifications": {
      "put": {
        "summary": "verify code [invalid token or code -&gt; ApiErrorType.INVALID_VALUE]",
        "operationId": "verifyCode",
        "tags": [
          "verification"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyCodeRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to verify code",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyCodeResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/verifications/kakao": {
      "put": {
        "summary": "verify kakao access token",
        "operationId": "verifyKakaoToken",
        "tags": [
          "verification"
        ],
        "description": "- カカオログインで認証したユーザーの場合、発行されたカカオAPIアクセストークンと電話番号を使用してverifiedTokenを要求 - 電話番号は国際電話形式（例：+82 10-1111-1111） - 発行されたverifiedTokenを使用してsignUpV2 APIを呼び出してログイン/会員登録を進める",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyKakaoTokenRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to verify",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyKakaoTokenResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/migrate-user": {
      "post": {
        "summary": "firebase auth user -&gt; damoa auth user 切り替え",
        "description": "&gt;既存の古いバージョンのクライアントでfirebase authを使用していたユーザーをdamoa authを使用するように切り替えます。 （クライアント）firebase auth情報がある場合は、既存のfirebase auth tokenをリフレッシュします。 （サーバー）クライアントが送信したアクセストークン情報でトークンベンダーを確認する -&gt; firebaseで発行されたのか、damoaで発行されたのかを確認するもっとチェックするtoken(access &amp; refresh)をresponseに送る 7. (クライアント) damoa auth tokenを使う",
        "operationId": "migrateUser",
        "tags": [
          "account"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FirebaseAuthUserMigrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to migrate user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DamoaTokenDto"
                }
              }
            }
          },
          "204": {
            "description": "すでにdamoa auth userの場合"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/signin/anonymous": {
      "post": {
        "summary": "anonymous ユーザーとしてログイン",
        "description": "anonymous ユーザーとしてログインする [invalid token -&gt; ApiErrorType.INVALID_VALUE]",
        "operationId": "signInAnonymously",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "success to signin anonymously",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DamoaTokenDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/signup/providers/{providerType}": {
      "post": {
        "summary": "認証されたユーザーのログイン/登録",
        "description": "- 既存のサブスクリプションを持っていたユーザーが再びログインしたり、新しいサブスクリプションをした場合に呼び出される - 現在の `providerType`で `SMS`と `KAKAO`をサポート - 他のproviderTypeを使用するとエラーが発生するなどが追加されることもある - request headerに入るauthorization情報にはanonymous signup api呼び出し後に発行されたaccess tokenを記入する - `Bearer {{ anonymous access token }}`形式できない",
        "operationId": "signUpV2",
        "tags": [
          "account"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "providerType",
            "schema": {
              "$ref": "#/components/schemas/ProviderTypeEnum"
            },
            "required": true,
            "description": "auth provider(SMS、KAKAO、..)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to signup",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DamoaTokenDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/refresh": {
      "post": {
        "summary": "認証されたユーザーまたはanonymousユーザーのaccess/refresh tokenの更新",
        "description": "認証されたユーザーまたはanonymousユーザーのaccess/refresh tokenの更新",
        "operationId": "refreshToken",
        "tags": [
          "account"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DamoaTokenRefreshRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to refresh tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DamoaTokenDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "summary": "ユーザーのアカウント情報を照会するときに使用する",
        "description": "damoa authを使用しているユーザーだけが正常に利用できます（anonymousユーザーを含む）",
        "operationId": "getDamoaLoginAccount",
        "tags": [
          "account"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to retrieve account info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginAccountDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/signout": {
      "post": {
        "summary": "signout",
        "operationId": "signOut",
        "tags": [
          "account"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to signout"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "summary": "logout",
        "operationId": "logout",
        "tags": [
          "account"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to logout"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/external-uid": {
      "get": {
        "summary": "get external uid",
        "description": "その user の外部 API 呼び出しに使用できる external uid を返します.",
        "operationId": "getExternalUid",
        "tags": [
          "account"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "external uid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalUidDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payment-methods": {
      "get": {
        "summary": "get registered payment methods",
        "description": "そのユーザーがクイーンイットペイに登録したお支払い方法のリストを返します.",
        "operationId": "getPaymentMethods",
        "tags": [
          "account"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "registered payment methods",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/credentials/connect-pay": {
      "get": {
        "summary": "get connect pay credentials",
        "description": "ConnectPay JS SDKを使用するためのcredentialを返します.",
        "operationId": "getConnectPayCredentials",
        "tags": [
          "account"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "connect pay clientKey and user specific customerKey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectPayCredentialDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/favorites": {
      "get": {
        "summary": "get favorites",
        "operationId": "getMyFavorites",
        "tags": [
          "favorite"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "- my favorite product list - クイーンイット即時割引が適用された場合、`FavoriteProductDto`で即時割引が適用された金額を表示する - 影響を受けるフィールド: `price`, `productDiscountRate`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/favorites/{productId}": {
      "delete": {
        "summary": "delete favorite",
        "operationId": "deleteMyFavorite",
        "tags": [
          "favorite"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success to delete"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "add favorite",
        "operationId": "addMyFavorite",
        "tags": [
          "favorite"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success to add"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/best/products": {
      "get": {
        "summary": "get best products for recent specific period",
        "operationId": "getBestAppProducts",
        "tags": [
          "best"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "required": true,
            "description": "best products for this period",
            "name": "period",
            "schema": {
              "$ref": "#/components/schemas/BestPeriodEnum"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "description": "年齢コード.",
            "required": false,
            "name": "ageGroupCode",
            "schema": {
              "$ref": "#/components/schemas/AgeGroupCodeEnum"
            }
          }
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- get best products for recent specific period - クイーンイット即時割引が適用された場合 `AppProductDto` で即時割引が適用された金額を表示する - 影響を受けるフィールド: `finalPrice`, `discountPercentage`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/best/brands/v2": {
      "get": {
        "summary": "get best brands for recent specific period",
        "operationId": "getBestAppBrands",
        "tags": [
          "best"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "required": true,
            "description": "best brands for this period",
            "name": "period",
            "schema": {
              "$ref": "#/components/schemas/BestPeriodEnum"
            }
          },
          {
            "in": "query",
            "description": "年齢コード.",
            "required": false,
            "name": "ageGroupCode",
            "schema": {
              "$ref": "#/components/schemas/AgeGroupCodeEnum"
            }
          }
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "get best brands for recent specific period",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BestBrandListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/best/WooRanking": {
      "get": {
        "summary": "get woo ranking products - DEPRECATED",
        "operationId": "getWooRankingProducts",
        "tags": [
          "best"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "woo ranking products - DEPRECATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/promotions/brands": {
      "get": {
        "summary": "get promotion brands",
        "operationId": "getPromotedBrands",
        "tags": [
          "promotion"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "promotion brands",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/promotions/products": {
      "get": {
        "summary": "get promotion products",
        "operationId": "getPromotionProducts",
        "tags": [
          "promotion"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "- promotion products - クイーンイット即時割引が適用される場合、`ProductDto`で即時割引が適用された金額を表示する - 影響を受けるフィールド: `finalPrice`, `discountPercentage`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/promotions/connect-pay": {
      "get": {
        "summary": "get connect pay promotions",
        "operationId": "getConnectPayPromotions",
        "tags": [
          "promotion"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "connect-pay card discount promotions and interest-free installment policies",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectPayPromotionDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/promotions/toss": {
      "get": {
        "summary": "get toss payments promotions",
        "operationId": "getTossPromotions",
        "tags": [
          "promotion"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "toss card discount promotions policies and interest-free installment policies",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TossPaymentPromotionDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/newArrivals/products": {
      "get": {
        "summary": "get new arrival products - DEPRECATED",
        "operationId": "getNewArrivalProducts",
        "tags": [
          "newArrival"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "new products - DEPRECATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/promotions/products/discounted": {
      "get": {
        "deprecated": true,
        "parameters": [
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "description": "Please set orderBy to RECOMMENDATION as a default value.",
            "name": "orderBy",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProductOrderByEnum"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get discounted promotion products by orderBy parameters",
        "operationId": "getDiscountedPromotionProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- discounted promotion products by orderBy parameters - クイーンイット即時割引が適用された場合 `AppProductDto` で即時割引が適用された金額を表示する - 影響を受けるフィールド: `finalPrice`, `discountPercentage`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}/discount-benefits": {
      "get": {
        "summary": "get product&#39;s discount benefits information",
        "operationId": "getProductDiscountBenefits",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result of product&#39;s discount benefits information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDiscountBenefitsDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/shopping-mall": {
      "get": {
        "deprecated": true,
        "parameters": [
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "description": "Please set orderBy to RECOMMENDATION as a default value.",
            "name": "orderBy",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProductOrderByEnum"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get shopping mall products by orderBy parameters",
        "operationId": "getShoppingMallProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- shopping mall products by orderBy parameters - クイーンイット即時割引が適用される場合 `AppProductDto` で即割引が適用された金額を表示する - 影響を受けるフィールド: `finalPrice`, `discountPercentage`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/keyword-related": {
      "get": {
        "summary": "キーワードによる関連商品を返します.",
        "operationId": "getKeywordRelatedProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "keyword",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "verbose",
            "required": false,
            "schema": {
              "description": "デバッグ用のパラメータ。その値がtrueの場合、ログをはるかに詳細に取得します.",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "キーワード関連商品の結果",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/related": {
      "get": {
        "summary": "特定の条件に応じた関連商品を返します.",
        "operationId": "getRelatedProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "brandId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "relationTargetProductIds",
            "description": "このパラメータに渡された商品に関連する商品を返します.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "verbose",
            "required": false,
            "schema": {
              "description": "デバッグ用のパラメータ。その値がtrueの場合、ログをはるかに詳細に取得します.",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "関連商品結果",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/personalized/products": {
      "post": {
        "deprecated": true,
        "summary": "Get filtered personalized products",
        "operationId": "getFilteredPersonalizedProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilteredPersonalizedProductRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "- Get personalized products filtered by parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "description": "Please set orderBy to RECOMMENDATION as a default value.",
            "name": "orderBy",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ProductOrderByEnum"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "brandId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "description": "年齢コード.",
            "required": false,
            "name": "ageGroupCode",
            "schema": {
              "$ref": "#/components/schemas/AgeGroupCodeEnum"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "minPrice",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "maxPrice",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "mySizeOnly",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "tagId",
            "deprecated": true,
            "schema": {
              "type": "integer",
              "description": "(deprecated) use tagIdForBrandSourcing",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "tagIdForBrandSourcing",
            "schema": {
              "description": "tagIdに対応するbrandSourcingCodeについて商品を照会する",
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "clickedProductIds",
            "description": "- クリックした商品。パーソナライズされた商品を提供するために使用されます。 - 各商品がクリックされた時間情報を配信するには、clickedProductAtMillisパラメータを一緒に渡す必要があります.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "clickedProductAtMillis",
            "description": "- 商品をクリックした時間。各時間は clickedProductIds パラメータに対応します。 - clickedProductIds と clickedProductAtMillis パラメータのサイズは常に同じでなければなりません.",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "int64"
              }
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "modelId",
            "description": "- どのパーソナライズモデルを使用するか。 (A/B Testing 用途) - ノッションノート: https://www.notion.so/rapportlabs/AB-Protocol-c878d879ff0443cda929bb17d9b137c1",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "postProcessingId",
            "description": "- 個人化結果の後処理をどうするか。 (A/B Testing 用途) - ノッションノート: https://www.notion.so/rapportlabs/AB-Protocol-c878d879ff0443cda929bb17d9b137c1",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "verbose",
            "required": false,
            "schema": {
              "description": "デバッグ用のパラメータ。その値がtrueの場合、ログをはるかに詳細に取得します.",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "summary": "Get personalized recommendation products by filter",
        "operationId": "getPersonalizedRecommendationProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- Get personalized recommendation products by filter and orderBy parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/refined": {
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "description": "Please set orderBy to RECOMMENDATION as a default value.",
            "name": "orderBy",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProductOrderByEnum"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "categoryIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "brandId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "brandIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "description": "年齢コード.",
            "required": false,
            "name": "ageGroupCode",
            "schema": {
              "$ref": "#/components/schemas/AgeGroupCodeEnum"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "minPrice",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "maxPrice",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "mySizeOnly",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "description": "フィルタリングする商品属性IDのリスト",
            "required": false,
            "name": "productFeatureIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "deprecated": true,
            "required": false,
            "description": "（DEPRECATED）enabledTotalCount、enabledProductFeatureAggregation、enabledProductCategoryAggregation、enabledBrandAggregationを使用してください.",
            "name": "enabledProductAggregation",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "商品集計で総数が必要な場合はtrueに設定します。.",
            "name": "enabledTotalCount",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "商品集計で商品属性別の数が必要な場合はtrueに設定します。.",
            "name": "enabledProductFeatureAggregation",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "商品集計で商品カテゴリ別の数が必要な場合はtrueに設定します。.",
            "name": "enabledProductCategoryAggregation",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "商品集計(aggregation)でブランド別個数が必要な場合はtrueに設定する.",
            "name": "enabledBrandAggregation",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "required": false,
            "deprecated": true,
            "description": "（deprecated）tagIdForBrandSourcingパラメータを使用してください",
            "name": "tagId",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "tagIdForBrandSourcing",
            "schema": {
              "description": "tagIdに対応するbrandSourcingCodeについて商品を照会する",
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "商品タグフィルタのためのids",
            "name": "tagIdsForProductTag",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "商品タグのない商品も一緒に露出させるためのパラメータ",
            "name": "allowProductsWithoutTags",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "summary": "Get refined products by filter and orderBy parameters",
        "operationId": "getRefinedProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- Get refined products by filter and orderBy parameters - クイーンイット即時割引が適用された場合 `AppProductDto` で即時割引が適用された金額を表示する - 影響を受けるフィールド: `finalPrice`, `discountPercentage`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/advertisement": {
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "description": "Please set orderBy to RECOMMENDATION as a default value.",
            "name": "orderBy",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ProductOrderByEnum"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "minPrice",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "maxPrice",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "mySizeOnly",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "summary": "Get advertisement products by filter and orderBy parameters",
        "operationId": "getAdvertisementProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- Get advertisement products by filter and orderBy parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAdvertisementProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/detail/advertisement": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get advertisement products by filter and orderBy parameters",
        "operationId": "getAdvertisementProductDetail",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- Get advertisement products in PDP",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAdvertisementProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "summary": "get products by ids parameter",
        "description": "( count of ids is over 40 -&gt; ApiErrorResponseCode.LIMITATION_EXCEEDED )",
        "operationId": "getProducts",
        "tags": [
          "product"
        ],
        "responses": {
          "200": {
            "description": "- products (unique and not ordered) by ids - クイーンイット即時割引が適用された場合 `ProductDto` で即割引が適用された金額を表示する - 影響を受けるフィールド: `finalPrice`, `discountPercentage`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSetDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}/similar/v2": {
      "get": {
        "summary": "get image based similar product (v2)",
        "operationId": "getImageBasedSimilarProductsV2",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "minRating",
            "schema": {
              "type": "number",
              "format": "int32"
            }
          },
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "modelId",
            "required": false,
            "description": "どのモデルを使うか。 https://www.notion.so/rapportlabs/AB-Protocol-c878d879ff0443cda929bb17d9b137c1?pvs=4",
            "schema": {
              "type": "string",
              "default": "TAG_SIM"
            }
          },
          {
            "in": "query",
            "name": "postProcessingId",
            "description": "後処理をどうするか。 https://www.notion.so/rapportlabs/AB-Protocol-c878d879ff0443cda929bb17d9b137c1?pvs=4",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "verbose",
            "required": false,
            "schema": {
              "description": "デバッグ用のパラメータ。その値がtrueの場合、ログをはるかに詳細に取得します.",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "- 画像ベースの類似商品を下げる。 （v1と比較して報告結果に応じて特定バージョンをdeprecatedさせる予定）",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}/similar": {
      "get": {
        "summary": "get image based similar product",
        "operationId": "getImageBasedSimilarProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "minRating",
            "required": true,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          },
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "- 画像ベースの類似商品を下げる.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}/outfit": {
      "get": {
        "summary": "get image based outfit product",
        "operationId": "getImageBasedOutfitProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "minRating",
            "required": true,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          },
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "- 画像ベースのコーディネート商品を下げる.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/hotDeals/products": {
      "get": {
        "summary": "get hotDeal products",
        "operationId": "getHotDealProducts",
        "tags": [
          "hotDeal"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "- hot deal products - クイーンイット即時割引が適用された場合、`ProductDto`ですぐに割引が適用された金額を表示する - 影響を受けるフィールド: `finalPrice`, `discountPercentage`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/recommendations/categories": {
      "get": {
        "summary": "get recommended product categories",
        "operationId": "getRecommendationCategories",
        "tags": [
          "recommendation"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "recommendation categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCategoryDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/recommendations/categories/{categoryId}/products": {
      "get": {
        "summary": "get recommended products",
        "operationId": "getRecommendedProductsByCategory",
        "tags": [
          "recommendation"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "- recommended products - クイーンイット即時割引が適用された場合、`ProductDto`で即時割引が適用された金額を表示する - 影響を受けるフィールド: `finalPrice`, `discountPercentage`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/recommendations/products": {
      "get": {
        "summary": "get recommended products",
        "operationId": "getRecommendedProducts",
        "tags": [
          "recommendation"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "- recommended products - クイーンイット即時割引が適用された場合、`ProductDto`で即時割引が適用された金額を表示する - 影響を受けるフィールド: `finalPrice`, `discountPercentage`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tag-groups": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TagTypeEnum"
            }
          }
        ],
        "summary": "get tag-groups by type",
        "description": "パラメータに応じたタググループ情報を取得します",
        "operationId": "getTagGroups",
        "tags": [
          "tag"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "タググループリスト",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagGroupListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/TagTypeEnum"
            }
          },
          {
            "in": "query",
            "name": "groupId",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "summary": "get tags",
        "description": "タグ情報を取得.",
        "operationId": "getTags",
        "tags": [
          "tag"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "条件に応じたタグ情報を取得します.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}/release-estimate": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product estimate release at",
        "operationId": "getProductEstimateRelease",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product estimate release（商品予想出荷日）照会成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReleaseEstimateDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/products/{productId}/page": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "upload product page",
        "operationId": "uploadProductPage",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadProductPageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to upload"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/products/{productId}": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product",
        "operationId": "getProduct",
        "description": "（ can&#39;t find product -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- product - クイーンイット即時割引が適用された場合、`ProductDto`で即時割引が適用された金額を表示する - 影響を受けるフィールド: `finalPrice`, `discountPercentage`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/products/{productId}/personal": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get personal product",
        "description": "（ can&#39;t find product -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "getPersonalProduct",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- クイーンイット即時割引が適用された場合、`ProductDto`ですぐに割引が適用された金額を表示する - 影響を受けるフィールド: `finalPrice`, `discountPercentage`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalProductDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/products/{productId}/items": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product items",
        "operationId": "getProductItems",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product items（商品オプション）リストの検索に成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductItemListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/products/{productId}/item-availabilities": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product item availability list",
        "description": "該当する商品の商品オプションの購入可能性のリストを返します。",
        "operationId": "getProductItemAvailabilityList",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "商品オプションの購入可能性のリスト",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductItemAvailabilityDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/users/birth-year": {
      "post": {
        "summary": "save of birth year for user",
        "description": "save of birth year in user profile",
        "operationId": "saveUserBirthYear",
        "tags": [
          "userProfile"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBirthYearDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "saved birth year of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBirthYearDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/body-size": {
      "post": {
        "summary": "save of body size for user",
        "description": "save of body size",
        "operationId": "saveUserBodySize",
        "tags": [
          "userProfile"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBodySizeDataDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "saved body size of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBodySizeDataDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/profile": {
      "get": {
        "summary": "get user profile",
        "description": "（ can&#39;t find user profile -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "getUserProfile",
        "tags": [
          "userProfile"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "user profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/delivery-addresses": {
      "get": {
        "summary": "get user delivery addresses",
        "description": "ユーザーの完全な配送先リストを取得します(`retrievedAt`の順に並べ替えられます)",
        "operationId": "getUserDeliveryAddresses",
        "tags": [
          "userProfile"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "user delivery address list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDeliveryAddressDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "add user delivery address",
        "description": "- ユーザーの配送先情報を追加するか、 `retrievedAt`を更新します - 登録されている配送先リストのうち、住所と配送リクエストが同じ場合にのみ更新します",
        "operationId": "addUserDeliveryAddress",
        "tags": [
          "userProfile"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDeliveryAddressAddRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to add user delivery address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeliveryAddressDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tier": {
      "get": {
        "summary": "get user&#39;s tier",
        "operationId": "getTier",
        "tags": [
          "tier"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "get user&#39;s tier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TierDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tier/next": {
      "get": {
        "summary": "get user&#39;s next tier information",
        "operationId": "getNextTierInfo",
        "tags": [
          "tier"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "get user&#39;s next tier information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NextTierInfoDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/images/{imageCategory}/uploadable-url": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "imageCategory",
          "schema": {
            "$ref": "#/components/schemas/ImageCategoryEnum"
          }
        },
        {
          "in": "query",
          "required": true,
          "name": "filename",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "generate uploadable url to upload images for login user",
        "operationId": "generateImageUploadableUrl",
        "tags": [
          "image"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "uploadable image url",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadableImageResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "imageCategory",
            "schema": {
              "$ref": "#/components/schemas/ImageCategoryEnum"
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "filename",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/images/{imageCategory}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "imageCategory",
          "schema": {
            "$ref": "#/components/schemas/ImageCategoryEnum"
          }
        }
      ],
      "post": {
        "deprecated": true,
        "description": "(deprecated) please use generateImageUploadableUrl instead of this api",
        "summary": "upload images for login user",
        "operationId": "uploadImage",
        "tags": [
          "image"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "image"
                ],
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "upload image",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadImageResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "imageCategory",
            "schema": {
              "$ref": "#/components/schemas/ImageCategoryEnum"
            }
          }
        ]
      }
    },
    "/images/{imageCategory}/base64": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "imageCategory",
          "schema": {
            "$ref": "#/components/schemas/ImageCategoryEnum"
          }
        }
      ],
      "post": {
        "summary": "upload images as base 64 for login user",
        "operationId": "uploadImageBase64",
        "tags": [
          "image"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Base64ImageUploadRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "upload image as base64",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadImageResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "imageCategory",
            "schema": {
              "$ref": "#/components/schemas/ImageCategoryEnum"
            }
          }
        ]
      }
    },
    "/products/{productId}/reviews": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product reviews",
        "operationId": "getProductReviews",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "product reviews",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayProductReviewListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}/reviews/v2": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product reviews v2",
        "operationId": "findProductReviews",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "sortOrder",
            "schema": {
              "$ref": "#/components/schemas/ProductReviewSortOrderEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "product reviews",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayProductReviewListDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}/reviews/representatives": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get representative product reviews",
        "operationId": "getRepresentativeProductReviews",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "representative product reviews",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepresentativeProductReviewListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/reviews/{reviewId}": {
      "parameters": [
        {
          "in": "path",
          "name": "reviewId",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "put": {
        "summary": "update product review",
        "description": "本人の商品評価を修正します。 - RESOURCE_NOT_FOUND：reviewIdに対応する評価が見つからない場合 - ACCESS_DENIED：他人の評価を編集しようとしたとき",
        "operationId": "updateProductReview",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductReviewRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "updated product review",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReviewDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "reviewId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/products/items/{productItemId}/review": {
      "parameters": [
        {
          "in": "path",
          "name": "productItemId",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "orderLineId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "create product review",
        "operationId": "createProductReview",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductReviewDataDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to create product review",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReviewDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "productItemId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "orderLineId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/reviews/{reviewId}": {
      "parameters": [
        {
          "in": "path",
          "name": "reviewId",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "get": {
        "summary": "get product review",
        "operationId": "getProductReview",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product review",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayProductReviewDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "reviewId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ]
      },
      "delete": {
        "summary": "delete product review",
        "operationId": "deleteProductReview",
        "description": "本人の商品評価を削除します。 - RESOURCE_NOT_FOUND：reviewIdに対応する評価が見つからない場合 - ACCESS_DENIED：他人の評価を編集しようとしたとき",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to delete product review"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "reviewId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/reviews/{reviewId}/favorites": {
      "parameters": [
        {
          "in": "path",
          "name": "reviewId",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "post": {
        "summary": "favorites product review",
        "operationId": "favoritesProductReview",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "204": {
            "description": "success to favorites product review"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "reviewId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ]
      },
      "delete": {
        "summary": "delete favorites product review",
        "operationId": "deleteFavoritesProductReview",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to delete favorites product review"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "reviewId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/user/reviews": {
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "summary": "get created product reviews of user",
        "operationId": "getMyProductReviews",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "created product reviews of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyProductReviewListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/review-candidates": {
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "summary": "get created product reviews of user",
        "operationId": "getMyProductReviewCandidates",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product review candidates",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReviewCandidateListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/reviews/creatable-count": {
      "get": {
        "summary": "get count creatable product review of user",
        "operationId": "countCreatableProductReviewOfUser",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "number of creatable product review of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LongDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/reviews/created-count": {
      "get": {
        "summary": "get count created product review of user",
        "operationId": "countCreatedProductReviewOfUser",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "number of created product review of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LongDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/reviews/exist": {
      "get": {
        "summary": "check user&#39;s review exist",
        "operationId": "checkExistProductReviewOfUser",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "flag of does user created review before",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequiredBooleanDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/reviews/accumulable-point": {
      "get": {
        "summary": "get user&#39;s accumulable point amount of review creation",
        "operationId": "getAccumulablePointProductReviewCreationOfUser",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "accumulable point amount of when user created total creatable review",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequiredLongDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}/reviews/statistics/summary": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product review statistics summary",
        "operationId": "getProductReviewStatisticsSummary",
        "tags": [
          "reviewStatistics"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product review statistics summary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReviewStatisticsSummaryDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/products/{productId}/reviews/statistics/size": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product review size statistics",
        "operationId": "getProductSizeStatistics",
        "tags": [
          "reviewStatistics"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product review size statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSizeStatisticsDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/products/{productId}/reviews/statistics/brightness": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product review brightness statistics",
        "operationId": "getProductBrightnessStatistics",
        "tags": [
          "reviewStatistics"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product review brightness statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductBrightnessStatisticsDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/products/{productId}/reviews/statistics/color-sense": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product review color-sense statistics",
        "operationId": "getProductColorSenseStatistics",
        "tags": [
          "reviewStatistics"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product review color-sense statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductColorSenseStatisticsDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/products/{productId}/reviews/statistics/thickness": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product review thickness statistics",
        "operationId": "getProductThicknessStatistics",
        "tags": [
          "reviewStatistics"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product review thickness statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductThicknessStatisticsDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/categories/{categoryId}/attributes": {
      "parameters": [
        {
          "in": "path",
          "name": "categoryId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get category&#39;s attributes",
        "operationId": "getProductCategoryAttributes",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product category attributes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryReviewAttributeDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/reviews/{reviewId}/reports": {
      "parameters": [
        {
          "in": "path",
          "name": "reviewId",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "post": {
        "summary": "report product review",
        "description": "(can&#39;t report twice -&gt; ApiErrorResponseCode.REVIEW_REPORTED_TWICE) (reporter uid and review uid can&#39;t be same -&gt; ApiErrorResponseCode.REVIEW_REPORTED_BY_SELF)",
        "operationId": "reportProductReview",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to report product review"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "reviewId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/home/categories": {
      "get": {
        "summary": "get product categories in home screen",
        "operationId": "getHomeProductCategories",
        "tags": [
          "home"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product categories in home screen",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeProductCategoryDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/categories": {
      "get": {
        "summary": "get all categories with displaying products",
        "operationId": "getDisplayingCategories",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "return all categories with displaying products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCategoryDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "summary": "get top product categories",
        "operationId": "getTopProductCategories",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "withAllCategory",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "product categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCategoryDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/categories/{categoryId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "categoryId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get inner product categories",
        "operationId": "getInnerProductCategories",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "inner product categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCategoryDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/categories/{categoryId}/products": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "categoryId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get categorized products",
        "operationId": "getCategorizedProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "- categorized products - クイーンイット即時割引が適用される場合、`ProductDto`で即時割引が適用された金額を表示する - 影響を受けるフィールド: `finalPrice`, `discountPercentage`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/age-group-filters": {
      "get": {
        "summary": "get all filters of age group.",
        "operationId": "getAgeGroupFilters",
        "tags": [
          "ageGroup"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "all age group filters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeGroupFilterListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brands": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "get all brands",
        "operationId": "getAllBrands",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "brands",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrandDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brands/{brandId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "brandId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get brand detail",
        "description": "（ can&#39;t find brand -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "getBrandDetail",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "ブランドの詳細",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandDetailDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "brandId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/brands/{brandId}/categories": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "brandId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get brand categories",
        "operationId": "getBrandCategories",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "ブランドカテゴリ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCategoryDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "brandId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/brands/{brandId}/categories/{categoryId}/products": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "brandId",
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "categoryId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get categorized brand products",
        "operationId": "getBrandProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "brandId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "- categorized products - クイーンイット即時割引が適用される場合、`ProductDto`で即時割引が適用された金額を表示する - 影響を受けるフィールド: `finalPrice`, `discountPercentage`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/carts": {
      "post": {
        "summary": "add to cart",
        "operationId": "addToCart",
        "tags": [
          "cart"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToCartRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to add to cart",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToCartResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "get cart items",
        "operationId": "getCartItems",
        "tags": [
          "cart"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- cart items - クイーンイット即時割引が適用された場合、`ProductDto`ですぐに割引が適用された金額を表示する - 影響を受けるフィールド: `finalPrice`, `discountPercentage`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CartItemGroupDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/carts/{cartItemId}": {
      "delete": {
        "summary": "delete cart item",
        "operationId": "deleteCartItem",
        "tags": [
          "cart"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cartItemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success to delete cart item"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/carts/delete": {
      "post": {
        "summary": "delete cart items",
        "operationId": "deleteCartItems",
        "tags": [
          "cart"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCartItemsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to delete cart items"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/carts/rearrange": {
      "post": {
        "summary": "rearrange cart items for quantity constraint",
        "operationId": "rearrangeCartItems",
        "tags": [
          "cart"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- polish cart items - クイーンイット即時割引が適用された場合、`ProductDto`で即時割引が適用された金額を表示する - 影響を受けるフィールド: `finalPrice`, `discountPercentage`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CartItemGroupDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/carts/{cartItemId}/quantity/{quantity}": {
      "post": {
        "summary": "update cart item quantity",
        "operationId": "updateCartItemQuantity",
        "tags": [
          "cart"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cartItemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "path",
            "name": "quantity",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success to update cart item quantity"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "get my order histories",
        "operationId": "getMyOrders",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "order detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrderHistoryListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "start order for cart items",
        "description": "（ count of order line to order exceeds limit -&gt; ApiErrorResponseCode.ORDER_LINE_COUNT_LIMIT_PER_ORDER_EXCEEDED ） ( order unavailable product item exists -&gt; ApiErrorResponseCode.ORDER_UNAVAILABLE_PRODUCT_ITEM )",
        "operationId": "startOrder",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartOrderRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "product purchase material",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPurchaseMaterialDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "start order with adding cart items",
        "description": "（ count of order line to order exceeds limit -&gt; ApiErrorResponseCode.ORDER_LINE_COUNT_LIMIT_PER_ORDER_EXCEEDED ） ( order unavailable product item exists -&gt; ApiErrorResponseCode.ORDER_UNAVAILABLE_PRODUCT_ITEM )",
        "operationId": "startOrderFromAdding",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartOrderFromAddingRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "product purchase material",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPurchaseMaterialDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orders/wait-for-deposit/exist": {
      "get": {
        "summary": "whether exist order of waiting for deposit",
        "operationId": "existOrdersOfWaitingForDeposit",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "whether exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{orderId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "orderId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get order history",
        "description": "（ can&#39;t find order -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "getMyOrder",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "order detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrderHistoryDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "orderId",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "summary": "abort order",
        "description": "（ can&#39;t find order -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "abortOrderById",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "orderId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "restoreCartItems",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result order data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{orderId}/purchase-material": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "orderId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get order purchase material",
        "description": "リフレッシュまたはネットワークの紛失に備えて、「決済完了前注文」の決済情報（「purchaseMaterial」）を再インポートするAPI",
        "operationId": "getOrderPurchaseMaterial",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product purchase material",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPurchaseMaterialDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "orderId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/orders/{orderId}/lines/{orderLineId}/confirm-receipt": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "orderId",
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "orderLineId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "confirm order line receipt",
        "description": "- orderlineについて購入確定進行 - 配送完了状態でのみ確定可能要求された) / `CONFIRMED` (承認済み) 状態の OLC/OLR チケットが存在する場合 -&gt; まだ処理されていない OLC/OLR チケットが存在する場合 - `CAN_ONLY_CONFIRM_RECEIPT_OF_PAID_ORDER_LINE (7002)`中の注文ラインは購入確定が不可能 - CANNOT_CONFIRM_RECEIPT_WHEN_DELIVERY_NOT_COMPLETE（7003）",
        "operationId": "confirmOrderLineReceipt",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to confirm receipt"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "orderId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "orderLineId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/orders/purchases/{purchaseId}/point": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "apply point",
        "description": "( can&#39;t find order -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ) ( can&#39;t apply point -&gt; ApiErrorResponseCode.POINT_NOT_CONSUMABLE ) ( lack of point -&gt; ApiErrorResponseCode.LACK_OF_POINT )",
        "operationId": "applyPointForOrder",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyPointRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to save",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplyPointResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "purchaseId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/orders/purchases/{purchaseId}/coupons/v2": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "delete": {
        "summary": "リリースクーポン",
        "description": "（ can&#39;t find order -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "releaseCouponOfOrderV2",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to release",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseCouponResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "purchaseId",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "post": {
        "summary": "apply coupon",
        "description": "( can&#39;t find order, issued coupon -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ) ( can&#39;t apply coupon -&gt; ApiErrorResponseCode.COUPON_NOT_CONSUMABLE )",
        "operationId": "applyCouponToOrderV2",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyCouponRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to save",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplyCouponResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "purchaseId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/orders/purchases/{purchaseId}/delivery": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "save delivery request",
        "description": "（ can&#39;t find order -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "saveDeliveryRequest",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to update delivery request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderSummaryDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "purchaseId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/orders/{orderId}/delivery-request": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "orderId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "update delivery request before delivery",
        "description": "- 出荷前の注文の配送先を変更します - 発生する可能性のあるエラータイプ - `ApiErrorResponseCode.INVALID_VALUE` - その注文にcancel / return ticket stateが `SUBMITTED`、 `CONFIRMED`状態のチケットが存在する場合 - 支払いは完了しません幽霊呪文の場合 - `ApiErrorResponseCode.RESOURCE_NOT_FOUND` - 呪文が存在しない場合 - `ApiErrorResponseCode.ORDER_ALREADY_DISPATCHED`配送先とは異なる配送地域（ex. 基本配送先 - &gt;書籍間の配送先）に配送先を変更しようとした場合",
        "operationId": "updateDeliveryRequestBeforeDelivery",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to update delivery request"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "orderId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/orders/purchases/{purchaseId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get order history by purchase",
        "description": "（ can&#39;t find order -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "getMyOrderByPurchase",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "order detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "purchaseId",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "summary": "abort order",
        "description": "（ can&#39;t find order -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "abortOrder",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "purchaseId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "restoreCartItems",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success to abort"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "complete order",
        "description": "（ can&#39;t find order -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "completeOrder",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to complete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "purchaseId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/order-line-tickets": {
      "get": {
        "summary": "get order line ticket history",
        "operationId": "getOrderLineTickets",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ticket",
            "schema": {
              "$ref": "#/components/schemas/OrderLineTicketEnum"
            }
          },
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list order line tickets (return or cancel)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrderLineTicketListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/order-line-tickets/count/summary": {
      "get": {
        "summary": "ユーザーの進行中（または最近完了した）である返品/キャンセルチケットを集計します（Myページ表示用）",
        "operationId": "getOrderLineTicketsCountSummary",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "count OLチケット。 (return or cancel)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOLTicketsCountDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/prompts/creatable-review-prompt": {
      "get": {
        "summary": "get creatable review prompt with order line",
        "operationId": "getCreatableReviewPrompt",
        "tags": [
          "prompt"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "creatable review prompt",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatableReviewPromptDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/refund-account": {
      "get": {
        "summary": "get user refund account",
        "operationId": "getUserRefundAccount",
        "tags": [
          "account"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "refund account of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRefundAccountDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "save refund account",
        "operationId": "saveRefundAccount",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundAccountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to save"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{orderId}/lines/cancel": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "orderId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "cancel order item",
        "description": "- 発生する可能性のあるエラー - 「CANNOT_REQUEST_REFUND_AFTER_CONFIRM_RECEIPT (7004)」",
        "operationId": "requestToCancelOrderItem",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OLCRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "order history with created cancel ticket",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "orderId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/orders/{orderId}/lines/cancel/v2": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "orderId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "estimate order item cancellation",
        "operationId": "estimateOrderItemCancellationV2",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PartialOrderItemDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "estimation result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OLCEstimationResultDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "orderId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/orders/{orderId}/lines/cancel/{ticketId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "orderId",
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "ticketId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get order item cancel ticket detail",
        "operationId": "getOrderItemCancelTicket",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "cancel ticket response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderLineCancelTicketWithOrderDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "orderId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "ticketId",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "summary": "withdraw order item cancellation",
        "operationId": "withdrawOrderItemCancelTicket",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "order history with withdrawn ticket",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "orderId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "ticketId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/orders/{orderId}/lines/return": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "orderId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "return order item",
        "description": "- 発生する可能性のあるエラー - 「CANNOT_REQUEST_REFUND_AFTER_CONFIRM_RECEIPT（7004）」 imageUrlsのitemが3つを超える場合",
        "operationId": "requestToReturnOrderItem",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OLRRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "order history with created return ticket",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "orderId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/orders/{orderId}/lines/return/v2": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "orderId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "estimate order item returning",
        "operationId": "estimateOrderItemReturningV2",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OLREstimateRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "estimation result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OLREstimationResultDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "orderId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/orders/{orderId}/lines/return/{ticketId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "orderId",
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "ticketId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get order item return ticket detail",
        "operationId": "getOrderItemReturnTicket",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "return ticket response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderLineReturnTicketWithOrderDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "orderId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "ticketId",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "summary": "withdraw order item returning",
        "operationId": "withdrawOrderItemReturnTicket",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "order history with withdrawn ticket",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "orderId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "ticketId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/purchases/{topic}/{purchaseId}/payments/iamport": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "topic",
          "schema": {
            "$ref": "#/components/schemas/PurchaseTopicEnum"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "start iamport payment for specific purchase",
        "description": "（ can&#39;t find purchase -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "startIamportPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartIamportPaymentRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "iamport payment material",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IamportPaymentMaterialDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "topic",
            "schema": {
              "$ref": "#/components/schemas/PurchaseTopicEnum"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "purchaseId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/purchases/{topic}/{purchaseId}/payments/iamport/merchantIds/{merchantId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "topic",
          "schema": {
            "$ref": "#/components/schemas/PurchaseTopicEnum"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "merchantId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "finish iamport payment process",
        "description": "（ paid amount does not match -&gt; ApiErrorResponseCode.PAYMENT_NOT_FULLY_PAID ）",
        "operationId": "finishIamportPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to process"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "topic",
            "schema": {
              "$ref": "#/components/schemas/PurchaseTopicEnum"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "purchaseId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "merchantId",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "summary": "abandon iamport payment",
        "description": "（ can&#39;t find purchase -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "abandonIamportPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to process"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "topic",
            "schema": {
              "$ref": "#/components/schemas/PurchaseTopicEnum"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "purchaseId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "merchantId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/purchases/{topic}/{purchaseId}/payments/toss": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "topic",
          "schema": {
            "$ref": "#/components/schemas/PurchaseTopicEnum"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "start toss payment for specific purchase",
        "description": "（ can&#39;t find purchase -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "startTossPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartTossPaymentRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "toss payment material",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TossPaymentMaterialDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "topic",
            "schema": {
              "$ref": "#/components/schemas/PurchaseTopicEnum"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "purchaseId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/purchases/{topic}/{purchaseId}/payments/toss/merchantIds/{merchantId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "topic",
          "schema": {
            "$ref": "#/components/schemas/PurchaseTopicEnum"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "merchantId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "finish toss payment process",
        "description": "（ paid amount does not match -&gt; ApiErrorResponseCode.PAYMENT_NOT_FULLY_PAID ）",
        "operationId": "finishTossPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to process"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "topic",
            "schema": {
              "$ref": "#/components/schemas/PurchaseTopicEnum"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "purchaseId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "merchantId",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "summary": "abandon toss payment",
        "description": "（ can&#39;t find purchase -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "abandonTossPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to process"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "topic",
            "schema": {
              "$ref": "#/components/schemas/PurchaseTopicEnum"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "purchaseId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "merchantId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/purchases/{topic}/{purchaseId}/payments/connect-pay": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "topic",
          "schema": {
            "$ref": "#/components/schemas/PurchaseTopicEnum"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "start connect-pay payment for specific purchase",
        "description": "（ can&#39;t find purchase -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "startConnectPayPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartConnectPayPaymentRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "connect-pay payment material",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectPayPaymentMaterialDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "topic",
            "schema": {
              "$ref": "#/components/schemas/PurchaseTopicEnum"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "purchaseId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/purchases/{topic}/{purchaseId}/payments/connect-pay/merchantIds/{merchantId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "topic",
          "schema": {
            "$ref": "#/components/schemas/PurchaseTopicEnum"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "merchantId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "finish connect-pay payment process",
        "description": "（ paid amount does not match -&gt; ApiErrorResponseCode.PAYMENT_NOT_FULLY_PAID ）",
        "operationId": "finishConnectPayPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to process"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "topic",
            "schema": {
              "$ref": "#/components/schemas/PurchaseTopicEnum"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "purchaseId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "merchantId",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "summary": "abandon connect-pay payment",
        "description": "（ can&#39;t find purchase -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "abandonConnectPayPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to process"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "topic",
            "schema": {
              "$ref": "#/components/schemas/PurchaseTopicEnum"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "purchaseId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "merchantId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/purchases/{topic}/{purchaseId}/payments/dry": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "topic",
          "schema": {
            "$ref": "#/components/schemas/PurchaseTopicEnum"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "start dry-run payment for specific purchase",
        "description": "（ can&#39;t find purchase -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "startDryRunPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "dry run payment material",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DryRunPaymentMaterialDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "topic",
            "schema": {
              "$ref": "#/components/schemas/PurchaseTopicEnum"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "purchaseId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/purchases/{topic}/{purchaseId}/payments/dry/merchantIds/{merchantId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "topic",
          "schema": {
            "$ref": "#/components/schemas/PurchaseTopicEnum"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "merchantId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "finish dry-run payment process",
        "operationId": "finishDryRunPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to process"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "topic",
            "schema": {
              "$ref": "#/components/schemas/PurchaseTopicEnum"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "purchaseId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "merchantId",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "summary": "abandon dry-run payment",
        "description": "（ can&#39;t find purchase -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "abandonDryRunPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to process"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "topic",
            "schema": {
              "$ref": "#/components/schemas/PurchaseTopicEnum"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "purchaseId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "merchantId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/purchases/{topic}/{purchaseId}/payments/free": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "topic",
          "schema": {
            "$ref": "#/components/schemas/PurchaseTopicEnum"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "start free payment for specific purchase",
        "description": "（ can&#39;t find purchase -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "startFreePayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to process"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "topic",
            "schema": {
              "$ref": "#/components/schemas/PurchaseTopicEnum"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "purchaseId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/banners/types/{bannerType}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "bannerType",
          "schema": {
            "$ref": "#/components/schemas/BannerTypeEnum"
          }
        }
      ],
      "get": {
        "summary": "get banners",
        "operationId": "getBanners",
        "tags": [
          "banner"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "バナーリスト",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "bannerType",
            "schema": {
              "$ref": "#/components/schemas/BannerTypeEnum"
            }
          }
        ]
      }
    },
    "/banners/category/{categoryId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "categoryId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get banners for category",
        "operationId": "getCategoryBanners",
        "tags": [
          "banner"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "バナーリスト",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/banners/brand-promotion": {
      "get": {
        "summary": "get banners for brand-promotion",
        "operationId": "getBrandPromotionBanners",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "brandSourcingTagIdOfPromotedChannelGroup",
            "description": "購買チャンネル館グループに対応するブランドソーシングタグのid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "banner"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "バナーリスト",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/banners/brand/{brandId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "brandId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get banner for brand",
        "operationId": "getBrandBanners",
        "tags": [
          "banner"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "バナーリスト",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "brandId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/collections/{collectionId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "collectionId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get collection",
        "description": "（ can&#39;t find collection -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "getCollection",
        "tags": [
          "collection"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- collection - クイーンイット即時割引が適用された場合、`ProductDto`ですぐに割引が適用された金額を表示する - 影響を受けるフィールド: `finalPrice`, `discountPercentage`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "collectionId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/search/products": {
      "get": {
        "summary": "search products",
        "operationId": "searchProducts",
        "tags": [
          "search"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "keyword",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "description": "If orderBy is not given, orderBy would be set MATCHING_SCORE_DESC as a default value.",
            "name": "orderBy",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ProductSearchingOrderByEnum"
            }
          },
          {
            "in": "query",
            "name": "categoryId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "categoryIds",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "brandId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "brandIds",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "minPrice",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "maxPrice",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "description": "フィルタリングする商品属性IDのリスト",
            "required": false,
            "name": "productFeatureIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "deprecated": true,
            "required": false,
            "description": "（DEPRECATED）enabledTotalCount、enabledProductFeatureAggreagtion、enabledProductCategoryAggregation、enabledBrandAggregationを使用してください.",
            "name": "enabledProductAggregation",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "商品集計で総数が必要な場合はtrueに設定します。.",
            "name": "enabledTotalCount",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "商品集計で商品属性別の数が必要な場合はtrueに設定します。.",
            "name": "enabledProductFeatureAggregation",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "商品集計で商品カテゴリ別の数が必要な場合はtrueに設定します。.",
            "name": "enabledProductCategoryAggregation",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "商品集計(aggregation)でブランド別個数が必要な場合はtrueに設定する.",
            "name": "enabledBrandAggregation",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "検索に関連する特定の機能を適用する際に実験に必要なフィールドです。.",
            "name": "keywordSearchExperimentIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "- searched products - クイーンイット即時割引が適用された場合、`AppProductDto`で即時割引が適用された金額を表示する - 影響を受けるフィールド: `finalPrice`, `discountPercentage`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/autocomplete": {
      "get": {
        "summary": "get autocomplete candidates",
        "operationId": "getAutocompleteCandidates",
        "tags": [
          "autocomplete"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "autocomplete query"
          },
          {
            "in": "query",
            "name": "brandSize",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "description": "required brand autocomplete candidate size"
          }
        ],
        "responses": {
          "200": {
            "description": "get autocomplete list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutocompleteResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/couponBooks/{couponBookCode}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "couponBookCode",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get coupon book",
        "description": "（ can&#39;t find coupon book -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "getCouponBook",
        "tags": [
          "coupon"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "クーポンブック",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CouponBookDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "couponBookCode",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/couponBooks/{couponBookCode}/asset": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "couponBookCode",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get coupon book asset",
        "description": "（ can&#39;t find coupon book -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ）",
        "operationId": "getCouponBookAsset",
        "tags": [
          "coupon"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "coupon book asset",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CouponBookAssetDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "couponBookCode",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/couponBooks/{couponBookCode}/coupons": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "couponBookCode",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "issue all coupons in coupon book",
        "description": "( can&#39;t find coupon book -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ) ( there are no coupons could be issued -&gt; ApiErrorResponseCode.COUPON_BOOK_ISSUABLES_NOT_EXIST )",
        "operationId": "issueAllCouponsInCouponBook",
        "tags": [
          "coupon"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "issued coupons by coupon book",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IssuedCouponDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "couponBookCode",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/coupons/displays/products/{productId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "productId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get coupons by display product",
        "operationId": "listDisplayingCouponsForProduct",
        "tags": [
          "coupon"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "get coupons by display product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppCouponDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "productId",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "post": {
        "summary": "issue all coupons by display product",
        "operationId": "issueAllDisplayingCoupons",
        "description": "（ there are no display coupons to issue -&gt; ApiErrorResponseCode.DISPLAYING_COUPONS_ISSUABLE_NOT_EXIST ）",
        "tags": [
          "coupon"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to issue",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IssuedCouponDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "productId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/coupons/displays/products/{productId}/v2": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "productId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get coupons by display product v2",
        "operationId": "listDisplayingCouponsForProductV2",
        "tags": [
          "coupon"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "get coupons by display product v2",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCouponListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "productId",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/coupons/{couponCode}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "couponCode",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get coupon by coupon code",
        "operationId": "getCouponByCode",
        "tags": [
          "coupon"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "クーポン",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CouponDetailDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "couponCode",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "post": {
        "summary": "issue coupon",
        "description": "( cant find coupon -&gt; ApiErrorResponseCode.RESOURCE_NOT_FOUND ) ( coupon is disabled -&gt; ApiErrorResponseCode.COUPON_NOT_ENABLED ) ( before coupon issue begin date -&gt; ApiErrorResponseCode.EGUP_ end date -&gt; ApiErrorResponseCode.COUPON_ISSUE_AFTER_END ) ( exceed max coupon issue count -&gt; ApiErrorResponseCode.COUPON_ISSUE_LIMIT_EXCEEDED ) ( exceed max coupon issue count per user -&gt; ApiErrorResponseCode.COUPON_ISSUE_LIMIT_PER_USER_EXCEEDED ) _TARGET）",
        "operationId": "issueCoupon",
        "tags": [
          "coupon"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to issue"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "couponCode",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/coupons": {
      "get": {
        "summary": "get my issued coupons",
        "operationId": "getIssuedCoupons",
        "tags": [
          "coupon"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "issued coupons",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IssuedCouponDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/coupons/first-kakao-login/issuable": {
      "get": {
        "summary": "check current user can issue first kakao login coupon",
        "operationId": "checkFirstKakaoLoginCouponIssueable",
        "tags": [
          "coupon"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "check first kakao login coupon is issuable with current user&#39;s phone number",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckFirstKakaoLoginCouponIssuableResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/shop-live/authorize": {
      "post": {
        "summary": "generate shop live token with username",
        "operationId": "generateShopLiveAccessToken",
        "tags": [
          "shopLive"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopLiveTokenRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to generate shop live token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopLiveTokenResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/shop-live/campaigns/upcoming": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "includeOnAir",
            "description": "現在進行中の放送情報がある場合は、このキャンペーンの情報を取得するかどうか。 falseの場合、現在以降の予定された放送情報のみを照会",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "includePrivate",
            "description": "集めて非公開に設定したキャンペーンの情報も表示するかどうか",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "summary": "現在以降の最も近い時間に予定されている放送または（条件に応じて）現在進行中の放送がある場合は、その放送の情報を返します",
        "operationId": "getUpcomingCampaign",
        "tags": [
          "shopLive"
        ],
        "responses": {
          "200": {
            "description": "success to get upcoming campaign info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopLiveCampaignResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/shop-live/campaigns/{campaignKey}/metadata": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "campaignKey",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "resolutionLevel",
            "description": "解像度レベル",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "summary": "個別放送（キャンペーン）のステータス、ライブストリームURLなどの要約情報を照会",
        "operationId": "getCampaignMetadata",
        "tags": [
          "shopLive"
        ],
        "responses": {
          "200": {
            "description": "success to get campaign metadata",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopLiveCampaignMetadataResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/points": {
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "cursor",
            "description": "epochSeconds",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pointType",
            "description": "獲得タイプ / null = フル照会",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PointAmountTypeEnum"
            }
          }
        ],
        "summary": "ユーザーの入金履歴を照会します.",
        "operationId": "getPointHistory",
        "tags": [
          "point"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to get point hisotry",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PointHistoryBundleResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/points/now-usable": {
      "get": {
        "summary": "ユーザーの現在利用可能な入金を確認します.",
        "operationId": "getNowUsablePoint",
        "tags": [
          "point"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to get now usable point",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NowUsablePointDto"
                }
              }
            }
          }
        }
      }
    },
    "/points/promotions/{code}/attend": {
      "put": {
        "summary": "積立金プロモーションイベントに参加.",
        "operationId": "attendPromotion",
        "tags": [
          "point"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "code",
            "description": "プロモーションコード",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success to attend promotion"
          }
        }
      },
      "get": {
        "summary": "獲得金プロモーションイベントに参加するかどうかを確認します.",
        "operationId": "getAttendPromotionState",
        "tags": [
          "point"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "code",
            "description": "プロモーションコード",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success to query attend promotion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionAttendedStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/product-rankings/{productId}/is-category-best-product": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "productId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "カテゴリーベスト商品であるかどうかの確認",
        "operationId": "findCategoryBestProduct",
        "tags": [
          "productRanking"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to get category best product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryBestProductDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/referral/code": {
      "get": {
        "summary": "招待コード照会 API",
        "description": "referrer の招待コードを返します。最初の要求時に生成後に返す.",
        "operationId": "getReferralCode",
        "tags": [
          "referral"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "おすすめコード",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralCodeDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/referral/user/reward/policy": {
      "get": {
        "summary": "ユーザー招待報酬ポリシー照会API",
        "operationId": "getUserReferralPolicy",
        "tags": [
          "referral"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "ユーザー招待報酬ポリシー照会結果",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReferralRewardPolicyDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/referral/user-referral/summary": {
      "get": {
        "summary": "ユーザー招待要約情報照会API",
        "operationId": "getUserReferralSummary",
        "tags": [
          "referral"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "ユーザー招待の概要について",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReferralSummaryDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/referral/user-referral/bonus-box/open": {
      "post": {
        "summary": "ユーザーリファレンスで獲得したボーナスボックスを獲得するAPI",
        "description": "ユーザーリファレンスボーナスボックスを1つ開くAPI",
        "operationId": "openUserReferralBonusBox",
        "tags": [
          "referral"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "ボーナスボックスオープン結果",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReferralBonusBoxOpenResultDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/referral/user/reward/summary": {
      "get": {
        "summary": "ユーザー招待報酬サマリー情報照会API - &gt; `getUserReferralSummary`を使用する",
        "operationId": "getUserReferralRewardSummary",
        "deprecated": true,
        "tags": [
          "referral"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "ユーザー招待を受けた累積報酬の照会結果",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReferralRewardSummaryDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/referral/user/reward/estimate": {
      "post": {
        "summary": "ユーザー推奨報酬予想API",
        "description": "- 推薦者が報酬で得られるポイント予想結果を照会するAPI(最大50個処理)",
        "operationId": "estimateUserReferralRewards",
        "tags": [
          "referral"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserReferralRewardEstimationRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "referrer が受け取ることができる招待報酬リスト",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReferralRewardEstimationListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/referral/user": {
      "post": {
        "summary": "ユーザー推奨API",
        "operationId": "createUserReferral",
        "tags": [
          "referral"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserReferralRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ユーザー推奨成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserReferralResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/referral/user/referred-user-join": {
      "post": {
        "summary": "おすすめのユーザー登録完了API",
        "operationId": "joinReferredUser",
        "description": "推奨されたユーザーがreferral linkを介して購読完了後にそのAPIを呼び出す",
        "tags": [
          "referral"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinReferredUserRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "おすすめユーザー登録成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JoinReferredUserResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/referral/product": {
      "post": {
        "summary": "推奨商品購入完了API",
        "operationId": "createProductReferral",
        "tags": [
          "referral"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductReferralRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "商品紹介リンクを介して商品購入時にProductReferralを生成するAPIです。."
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/games": {
      "get": {
        "summary": "現在進行中のゲームのリスト",
        "operationId": "getGameList",
        "tags": [
          "gamification"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "ゲームリスト",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActiveGameListResponse"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/games/{gameId}": {
      "parameters": [
        {
          "in": "path",
          "name": "gameId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "ユーザーゲーム情報の照会",
        "operationId": "getGameProgressInfo",
        "tags": [
          "gamification"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "ユーザーゲーム情報",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameUserProgressInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "gameId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "post": {
        "summary": "一次財消費",
        "operationId": "useInGameCredit",
        "tags": [
          "gamification"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameUseInGameCreditRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ユーザーゲーム情報",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameUserProgressInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "gameId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/games/{gameId}/achieve": {
      "parameters": [
        {
          "in": "path",
          "name": "gameId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "ゲームクリア報酬獲得",
        "operationId": "achieveGame",
        "tags": [
          "gamification"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameAchieveRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "ゲームクリア完了"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "gameId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/games/{gameId}/missions": {
      "parameters": [
        {
          "in": "path",
          "name": "gameId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "ミッションリストとミッション進捗状況の確認",
        "operationId": "getMissions",
        "tags": [
          "gamification"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "ミッションリストとミッション進捗状況",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameMissionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "gameId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "post": {
        "summary": "ミッション完了リクエスト",
        "operationId": "achieveMission",
        "tags": [
          "gamification"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameMissionAchieveRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "ミッション完了"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "gameId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/games/{gameId}/missions/{missionId}": {
      "parameters": [
        {
          "in": "path",
          "name": "gameId",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "missionId",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "post": {
        "summary": "ミッション報酬の受領",
        "operationId": "receiveReward",
        "tags": [
          "gamification"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "ミッション報酬",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameMissionRewardReceiveResponse"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "gameId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "missionId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/categories/{categoryId}/review-guide": {
      "parameters": [
        {
          "in": "path",
          "name": "categoryId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get category&#39;s review guide",
        "operationId": "getProductCategoryReviewGuide",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product category review guide",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryReviewGuideDataDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/style-shots": {
      "get": {
        "summary": "get all style shots",
        "operationId": "getAllStyleShots",
        "tags": [
          "styleShot"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "categoryId",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "header",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get all style shots",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StyleShotListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/style-shots/{id}": {
      "get": {
        "summary": "get style shot by id",
        "operationId": "getStyleShotById",
        "tags": [
          "styleShot"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get style shot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StyleShotDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/style-shots/categories": {
      "get": {
        "summary": "get all style category",
        "operationId": "getAllStyleCategory",
        "tags": [
          "styleShot"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "get all style category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StyleCategoryListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/style-shots/{id}/equipped-products": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "get equipped product list by product item ids",
        "description": "スタイルショットIDで着用商品を見る",
        "operationId": "getEquippedProductListByStyleShotId",
        "tags": [
          "styleShot"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- products and product items (unique and not ordered) by product item ids - クイーンイット即時割引が適用された場合 `ProductDto` で即割引が適用された金額を表示する - 影響を受けるフィールド: `finalPrice`, `discountPercentage`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EquippedProductListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}/delivery-prediction": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "get delivery completed prediction dates and probability by product id",
        "description": "ProductIdを介して予想配送完了時点データを照会します.",
        "operationId": "getDeliveryPrediction",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- get delivery completed expectation data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryPredictionListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}/purchase-measurements-statistics": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "productId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "get purchase measurements statistics by product id",
        "description": "商品IDによる購入統計の表示",
        "operationId": "getPurchaseMeasurementsStatistics",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- get purchase measurements statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseMeasurementsStatisticsListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}/purchase-measurements": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "productId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "get purchase measurements by product id(limit 5)",
        "description": "商品IDによる購入統計の照会（行データ）",
        "operationId": "getPurchaseMeasurements",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- get purchase measurements",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseMeasurementsDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/attendance-checks/{id}/histories": {
      "get": {
        "summary": "get attendance check histories",
        "operationId": "getAttendanceCheckHistories",
        "tags": [
          "attendanceCheck"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "description": "出席チェックID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get attendance check histories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttendanceCheckHistoryListDto"
                }
              }
            }
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/attendance-checks/{id}/attend": {
      "post": {
        "summary": "attend attendance check",
        "description": "- 既出席時エラーコード: ALREADY_EXISTS(1) - 出席チェック完了時エラーコード: ATTENDANCE_CHECK_COMPLETED(8001) - イベント終了時エラーコード: RESOURCE_NOT_FOUND(4)",
        "operationId": "attendAttendanceCheck",
        "tags": [
          "attendanceCheck"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "description": "出席チェックID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success to attend attendance check"
          },
          "400": {
            "description": "failed to get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BooleanDto": {
        "type": "object",
        "description": "to overcome oag bug that primitive api response does not converted from string in TS.",
        "properties": {
          "value": {
            "type": "boolean"
          }
        }
      },
      "RequiredLongDto": {
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "LongDto": {
        "type": "object",
        "description": "to overcome oag bug that primitive api response does not converted from long in TS.",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "LongRangeDto": {
        "type": "object",
        "properties": {
          "min": {
            "type": "integer",
            "format": "int64"
          },
          "max": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RequiredBooleanDto": {
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "boolean"
          }
        }
      },
      "MetadataDto": {
        "type": "object",
        "required": [
          "version",
          "serverStatus"
        ],
        "properties": {
          "version": {
            "$ref": "#/components/schemas/VersionDto"
          },
          "serverStatus": {
            "$ref": "#/components/schemas/ServerStatusDto"
          }
        }
      },
      "VersionDto": {
        "type": "object",
        "required": [
          "minVersion",
          "minBuildNumber"
        ],
        "properties": {
          "minVersion": {
            "type": "string",
            "description": "minimum required version to show"
          },
          "minBuildNumber": {
            "type": "integer",
            "format": "int32",
            "description": "minimum required build number"
          },
          "updateUrl": {
            "type": "string",
            "description": "update url"
          }
        }
      },
      "BestPeriodEnum": {
        "oneOf": [
          {
            "const": "DAILY"
          },
          {
            "const": "WEEKLY"
          },
          {
            "const": "MONTHLY"
          }
        ]
      },
      "ProductTagEnum": {
        "oneOf": [
          {
            "const": "SHOPPING_MALL"
          },
          {
            "const": "DISCOUNT_PROMOTION"
          }
        ],
        "description": "商品タグ情報。 SHOPPING_MALL -&gt;ショッピングモールの商品DISCOUNT_PROMOTION -&gt;特価商品"
      },
      "AgeGroupCodeEnum": {
        "oneOf": [
          {
            "const": "AG0"
          },
          {
            "const": "AG1"
          },
          {
            "const": "AG2"
          },
          {
            "const": "AG3"
          },
          {
            "const": "AG4"
          },
          {
            "const": "AG5"
          },
          {
            "const": "AG6"
          }
        ],
        "description": "年齢コード。ノッションノート - &gt; https://www.notion.so/rapportlabs/5d323300ed8a457da25b889fdc9c986c"
      },
      "ServerStatusDto": {
        "type": "object",
        "required": [
          "serverState"
        ],
        "properties": {
          "serverState": {
            "$ref": "#/components/schemas/ServerStateEnum"
          },
          "serverMaintenanceReason": {
            "type": "string",
            "description": "server maintenance reason"
          },
          "serverMaintenanceStartedAtMillis": {
            "type": "integer",
            "format": "int64",
            "description": "server maintenance start time"
          },
          "serverMaintenanceEndedAtMillis": {
            "type": "integer",
            "format": "int64",
            "description": "server maintenance end time"
          }
        }
      },
      "PlatformEnum": {
        "oneOf": [
          {
            "const": "ANDROID"
          },
          {
            "const": "IOS"
          }
        ]
      },
      "ServerStateEnum": {
        "oneOf": [
          {
            "const": "OPERATIONAL"
          },
          {
            "const": "MAINTENANCE"
          }
        ],
        "description": "server status enum"
      },
      "SendVerifCodeRequestDto": {
        "type": "object",
        "required": [
          "phoneNumber"
        ],
        "properties": {
          "phoneNumber": {
            "type": "string",
            "description": "phone number to send verif code"
          }
        }
      },
      "SendVerifCodeResponseDto": {
        "type": "object",
        "required": [
          "verifyingToken",
          "expirationMillis"
        ],
        "properties": {
          "verifyingToken": {
            "type": "string"
          },
          "expirationMillis": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "VerifyCodeRequestDto": {
        "type": "object",
        "required": [
          "verifyingToken",
          "verifCode"
        ],
        "properties": {
          "verifyingToken": {
            "type": "string"
          },
          "verifCode": {
            "type": "string"
          }
        }
      },
      "VerifyCodeResponseDto": {
        "type": "object",
        "required": [
          "verifiedToken"
        ],
        "properties": {
          "verifiedToken": {
            "type": "string"
          }
        }
      },
      "VerifyKakaoTokenRequestDto": {
        "type": "object",
        "required": [
          "kakaoAccessToken",
          "phoneNumber"
        ],
        "properties": {
          "kakaoAccessToken": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "VerifyKakaoTokenResponseDto": {
        "type": "object",
        "required": [
          "verifiedToken"
        ],
        "properties": {
          "verifiedToken": {
            "type": "string"
          }
        }
      },
      "SignUpRequestDto": {
        "type": "object",
        "required": [
          "verifiedToken"
        ],
        "properties": {
          "verifiedToken": {
            "type": "string"
          }
        }
      },
      "SignUpResponseDto": {
        "type": "object",
        "required": [
          "firebaseToken"
        ],
        "properties": {
          "firebaseToken": {
            "type": "string"
          }
        }
      },
      "DamoaTokenDto": {
        "type": "object",
        "required": [
          "accessToken",
          "refreshToken"
        ],
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "1時間後に期限切れ"
          },
          "refreshToken": {
            "type": "string",
            "description": "180日後に期限切れ"
          }
        }
      },
      "DamoaTokenRefreshRequestDto": {
        "type": "object",
        "required": [
          "refreshToken"
        ],
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "LoginAccountDto": {
        "type": "object",
        "required": [
          "uid",
          "userRole",
          "createdAtMillis",
          "isKakaoLoginUser"
        ],
        "properties": {
          "uid": {
            "type": "string"
          },
          "userRole": {
            "$ref": "#/components/schemas/UserRoleEnum"
          },
          "createdAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "phoneNumber": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "isKakaoLoginUser": {
            "type": "boolean"
          }
        }
      },
      "FirebaseAuthUserMigrationRequest": {
        "type": "object",
        "required": [
          "accessToken"
        ],
        "properties": {
          "accessToken": {
            "type": "string"
          }
        }
      },
      "ProviderTypeEnum": {
        "oneOf": [
          {
            "const": "SMS"
          },
          {
            "const": "KAKAO"
          }
        ]
      },
      "UserRoleEnum": {
        "oneOf": [
          {
            "const": "ANONYMOUS"
          },
          {
            "const": "IDENTIFIED_USER"
          }
        ]
      },
      "BestBrandListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BestBrandDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "BestBrandDto": {
        "type": "object",
        "required": [
          "id",
          "name",
          "logo"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "$ref": "#/components/schemas/BrandLogoDto"
          },
          "bestProducts": {
            "$ref": "#/components/schemas/BestProductListOfBrandDto"
          }
        }
      },
      "BestProductListOfBrandDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BestProductOfBrandDto"
            }
          }
        }
      },
      "BestProductOfBrandDto": {
        "type": "object",
        "required": [
          "title",
          "productId",
          "thumbnailUrl",
          "multiResolutionThumbnail",
          "finalPrice"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "thumbnailUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionThumbnail": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "finalPrice": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TagListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "description": "タグリスト",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagDto"
            }
          }
        }
      },
      "TagDto": {
        "type": "object",
        "required": [
          "id",
          "name",
          "type"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "description": "tagの名前",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/TagTypeEnum"
          }
        }
      },
      "TagTypeEnum": {
        "oneOf": [
          {
            "const": "BRAND_SOURCING"
          },
          {
            "const": "PRODUCT"
          }
        ],
        "description": "タグ付けできるものの種類。同じグループ名でもタイプが異なる場合は別のグループとして扱う."
      },
      "TagGroupListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "description": "タググループリスト",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagGroupDto"
            }
          }
        }
      },
      "TagGroupDto": {
        "type": "object",
        "required": [
          "id",
          "name",
          "type"
        ],
        "properties": {
          "id": {
            "description": "タグの group id",
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "description": "タグの group name (ex. 生産年度)",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/TagTypeEnum"
          }
        }
      },
      "ProductDto": {
        "type": "object",
        "required": [
          "productId",
          "mallId",
          "mallProductCode",
          "mallName",
          "url",
          "imageUrl",
          "multiResolutionImage",
          "thumbnailUrl",
          "multiResolutionThumbnail",
          "name",
          "finalPrice",
          "discountPercentage",
          "productPriceDetail",
          "brand",
          "rating",
          "salesStatus"
        ],
        "properties": {
          "productId": {
            "type": "string"
          },
          "mallId": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "mallProductCode": {
            "type": "string"
          },
          "mallName": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "logoUrl": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "logo2xUrl": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "logo3xUrl": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "url": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "imageUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionImage": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "thumbnailUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionThumbnail": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "name": {
            "type": "string"
          },
          "originalPrice": {
            "type": "integer",
            "format": "int64"
          },
          "finalPrice": {
            "type": "integer",
            "format": "int64",
            "description": "- `productPriceDetail`での`directCouponAppliedFinalPrice`、ただnullなら`finalPrice`"
          },
          "discountPercentage": {
            "type": "integer",
            "format": "int32",
            "description": "- `originalPrice`コントラスト `finalPrice`コントラスト"
          },
          "productPriceDetail": {
            "$ref": "#/components/schemas/ProductPriceDetailDto"
          },
          "brand": {
            "type": "string"
          },
          "display": {
            "type": "boolean",
            "description": "このフィールド値が `false` の場合 - &gt; 売り切れで表示"
          },
          "reviewRatingAvg": {
            "type": "number",
            "format": "double"
          },
          "reviewCount": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "$ref": "#/components/schemas/ProductCategoryDto"
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "deliveryPolicy": {
            "$ref": "#/components/schemas/DeliveryPolicyDto"
          },
          "salesStatus": {
            "$ref": "#/components/schemas/SalesStatusEnum"
          }
        }
      },
      "AppProductDto": {
        "type": "object",
        "required": [
          "productId",
          "mallId",
          "mallProductCode",
          "mallName",
          "url",
          "imageUrl",
          "multiResolutionImage",
          "thumbnailUrl",
          "multiResolutionThumbnail",
          "name",
          "finalPrice",
          "discountPercentage",
          "productPriceDetail",
          "brand",
          "rating",
          "salesStatus",
          "myBodySizesFromItems"
        ],
        "properties": {
          "productId": {
            "type": "string"
          },
          "mallId": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "mallProductCode": {
            "type": "string"
          },
          "mallName": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "imageUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionImage": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "thumbnailUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionThumbnail": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "name": {
            "type": "string"
          },
          "originalPrice": {
            "type": "integer",
            "format": "int64"
          },
          "finalPrice": {
            "type": "integer",
            "format": "int64"
          },
          "discountPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "productPriceDetail": {
            "$ref": "#/components/schemas/ProductPriceDetailDto"
          },
          "brand": {
            "type": "string"
          },
          "display": {
            "type": "boolean",
            "description": "このフィールド値が `false` の場合 - &gt; 売り切れで表示"
          },
          "category": {
            "$ref": "#/components/schemas/ProductCategoryDto"
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "deliveryPolicy": {
            "$ref": "#/components/schemas/DeliveryPolicyDto"
          },
          "salesStatus": {
            "$ref": "#/components/schemas/SalesStatusEnum"
          },
          "reviewRatingAvg": {
            "type": "number",
            "format": "double"
          },
          "reviewCount": {
            "type": "integer",
            "format": "int32"
          },
          "myBodySizesFromItems": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EquippedProductDto": {
        "type": "object",
        "required": [
          "productId",
          "productItem",
          "mallId",
          "mallProductCode",
          "mallName",
          "url",
          "imageUrl",
          "multiResolutionImage",
          "thumbnailUrl",
          "multiResolutionThumbnail",
          "name",
          "finalPrice",
          "discountPercentage",
          "productPriceDetail",
          "brand",
          "rating",
          "salesStatus",
          "favorite"
        ],
        "properties": {
          "productId": {
            "type": "string"
          },
          "productItem": {
            "$ref": "#/components/schemas/ProductItemDto"
          },
          "mallId": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "mallProductCode": {
            "type": "string"
          },
          "mallName": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "logoUrl": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "logo2xUrl": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "logo3xUrl": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "url": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "imageUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionImage": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "thumbnailUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionThumbnail": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "name": {
            "type": "string"
          },
          "originalPrice": {
            "type": "integer",
            "format": "int64"
          },
          "finalPrice": {
            "type": "integer",
            "format": "int64",
            "description": "- `productPriceDetail`での`directCouponAppliedFinalPrice`、ただnullなら`finalPrice`"
          },
          "discountPercentage": {
            "type": "integer",
            "format": "int32",
            "description": "- `originalPrice`コントラスト `finalPrice`コントラスト"
          },
          "productPriceDetail": {
            "$ref": "#/components/schemas/ProductPriceDetailDto"
          },
          "brand": {
            "type": "string"
          },
          "display": {
            "type": "boolean",
            "description": "このフィールド値が `false` の場合 - &gt; 売り切れで表示"
          },
          "reviewRatingAvg": {
            "type": "number",
            "format": "double"
          },
          "reviewCount": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "$ref": "#/components/schemas/ProductCategoryDto"
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "deliveryPolicy": {
            "$ref": "#/components/schemas/DeliveryPolicyDto"
          },
          "salesStatus": {
            "$ref": "#/components/schemas/SalesStatusEnum"
          },
          "favorite": {
            "type": "boolean",
            "default": false,
            "description": "蒸すかどうか"
          }
        }
      },
      "AppAdvertisementProductDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "mallId": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "mallProductCode": {
            "type": "string"
          },
          "mallName": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "imageUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionImage": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "thumbnailUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionThumbnail": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "name": {
            "type": "string"
          },
          "originalPrice": {
            "type": "integer",
            "format": "int64"
          },
          "finalPrice": {
            "type": "integer",
            "format": "int64"
          },
          "discountPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "productPriceDetail": {
            "$ref": "#/components/schemas/ProductPriceDetailDto"
          },
          "brand": {
            "type": "string"
          },
          "display": {
            "type": "boolean",
            "description": "このフィールド値が `false` の場合 - &gt; 売り切れで表示"
          },
          "category": {
            "$ref": "#/components/schemas/ProductCategoryDto"
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "deliveryPolicy": {
            "$ref": "#/components/schemas/DeliveryPolicyDto"
          },
          "salesStatus": {
            "$ref": "#/components/schemas/SalesStatusEnum"
          },
          "reviewRatingAvg": {
            "type": "number",
            "format": "double"
          },
          "reviewCount": {
            "type": "integer",
            "format": "int32"
          },
          "myBodySizesFromItems": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProductPriceDetailDto": {
        "type": "object",
        "description": "- 既存商品に設定された価格と、即時割引が適用された価格などに関する詳細情報を提供するためのdto - `ProductDto`、`AppProductDto`、`FavoriteProductDto`などで確認できる商品価格に関する詳細情報 &gt; クイーンイット即割引が適用なる場合には、既存のdtoで示した商品価格がクイーンイット即割引で上書きされることになる",
        "required": [
          "finalPrice"
        ],
        "properties": {
          "originalPrice": {
            "description": "- 定価 - このフィールドの値が `null` の場合 -&gt; `finalPrice` が定価の意味を一緒に持つようになる",
            "type": "integer",
            "format": "int64"
          },
          "finalPrice": {
            "description": "- 販売価格（実際のユーザーが商品を購入する価格） - クイーンイット即時割引クーポンが適用されていない販売価格情報を表示する - 商品登録時に入力した販売価格を示す - `originalPrice`、 `discountPercentage`フィールド値が `null`場合 - &gt;このフィールドに定価の意味が一緒になる",
            "type": "integer",
            "format": "int64"
          },
          "discountPercentage": {
            "description": "- 割引率 - &gt; `originalPrice`に対する`finalPrice`の比率",
            "type": "integer",
            "format": "int32"
          },
          "originalToDirectCouponDiscountPercentage": {
            "description": "- 割引率 - &gt; `originalPrice`に対する`directCouponAppliedFinalPrice`の比率",
            "type": "integer",
            "format": "int32"
          },
          "finalToDirectCouponDiscountPercentage": {
            "description": "- 割引率 -&gt; `finalPrice`に対する`directCouponAppliedFinalPrice`の比率",
            "type": "integer",
            "format": "int32"
          },
          "directCouponAppliedFinalPrice": {
            "description": "- クイーンイット即時割引クーポンが適用された最終購入価格",
            "type": "integer",
            "format": "int64"
          },
          "originalToMaximumBenefitCouponPricePercentage": {
            "description": "- 割引率 - &gt; `originalPrice`に対する`maximumBenefitCouponAppliedFinalPrice`の割合",
            "type": "integer",
            "format": "int32"
          },
          "finalToMaximumBenefitCouponPricePercentage": {
            "description": "- 割引率 -&gt; `finalPrice`に対する`maximumBenefitCouponAppliedFinalPrice`の比率",
            "type": "integer",
            "format": "int32"
          },
          "maximumBenefitCouponAppliedFinalPrice": {
            "description": "- 最大特典クーポンが適用された最終購入価格 - このフィールドの値が「null」の場合 - &gt;最大特典クーポンが適用されていないと見なす",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SalesStatusEnum": {
        "oneOf": [
          {
            "const": "ACTIVE"
          },
          {
            "const": "ARCHIVED"
          },
          {
            "const": "PERMANENTLY_ARCHIVED"
          }
        ],
        "description": "- `ACTIVE` -&gt;販売中 - 現在継続販売中 - `ARCHIVED` -&gt;販売中止 - 今は販売を中止するが、今後販売される余地があることを示す - `PERMANENTLY_ARCHIVED` -&gt;永久販売停止 - もう販売商品ではないことを示す------------ - 商品の販売状態が「ACTIVE」でない場合、詳細ページに品切れで表示する - 商品オプションの販売状態が「ACTIVE」でない場合- 商品オプションを公開しない（サーバーでフィルタリングして下げる） - ショッピングカートでは売り切れ状態で表す（クライアントで必要）"
      },
      "ProductDiscountApplicationDto": {
        "description": "- 商品に適用または適用可能な割引情報を提供するためのDTO - 現在はDirectCoupon（即時割引クーポン）情報のみ含まれていますが、今後他の割引特典が追加されることにより関連DTOが追加される可能性があります。可能になるため、 `appliedDirectCoupon`はもう使用しないでください、 `appliedDirectCoupons`を使用する必要があります",
        "type": "object",
        "properties": {
          "appliedDirectCoupons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppliedDirectCouponDto"
            }
          },
          "appliedDirectCoupon": {
            "$ref": "#/components/schemas/AppliedDirectCouponDto"
          },
          "maximumDiscountCouponAppliedPrice": {
            "description": "- 最大クーポン割引が適用された価格 - このフィールドの値が「null」の場合 - &gt;最大割引を計算するための条件を満たすクーポンがないと見なす",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AppliedDirectCouponDto": {
        "type": "object",
        "properties": {
          "endAtMillis": {
            "description": "即時割引クーポンの適用が終了した時点を示す",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProductContentsDto": {
        "type": "object",
        "required": [
          "imageUrls",
          "multiResolutionImages",
          "descriptionPageUrl",
          "measurements",
          "classifications"
        ],
        "properties": {
          "imageUrls": {
            "description": "DEPRECATED",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "multiResolutionImages": {
            "$ref": "#/components/schemas/MultiResolutionImageListDto"
          },
          "descriptionPageUrl": {
            "type": "string"
          },
          "measurements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductMeasurementDto"
            }
          },
          "classifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductClassificationDto"
            }
          },
          "announcement": {
            "$ref": "#/components/schemas/ProductAnnouncementDto"
          }
        }
      },
      "PersonalProductContentsDto": {
        "type": "object",
        "properties": {
          "imageUrls": {
            "description": "DEPRECATED",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "multiResolutionImages": {
            "$ref": "#/components/schemas/MultiResolutionImageListDto"
          },
          "descriptionPageUrl": {
            "type": "string"
          },
          "measurements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonalProductMeasurementDto"
            }
          },
          "classifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductClassificationDto"
            }
          },
          "announcement": {
            "$ref": "#/components/schemas/ProductAnnouncementDto"
          },
          "sellerContentImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SellerContentImagesDto"
            },
            "description": "セラーが登録した画像"
          }
        }
      },
      "ProductMeasurementDto": {
        "type": "object",
        "required": [
          "type",
          "unitOfLength",
          "headers",
          "rows"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProductMeasurementTypeEnum"
          },
          "unitOfLength": {
            "type": "string"
          },
          "headers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "PersonalProductMeasurementDto": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProductMeasurementTypeEnum"
          },
          "unitOfLength": {
            "type": "string"
          },
          "headers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "imageUrl": {
            "type": "string"
          }
        }
      },
      "ProductMeasurementTypeEnum": {
        "oneOf": [
          {
            "const": "SHORTS"
          },
          {
            "const": "SKIRT"
          },
          {
            "const": "PANTS"
          },
          {
            "const": "HOODIE"
          },
          {
            "const": "TSHIRTS"
          },
          {
            "const": "SWEATER"
          },
          {
            "const": "SHIRTS"
          },
          {
            "const": "DRESS"
          },
          {
            "const": "JUMPER"
          },
          {
            "const": "JACKET"
          },
          {
            "const": "PADDED_JACKET"
          },
          {
            "const": "COAT"
          },
          {
            "const": "CARDIGAN"
          }
        ]
      },
      "ProductClassificationDto": {
        "type": "object",
        "required": [
          "criterionId",
          "criterionText",
          "elements"
        ],
        "properties": {
          "criterionId": {
            "type": "string"
          },
          "criterionText": {
            "type": "string"
          },
          "elements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductClassificationElementDto"
            }
          }
        }
      },
      "ProductClassificationElementDto": {
        "type": "object",
        "required": [
          "name",
          "classified"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "classified": {
            "type": "boolean"
          }
        }
      },
      "ProductAnnouncementDto": {
        "type": "object",
        "required": [
          "apparelProductAnnouncement",
          "beautyProductAnnouncement"
        ],
        "properties": {
          "apparelProductAnnouncement": {
            "$ref": "#/components/schemas/ApparelProductAnnouncementDto"
          },
          "beautyProductAnnouncement": {
            "$ref": "#/components/schemas/BeautyProductAnnouncementDto"
          },
          "color": {
            "type": "string",
            "description": "(DEPRECATED)色"
          },
          "material": {
            "type": "string",
            "description": "(DEPRECATED)素材"
          },
          "measurement": {
            "type": "string",
            "description": "(DEPRECATED) 寸法"
          },
          "manufacturingCompany": {
            "type": "string",
            "description": "（DEPRECATED）製造会社"
          },
          "manufacturingCountry": {
            "type": "string",
            "description": "(DEPRECATED)製造国"
          },
          "manufacturingDate": {
            "type": "string",
            "description": "（DEPRECATED）製造日"
          },
          "qaStandards": {
            "type": "string",
            "description": "（DEPRECATED）品質保証基準"
          },
          "customerCenterContact": {
            "type": "string",
            "description": "（DEPRECATED）A / S責任者と電話番号"
          },
          "washingAndHandling": {
            "type": "string",
            "description": "(DEPRECATED) 洗濯方法及び取り扱い時の注意事項"
          }
        }
      },
      "ApparelProductAnnouncementDto": {
        "type": "object",
        "description": "衣類関連商品情報提供告示時",
        "required": [
          "manufacturingCompany",
          "manufacturingCountry",
          "qaStandards",
          "customerCenterContact",
          "color",
          "material",
          "measurement",
          "manufacturingDate",
          "washingAndHandling"
        ],
        "properties": {
          "manufacturingCompany": {
            "type": "string",
            "description": "製造会社"
          },
          "manufacturingCountry": {
            "type": "string",
            "description": "製造局"
          },
          "qaStandards": {
            "type": "string",
            "description": "品質保証基準"
          },
          "customerCenterContact": {
            "type": "string",
            "description": "A / S責任者と電話番号"
          },
          "color": {
            "type": "string",
            "description": "色"
          },
          "material": {
            "type": "string",
            "description": "素材"
          },
          "measurement": {
            "type": "string",
            "description": "寸法"
          },
          "manufacturingDate": {
            "type": "string",
            "description": "製造日"
          },
          "washingAndHandling": {
            "type": "string",
            "description": "洗濯方法及び取扱い上の注意事項"
          }
        }
      },
      "BeautyProductAnnouncementDto": {
        "type": "object",
        "description": "化粧品（美容）関連商品情報提供告示時",
        "required": [
          "manufacturingCompany",
          "manufacturingCountry",
          "qaStandards",
          "customerCenterContact",
          "size",
          "responsibleSellerCompany",
          "usage",
          "highlights",
          "concerns",
          "expiration",
          "ingredients",
          "mfdsReview"
        ],
        "properties": {
          "manufacturingCompany": {
            "type": "string",
            "description": "製造会社"
          },
          "manufacturingCountry": {
            "type": "string",
            "description": "製造局"
          },
          "qaStandards": {
            "type": "string",
            "description": "品質保証基準"
          },
          "customerCenterContact": {
            "type": "string",
            "description": "A / S責任者と電話番号"
          },
          "size": {
            "type": "string",
            "description": "化粧品容量"
          },
          "responsibleSellerCompany": {
            "type": "string",
            "description": "化粧品責任販売業者"
          },
          "usage": {
            "type": "string",
            "description": "使用方法"
          },
          "highlights": {
            "type": "string",
            "description": "製品の主な仕様"
          },
          "concerns": {
            "type": "string",
            "description": "使用時の注意事項"
          },
          "expiration": {
            "type": "string",
            "description": "使用期限または開封後の使用期限"
          },
          "ingredients": {
            "type": "string",
            "description": "成分（化粧品法により記載、表示しなければならないすべての成分）"
          },
          "mfdsReview": {
            "type": "string",
            "description": "食品医薬品安全担当者の審査が必要かどうか（MFDS = Ministry of Food and Drug Safety）"
          }
        }
      },
      "ProductSetDto": {
        "type": "object",
        "required": [
          "set",
          "favoriteIds",
          "freeReturnTargetProductIds"
        ],
        "properties": {
          "set": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDto"
            }
          },
          "favoriteIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "freeReturnTargetProductIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProductListDto": {
        "type": "object",
        "required": [
          "list",
          "favoriteIds",
          "last",
          "freeReturnTargetProductIds"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDto"
            }
          },
          "favoriteIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          },
          "freeReturnTargetProductIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FilteredPersonalizedProductRequestDto": {
        "type": "object",
        "required": [
          "size"
        ],
        "properties": {
          "orderBy": {
            "$ref": "#/components/schemas/ProductOrderByEnum"
          },
          "cursor": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "categoryId": {
            "type": "string"
          },
          "brandId": {
            "type": "string"
          },
          "minPrice": {
            "type": "integer",
            "format": "int64"
          },
          "maxPrice": {
            "type": "integer",
            "format": "int64"
          },
          "ageGroupCode": {
            "$ref": "#/components/schemas/AgeGroupCodeEnum"
          },
          "mySizeOnly": {
            "type": "boolean",
            "default": false
          },
          "tag": {
            "$ref": "#/components/schemas/ProductTagEnum"
          },
          "tagId": {
            "type": "integer",
            "description": "(deprecated) use tagIdForBrandSourcing",
            "format": "int64"
          },
          "tagIdForBrandSourcing": {
            "description": "tagIdに対応するBrandSourcingについて商品を照会する",
            "type": "integer",
            "format": "int64"
          },
          "recentlyClickedProducts": {
            "type": "array",
            "description": "最近クリックされた商品に関する情報。 *本数は100を超えることはできません。*",
            "items": {
              "$ref": "#/components/schemas/ClickedProductDto"
            }
          },
          "modelId": {
            "type": "string",
            "description": "- どのパーソナライズモデルを使用するか。 (A/B Testing 用途) - ノッションノート: https://www.notion.so/rapportlabs/AB-Protocol-c878d879ff0443cda929bb17d9b137c1"
          },
          "postProcessingId": {
            "type": "string",
            "description": "- 個人化結果の後処理をどうするか。 (A/B Testing 用途) - ノッションノート: https://www.notion.so/rapportlabs/AB-Protocol-c878d879ff0443cda929bb17d9b137c1"
          }
        }
      },
      "ClickedProductDto": {
        "type": "object",
        "required": [
          "id",
          "clickedAtMillis"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "clickedAtMillis": {
            "type": "integer",
            "format": "int64",
            "description": "商品がクリックされた時間（ミリス）"
          }
        }
      },
      "AppProductListDto": {
        "type": "object",
        "required": [
          "list",
          "favoriteIds",
          "last",
          "freeReturnTargetProductIds"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppProductDto"
            }
          },
          "favoriteIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          },
          "productAggregation": {
            "$ref": "#/components/schemas/ProductAggregationDto"
          },
          "freeReturnTargetProductIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AppAdvertisementProductListDto": {
        "type": "object",
        "required": [
          "favoriteIds",
          "list",
          "totalPageCount",
          "totalElementCount",
          "freeReturnTargetProductIds"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppAdvertisementProductDto"
            }
          },
          "favoriteIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalPageCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalElementCount": {
            "type": "integer",
            "format": "int64"
          },
          "freeReturnTargetProductIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PersonalProductDto": {
        "type": "object",
        "required": [
          "product",
          "favorite",
          "freeReturnTarget",
          "discountInfo"
        ],
        "properties": {
          "product": {
            "$ref": "#/components/schemas/ProductDto"
          },
          "favorite": {
            "type": "boolean"
          },
          "categoriesFromRoot": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryDto"
            }
          },
          "contents": {
            "$ref": "#/components/schemas/PersonalProductContentsDto"
          },
          "mappedBrand": {
            "$ref": "#/components/schemas/BrandDto"
          },
          "discountInfo": {
            "$ref": "#/components/schemas/ProductDiscountApplicationDto"
          },
          "freeReturnTarget": {
            "type": "boolean"
          }
        }
      },
      "HomeProductCategoryDto": {
        "type": "object",
        "required": [
          "topSideCategories",
          "bottomSideCategories"
        ],
        "properties": {
          "topSideCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryDto"
            }
          },
          "bottomSideCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryDto"
            }
          }
        }
      },
      "ProductCategoryDto": {
        "type": "object",
        "required": [
          "id",
          "title"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "iconUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionIcon": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          }
        }
      },
      "MallDto": {
        "type": "object",
        "required": [
          "mallId",
          "title"
        ],
        "properties": {
          "mallId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          },
          "logo2xUrl": {
            "type": "string"
          },
          "logo3xUrl": {
            "type": "string"
          }
        }
      },
      "FavoriteProductDto": {
        "type": "object",
        "required": [
          "id",
          "mallId",
          "mallName",
          "mallProductCode",
          "itemImageUri",
          "itemThumbnailUri",
          "brandName",
          "productName",
          "productDiscountRate",
          "price",
          "productPriceDetail",
          "shopUri",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "mallId": {
            "type": "string"
          },
          "mallName": {
            "type": "string"
          },
          "mallProductCode": {
            "type": "string"
          },
          "itemImageUri": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionItemImage": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "itemThumbnailUri": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionItemThumbnail": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "brandName": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "productDiscountRate": {
            "type": "integer",
            "format": "int32"
          },
          "originalPrice": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "integer",
            "format": "int64"
          },
          "productPriceDetail": {
            "$ref": "#/components/schemas/ProductPriceDetailDto"
          },
          "shopUri": {
            "type": "string"
          },
          "shopLogoUri": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "FavoriteProductListDto": {
        "type": "object",
        "required": [
          "list",
          "last",
          "freeReturnTargetProductIds"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FavoriteProductDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          },
          "freeReturnTargetProductIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProductItemListDto": {
        "type": "object",
        "required": [
          "options",
          "optionElements",
          "productItems"
        ],
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptionDto"
            }
          },
          "optionElements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptionElementDto"
            }
          },
          "productItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductItemDto"
            }
          }
        }
      },
      "ProductReleaseEstimateDto": {
        "type": "object",
        "required": [
          "productId",
          "itemReleaseEstimateAtList"
        ],
        "properties": {
          "productId": {
            "type": "string",
            "description": "商品ID"
          },
          "itemReleaseEstimateAtList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductItemReleaseEstimateDto"
            }
          }
        }
      },
      "ProductItemReleaseEstimateDto": {
        "type": "object",
        "required": [
          "productItemId",
          "releaseEstimateAt"
        ],
        "properties": {
          "productItemId": {
            "type": "string",
            "description": "商品オプションID"
          },
          "itemReleaseEstimateAtMillis": {
            "type": "integer",
            "format": "int64",
            "description": "yyyy-mm-dd形式の出荷日"
          }
        }
      },
      "ProductItemDto": {
        "type": "object",
        "required": [
          "id",
          "title",
          "optionElementIds",
          "price",
          "display",
          "salesStatus",
          "mallProductItemCode"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "releaseAtEstimate": {
            "type": "string",
            "description": "yyyy-mm-dd形式の出荷日"
          },
          "optionElementIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "maxQuantity": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "integer",
            "format": "int64"
          },
          "display": {
            "type": "boolean",
            "description": "- 商品オプションの露出可否を示す - falseの場合、在庫切れの状態で表示"
          },
          "salesStatus": {
            "$ref": "#/components/schemas/SalesStatusEnum"
          },
          "mallProductItemCode": {
            "type": "string"
          }
        }
      },
      "OptionDto": {
        "type": "object",
        "required": [
          "title"
        ],
        "properties": {
          "title": {
            "type": "string"
          }
        }
      },
      "OptionElementDto": {
        "type": "object",
        "required": [
          "id",
          "title"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "ProductItemAvailabilityDto": {
        "type": "object",
        "required": [
          "productId",
          "productItemId",
          "available"
        ],
        "properties": {
          "productId": {
            "type": "string"
          },
          "productItemId": {
            "type": "string"
          },
          "quantity": {
            "description": "- 商品オプション在庫 - この値が `null` の場合 -&gt; 内部的に在庫が無制限とみなされる - この値だけでは商品の購入可否を判断できない -&gt; `ProductItemAvailabilityDto.available` 値が重要",
            "type": "integer",
            "format": "int64"
          },
          "available": {
            "description": "商品購入可否（product～product itemの値から計算された値）",
            "type": "boolean"
          }
        }
      },
      "BrandListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrandDto"
            }
          }
        }
      },
      "BrandDto": {
        "type": "object",
        "required": [
          "id",
          "name",
          "logo"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "$ref": "#/components/schemas/BrandLogoDto"
          }
        }
      },
      "BrandLogoDto": {
        "type": "object",
        "properties": {
          "landscapeUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionLandscape": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "squareUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionSquare": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          }
        }
      },
      "BrandDetailDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "$ref": "#/components/schemas/BrandLogoDto"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryDto"
            }
          }
        }
      },
      "BrandProductsDto": {
        "type": "object",
        "required": [
          "brand",
          "list"
        ],
        "properties": {
          "brand": {
            "$ref": "#/components/schemas/BrandDto"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDto"
            }
          }
        }
      },
      "BrandProductsListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrandProductsDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "AddToCartRequestDto": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddCartItemDto"
            }
          }
        }
      },
      "AddToCartResponseDto": {
        "type": "object",
        "required": [
          "cartItemIds"
        ],
        "properties": {
          "cartItemIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "AddCartItemDto": {
        "type": "object",
        "required": [
          "productItemId",
          "quantity"
        ],
        "properties": {
          "productItemId": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DeleteCartItemsRequestDto": {
        "type": "object",
        "required": [
          "cartItemIds"
        ],
        "properties": {
          "cartItemIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "CartItemGroupDto": {
        "type": "object",
        "required": [
          "groupId",
          "brand",
          "delivery",
          "items"
        ],
        "properties": {
          "groupId": {
            "type": "string"
          },
          "brand": {
            "$ref": "#/components/schemas/BrandDto"
          },
          "delivery": {
            "$ref": "#/components/schemas/CartItemGroupDeliveryPolicyDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItemDto"
            }
          }
        }
      },
      "CartItemGroupDeliveryPolicyDto": {
        "type": "object",
        "required": [
          "defaultPrice",
          "defaultReturnCost",
          "shippingCostPolicy",
          "returnCostPolicy",
          "logisticsPolicy",
          "assorted",
          "shippingPolicyId"
        ],
        "properties": {
          "defaultPrice": {
            "type": "integer",
            "format": "int64",
            "description": "DEPRECATED -&gt; use `shippingCostPolicy`"
          },
          "requiredAmountForFree": {
            "type": "integer",
            "format": "int64",
            "description": "DEPRECATED -&gt; use `shippingCostPolicy`"
          },
          "defaultReturnCost": {
            "type": "integer",
            "format": "int64",
            "description": "DEPRECATED -&gt; use `returnCostPolicy`"
          },
          "shippingCostPolicy": {
            "$ref": "#/components/schemas/ShippingCostPolicyDto"
          },
          "returnCostPolicy": {
            "$ref": "#/components/schemas/ReturnCostPolicyDto"
          },
          "logisticsPolicy": {
            "$ref": "#/components/schemas/LogisticsPolicyDto"
          },
          "assorted": {
            "type": "boolean"
          },
          "shippingPolicyId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DeliveryPolicyDto": {
        "type": "object",
        "required": [
          "defaultPrice",
          "defaultReturnCost",
          "shippingCostPolicy",
          "returnCostPolicy",
          "logisticsPolicy"
        ],
        "properties": {
          "defaultPrice": {
            "type": "integer",
            "format": "int64",
            "description": "DEPRECATED -&gt; use `shippingCostPolicy`"
          },
          "requiredAmountForFree": {
            "type": "integer",
            "format": "int64",
            "description": "DEPRECATED -&gt; use `shippingCostPolicy`"
          },
          "defaultReturnCost": {
            "type": "integer",
            "format": "int64",
            "description": "DEPRECATED -&gt; use `returnCostPolicy`"
          },
          "shippingCostPolicy": {
            "$ref": "#/components/schemas/ShippingCostPolicyDto"
          },
          "returnCostPolicy": {
            "$ref": "#/components/schemas/ReturnCostPolicyDto"
          },
          "logisticsPolicy": {
            "$ref": "#/components/schemas/LogisticsPolicyDto"
          }
        }
      },
      "ShippingCostPolicyDto": {
        "type": "object",
        "description": "送料ポリシー",
        "required": [
          "defaultCost",
          "jejuIsland",
          "backCountry"
        ],
        "properties": {
          "defaultCost": {
            "type": "integer",
            "format": "int64"
          },
          "jejuIsland": {
            "type": "integer",
            "format": "int64",
            "description": "済州島追加送料"
          },
          "backCountry": {
            "type": "integer",
            "format": "int64",
            "description": "図書山間追加送料"
          },
          "requiredAmountForFree": {
            "type": "integer",
            "format": "int64",
            "description": "送料無料の最小購入金額"
          }
        }
      },
      "ReturnCostPolicyDto": {
        "type": "object",
        "description": "返品費ポリシー",
        "required": [
          "defaultCost",
          "jejuIsland",
          "backCountry"
        ],
        "properties": {
          "defaultCost": {
            "type": "integer",
            "format": "int64",
            "description": "additionalCostが考慮されていない基本返品費用"
          },
          "jejuIsland": {
            "type": "integer",
            "format": "int64",
            "description": "済州島追加返品料金"
          },
          "backCountry": {
            "type": "integer",
            "format": "int64",
            "description": "図書山間追加返品費"
          }
        }
      },
      "LogisticsPolicyDto": {
        "type": "object",
        "properties": {
          "shippingPlace": {
            "type": "string",
            "description": "出庫先住所"
          },
          "returnPlace": {
            "type": "string",
            "description": "返品先住所"
          },
          "courier": {
            "deprecated": true,
            "type": "string",
            "description": "- DEPRECATED - `vendor`フィールドを使用してください - 利用宅配便会社"
          },
          "vendor": {
            "$ref": "#/components/schemas/LogisticsVendorEnum"
          }
        }
      },
      "LogisticsVendorEnum": {
        "oneOf": [
          {
            "const": "CJ대한통운"
          },
          {
            "const": "로젠택배"
          },
          {
            "const": "우체국택배"
          },
          {
            "const": "한진택배"
          },
          {
            "const": "롯데택배"
          },
          {
            "const": "대신택배"
          },
          {
            "const": "일양택배"
          },
          {
            "const": "경동택배"
          },
          {
            "const": "합동택배"
          },
          {
            "const": "천일택배"
          },
          {
            "const": "GS편의점택배"
          },
          {
            "const": "한의사랑택배"
          },
          {
            "const": "건영택배"
          },
          {
            "const": "호남택배"
          },
          {
            "const": "SLX"
          },
          {
            "const": "CU편의점택배"
          },
          {
            "const": "용마로지스"
          },
          {
            "const": "세방택배"
          },
          {
            "const": "원더스퀵"
          },
          {
            "const": "농협택배"
          },
          {
            "const": "HI택배"
          },
          {
            "const": "홈픽택배"
          },
          {
            "const": "CJ대한통운국제특송"
          },
          {
            "const": "EMS"
          },
          {
            "const": "롯데글로벌"
          },
          {
            "const": "한덱스"
          },
          {
            "const": "DHL"
          },
          {
            "const": "FEDEX"
          },
          {
            "const": "UPS"
          },
          {
            "const": "TNT"
          },
          {
            "const": "범한판토스"
          },
          {
            "const": "ACI Express"
          },
          {
            "const": "ACE Express"
          },
          {
            "const": "은하쉬핑"
          },
          {
            "const": "두발히어로"
          },
          {
            "const": "로지스팟"
          },
          {
            "const": "부릉(VROONG)"
          },
          {
            "const": "이투마스"
          },
          {
            "const": "에이스물류"
          },
          {
            "const": "대림통운"
          },
          {
            "const": "발렉스"
          },
          {
            "const": "기타배송사"
          },
          {
            "const": "직접배송"
          }
        ],
        "description": "- （配送ポリシー関連）設定可能な宅配会社 - 「ETC（その他配送会社）」 - &gt;特定の配送会社を使用していますが、現在サポートしていない宅配会社（その他配送会社のサポートが必要な場合は、別途お問い合わせください） - ` SELF_MANAGED（直接配送）`-&gt;直接配送する場合に使用",
        "x-enum-varnames": [
          "CJ_GLS",
          "LOGEN",
          "EPOST",
          "HANJIN",
          "LOTTE",
          "DAESIN",
          "ILYANG",
          "KYUNGDONG",
          "HAPDONG",
          "CHUNIL",
          "CVSNET",
          "HPL",
          "KUNYOUNG",
          "HONAM",
          "SLX",
          "BGF",
          "YONGMA",
          "SEBANG",
          "WONDERS",
          "NH_LOGIS",
          "HI_LOGIS",
          "HOMEPICK",
          "KOREX_G",
          "EMS",
          "LOTTE_GLOBAL",
          "HANDEX",
          "DHL",
          "FEDEX",
          "UPS",
          "TNT",
          "PANTOS",
          "ACI_EXPRESS",
          "ACE_EXP",
          "EUNHA",
          "CHAIN_LOGISTICS",
          "LOGISPOT",
          "VROONG",
          "ETOMARS",
          "VENDORPIA",
          "DAERIM",
          "VALEX",
          "ETC",
          "SELF_MANAGED"
        ]
      },
      "CartItemDto": {
        "type": "object",
        "description": "- `product.salesStatus != ACTIVE || product.display == false` の場合 -&gt; 在庫切れで表示 - `productItem.salesStatus != ACTIVE || productItem.display == false` の場合 -&gt; 在庫切れで表示 - クイーンイット即時割引が適用された場合 `ProductDto` で直ちに割引が適用された金額を表示する - 影響を受けるフィールド: `finalPrice`, `discountPercentage`",
        "required": [
          "id",
          "product",
          "productItem",
          "quantity",
          "brand",
          "freeReturnTarget"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "product": {
            "$ref": "#/components/schemas/ProductDto"
          },
          "productItem": {
            "$ref": "#/components/schemas/ProductItemDto"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "brand": {
            "$ref": "#/components/schemas/BrandDto"
          },
          "freeReturnTarget": {
            "type": "boolean"
          }
        }
      },
      "PurchaseTopicEnum": {
        "const": "PRODUCT"
      },
      "StartOrderRequestDto": {
        "type": "object",
        "required": [
          "cartItemIds"
        ],
        "properties": {
          "cartItemIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "StartOrderFromAddingRequestDto": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddCartItemDto"
            }
          }
        }
      },
      "DeliveryAddressDto": {
        "type": "object",
        "required": [
          "recipientName",
          "phoneNumber",
          "zipCode",
          "address",
          "detailedAddress"
        ],
        "properties": {
          "recipientName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "zipCode": {
            "type": "string",
            "description": "5桁、国家基礎区域番号 (State Basic District Number)"
          },
          "address": {
            "type": "string"
          },
          "detailedAddress": {
            "type": "string"
          }
        }
      },
      "UserRefundAccountDto": {
        "type": "object",
        "properties": {
          "refundAccount": {
            "$ref": "#/components/schemas/RefundAccountDto"
          }
        }
      },
      "RefundAccountDto": {
        "type": "object",
        "required": [
          "accountNumber",
          "bank",
          "holderName"
        ],
        "properties": {
          "accountNumber": {
            "type": "string"
          },
          "bank": {
            "$ref": "#/components/schemas/RefundAccountBankEnum"
          },
          "holderName": {
            "type": "string"
          }
        }
      },
      "ConnectPayPromotionDto": {
        "type": "object",
        "required": [
          "discountCards",
          "interestFreeCards"
        ],
        "properties": {
          "discountCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectPayDiscountCardDto"
            }
          },
          "interestFreeCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectPayInterestFreeCardsDto"
            }
          }
        }
      },
      "ConnectPayDiscountCardDto": {
        "type": "object",
        "required": [
          "card",
          "minimumPaymentAmount",
          "discountCode",
          "discountAmount"
        ],
        "properties": {
          "card": {
            "$ref": "#/components/schemas/TossPaymentCardEnum"
          },
          "minimumPaymentAmount": {
            "type": "integer",
            "format": "int64"
          },
          "maximumPaymentAmount": {
            "type": "integer",
            "format": "int64"
          },
          "discountCode": {
            "description": "discount code should be passed when request payment with connect-pay",
            "type": "string"
          },
          "discountAmount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ConnectPayInterestFreeCardsDto": {
        "type": "object",
        "required": [
          "card",
          "interestFreeMonths",
          "minimumPaymentAmount"
        ],
        "properties": {
          "card": {
            "$ref": "#/components/schemas/TossPaymentCardEnum"
          },
          "interestFreeMonths": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "minimumPaymentAmount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TossPaymentPromotionDto": {
        "type": "object",
        "required": [
          "discountCards",
          "interestFreeCards"
        ],
        "properties": {
          "discountCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TossPaymentDiscountPolicyDto"
            }
          },
          "interestFreeCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TossPaymentInterestFreePolicyDto"
            }
          }
        }
      },
      "TossPaymentDiscountPolicyDto": {
        "type": "object",
        "required": [
          "card",
          "minimumPaymentAmount",
          "discountCode",
          "discountAmount"
        ],
        "properties": {
          "card": {
            "$ref": "#/components/schemas/TossPaymentCardEnum"
          },
          "minimumPaymentAmount": {
            "type": "integer",
            "format": "int64"
          },
          "maximumPaymentAmount": {
            "type": "integer",
            "format": "int64"
          },
          "discountCode": {
            "description": "discount code should be passed when request payment with toss",
            "type": "string"
          },
          "discountAmount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TossPaymentInterestFreePolicyDto": {
        "type": "object",
        "required": [
          "card",
          "installmentFreeMonths",
          "minimumPaymentAmount"
        ],
        "properties": {
          "card": {
            "$ref": "#/components/schemas/TossPaymentCardEnum"
          },
          "installmentFreeMonths": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "minimumPaymentAmount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TossPaymentAccountEnum": {
        "oneOf": [
          {
            "const": "농협"
          },
          {
            "const": "우리"
          },
          {
            "const": "신한"
          },
          {
            "const": "국민"
          },
          {
            "const": "하나"
          },
          {
            "const": "씨티"
          },
          {
            "const": "기업"
          },
          {
            "const": "산업"
          },
          {
            "const": "제일"
          },
          {
            "const": "대구"
          },
          {
            "const": "부산"
          },
          {
            "const": "전북"
          },
          {
            "const": "경남"
          },
          {
            "const": "제주"
          },
          {
            "const": "광주"
          },
          {
            "const": "새마을"
          },
          {
            "const": "수협"
          },
          {
            "const": "신협"
          },
          {
            "const": "우체국"
          },
          {
            "const": "케이"
          },
          {
            "const": "카카오"
          },
          {
            "const": "저축"
          },
          {
            "const": "산림"
          },
          {
            "const": "UNKNOWN"
          }
        ],
        "x-enum-varnames": [
          "NONGHYUP",
          "WOORI",
          "SHINHAN",
          "KOOKMIN",
          "HANA",
          "CITI",
          "INDUSTRIAL",
          "KDB",
          "SC",
          "DAEGU",
          "BUSAN",
          "JEONBUK",
          "KYONGNAM",
          "JEJU",
          "KWANGJU",
          "SAEMAEUL",
          "SUHYUP",
          "SHINHYUP",
          "POST",
          "K_BANK",
          "KAKAO_BANK",
          "SAVING_SB",
          "FORESTRY_SJ",
          "UNKNOWN"
        ]
      },
      "TossPaymentCardEnum": {
        "oneOf": [
          {
            "const": "신한"
          },
          {
            "const": "현대"
          },
          {
            "const": "삼성"
          },
          {
            "const": "우리"
          },
          {
            "const": "국민"
          },
          {
            "const": "롯데"
          },
          {
            "const": "농협"
          },
          {
            "const": "하나"
          },
          {
            "const": "BC"
          },
          {
            "const": "씨티"
          },
          {
            "const": "카카오뱅크"
          },
          {
            "const": "KDB"
          },
          {
            "const": "수협"
          },
          {
            "const": "전북"
          },
          {
            "const": "우체국"
          },
          {
            "const": "새마을"
          },
          {
            "const": "저축"
          },
          {
            "const": "제주"
          },
          {
            "const": "광주"
          },
          {
            "const": "신협"
          },
          {
            "const": "JCB"
          },
          {
            "const": "유니온페이"
          },
          {
            "const": "마스터"
          },
          {
            "const": "비자"
          },
          {
            "const": "다이너스"
          },
          {
            "const": "디스커버"
          },
          {
            "const": "UNKNOWN"
          }
        ],
        "x-enum-varnames": [
          "SHINHAN",
          "HYUNDAI",
          "SAMSUNG",
          "WOORI",
          "KOOKMIN",
          "LOTTE",
          "NONGHYUP",
          "HANA",
          "BC",
          "CITI",
          "KAKAO_BANK",
          "KDB",
          "SUHYUP",
          "JEONBUK",
          "POST",
          "SAEMAEUL",
          "SAVING_SB",
          "JEJU",
          "KWANGJU",
          "SHINHYUP",
          "JCB",
          "UNION_PAY",
          "MASTER_CARD",
          "VISA",
          "DINERS_CLUB",
          "DISCOVER",
          "UNKNOWN"
        ]
      },
      "RefundAccountBankEnum": {
        "oneOf": [
          {
            "const": "농협"
          },
          {
            "const": "국민"
          },
          {
            "const": "우리"
          },
          {
            "const": "신한"
          },
          {
            "const": "기업"
          },
          {
            "const": "하나"
          },
          {
            "const": "경남"
          },
          {
            "const": "대구"
          },
          {
            "const": "부산"
          },
          {
            "const": "수협"
          },
          {
            "const": "우체국"
          },
          {
            "const": "산업"
          },
          {
            "const": "SC제일"
          },
          {
            "const": "씨티"
          },
          {
            "const": "광주"
          },
          {
            "const": "제주"
          },
          {
            "const": "전북"
          },
          {
            "const": "새마을"
          },
          {
            "const": "신협"
          },
          {
            "const": "케이"
          },
          {
            "const": "카카오"
          }
        ],
        "x-enum-varnames": [
          "NONGHYUP",
          "KOOKMIN",
          "WOORI",
          "SHINHAN",
          "INDUSTRIAL",
          "HANA",
          "KYONGNAM",
          "DAEGU",
          "BUSAN",
          "SUHYUP",
          "POST",
          "KDB",
          "SC",
          "CITI",
          "KWANGJU",
          "JEJU",
          "JEONBUK",
          "SAEMAEUL",
          "SHINHYUP",
          "K_BANK",
          "KAKAO_BANK"
        ]
      },
      "BankNameEnum": {
        "oneOf": [
          {
            "const": "농협"
          },
          {
            "const": "국민"
          },
          {
            "const": "우리"
          },
          {
            "const": "신한"
          },
          {
            "const": "기업"
          },
          {
            "const": "하나"
          },
          {
            "const": "경남"
          },
          {
            "const": "대구"
          },
          {
            "const": "부산"
          },
          {
            "const": "수협"
          },
          {
            "const": "우체국"
          },
          {
            "const": "산업"
          },
          {
            "const": "SC제일"
          },
          {
            "const": "씨티"
          },
          {
            "const": "광주"
          },
          {
            "const": "제주"
          },
          {
            "const": "전북"
          },
          {
            "const": "새마을"
          },
          {
            "const": "신협"
          },
          {
            "const": "케이"
          },
          {
            "const": "카카오"
          }
        ],
        "description": "銀行名",
        "x-enum-varnames": [
          "NONGHYUP",
          "KOOKMIN",
          "WOORI",
          "SHINHAN",
          "INDUSTRIAL",
          "HANA",
          "KYONGNAM",
          "DAEGU",
          "BUSAN",
          "SUHYUP",
          "POST",
          "KDB",
          "SC",
          "CITI",
          "KWANGJU",
          "JEJU",
          "JEONBUK",
          "SAEMAEUL",
          "SHINHYUP",
          "K_BANK",
          "KAKAO_BANK"
        ]
      },
      "ProductPurchaseMaterialDto": {
        "type": "object",
        "required": [
          "purchaseId",
          "recentDeliveredRequests",
          "issuedCoupons",
          "orderSummary",
          "payableMethodIds",
          "tossPaymentsInterestFreePolicies"
        ],
        "properties": {
          "purchaseId": {
            "type": "string"
          },
          "recentDeliveredRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDeliveryAddressDto"
            }
          },
          "recommendedIssuedCouponId": {
            "type": "integer",
            "format": "int64"
          },
          "issuedCoupons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IssuedCouponWhenOrderDto"
            }
          },
          "orderSummary": {
            "$ref": "#/components/schemas/OrderSummaryDto"
          },
          "refundAccount": {
            "$ref": "#/components/schemas/RefundAccountDto"
          },
          "payableMethodIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tossPaymentsInterestFreePolicies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TossPaymentInterestFreePolicyDto"
            }
          }
        }
      },
      "StartIamportPaymentRequestDto": {
        "type": "object",
        "required": [
          "pg",
          "pgMethod"
        ],
        "properties": {
          "pg": {
            "type": "string",
            "description": "payment gateway id"
          },
          "pgMethod": {
            "type": "string",
            "description": "payment gateway dependent method"
          }
        }
      },
      "IamportPaymentMaterialDto": {
        "type": "object",
        "required": [
          "storeId",
          "pg",
          "merchantId",
          "productName",
          "productPrice",
          "currency",
          "language",
          "buyerTel",
          "payMethod"
        ],
        "properties": {
          "storeId": {
            "type": "string",
            "description": "store id (ex. &#39;imp*&#39;)"
          },
          "pg": {
            "type": "string",
            "description": "payment gateway id"
          },
          "merchantId": {
            "type": "string",
            "description": "generated merchantId for this payment"
          },
          "productName": {
            "type": "string",
            "description": "product name to show to user"
          },
          "productPrice": {
            "type": "integer",
            "format": "int64",
            "description": "payment price as KRW"
          },
          "currency": {
            "type": "string",
            "description": "KRW"
          },
          "language": {
            "type": "string",
            "description": "ja"
          },
          "buyerTel": {
            "type": "string",
            "description": "buyer phone number"
          },
          "payMethod": {
            "type": "string",
            "description": "pay method (ex. card )"
          },
          "naverProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NaverProductDto"
            }
          }
        }
      },
      "NaverProductDto": {
        "type": "object",
        "required": [
          "categoryType",
          "categoryId",
          "uid",
          "name",
          "count"
        ],
        "properties": {
          "categoryType": {
            "type": "string"
          },
          "categoryId": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "StartConnectPayPaymentRequestDto": {
        "type": "object",
        "required": [
          "payMethod"
        ],
        "properties": {
          "payMethod": {
            "$ref": "#/components/schemas/ConnectPayPaymentMethodEnum"
          }
        }
      },
      "ConnectPayPaymentMethodEnum": {
        "oneOf": [
          {
            "const": "CARD"
          },
          {
            "const": "ACCOUNT_TRANSFER"
          }
        ]
      },
      "ConnectPayPaymentMaterialDto": {
        "type": "object",
        "required": [
          "clientKey",
          "customerKey",
          "amount",
          "merchantId",
          "title",
          "successUrl",
          "failUrl",
          "redirectUrl"
        ],
        "properties": {
          "clientKey": {
            "type": "string",
            "description": "コネクトペイ JS SDK 認証用 clientKey"
          },
          "customerKey": {
            "type": "string",
            "description": "お支払いリクエストに使用されるユーザーの external uid"
          },
          "amount": {
            "type": "integer",
            "format": "int64",
            "description": "実際に支払われる金額（amount）"
          },
          "merchantId": {
            "type": "string",
            "description": "注文 - 支払いの一意のID（OrderID）"
          },
          "title": {
            "type": "string",
            "description": "お支払いの注文名（OrderName）"
          },
          "successUrl": {
            "type": "string",
            "description": "お支払いの成功時にリダイレクト URL"
          },
          "failUrl": {
            "type": "string",
            "description": "お支払いに失敗した場合のリダイレクト URL"
          },
          "redirectUrl": {
            "type": "string",
            "description": "ConnectPay OAuth認証に使用されるredirect url"
          }
        }
      },
      "StartTossPaymentRequestDto": {
        "type": "object",
        "required": [
          "payMethod"
        ],
        "properties": {
          "payMethod": {
            "$ref": "#/components/schemas/TossPaymentMethodEnum"
          }
        }
      },
      "TossPaymentMethodEnum": {
        "oneOf": [
          {
            "const": "CARD"
          },
          {
            "const": "VIRTUAL_ACCOUNT"
          },
          {
            "const": "MOBILE"
          },
          {
            "const": "KAKAO_PAY"
          },
          {
            "const": "TOSS_PAY"
          },
          {
            "const": "APPLE_PAY"
          }
        ]
      },
      "TossPaymentMaterialDto": {
        "type": "object",
        "required": [
          "clientKey",
          "amount",
          "payMethod",
          "merchantId",
          "title",
          "successUrl",
          "failUrl",
          "customerMobilePhone"
        ],
        "properties": {
          "clientKey": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "payMethod": {
            "type": "string"
          },
          "merchantId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "successUrl": {
            "type": "string"
          },
          "failUrl": {
            "type": "string"
          },
          "virtualAccountCallbackUrl": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "customerMobilePhone": {
            "type": "string"
          }
        }
      },
      "DryRunPaymentMaterialDto": {
        "type": "object",
        "required": [
          "merchantId"
        ],
        "properties": {
          "merchantId": {
            "type": "string",
            "description": "generated merchantId for this payment"
          }
        }
      },
      "FreePaymentMaterialDto": {
        "type": "object",
        "required": [
          "merchantId"
        ],
        "properties": {
          "merchantId": {
            "type": "string",
            "description": "generated merchantId for this payment"
          }
        }
      },
      "OLCEstimationRequestDto": {
        "type": "object",
        "required": [
          "partials"
        ],
        "properties": {
          "partials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartialOrderItemDto"
            }
          }
        }
      },
      "PartialOrderItemDto": {
        "type": "object",
        "required": [
          "orderItemId",
          "quantity"
        ],
        "properties": {
          "orderItemId": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "OrderItemPurchaseStateEnum": {
        "oneOf": [
          {
            "const": "WAIT"
          },
          {
            "const": "PAID"
          },
          {
            "const": "REFUNDED"
          }
        ]
      },
      "ProductSearchingOrderByEnum": {
        "oneOf": [
          {
            "const": "MATCHING_SCORE_DESC"
          },
          {
            "const": "POPULARITY"
          },
          {
            "const": "RATING_DESC"
          },
          {
            "const": "FINAL_PRICE_DESC"
          },
          {
            "const": "FINAL_PRICE_ASC"
          },
          {
            "const": "DISCOUNT_PERCENTAGE_DESC"
          },
          {
            "const": "REVIEW_COUNT_DESC"
          },
          {
            "const": "REVIEW_RATING_AVG_DESC"
          },
          {
            "const": "CREATED_AT_DESC"
          }
        ]
      },
      "OrderHistoryListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderHistoryDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "MyOrderHistoryListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyOrderHistoryDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "MyOrderHistoryDto": {
        "type": "object",
        "properties": {
          "orderSummary": {
            "$ref": "#/components/schemas/MyOrderSummaryDto"
          },
          "deliveryRequest": {
            "$ref": "#/components/schemas/DeliveryRequestDto"
          },
          "purchaseResult": {
            "$ref": "#/components/schemas/PurchaseResultDto"
          }
        }
      },
      "OrderHistoryDto": {
        "type": "object",
        "required": [
          "orderSummary",
          "deliveryRequest",
          "purchaseResult"
        ],
        "properties": {
          "orderSummary": {
            "$ref": "#/components/schemas/OrderSummaryDto"
          },
          "deliveryRequest": {
            "$ref": "#/components/schemas/DeliveryRequestDto"
          },
          "purchaseResult": {
            "$ref": "#/components/schemas/PurchaseResultDto"
          }
        }
      },
      "MyOrderLineTicketListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyOrderLineTicketDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "MyOrderLineTicketDto": {
        "type": "object",
        "required": [
          "ticketType",
          "createdAtMillis"
        ],
        "properties": {
          "ticketType": {
            "$ref": "#/components/schemas/OrderLineTicketEnum"
          },
          "returnTicket": {
            "$ref": "#/components/schemas/OrderLineReturnTicketWithOrderDto"
          },
          "cancelTicket": {
            "$ref": "#/components/schemas/OrderLineCancelTicketWithOrderDto"
          },
          "createdAtMillis": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "MyOLTicketsCountDto": {
        "type": "object",
        "required": [
          "cancelTicket",
          "returnTicket"
        ],
        "properties": {
          "cancelTicket": {
            "$ref": "#/components/schemas/OrderLineTicketCountDto"
          },
          "returnTicket": {
            "$ref": "#/components/schemas/OrderLineTicketCountDto"
          }
        }
      },
      "OrderLineTicketCountDto": {
        "type": "object",
        "required": [
          "inProgress",
          "resolved"
        ],
        "properties": {
          "inProgress": {
            "description": "進行中の人（返品orキャンセル）チケット数",
            "type": "integer",
            "format": "int32"
          },
          "resolved": {
            "description": "最近4日以内に完了した（返品orキャンセル）チケット数",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DeliveryRequestDto": {
        "type": "object",
        "required": [
          "address"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/DeliveryAddressDto"
          },
          "request": {
            "type": "string"
          }
        }
      },
      "PurchaseResultDto": {
        "type": "object",
        "required": [
          "paymentId",
          "payemntVendor",
          "paymentMethod",
          "paidAmount",
          "refundedAmount",
          "purchaseState"
        ],
        "properties": {
          "paymentId": {
            "type": "string"
          },
          "paymentVendor": {
            "type": "string"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodEnum"
          },
          "virtualAccount": {
            "$ref": "#/components/schemas/VirtualAccountDto"
          },
          "card": {
            "$ref": "#/components/schemas/CardDto"
          },
          "paidAmount": {
            "type": "integer",
            "format": "int64"
          },
          "refundedAmount": {
            "type": "integer",
            "format": "int64"
          },
          "purchaseState": {
            "$ref": "#/components/schemas/PurchaseStateEnum"
          },
          "completedAtMillis": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "VirtualAccountDto": {
        "type": "object",
        "required": [
          "accountNumber",
          "bank",
          "customerName"
        ],
        "properties": {
          "accountNumber": {
            "type": "string"
          },
          "bank": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "dueDateMillis": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CardDto": {
        "type": "object",
        "required": [
          "companyName"
        ],
        "properties": {
          "companyName": {
            "description": "カード会社（eg 1、Shinhan、BCカード）",
            "type": "string"
          },
          "installmentPlanMonths": {
            "description": "割賦月数（0の場合、一時払い）",
            "minimum": 0,
            "format": "int32",
            "type": "integer"
          },
          "interestFreeInstallment": {
            "description": "無利子分割払いかどうか",
            "type": "boolean"
          }
        }
      },
      "PaymentMethodEnum": {
        "oneOf": [
          {
            "const": "CARD"
          },
          {
            "const": "ACCOUNT_TRANSFER"
          },
          {
            "const": "KAKAO_PAY"
          },
          {
            "const": "NAVER_PAY"
          },
          {
            "const": "TOSS_PAY"
          },
          {
            "const": "VIRTUAL_ACCOUNT"
          },
          {
            "const": "DRY"
          },
          {
            "const": "MOBILE"
          },
          {
            "const": "FREE"
          },
          {
            "const": "APPLE_PAY"
          }
        ]
      },
      "RefundPaymentMethodEnum": {
        "oneOf": [
          {
            "const": "CARD"
          },
          {
            "const": "ACCOUNT_TRANSFER"
          },
          {
            "const": "KAKAO_PAY"
          },
          {
            "const": "NAVER_PAY"
          },
          {
            "const": "TOSS_PAY"
          },
          {
            "const": "VIRTUAL_ACCOUNT"
          },
          {
            "const": "DRY"
          },
          {
            "const": "MOBILE"
          },
          {
            "const": "FREE"
          },
          {
            "const": "APPLE_PAY"
          },
          {
            "const": "POINT"
          }
        ]
      },
      "RefundPaymentVendorEnum": {
        "oneOf": [
          {
            "const": "IAMPORT"
          },
          {
            "const": "TOSS_PAYMENTS"
          },
          {
            "const": "DRY_RUN"
          },
          {
            "const": "CONNECT_PAY"
          },
          {
            "const": "FREE"
          }
        ]
      },
      "PurchaseStateEnum": {
        "oneOf": [
          {
            "const": "WAIT"
          },
          {
            "const": "WAITING_FOR_DEPOSIT"
          },
          {
            "const": "COMPLETED"
          },
          {
            "const": "ABORTED"
          }
        ]
      },
      "MyOrderSummaryDto": {},
      "OrderSummaryDto": {
        "type": "object",
        "properties": {
          "totalProductPrice": {
            "type": "integer",
            "format": "int64"
          },
          "totalDeliveryPrice": {
            "type": "integer",
            "format": "int64"
          },
          "serviceCharge": {
            "type": "integer",
            "format": "int64"
          },
          "discountAmount": {
            "type": "integer",
            "format": "int64"
          },
          "finalPurchaseAmount": {
            "type": "integer",
            "format": "int64"
          },
          "usePoint": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "string",
            "description": "(deprecated) use orderId"
          },
          "orderId": {
            "type": "string"
          },
          "costElements": {
            "type": "array",
            "description": "- PriceSetDto の価格詳細を表現するためのフィールド - 徐々に拡張していくが、現在は送料に関する詳細情報のみ表示する.",
            "items": {
              "$ref": "#/components/schemas/CostElementDto"
            }
          },
          "appliedCouponCode": {
            "type": "string",
            "description": "appliedCoupon.coupon.codeでアクセスできるようにします.",
            "deprecated": true
          },
          "appliedCoupon": {
            "$ref": "#/components/schemas/IssuedCouponDto"
          },
          "itemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemGroupDto"
            }
          },
          "confirmedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "createdAtMillis": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PriceSetDeltaDto": {
        "type": "object",
        "required": [
          "totalProductPrice",
          "totalDeliveryPrice",
          "serviceCharge",
          "discountAmount",
          "finalPurchaseAmount"
        ],
        "properties": {
          "totalProductPrice": {
            "type": "integer",
            "format": "int64"
          },
          "totalDeliveryPrice": {
            "type": "integer",
            "format": "int64"
          },
          "serviceCharge": {
            "type": "integer",
            "format": "int64"
          },
          "discountAmount": {
            "type": "integer",
            "format": "int64"
          },
          "finalPurchaseAmount": {
            "type": "integer",
            "format": "int64"
          },
          "usePoint": {
            "type": "integer",
            "format": "int64"
          },
          "costElements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostElementDto"
            }
          }
        }
      },
      "DeliveryPriceDto": {
        "type": "object",
        "required": [
          "normal",
          "jeju",
          "backCountry"
        ],
        "properties": {
          "normal": {
            "type": "integer",
            "format": "int64"
          },
          "jeju": {
            "type": "integer",
            "format": "int64"
          },
          "backCountry": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PriceSetDto": {
        "type": "object",
        "required": [
          "totalProductPrice",
          "totalDeliveryPrice",
          "serviceCharge",
          "discountAmount",
          "finalPurchaseAmount"
        ],
        "properties": {
          "totalProductPrice": {
            "type": "integer",
            "format": "int64"
          },
          "totalDeliveryPrice": {
            "type": "integer",
            "format": "int64"
          },
          "serviceCharge": {
            "type": "integer",
            "format": "int64"
          },
          "discountAmount": {
            "type": "integer",
            "format": "int64"
          },
          "finalPurchaseAmount": {
            "type": "integer",
            "format": "int64"
          },
          "usePoint": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "MyOrderItemGroupDto": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string"
          },
          "mall": {
            "$ref": "#/components/schemas/MallDto"
          },
          "brand": {
            "$ref": "#/components/schemas/BrandDto"
          },
          "costElements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostElementDto"
            }
          },
          "deliveryPrice": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyOrderItemDto"
            }
          }
        }
      },
      "OrderItemGroupDto": {
        "type": "object",
        "required": [
          "groupId",
          "mall",
          "brand",
          "deliveryPrice",
          "items"
        ],
        "properties": {
          "groupId": {
            "type": "string"
          },
          "mall": {
            "$ref": "#/components/schemas/MallDto"
          },
          "brand": {
            "$ref": "#/components/schemas/BrandDto"
          },
          "costElements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostElementDto"
            }
          },
          "deliveryPrice": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          }
        }
      },
      "CostElementDto": {
        "type": "object",
        "required": [
          "type",
          "amount"
        ],
        "description": "- 価格の詳細情報を表現するDTO - 現在送料、返品費についてのみ詳細情報が存在する.",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CostTypeEnum"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CostTypeEnum": {
        "oneOf": [
          {
            "const": "SHIPPING_COST_NORMAL"
          },
          {
            "const": "SHIPPING_COST_JEJU"
          },
          {
            "const": "SHIPPING_COST_BACK_COUNTRY"
          },
          {
            "const": "RETURN_COST_NORMAL"
          },
          {
            "const": "RETURN_COST_JEJU"
          },
          {
            "const": "RETURN_COST_BACK_COUNTRY"
          },
          {
            "const": "RETURN_COST_TO_REFUND_FREE_SHIPPING"
          }
        ]
      },
      "MyOrderItemDto": {},
      "DividedOrderItemDto": {},
      "EachOLCEstimationDto": {
        "required": [
          "orderItemId",
          "quantity",
          "totalProductPrice",
          "totalDiscountAmount",
          "finalPurchaseAmount",
          "usePoint"
        ],
        "properties": {
          "orderItemId": {
            "type": "string"
          },
          "totalProductPrice": {
            "type": "integer",
            "format": "int64"
          },
          "finalPurchaseAmount": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiscountAmount": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "usePoint": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "EachOLREstimationDto": {
        "required": [
          "orderItemId",
          "quantity",
          "totalProductPrice",
          "totalDiscountAmount",
          "finalPurchaseAmount",
          "usePoint"
        ],
        "properties": {
          "orderItemId": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "totalProductPrice": {
            "type": "integer",
            "format": "int64"
          },
          "finalPurchaseAmount": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiscountAmount": {
            "type": "integer",
            "format": "int64"
          },
          "usePoint": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "OrderItemDto": {
        "required": [
          "id",
          "product",
          "productItem",
          "singlePrice",
          "quantity",
          "singleDirectDiscountAmount",
          "totalPrice",
          "state",
          "purchaseState",
          "delivery",
          "totalProductPrice",
          "finalPurchaseAmount",
          "totalDiscountAmount",
          "totalDirectDiscountAmount",
          "brand",
          "receiptConfirmation",
          "finalSinglePrice",
          "freeReturnTarget"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/ProductDto"
          },
          "productItem": {
            "$ref": "#/components/schemas/ProductItemDto"
          },
          "singlePrice": {
            "description": "商品価格（クイーンイット即割引反映されません）",
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "singleDirectDiscountAmount": {
            "description": "クイーンイット即時割引",
            "type": "integer",
            "format": "int64"
          },
          "totalPrice": {
            "description": "(deprecated) Use `totalProductPrice` instead.",
            "type": "integer",
            "format": "int64"
          },
          "totalProductPrice": {
            "description": "総商品価格（ `（singlePrice - singleDirectDiscountAmount）* quantity`）",
            "type": "integer",
            "format": "int64"
          },
          "finalPurchaseAmount": {
            "description": "実際のお支払い額(`totalProductPrice - totalDiscountAmount - usePoint`)",
            "type": "integer",
            "format": "int64"
          },
          "usePoint": {
            "description": "使用ポイント",
            "type": "integer",
            "format": "int64"
          },
          "totalDiscountAmount": {
            "description": "カートの合計クーポン割引額(``singleDiscountAmount* quantity + residueDiscountAmount`)",
            "type": "integer",
            "format": "int64"
          },
          "totalDirectDiscountAmount": {
            "description": "クイーン合計即時割引額(`singleDirectDiscountAmount* quantity`)",
            "type": "integer",
            "format": "int64"
          },
          "finalSinglePrice": {
            "description": "商品価格（ `singlePrice - singleDirectDiscountAmount`）",
            "type": "integer",
            "format": "int64"
          },
          "state": {
            "$ref": "#/components/schemas/OrderStateEnum"
          },
          "purchaseState": {
            "$ref": "#/components/schemas/OrderItemPurchaseStateEnum"
          },
          "delivery": {
            "$ref": "#/components/schemas/DeliveryProgressDto"
          },
          "primaryCancelTicket": {
            "$ref": "#/components/schemas/OLCTicketDto"
          },
          "primaryReturnTicket": {
            "$ref": "#/components/schemas/OLRTicketDto"
          },
          "brand": {
            "$ref": "#/components/schemas/BrandDto"
          },
          "receiptConfirmation": {
            "type": "boolean"
          },
          "receiptConfirmedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "freeReturnTarget": {
            "type": "boolean"
          }
        }
      },
      "DeliveryProgressDto": {
        "type": "object",
        "required": [
          "state"
        ],
        "properties": {
          "vendorName": {
            "type": "string"
          },
          "vendorDeliveryNumber": {
            "type": "string"
          },
          "detailUrl": {
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/DeliveryStateEnum"
          },
          "shippedAtMillis": {
            "description": "その注文が出荷された時点です。現在は配送中に変更された時間を意味します.",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DeliveryStateEnum": {
        "oneOf": [
          {
            "const": "WAIT"
          },
          {
            "const": "PREPARING"
          },
          {
            "const": "IN_DELIVERY"
          },
          {
            "const": "COMPLETED"
          },
          {
            "const": "CANCELLED"
          }
        ]
      },
      "OrderByEnum": {
        "oneOf": [
          {
            "const": "ASC"
          },
          {
            "const": "DESC"
          }
        ]
      },
      "ProductOrderByEnum": {
        "oneOf": [
          {
            "const": "RECOMMENDATION"
          },
          {
            "const": "POPULARITY"
          },
          {
            "const": "CREATED_AT_DESC"
          },
          {
            "const": "FINAL_PRICE_DESC"
          },
          {
            "const": "FINAL_PRICE_ASC"
          },
          {
            "const": "DISCOUNT_PERCENTAGE_DESC"
          },
          {
            "const": "REVIEW_COUNT_DESC"
          },
          {
            "const": "REVIEW_RATING_AVG_DESC"
          }
        ]
      },
      "OrderStateEnum": {
        "oneOf": [
          {
            "const": "WAIT"
          },
          {
            "const": "PURCHASED"
          },
          {
            "const": "REFUNDED"
          },
          {
            "const": "PREPARING_PRODUCTS"
          },
          {
            "const": "IN_DELIVERY"
          },
          {
            "const": "DELIVERY_COMPLETED"
          },
          {
            "const": "ABORTED"
          }
        ]
      },
      "OrderLineTicketStateEnum": {
        "oneOf": [
          {
            "const": "SUBMITTED"
          },
          {
            "const": "CONFIRMED"
          },
          {
            "const": "RESOLVED"
          },
          {
            "const": "WITHDRAWN"
          },
          {
            "const": "REJECTED"
          }
        ],
        "description": "キャンセル（返品）リクエストステータス - SUBMITTED：キャンセル（返品）が要求されました - CONFIRMED：キャンセル（返品）リクエストが承認されました（処理中） - RESOLVED：キャンセル（返品）リクエストが終了しました（顧客に返金された金額） - WITHDRAWN: キャンセル(返品)リクエストをお客様が撤回"
      },
      "OrderLineReturnStateEnum": {
        "oneOf": [
          {
            "const": "WAITING"
          },
          {
            "const": "IN_RECALL_DELIVERY_READY"
          },
          {
            "const": "IN_RECALL_DELIVERY_PROCESSING"
          },
          {
            "const": "RECALL_DELIVERY_COMPLETED"
          },
          {
            "const": "REJECTED"
          },
          {
            "const": "RESOLVED"
          },
          {
            "const": "WITHDRAWN"
          }
        ],
        "description": "返品依頼ステータス - WAITING：顧客が返品依頼し、売り手/アドミンの承認待ちを待っている状態ピックアップ後引き継いだ後、返品先住所に回収中。 （グッドスプロ連動でない場合はセラーによる回収中） - RECALL_DELIVERY_COMPLETED：（グッドスプロ連動の場合のみ） RESOLVED : 返品依頼が終了(顧客に金額払い戻し)"
      },
      "OrderLineTicketEnum": {
        "oneOf": [
          {
            "const": "CANCEL"
          },
          {
            "const": "RETURN"
          }
        ],
        "description": "- 注文書チケットタイプ - CANCEL：キャンセル - RETURN：返品"
      },
      "AuditorGroupEnum": {
        "oneOf": [
          {
            "const": "SYSTEM"
          },
          {
            "const": "CX_ADMIN"
          },
          {
            "const": "SELLER_ADMIN"
          },
          {
            "const": "USER"
          }
        ],
        "description": "チケットのステータスを変更したプリンシパル単位 - SYSTEM：システムによって自動的にステータスが変更される - CX_ADMIN：CXチームによってステータスが変更されました - SELLER_ADMIN：セラーによってステータスが変更されました - USER：顧客によってステータスが変更されました"
      },
      "OLCEstimationDto": {
        "type": "object",
        "required": [
          "priceDelta"
        ],
        "properties": {
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          },
          "priceDelta": {
            "$ref": "#/components/schemas/PriceSetDeltaDto"
          }
        }
      },
      "OLCEstimationResultDto": {
        "type": "object",
        "required": [
          "priceDelta",
          "eachEstimations"
        ],
        "properties": {
          "eachEstimations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EachOLCEstimationDto"
            }
          },
          "priceDelta": {
            "$ref": "#/components/schemas/PriceSetDeltaDto"
          },
          "refundPaymentInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundPaymentInfoDto"
            }
          }
        }
      },
      "OLCRequestDto": {
        "type": "object",
        "required": [
          "partials",
          "reason"
        ],
        "properties": {
          "partials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartialOrderItemDto"
            }
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "OLCTicketDto": {
        "type": "object",
        "required": [
          "ticketId",
          "state",
          "reason",
          "createdAtMillis",
          "orderItems"
        ],
        "properties": {
          "ticketId": {
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/OrderLineTicketStateEnum"
          },
          "auditorGroup": {
            "$ref": "#/components/schemas/AuditorGroupEnum"
          },
          "reason": {
            "type": "string"
          },
          "createdAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "confirmedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "withdrawnAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "rejectedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "rejectReason": {
            "type": "string"
          },
          "resolvedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "resolvedPriceDelta": {
            "$ref": "#/components/schemas/PriceSetDeltaDto"
          },
          "refundPaymentInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundPaymentInfoDto"
            }
          },
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          }
        }
      },
      "OrderLineCancelTicketWithOrderDto": {
        "type": "object",
        "properties": {
          "ticketId": {
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/OrderLineTicketStateEnum"
          },
          "auditorGroup": {
            "$ref": "#/components/schemas/AuditorGroupEnum"
          },
          "reason": {
            "type": "string"
          },
          "createdAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "confirmedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "withdrawnAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "rejectedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "rejectReason": {
            "type": "string"
          },
          "resolvedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "resolvedPriceDelta": {
            "$ref": "#/components/schemas/PriceSetDeltaDto"
          },
          "refundPaymentInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundPaymentInfoDto"
            }
          },
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          },
          "linkedOrder": {
            "$ref": "#/components/schemas/OrderHistoryDto"
          }
        }
      },
      "OLREstimateRequestDto": {
        "type": "object",
        "required": [
          "isCustomerNegligence",
          "partials"
        ],
        "properties": {
          "isCustomerNegligence": {
            "type": "boolean"
          },
          "partials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartialOrderItemDto"
            }
          }
        }
      },
      "OLREstimationResultDto": {
        "type": "object",
        "required": [
          "priceDelta",
          "eachEstimations"
        ],
        "properties": {
          "eachEstimations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EachOLREstimationDto"
            }
          },
          "priceDelta": {
            "$ref": "#/components/schemas/PriceSetDeltaDto"
          },
          "refundPaymentInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundPaymentInfoDto"
            }
          }
        }
      },
      "OLRRequestDto": {
        "type": "object",
        "required": [
          "partials",
          "isCustomerNegligence",
          "returnAddress",
          "reason"
        ],
        "properties": {
          "partials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartialOrderItemDto"
            }
          },
          "isCustomerNegligence": {
            "type": "boolean"
          },
          "returnAddress": {
            "$ref": "#/components/schemas/DeliveryAddressDto"
          },
          "reason": {
            "type": "string"
          },
          "imageUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OLRTicketDto": {
        "type": "object",
        "required": [
          "ticketId",
          "state",
          "returnState",
          "isCustomerNegligence",
          "returnAddress",
          "reason",
          "createdAtMillis",
          "orderItems"
        ],
        "properties": {
          "ticketId": {
            "type": "string"
          },
          "isCustomerNegligence": {
            "type": "boolean"
          },
          "returnAddress": {
            "$ref": "#/components/schemas/DeliveryAddressDto"
          },
          "state": {
            "$ref": "#/components/schemas/OrderLineTicketStateEnum"
          },
          "returnState": {
            "$ref": "#/components/schemas/OrderLineReturnStateEnum"
          },
          "auditorGroup": {
            "$ref": "#/components/schemas/AuditorGroupEnum"
          },
          "reason": {
            "type": "string"
          },
          "createdAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "confirmedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "withdrawnAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "rejectedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "rejectReason": {
            "type": "string"
          },
          "resolvedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "resolvedPriceDelta": {
            "$ref": "#/components/schemas/PriceSetDeltaDto"
          },
          "refundPaymentInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundPaymentInfoDto"
            }
          },
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          },
          "imageUrls": {
            "type": "array",
            "description": "original image urls",
            "items": {
              "type": "string"
            }
          },
          "multiResolutionImages": {
            "$ref": "#/components/schemas/MultiResolutionImageListDto"
          },
          "recallDeliveryProgress": {
            "$ref": "#/components/schemas/OLRTRecallDeliveryProgressDto"
          }
        }
      },
      "OLRTRecallDeliveryProgressDto": {
        "type": "object",
        "description": "nullの場合、GoodsFlow回収連動中の商品ではない",
        "properties": {
          "recallDeliveryVendor": {
            "$ref": "#/components/schemas/DeliveryVendorEnum"
          },
          "recallDeliveryVendorNumber": {
            "description": "請求書番号",
            "type": "string"
          },
          "requestable": {
            "description": "再回収要求可否",
            "type": "boolean"
          },
          "recallState": {
            "$ref": "#/components/schemas/RecallDeliveryStateEnum"
          },
          "recallDeliveryCompletedAtMillis": {
            "description": "回収完了日",
            "type": "integer",
            "format": "int64"
          },
          "recallDeliveryTraceUrl": {
            "description": "回収トラッキングURL",
            "type": "string"
          }
        }
      },
      "OrderLineReturnTicketWithOrderDto": {
        "type": "object",
        "properties": {
          "ticketId": {
            "type": "string"
          },
          "isCustomerNegligence": {
            "type": "boolean"
          },
          "returnAddress": {
            "$ref": "#/components/schemas/DeliveryAddressDto"
          },
          "state": {
            "$ref": "#/components/schemas/OrderLineTicketStateEnum"
          },
          "returnState": {
            "$ref": "#/components/schemas/OrderLineReturnStateEnum"
          },
          "auditorGroup": {
            "$ref": "#/components/schemas/AuditorGroupEnum"
          },
          "reason": {
            "type": "string"
          },
          "createdAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "confirmedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "withdrawnAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "rejectedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "rejectReason": {
            "type": "string"
          },
          "resolvedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "resolvedPriceDelta": {
            "$ref": "#/components/schemas/PriceSetDeltaDto"
          },
          "refundPaymentInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundPaymentInfoDto"
            }
          },
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          },
          "imageUrls": {
            "type": "array",
            "description": "original image urls",
            "items": {
              "type": "string"
            }
          },
          "multiResolutionImages": {
            "$ref": "#/components/schemas/MultiResolutionImageListDto"
          },
          "recallDeliveryProgress": {
            "$ref": "#/components/schemas/OLRTRecallDeliveryProgressDto"
          },
          "linkedOrder": {
            "$ref": "#/components/schemas/OrderHistoryDto"
          }
        }
      },
      "RefundPaymentInfoDto": {
        "type": "object",
        "description": "払い戻しのお支払い方法",
        "required": [
          "paymentMethod"
        ],
        "properties": {
          "paymentMethod": {
            "$ref": "#/components/schemas/RefundPaymentMethodEnum"
          },
          "paymentVendor": {
            "$ref": "#/components/schemas/RefundPaymentVendorEnum"
          },
          "detail": {
            "description": "払い戻し決済手段別詳細説明（カード決済の場合カード会社情報）",
            "type": "string"
          }
        }
      },
      "DeliveryVendorEnum": {
        "oneOf": [
          {
            "const": "CJ_GLS"
          },
          {
            "const": "LOGEN"
          },
          {
            "const": "EPOST"
          },
          {
            "const": "HANJIN"
          },
          {
            "const": "LOTTE"
          },
          {
            "const": "DAESIN"
          },
          {
            "const": "ILYANG"
          },
          {
            "const": "KYUNGDONG"
          },
          {
            "const": "HAPDONG"
          },
          {
            "const": "CHUNIL"
          },
          {
            "const": "CVSNET"
          },
          {
            "const": "HPL"
          },
          {
            "const": "KUNYOUNG"
          },
          {
            "const": "HONAM"
          },
          {
            "const": "SLX"
          },
          {
            "const": "BGF"
          },
          {
            "const": "YONGMA"
          },
          {
            "const": "SEBANG"
          },
          {
            "const": "WONDERS"
          },
          {
            "const": "NH_LOGIS"
          },
          {
            "const": "HI_LOGIS"
          },
          {
            "const": "HOMEPICK"
          },
          {
            "const": "KOREX_G"
          },
          {
            "const": "EMS"
          },
          {
            "const": "LOTTE_GLOBAL"
          },
          {
            "const": "HANDEX"
          },
          {
            "const": "DHL"
          },
          {
            "const": "FEDEX"
          },
          {
            "const": "UPS"
          },
          {
            "const": "TNT"
          },
          {
            "const": "PANTOS"
          },
          {
            "const": "ACI_EXPRESS"
          },
          {
            "const": "ACE_EXP"
          },
          {
            "const": "EUNHA"
          },
          {
            "const": "CHAIN_LOGISTICS"
          },
          {
            "const": "LOGISPOT"
          },
          {
            "const": "VROONG"
          },
          {
            "const": "ETOMARS"
          },
          {
            "const": "VENDORPIA"
          },
          {
            "const": "DAERIM"
          },
          {
            "const": "VALEX"
          },
          {
            "const": "ETC"
          },
          {
            "const": "SELF_MANAGED"
          }
        ],
        "description": "- （注文/請求書情報関連）設定可能な宅配会社 - 「ETC（その他配送会社）」 - &gt;特定の配送会社を使用していますが、現在サポートしていない宅配会社（その他配送会社のサポートが必要な場合は、別途お問い合わせください） - `SELF_MANAGED (直接配送)` -&gt; 直接配送する場合に使用 ## コード別連結される配送会社 - CJ_GLS # CJ大韓通運 - LOGEN # ローゼン宅配便 - EPOST # 郵便局宅配便 - HANJIN # 韓進宅配便 - LOTTE # ロッテ宅配便- DAESIN #大宅宅配便 - ILYANG # 日陽宅配便 - KYUNGDONG # 京東宅配便 - HAPDONG # 合同宅配便 - CHUNIL # 天日宅配便 - CVSNET # GSコンビニ宅配便 - HPL # 韓医愛宅配便 - KUNYOUNG # 建営宅配便 - HONAM SLX - BGF # CUコンビニ宅配便 - YONGMA # ヨンマロジス - SEBANG # セバン宅配便 - WONDERS # ワンダースクイック - NH_LOGIS # 農協宅配便 - HI_LOGIS # HI宅配便 - HOMEPICK # ホームピック宅配便 - KOREX_G # CJ大韓通運国際特典 - E LOTTE_GLOBAL #ロッテグローバル - HANDEX #ハンデックス - DHL # DHL - FEDEX # FEDEX - UPS # UPS - TNT # TNT - PANTOS # 汎ハンパントス - ACI_EXPRESS # ACI Express - ACE_EXP # ACE Express - EUNHA # 銀河シッピング - CHAIN_LOGISTヒーロー - LOGISPOT # ロッジスポット - VROONG # ブラン (VROONG) - ETOMARS # イトゥマス - VENDORPIA # エース物流 - DAERIM # 大林通運 - VALEX # バレックス - ETC # その他配送会社 - SELF_MANAGED # 直接配送"
      },
      "RecallDeliveryStateEnum": {
        "oneOf": [
          {
            "const": "WAIT"
          },
          {
            "const": "PREPARING"
          },
          {
            "const": "IN_DELIVERY"
          },
          {
            "const": "COMPLETED"
          },
          {
            "const": "CANCELED"
          },
          {
            "const": "FAILED"
          }
        ]
      },
      "BannerDto": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BannerTypeEnum"
          },
          "categoryId": {
            "type": "string"
          },
          "brandId": {
            "type": "string"
          },
          "brandSourcingTagId": {
            "type": "string"
          },
          "displayProductIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "displayProductCount": {
            "type": "integer"
          },
          "imageUrl": {
            "type": "string"
          },
          "linkUrl": {
            "type": "string"
          },
          "startAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "endAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "subTitle": {
            "type": "string"
          },
          "enabled": {
            "description": "(deprecated) enabled",
            "type": "boolean"
          },
          "note": {
            "description": "(deprecated) note",
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "multiResolutionImage": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "displayProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BannerDisplayProductDto"
            }
          }
        }
      },
      "BannerDisplayProductDto": {
        "type": "object",
        "required": [
          "productId",
          "imageUrl",
          "finalPrice",
          "title",
          "brandName",
          "discountPercentage"
        ],
        "properties": {
          "productId": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "finalPrice": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "description": "商品名",
            "type": "string"
          },
          "brandName": {
            "type": "string"
          },
          "discountPercentage": {
            "description": "originalPrice コントラスト finalPrice コントラスト商品割引率",
            "type": "integer",
            "format": "int32"
          },
          "maximumBenefitCouponAppliedFinalPrice": {
            "type": "integer",
            "format": "int64"
          },
          "originalToMaximumBenefitCouponPricePercentage": {
            "description": "originalPrice コントラスト maximumBenefitCouponAppliedFinalPrice コントラスト商品割引率",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BannerDataDto": {
        "type": "object",
        "required": [
          "type",
          "imageUrl",
          "linkUrl",
          "title",
          "enabled",
          "note"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BannerTypeEnum"
          },
          "categoryId": {
            "type": "string"
          },
          "brandId": {
            "type": "string"
          },
          "brandSourcingTagId": {
            "type": "string"
          },
          "displayProductIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "displayProductCount": {
            "type": "integer"
          },
          "imageUrl": {
            "type": "string"
          },
          "linkUrl": {
            "type": "string"
          },
          "startAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "endAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "subTitle": {
            "type": "string"
          },
          "enabled": {
            "description": "(deprecated) enabled",
            "type": "boolean"
          },
          "note": {
            "description": "(deprecated) note",
            "type": "string"
          }
        }
      },
      "BannerTypeEnum": {
        "oneOf": [
          {
            "const": "MAIN"
          },
          {
            "const": "STYLE"
          },
          {
            "const": "SUB"
          },
          {
            "const": "DISCOUNT"
          },
          {
            "const": "CATEGORY"
          },
          {
            "const": "BRAND"
          },
          {
            "const": "SECTION1"
          },
          {
            "const": "SECTION2"
          },
          {
            "const": "SPARE"
          },
          {
            "const": "BEST_TOP"
          },
          {
            "const": "DEPARTMENT_STORE"
          },
          {
            "const": "OUTLET"
          },
          {
            "const": "HOME_SHOPPING"
          },
          {
            "const": "SOHO_MALL"
          },
          {
            "const": "QUEENIT_EXCLUSIVE"
          },
          {
            "const": "DESIGNER"
          },
          {
            "const": "MAGAZINE"
          },
          {
            "const": "EVENT"
          },
          {
            "const": "BRAND_PROMOTION"
          },
          {
            "const": "SEARCH_HOME"
          },
          {
            "const": "MAIN_V2"
          }
        ],
        "description": "SECTIONX is deprecated"
      },
      "CollectionListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectionDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "CollectionDto": {
        "type": "object",
        "required": [
          "id",
          "title",
          "elements"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "elements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectionElementDto"
            }
          }
        }
      },
      "CollectionElementDto": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CollectionElementTypeEnum"
          },
          "text": {
            "$ref": "#/components/schemas/TextCollectionElementDto"
          },
          "image": {
            "$ref": "#/components/schemas/ImageCollectionElementDto"
          },
          "products": {
            "$ref": "#/components/schemas/ProductsCollectionElementDto"
          },
          "videos": {
            "$ref": "#/components/schemas/VideosCollectionElementDto"
          },
          "link": {
            "$ref": "#/components/schemas/LinkCollectionElementDto"
          },
          "campaign": {
            "$ref": "#/components/schemas/CampaignCollectionElementDto"
          },
          "coupon": {
            "$ref": "#/components/schemas/CouponCollectionElementDto"
          },
          "imageLink": {
            "$ref": "#/components/schemas/ImageLinkCollectionElementDto"
          },
          "markdown": {
            "$ref": "#/components/schemas/MarkdownCollectionElementDto"
          },
          "pointPromotion": {
            "$ref": "#/components/schemas/PointPromotionCollectionElementDto"
          },
          "attendanceCheck": {
            "$ref": "#/components/schemas/AttendanceCheckCollectionElementDto"
          }
        }
      },
      "TextCollectionElementDto": {
        "type": "object",
        "required": [
          "type",
          "text"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CollectionTextTypeEnum"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "CollectionTextTypeEnum": {
        "oneOf": [
          {
            "const": "TITLE"
          },
          {
            "const": "SUBTITLE"
          },
          {
            "const": "BODY"
          },
          {
            "const": "DESCRIPTION"
          }
        ]
      },
      "ImageCollectionElementDto": {
        "required": [
          "imageUrl"
        ],
        "type": "object",
        "properties": {
          "imageUrl": {
            "type": "string"
          }
        }
      },
      "ImageLinkCollectionElementDto": {
        "type": "object",
        "required": [
          "imageUrl",
          "linkUrl"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ImageLinkTypeEnum"
          },
          "imageUrl": {
            "type": "string"
          },
          "linkUrl": {
            "type": "string"
          },
          "campaign": {
            "type": "string"
          }
        }
      },
      "ProductsCollectionElementDto": {
        "type": "object",
        "required": [
          "columnCount",
          "products",
          "freeReturnTargetProductIds"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "columnCount": {
            "type": "integer",
            "format": "int32"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDto"
            }
          },
          "freeReturnTargetProductIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FreeReturnTargetFilterTypeEnum": {
        "oneOf": [
          {
            "const": "WHITELIST"
          },
          {
            "const": "BLACKLIST"
          }
        ]
      },
      "FreeReturnTargetTypeEnum": {
        "const": "PRODUCT"
      },
      "FreeReturnPromotionTargetTypeEnum": {
        "oneOf": [
          {
            "const": "PRODUCT"
          },
          {
            "const": "BRAND_SOURCING"
          }
        ]
      },
      "VideosCollectionElementDto": {
        "type": "object",
        "required": [
          "ids",
          "isLandscape"
        ],
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isLandscape": {
            "type": "boolean"
          }
        }
      },
      "OrientationTypeEnum": {
        "oneOf": [
          {
            "const": "PORTRAIT"
          },
          {
            "const": "LANDSCAPE"
          }
        ]
      },
      "LinkCollectionElementDto": {
        "type": "object",
        "required": [
          "imageUrl",
          "linkUrl"
        ],
        "properties": {
          "imageUrl": {
            "type": "string"
          },
          "linkUrl": {
            "type": "string"
          },
          "campaign": {
            "type": "string"
          }
        }
      },
      "CampaignCollectionElementDto": {
        "type": "object",
        "required": [
          "imageUrl",
          "campaign"
        ],
        "properties": {
          "imageUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "campaign": {
            "type": "string"
          }
        }
      },
      "CouponCollectionElementDto": {
        "type": "object",
        "required": [
          "imageUrl",
          "couponCode"
        ],
        "properties": {
          "imageUrl": {
            "type": "string"
          },
          "couponCode": {
            "type": "string"
          },
          "campaign": {
            "type": "string"
          }
        }
      },
      "MarkdownCollectionElementDto": {
        "type": "object",
        "required": [
          "markdown"
        ],
        "properties": {
          "markdown": {
            "type": "string"
          }
        }
      },
      "PointPromotionCollectionElementDto": {
        "type": "object",
        "required": [
          "promotionCode",
          "imageUrl"
        ],
        "properties": {
          "promotionCode": {
            "description": "獲得金プロモーションコード",
            "type": "string"
          },
          "amount": {
            "description": "プロモーション出席で受け取る獲得金の数量",
            "type": "integer",
            "format": "int64"
          },
          "imageUrl": {
            "description": "積立金画像URL",
            "type": "string"
          },
          "campaign": {
            "description": "メモ用途のフィールド",
            "type": "string"
          }
        }
      },
      "AttendanceCheckCollectionElementDto": {
        "type": "object",
        "required": [
          "title",
          "imageUrl",
          "kstStartDate",
          "kstEndDate",
          "numberOfAttendance",
          "attendanceRewardPolicies"
        ],
        "properties": {
          "id": {
            "description": "出席チェックid",
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "imageUrl": {
            "description": "出席チェック画像URL",
            "type": "string"
          },
          "kstStartDate": {
            "type": "string",
            "description": "yyyy-mm-dd形式の日付"
          },
          "kstEndDate": {
            "type": "string",
            "description": "yyyy-mm-dd形式の日付"
          },
          "numberOfAttendance": {
            "type": "integer",
            "format": "int64"
          },
          "attendanceRewardPolicies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttendanceRewardPolicyCollectionElementDto"
            }
          }
        }
      },
      "AttendanceRewardPolicyCollectionElementDto": {
        "type": "object",
        "required": [
          "type",
          "pointAmount",
          "pointExpireDays"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AttendanceRewardPolicyTypeEnum"
          },
          "pointAmount": {
            "type": "integer",
            "format": "int64"
          },
          "pointExpireDays": {
            "type": "integer"
          }
        }
      },
      "AttendanceRewardPolicyTypeEnum": {
        "oneOf": [
          {
            "const": "DAILY_REWARD"
          },
          {
            "const": "ACHIEVEMENT_REWARD"
          }
        ]
      },
      "ImageLinkTypeEnum": {
        "oneOf": [
          {
            "const": "COUPON"
          },
          {
            "const": "LINK"
          }
        ]
      },
      "CollectionElementTypeEnum": {
        "oneOf": [
          {
            "const": "TEXT"
          },
          {
            "const": "IMAGE"
          },
          {
            "const": "PRODUCTS"
          },
          {
            "const": "VIDEOS"
          },
          {
            "const": "LINK"
          },
          {
            "const": "CAMPAIGN"
          },
          {
            "const": "COUPON"
          },
          {
            "const": "IMAGELINK"
          },
          {
            "const": "MARKDOWN"
          },
          {
            "const": "POINT_PROMOTION"
          },
          {
            "const": "ATTENDANCE_CHECK"
          }
        ]
      },
      "UploadProductPageRequest": {
        "type": "object",
        "required": [
          "base64"
        ],
        "properties": {
          "base64": {
            "type": "string"
          }
        }
      },
      "CouponBookDto": {
        "type": "object",
        "required": [
          "code",
          "header",
          "title",
          "contents",
          "pairContents",
          "asset",
          "coupons"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "header": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "contents": {
            "type": "string"
          },
          "pairContents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentsPairDto"
            }
          },
          "asset": {
            "$ref": "#/components/schemas/CouponBookAssetDto"
          },
          "coupons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppCouponDto"
            }
          }
        }
      },
      "CouponBookAssetDto": {
        "type": "object",
        "required": [
          "primaryColor"
        ],
        "properties": {
          "primaryColor": {
            "$ref": "#/components/schemas/ColorGradientDto"
          },
          "contentImageUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionContentImage": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "stickerImageUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionStickerImage": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          }
        }
      },
      "ContentsPairDto": {
        "type": "object",
        "required": [
          "first",
          "second"
        ],
        "properties": {
          "first": {
            "type": "string"
          },
          "second": {
            "type": "string"
          }
        }
      },
      "ColorGradientDto": {
        "type": "object",
        "required": [
          "startColorCode",
          "endColorCode"
        ],
        "properties": {
          "startColorCode": {
            "type": "string",
            "description": "start of gradient color code. (ex.\\#AABBCC)"
          },
          "endColorCode": {
            "type": "string",
            "description": "end of gradient color code. (ex.\\#DDEEFF)"
          }
        }
      },
      "IssuedCouponWhenOrderDto": {
        "type": "object",
        "properties": {
          "issuedCouponId": {
            "type": "integer",
            "format": "int64"
          },
          "coupon": {
            "$ref": "#/components/schemas/CouponDto"
          },
          "state": {
            "$ref": "#/components/schemas/IssuedCouponStateEnum"
          },
          "issuedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "activatingAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "expiringAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "linkUrl": {
            "type": "string"
          },
          "discountableAmount": {
            "type": "integer",
            "format": "int64"
          },
          "consumable": {
            "type": "boolean"
          }
        }
      },
      "IssuedCouponDto": {
        "type": "object",
        "required": [
          "issuedCouponId",
          "coupon",
          "state",
          "issuedAtMillis",
          "activatingAtMillis"
        ],
        "properties": {
          "issuedCouponId": {
            "type": "integer",
            "format": "int64"
          },
          "coupon": {
            "$ref": "#/components/schemas/CouponDto"
          },
          "state": {
            "$ref": "#/components/schemas/IssuedCouponStateEnum"
          },
          "issuedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "activatingAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "expiringAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "linkUrl": {
            "type": "string"
          }
        }
      },
      "IssuedCouponStateEnum": {
        "oneOf": [
          {
            "const": "CONSUMED"
          },
          {
            "const": "EXPIRED"
          },
          {
            "const": "ACTIVATED"
          },
          {
            "const": "DISABLED"
          }
        ]
      },
      "CouponDto": {
        "type": "object",
        "required": [
          "code",
          "title",
          "caution",
          "conditionSummary",
          "type"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "manager": {
            "type": "string"
          },
          "caution": {
            "type": "string"
          },
          "conditionSummary": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/CouponTypeEnum"
          },
          "discountAmount": {
            "type": "integer",
            "format": "int64",
            "description": "field for CouponTypeEnum.DISCOUNT_BY_AMOUNT type."
          },
          "discountPercentage": {
            "type": "integer",
            "format": "int64",
            "description": "field for CouponTypeEnum.DISCOUNT_BY_PERCENTAGE type."
          },
          "maxDiscountAmount": {
            "type": "integer",
            "format": "int64",
            "description": "field for CouponTypeEnum.DISCOUNT_BY_PERCENTAGE type."
          },
          "specialPrice": {
            "type": "integer",
            "format": "int64",
            "description": "field for CouponTypeEnum.SPECIAL_PRICE type."
          }
        }
      },
      "AppCouponDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "manager": {
            "type": "string"
          },
          "caution": {
            "type": "string"
          },
          "conditionSummary": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/CouponTypeEnum"
          },
          "discountAmount": {
            "type": "integer",
            "format": "int64",
            "description": "field for CouponTypeEnum.DISCOUNT_BY_AMOUNT type."
          },
          "discountPercentage": {
            "type": "integer",
            "format": "int64",
            "description": "field for CouponTypeEnum.DISCOUNT_BY_PERCENTAGE type."
          },
          "maxDiscountAmount": {
            "type": "integer",
            "format": "int64",
            "description": "field for CouponTypeEnum.DISCOUNT_BY_PERCENTAGE type."
          },
          "specialPrice": {
            "type": "integer",
            "format": "int64",
            "description": "field for CouponTypeEnum.SPECIAL_PRICE type."
          },
          "consumableCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CouponDetailDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "manager": {
            "type": "string"
          },
          "caution": {
            "type": "string"
          },
          "conditionSummary": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/CouponTypeEnum"
          },
          "discountAmount": {
            "type": "integer",
            "format": "int64",
            "description": "field for CouponTypeEnum.DISCOUNT_BY_AMOUNT type."
          },
          "discountPercentage": {
            "type": "integer",
            "format": "int64",
            "description": "field for CouponTypeEnum.DISCOUNT_BY_PERCENTAGE type."
          },
          "maxDiscountAmount": {
            "type": "integer",
            "format": "int64",
            "description": "field for CouponTypeEnum.DISCOUNT_BY_PERCENTAGE type."
          },
          "specialPrice": {
            "type": "integer",
            "format": "int64",
            "description": "field for CouponTypeEnum.SPECIAL_PRICE type."
          },
          "expirationPolicy": {
            "$ref": "#/components/schemas/CouponExpirationPolicyDto"
          }
        }
      },
      "CouponExpirationPolicyDto": {
        "type": "object",
        "properties": {
          "durationSecondsSinceHold": {
            "type": "integer",
            "format": "int64"
          },
          "startAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "endAtMillis": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AppCouponListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppCouponDto"
            }
          },
          "maximumDiscountCouponAppliedPrice": {
            "description": "- 最大クーポン割引が適用された価格 - このフィールドの値が「null」の場合 - &gt;最大割引を計算するための条件を満たすクーポンがないと見なす",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CouponTypeEnum": {
        "oneOf": [
          {
            "const": "DISCOUNT_BY_AMOUNT"
          },
          {
            "const": "DISCOUNT_BY_PERCENTAGE"
          },
          {
            "const": "SPECIAL_PRICE"
          }
        ]
      },
      "ApplyCouponRequestDto": {
        "type": "object",
        "required": [
          "issuedCouponId"
        ],
        "properties": {
          "issuedCouponId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApplyPointRequestDto": {
        "type": "object",
        "required": [
          "usePoint"
        ],
        "properties": {
          "usePoint": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ReleaseCouponResponseDto": {
        "type": "object",
        "required": [
          "priceSet",
          "orderSummary"
        ],
        "properties": {
          "priceSet": {
            "$ref": "#/components/schemas/PriceSetDto"
          },
          "orderSummary": {
            "$ref": "#/components/schemas/OrderSummaryDto"
          }
        }
      },
      "ApplyCouponResponseDto": {
        "type": "object",
        "required": [
          "priceSet",
          "orderSummary"
        ],
        "properties": {
          "priceSet": {
            "$ref": "#/components/schemas/PriceSetDto"
          },
          "orderSummary": {
            "$ref": "#/components/schemas/OrderSummaryDto"
          }
        }
      },
      "ApplyPointResponseDto": {
        "type": "object",
        "required": [
          "priceSet",
          "orderSummary"
        ],
        "properties": {
          "priceSet": {
            "$ref": "#/components/schemas/PriceSetDto"
          },
          "orderSummary": {
            "$ref": "#/components/schemas/OrderSummaryDto"
          }
        }
      },
      "ProductPriceDto": {
        "type": "object",
        "required": [
          "originalPrice",
          "sellingPrice"
        ],
        "properties": {
          "originalPrice": {
            "type": "integer",
            "format": "int64",
            "description": "定価"
          },
          "sellingPrice": {
            "type": "integer",
            "format": "int64",
            "description": "販売価格"
          }
        }
      },
      "ProductDiscountBenefitsDto": {
        "type": "object",
        "required": [
          "discountBenefitsByCoupon",
          "discountBenefitsByPoint"
        ],
        "properties": {
          "discountBenefitsByCoupon": {
            "$ref": "#/components/schemas/ProductDiscountBenefitsInfoByCouponDto"
          },
          "discountBenefitsByPoint": {
            "type": "integer",
            "format": "int64",
            "description": "利用可能なポイント額"
          }
        }
      },
      "ProductDiscountBenefitsInfoByCouponDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDiscountBenefitsInfoByCouponElementDto"
            }
          }
        }
      },
      "ProductDiscountBenefitsInfoByCouponElementDto": {
        "type": "object",
        "required": [
          "title",
          "couponCode",
          "discountAmount"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "couponCode": {
            "type": "string"
          },
          "discountAmount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CheckFirstKakaoLoginCouponIssuableResponseDto": {
        "type": "object",
        "required": [
          "isIssuable"
        ],
        "properties": {
          "isIssuable": {
            "type": "boolean"
          }
        }
      },
      "AgeGroupFilterListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgeGroupFilterDto"
            }
          }
        }
      },
      "AgeGroupFilterDto": {
        "type": "object",
        "required": [
          "code",
          "alias"
        ],
        "properties": {
          "code": {
            "$ref": "#/components/schemas/AgeGroupCodeEnum"
          },
          "alias": {
            "type": "string"
          }
        }
      },
      "CreatableReviewPromptDto": {
        "type": "object",
        "properties": {
          "myOrderItem": {
            "$ref": "#/components/schemas/MyOrderItemDto"
          }
        }
      },
      "DisplayProductReviewListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisplayProductReviewDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "DisplayProductReviewListDtoV2": {
        "type": "object",
        "required": [
          "list",
          "totalPageCount",
          "totalElementCount"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisplayProductReviewDto"
            }
          },
          "totalPageCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalElementCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RepresentativeProductReviewListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisplayProductReviewDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "DisplayProductReviewDto": {
        "type": "object",
        "required": [
          "productReview",
          "optionTitle",
          "userProfileDisplayPolicy",
          "favoriteData"
        ],
        "properties": {
          "productReview": {
            "$ref": "#/components/schemas/ProductReviewDto"
          },
          "optionTitle": {
            "type": "string"
          },
          "userProfileDisplayPolicy": {
            "$ref": "#/components/schemas/UserProfileDisplayPolicyDto"
          },
          "favoriteData": {
            "$ref": "#/components/schemas/ProductReviewFavoriteDataDto"
          }
        }
      },
      "ProductReviewListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductReviewDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "ProductReviewDto": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ProductReviewAttributeDto"
          },
          "rating": {
            "$ref": "#/components/schemas/ProductRatingEnum"
          },
          "size": {
            "$ref": "#/components/schemas/ProductSizeEnum"
          },
          "brightness": {
            "$ref": "#/components/schemas/ProductBrightnessEnum"
          },
          "colorSense": {
            "$ref": "#/components/schemas/ProductColorSenseEnum"
          },
          "thickness": {
            "$ref": "#/components/schemas/ProductThicknessEnum"
          },
          "contents": {
            "type": "string"
          },
          "imageUrls": {
            "description": "DEPRECATED",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "multiResolutionImages": {
            "$ref": "#/components/schemas/MultiResolutionImageListDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "uid": {
            "type": "string"
          },
          "createdAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "userProfile": {
            "$ref": "#/components/schemas/UserProfileDto"
          }
        }
      },
      "ProductReviewFavoriteDataDto": {
        "type": "object",
        "required": [
          "favoriteCount",
          "isMyFavorite"
        ],
        "properties": {
          "favoriteCount": {
            "type": "integer",
            "format": "int64"
          },
          "isMyFavorite": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "UpdateProductReviewRequestDto": {
        "type": "object",
        "required": [
          "reviewData"
        ],
        "properties": {
          "reviewData": {
            "$ref": "#/components/schemas/ProductReviewDataDto"
          }
        }
      },
      "ProductCategoryReviewAttributeDto": {
        "type": "object",
        "required": [
          "productCategoryReviewGroupId",
          "label",
          "list",
          "guide"
        ],
        "properties": {
          "productCategoryReviewGroupId": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryReviewAttributeItemDto"
            }
          },
          "guide": {
            "$ref": "#/components/schemas/ProductCategoryReviewGuideDto"
          }
        }
      },
      "ProductReviewAttributeDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductReviewAttributeItemDto"
            }
          }
        }
      },
      "ProductCategoryReviewAttributeItemDto": {
        "type": "object",
        "required": [
          "code",
          "label",
          "options"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductReviewAttributeOptionItemDto"
            }
          }
        }
      },
      "ProductReviewAttributeItemDto": {
        "type": "object",
        "required": [
          "code",
          "label",
          "selectedOptions"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "selectedOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductReviewAttributeOptionItemDto"
            }
          }
        }
      },
      "ProductReviewAttributeOptionItemDto": {
        "type": "object",
        "required": [
          "code",
          "label"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "ProductCategoryReviewGuideDto": {
        "type": "object",
        "required": [
          "textGuides",
          "imageWithTitles"
        ],
        "properties": {
          "textGuides": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "imageWithTitles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryReviewGuideImageWithTitleDto"
            }
          }
        }
      },
      "ProductCategoryReviewGuideImageWithTitleDto": {
        "type": "object",
        "required": [
          "imageUrl",
          "title"
        ],
        "properties": {
          "imageUrl": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "ProductReviewDataDto": {
        "type": "object",
        "required": [
          "rating"
        ],
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ProductReviewAttributeDto"
          },
          "rating": {
            "$ref": "#/components/schemas/ProductRatingEnum"
          },
          "size": {
            "$ref": "#/components/schemas/ProductSizeEnum"
          },
          "brightness": {
            "$ref": "#/components/schemas/ProductBrightnessEnum"
          },
          "colorSense": {
            "$ref": "#/components/schemas/ProductColorSenseEnum"
          },
          "thickness": {
            "$ref": "#/components/schemas/ProductThicknessEnum"
          },
          "contents": {
            "type": "string"
          },
          "imageUrls": {
            "description": "DEPRECATED",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "multiResolutionImages": {
            "$ref": "#/components/schemas/MultiResolutionImageListDto"
          }
        }
      },
      "UserProfileDisplayPolicyDto": {
        "type": "object",
        "required": [
          "displayItemsOfUserProfile"
        ],
        "properties": {
          "displayItemsOfUserProfile": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserProfileItemEnum"
            }
          }
        }
      },
      "UserProfileItemEnum": {
        "oneOf": [
          {
            "const": "HEIGHT_AS_CENTI_METER"
          },
          {
            "const": "WEIGHT_AS_KILO_GRAM"
          },
          {
            "const": "TOP_SIZE"
          },
          {
            "const": "BOTTOM_SIZE_AS_INCH"
          },
          {
            "const": "SHOE_SIZE_AS_MILLI_METER"
          },
          {
            "const": "AGE"
          }
        ]
      },
      "ProductReviewCandidateListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductReviewCandidateDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "ProductReviewCandidateDto": {
        "type": "object",
        "required": [
          "myOrderItem"
        ],
        "properties": {
          "myOrderItem": {
            "$ref": "#/components/schemas/MyOrderItemDto"
          }
        }
      },
      "MyProductReviewListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyProductReviewDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "MyProductReviewDto": {
        "type": "object",
        "required": [
          "myOrderItem"
        ],
        "properties": {
          "myOrderItem": {
            "$ref": "#/components/schemas/MyOrderItemDto"
          }
        }
      },
      "ProductReviewItemListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProductReviewStatisticsAttributeDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductReviewStatisticsAttributeItemDto"
            }
          }
        }
      },
      "ProductReviewStatisticsAttributeItemDto": {
        "type": "object",
        "required": [
          "code",
          "label",
          "options"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductReviewStatisticsAttributeOptionItemDto"
            }
          }
        }
      },
      "ProductReviewStatisticsAttributeOptionItemDto": {
        "type": "object",
        "required": [
          "code",
          "label",
          "count"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProductReviewStatisticsSummaryDto": {
        "type": "object",
        "required": [
          "ratingAverage",
          "reviewCounts"
        ],
        "properties": {
          "ratingAverage": {
            "type": "number",
            "format": "double"
          },
          "reviewCounts": {
            "type": "integer",
            "format": "int64"
          },
          "attributes": {
            "$ref": "#/components/schemas/ProductReviewStatisticsAttributeDto"
          },
          "satisfactionPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "topPercentageOfSize": {
            "$ref": "#/components/schemas/ProductSizePercentageDto"
          },
          "topPercentageOfBrightness": {
            "$ref": "#/components/schemas/ProductBrightnessPercentageDto"
          },
          "topPercentageOfColorSense": {
            "$ref": "#/components/schemas/ProductColorSensePercentageDto"
          },
          "topPercentageOfThickness": {
            "$ref": "#/components/schemas/ProductThicknessPercentageDto"
          }
        }
      },
      "ProductRatingStatisticsDto": {
        "type": "object",
        "required": [
          "percentages"
        ],
        "properties": {
          "percentages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductRatingPercentageDto"
            }
          }
        }
      },
      "ProductRatingPercentageDto": {
        "type": "object",
        "required": [
          "rating",
          "percentage"
        ],
        "properties": {
          "rating": {
            "$ref": "#/components/schemas/ProductRatingEnum"
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductReviewSortOrderEnum": {
        "oneOf": [
          {
            "const": "CREATED_AT_DESC"
          },
          {
            "const": "CREATED_AT_ASC"
          },
          {
            "const": "REPORT_COUNT_DESC"
          },
          {
            "const": "RECOMMENDATION"
          },
          {
            "const": "REVIEW_RATING_DESC"
          },
          {
            "const": "REVIEW_RATING_ASC"
          }
        ]
      },
      "ProductRatingEnum": {
        "oneOf": [
          {
            "const": 1
          },
          {
            "const": 2
          },
          {
            "const": 3
          },
          {
            "const": 4
          },
          {
            "const": 5
          }
        ],
        "x-enum-varnames": [
          "BAD",
          "NOT_BAD",
          "NORMAL",
          "GOOD",
          "BEST"
        ]
      },
      "ProductSizeStatisticsDto": {
        "type": "object",
        "required": [
          "percentages"
        ],
        "properties": {
          "percentages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSizePercentageDto"
            }
          }
        }
      },
      "ProductSizePercentageDto": {
        "type": "object",
        "required": [
          "size"
        ],
        "properties": {
          "size": {
            "$ref": "#/components/schemas/ProductSizeEnum"
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductSizeEnum": {
        "oneOf": [
          {
            "const": "SMALL"
          },
          {
            "const": "FITTED"
          },
          {
            "const": "BIG"
          }
        ]
      },
      "ProductBrightnessStatisticsDto": {
        "type": "object",
        "required": [
          "percentages"
        ],
        "properties": {
          "percentages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductBrightnessPercentageDto"
            }
          }
        }
      },
      "ProductBrightnessPercentageDto": {
        "type": "object",
        "required": [
          "brightness"
        ],
        "properties": {
          "brightness": {
            "$ref": "#/components/schemas/ProductBrightnessEnum"
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductBrightnessEnum": {
        "oneOf": [
          {
            "const": "DARK"
          },
          {
            "const": "SAME_AS_PHOTO"
          },
          {
            "const": "BRIGHT"
          }
        ]
      },
      "ProductColorSenseStatisticsDto": {
        "type": "object",
        "required": [
          "percentages"
        ],
        "properties": {
          "percentages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductColorSensePercentageDto"
            }
          }
        }
      },
      "ProductColorSensePercentageDto": {
        "type": "object",
        "required": [
          "colorSense"
        ],
        "properties": {
          "colorSense": {
            "$ref": "#/components/schemas/ProductColorSenseEnum"
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductColorSenseEnum": {
        "oneOf": [
          {
            "const": "BLURRY"
          },
          {
            "const": "SAME_AS_PHOTO"
          },
          {
            "const": "VIVID"
          }
        ]
      },
      "ProductThicknessStatisticsDto": {
        "type": "object",
        "required": [
          "precentages"
        ],
        "properties": {
          "percentages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductThicknessPercentageDto"
            }
          }
        }
      },
      "ProductThicknessPercentageDto": {
        "type": "object",
        "required": [
          "thickness"
        ],
        "properties": {
          "thickness": {
            "$ref": "#/components/schemas/ProductThicknessEnum"
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductThicknessEnum": {
        "oneOf": [
          {
            "const": "THIN"
          },
          {
            "const": "NORMAL"
          },
          {
            "const": "THICK"
          }
        ]
      },
      "ProductReviewReportDto": {
        "type": "object",
        "required": [
          "reason"
        ],
        "properties": {
          "reason": {
            "type": "string"
          }
        }
      },
      "UserBirthYearDto": {
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserProfileDto": {
        "type": "object",
        "properties": {
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "birthYear": {
            "type": "integer",
            "format": "int32"
          },
          "bodySizeData": {
            "$ref": "#/components/schemas/UserBodySizeDataDto"
          }
        }
      },
      "UserBodySizeDataDto": {
        "type": "object",
        "properties": {
          "heightAsCentiMeter": {
            "type": "integer",
            "format": "int32"
          },
          "weightAsKiloGram": {
            "type": "integer",
            "format": "int32"
          },
          "topSize": {
            "type": "integer",
            "format": "int32"
          },
          "bottomSizeAsInch": {
            "type": "integer",
            "format": "int32"
          },
          "shoeSizeAsMilliMeter": {
            "type": "integer",
            "format": "int32"
          },
          "valid": {
            "type": "boolean"
          }
        }
      },
      "ExternalUidDto": {
        "type": "object",
        "properties": {
          "externalUid": {
            "type": "string"
          }
        }
      },
      "ConnectPayCredentialDto": {
        "type": "object",
        "required": [
          "clientKey",
          "customerKey",
          "redirectUrl"
        ],
        "properties": {
          "clientKey": {
            "type": "string",
            "description": "コネクトペイ JS SDK 認証用 clientKey"
          },
          "customerKey": {
            "type": "string",
            "description": "お支払いリクエストに使用されるユーザーの external uid"
          },
          "redirectUrl": {
            "type": "string",
            "description": "ConnectPay OAuth認証に使用されるredirect url"
          }
        }
      },
      "PaymentMethodResponseDto": {
        "type": "object",
        "required": [
          "cards",
          "accounts"
        ],
        "properties": {
          "cards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardPaymentDto"
            }
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountPaymentDto"
            }
          }
        }
      },
      "CardPaymentDto": {
        "type": "object",
        "required": [
          "methodId",
          "cardCompany",
          "cardName",
          "iconUrl",
          "maskedCardNumber",
          "enabled",
          "registeredAtMillis"
        ],
        "properties": {
          "methodId": {
            "type": "string",
            "description": "決済手段Id、コネクトペイ決済要求に使用"
          },
          "cardCompany": {
            "$ref": "#/components/schemas/TossPaymentCardEnum"
          },
          "unknownCardCompanyName": {
            "type": "string",
            "description": "cardCompany の値が `UNKNOWN` の場合は該当するカード会社の名前、unknown でない場合 null"
          },
          "cardName": {
            "type": "string",
            "description": "カード名"
          },
          "iconUrl": {
            "type": "string",
            "description": "カード会社アイコン画像url"
          },
          "maskedCardNumber": {
            "type": "string",
            "description": "マスクされたカード番号"
          },
          "enabled": {
            "type": "boolean"
          },
          "registeredAtMillis": {
            "type": "integer",
            "format": "int64",
            "description": "登録日"
          }
        }
      },
      "AccountPaymentDto": {
        "type": "object",
        "required": [
          "methodId",
          "bank",
          "iconUrl",
          "maskedAccountNumber",
          "enabled",
          "registeredAtMillis"
        ],
        "properties": {
          "methodId": {
            "type": "string",
            "description": "決済手段Id、コネクトペイ決済要求に使用"
          },
          "bank": {
            "$ref": "#/components/schemas/TossPaymentAccountEnum"
          },
          "unknownBankName": {
            "type": "string",
            "description": "bank値が `UNKNOWN`の場合は対応する銀行の名前、unknownでない場合はnull"
          },
          "iconUrl": {
            "type": "string",
            "description": "銀行アイコン画像URL"
          },
          "maskedAccountNumber": {
            "type": "string",
            "description": "マスクされた口座番号"
          },
          "enabled": {
            "type": "boolean"
          },
          "registeredAtMillis": {
            "type": "integer",
            "format": "int64",
            "description": "登録日"
          }
        }
      },
      "TierDto": {
        "type": "object",
        "required": [
          "uid",
          "totalPurchaseAmount",
          "tierRankType"
        ],
        "properties": {
          "uid": {
            "description": "ユーザーID",
            "type": "string"
          },
          "totalPurchaseAmount": {
            "description": "累積購入確定金額（過去3ヶ月値購入確定金額、ex-8月7日照会時5,6,7月統計総合金額）",
            "type": "integer",
            "format": "int64"
          },
          "tierRankType": {
            "$ref": "#/components/schemas/TierRankTypeEnum"
          }
        }
      },
      "TierRankTypeEnum": {
        "oneOf": [
          {
            "const": "DIAMOND"
          },
          {
            "const": "PLATINUM"
          },
          {
            "const": "GOLD"
          },
          {
            "const": "SILVER"
          }
        ],
        "description": "ティアタイプ"
      },
      "NextTierInfoDto": {
        "type": "object",
        "required": [
          "uid",
          "nextTierRankType",
          "startTierRankTypeForGraph",
          "endTierRankTypeForGraph",
          "totalPurchaseAmount",
          "remainAmount",
          "startAtMillis"
        ],
        "properties": {
          "uid": {
            "description": "ユーザーID",
            "type": "string"
          },
          "nextTierRankType": {
            "$ref": "#/components/schemas/TierRankTypeEnum"
          },
          "startTierRankTypeForGraph": {
            "$ref": "#/components/schemas/TierRankTypeEnum"
          },
          "endTierRankTypeForGraph": {
            "$ref": "#/components/schemas/TierRankTypeEnum"
          },
          "totalPurchaseAmount": {
            "description": "累積購入確定金額（過去2ヶ月統計量+照会月リアルタイム購入確定金額）",
            "type": "integer",
            "format": "int64"
          },
          "remainAmount": {
            "description": "次の階まで残った金額",
            "type": "integer",
            "format": "int64"
          },
          "startAtMillis": {
            "type": "integer",
            "format": "int64",
            "description": "ティア等級算定開始期間"
          },
          "tierChangeStatus": {
            "$ref": "#/components/schemas/TierChangeStatusEnum"
          }
        }
      },
      "TierChangeStatusEnum": {
        "oneOf": [
          {
            "const": "RISE"
          },
          {
            "const": "HOLD"
          },
          {
            "const": "FALL"
          }
        ],
        "description": "ティア変更状態タイプ"
      },
      "ImageCategoryEnum": {
        "oneOf": [
          {
            "const": "PRODUCT_REVIEW"
          },
          {
            "const": "ORDER_LINE_RETURN"
          }
        ]
      },
      "UploadableImageResponseDto": {
        "type": "object",
        "required": [
          "url",
          "uploadedUrl",
          "expiredAtMillis"
        ],
        "properties": {
          "url": {
            "type": "string"
          },
          "uploadedUrl": {
            "type": "string"
          },
          "expiredAtMillis": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UploadImageResponseDto": {
        "type": "object",
        "required": [
          "imageUrl",
          "multiResolutionImage"
        ],
        "properties": {
          "imageUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionImage": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          }
        }
      },
      "Base64ImageUploadRequestDto": {
        "type": "object",
        "required": [
          "name",
          "base64"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "base64": {
            "type": "string"
          }
        }
      },
      "ShopLiveTokenResponseDto": {
        "type": "object",
        "required": [
          "accessToken"
        ],
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "7日後に期限切れ"
          }
        }
      },
      "ShopLiveTokenRequestDto": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "description": "ユーザーチャット名"
          }
        }
      },
      "ShopLiveCampaignMetadataResponseDto": {
        "type": "object",
        "required": [
          "campaignAccessKey",
          "campaignMetadataState"
        ],
        "properties": {
          "campaignKey": {
            "type": "string",
            "description": "キャンペーンキー"
          },
          "campaignAccessKey": {
            "type": "string",
            "description": "キャンペーン Access key"
          },
          "title": {
            "type": "string",
            "description": "キャンペーンタイトル"
          },
          "campaignMetadataState": {
            "$ref": "#/components/schemas/ShopLiveCampaignMetadataStateEnum"
          },
          "liveUrl": {
            "type": "string",
            "description": "動画再生 URL"
          },
          "posterUrl": {
            "type": "string",
            "description": "放送予告画像URL"
          },
          "poster2Url": {
            "type": "string",
            "description": "放送終了後の画像URL"
          },
          "scheduledAt": {
            "type": "integer",
            "format": "int64",
            "description": "放送予定時間"
          },
          "scheduledEndAt": {
            "type": "integer",
            "format": "int64",
            "description": "放送終了予定時間"
          },
          "startedAt": {
            "type": "integer",
            "format": "int64",
            "description": "放送開始時間"
          },
          "closingAt": {
            "type": "integer",
            "format": "int64",
            "description": "n分後に終了を設定したときの実際の終了予定時間"
          },
          "endedAt": {
            "type": "integer",
            "format": "int64",
            "description": "放送終了時間"
          }
        }
      },
      "ShopLiveCampaignResponseDto": {
        "type": "object",
        "required": [
          "campaignAccessKey",
          "campaignState"
        ],
        "properties": {
          "campaignKey": {
            "type": "string",
            "description": "キャンペーンキー"
          },
          "campaignAccessKey": {
            "type": "string",
            "description": "キャンペーン Access key"
          },
          "campaignUrl": {
            "type": "string",
            "description": "キャンペーン URL"
          },
          "title": {
            "type": "string",
            "description": "キャンペーンタイトル"
          },
          "memo": {
            "type": "string",
            "description": "キャンペーンノート"
          },
          "campaignState": {
            "$ref": "#/components/schemas/ShopLiveCampaignStateEnum"
          },
          "campaignGoodsList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopLiveCampaignGoodsDto"
            }
          },
          "campaignGoodsCount": {
            "type": "integer",
            "format": "int32",
            "description": "キャンペーンに登録商品数"
          },
          "userCount": {
            "type": "integer",
            "format": "int32",
            "description": "累積視聴者数"
          },
          "adoreCount": {
            "type": "integer",
            "format": "int32",
            "description": "いいね"
          },
          "posterUrl": {
            "type": "string",
            "description": "放送予告画像URL"
          },
          "poster2Url": {
            "type": "string",
            "description": "放送終了後の画像URL"
          },
          "unsupportInfoUrl": {
            "type": "string",
            "description": "IE未サポートガイド画像URL"
          },
          "previewLiveUrl": {
            "type": "string",
            "description": "放送プレビューURL"
          },
          "replayLiveUrl": {
            "type": "string",
            "description": "放送の再表示 URL"
          },
          "liveUrl": {
            "type": "string",
            "description": "動画再生 URL"
          },
          "backgroundUrl": {
            "type": "string",
            "description": "背景画像URL"
          },
          "scheduledAt": {
            "type": "integer",
            "format": "int64",
            "description": "放送予定時間"
          },
          "scheduledEndAt": {
            "type": "integer",
            "format": "int64",
            "description": "放送終了予定時間"
          },
          "startedAt": {
            "type": "integer",
            "format": "int64",
            "description": "放送開始時間"
          },
          "endedAt": {
            "type": "integer",
            "format": "int64",
            "description": "放送終了時間"
          }
        }
      },
      "ShopLiveCampaignGoodsDto": {
        "type": "object",
        "required": [
          "campaignId",
          "goodsId",
          "name",
          "url",
          "action",
          "payload",
          "showingNow",
          "soldOut",
          "originalPrice",
          "currency",
          "traceId"
        ],
        "properties": {
          "campaignId": {
            "type": "integer",
            "format": "int64",
            "description": "キャンペーンID"
          },
          "goodsId": {
            "type": "integer",
            "format": "int64",
            "description": "商品ID"
          },
          "name": {
            "type": "string",
            "description": "商品名"
          },
          "brand": {
            "type": "string",
            "description": "商品ブランド"
          },
          "description": {
            "type": "string",
            "description": "商品説明"
          },
          "url": {
            "type": "string",
            "description": "商品移動 URL"
          },
          "sku": {
            "type": "string",
            "description": "商品コード"
          },
          "action": {
            "$ref": "#/components/schemas/ShopLiveCampaignGoodsActionTypeEnum"
          },
          "payload": {
            "type": "string",
            "description": "商品のクリック時に移動するURL情報を含むjson文字列"
          },
          "medias": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopLiveCampaignGoodsMediaDto"
            }
          },
          "showingNow": {
            "type": "boolean",
            "description": "商品露出の有無"
          },
          "soldOut": {
            "type": "boolean",
            "description": "商品完売かどうか"
          },
          "originalPrice": {
            "type": "number",
            "format": "double",
            "description": "商品基本価格"
          },
          "discountedPrice": {
            "type": "number",
            "format": "double",
            "description": "商品割引価格"
          },
          "discountPercentage": {
            "type": "number",
            "format": "double",
            "description": "商品割引率"
          },
          "currency": {
            "type": "string",
            "description": "商品ユニット"
          },
          "traceId": {
            "type": "string",
            "description": "上限クリックトラッキングID"
          }
        }
      },
      "ShopLiveCampaignGoodsMediaDto": {
        "type": "object",
        "required": [
          "id",
          "mediaType",
          "url",
          "size",
          "width",
          "height"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "メディアID"
          },
          "mediaType": {
            "$ref": "#/components/schemas/ShopLiveCampaignGoodsMediaTypeEnum"
          },
          "url": {
            "type": "string",
            "description": "商品メディアのURL"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "商品メディアサイズ"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "description": "商品メディア横サイズ"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "description": "商品メディア縦サイズ"
          }
        }
      },
      "ReferralCodeDto": {
        "type": "object",
        "required": [
          "referralCode"
        ],
        "properties": {
          "referralCode": {
            "type": "string"
          }
        }
      },
      "CategoryBestProductDto": {
        "type": "object",
        "required": [
          "isBest"
        ],
        "properties": {
          "categoryId": {
            "type": "string"
          },
          "categoryTitle": {
            "type": "string"
          },
          "isBest": {
            "type": "boolean"
          },
          "createdAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "updatedAtMillis": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ShopLiveCampaignMetadataStateEnum": {
        "oneOf": [
          {
            "const": "NOT_EXIST"
          },
          {
            "const": "READY"
          },
          {
            "const": "ONAIR"
          },
          {
            "const": "CLOSING"
          },
          {
            "const": "CLOSED"
          }
        ],
        "description": "- `NOT_EXIST` -&gt;存在しないキャンペーン - `READY` -&gt;準備中 - `ONAIR` -&gt;放送中 - `CLOSING` -&gt;終了中 - `CLOSED` -&gt;終了"
      },
      "ShopLiveCampaignStateEnum": {
        "oneOf": [
          {
            "const": "NOT_EXIST"
          },
          {
            "const": "READY"
          },
          {
            "const": "ONAIR"
          },
          {
            "const": "CLOSED"
          }
        ],
        "description": "- `NOT_EXIST` -&gt;存在しないキャンペーン - `READY` -&gt;準備中 - `ONAIR` -&gt;放送中 - `CLOSED` -&gt;終了"
      },
      "ShopLiveCampaignGoodsActionTypeEnum": {
        "const": "LINK"
      },
      "ShopLiveCampaignGoodsMediaTypeEnum": {
        "const": "IMAGE"
      },
      "MultiResolutionImageDto": {
        "type": "object",
        "required": [
          "url_1x",
          "url_2x",
          "url_3x"
        ],
        "properties": {
          "url_1x": {
            "type": "string"
          },
          "url_2x": {
            "type": "string"
          },
          "url_3x": {
            "type": "string"
          }
        }
      },
      "MultiResolutionImageListDto": {
        "type": "object",
        "required": [
          "urls_1x",
          "urls_2x",
          "urls_3x"
        ],
        "properties": {
          "urls_1x": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "urls_2x": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "urls_3x": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SellerContentImagesDto": {
        "type": "object",
        "required": [
          "contentType",
          "multiResolutionImages"
        ],
        "properties": {
          "contentType": {
            "$ref": "damoa-seller-api.yaml#/components/schemas/SellerContentTypeEnum"
          },
          "multiResolutionImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MultiResolutionImageDto"
            }
          }
        }
      },
      "UserDeliveryAddressAddRequestDto": {
        "type": "object",
        "required": [
          "address"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/DeliveryAddressDto"
          },
          "request": {
            "type": "string",
            "description": "配送リクエスト"
          }
        }
      },
      "UserDeliveryAddressDto": {
        "type": "object",
        "required": [
          "id",
          "address"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "address": {
            "$ref": "#/components/schemas/DeliveryAddressDto"
          },
          "request": {
            "type": "string",
            "description": "配送リクエスト"
          }
        }
      },
      "PointHistoryBundleResponseDto": {
        "type": "object",
        "required": [
          "PointHistoyDto"
        ],
        "properties": {
          "PointHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointHistoryResponseDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "PointHistoryResponseDto": {
        "type": "object",
        "required": [
          "id",
          "title",
          "amount",
          "amountType",
          "expiredDetails",
          "occurrenceAtMillis",
          "occurrenceType",
          "occurrenceId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "獲得金履歴固有のID"
          },
          "title": {
            "type": "string"
          },
          "subTitle": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "amountType": {
            "$ref": "#/components/schemas/PointAmountTypeEnum"
          },
          "expiredDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointAccumulateDetailResponseDto"
            }
          },
          "occurrenceAtMillis": {
            "description": "積立金履歴発生時間(epochMilliSeconds)",
            "type": "integer",
            "format": "int64"
          },
          "occurrenceType": {
            "$ref": "#/components/schemas/PointOccurrenceTypeEnum"
          },
          "occurrenceId": {
            "description": "積立金発生元ID occurrenceTypeに応じて異なる四半期",
            "type": "string"
          }
        }
      },
      "PointAmountTypeEnum": {
        "oneOf": [
          {
            "const": "PLUS"
          },
          {
            "const": "MINUS"
          }
        ]
      },
      "PointOccurrenceTypeEnum": {
        "oneOf": [
          {
            "const": "ACCUMULATE_EVENT"
          },
          {
            "const": "ACCUMULATE_ORDER_ACCEPT"
          },
          {
            "const": "WITHDRAW_ORDER_CANCEL"
          },
          {
            "const": "USE_ADMIN"
          },
          {
            "const": "ACCUMULATE_ADMIN"
          },
          {
            "const": "USE_ORDER_CREATE"
          },
          {
            "const": "EXPIRED"
          }
        ],
        "description": "- 積立金の獲得/使用/消滅/キャンセルの発生タイプ - ACCUMULATE_EVENTイベントで獲得 - ACCUMULATE_ORDER_ACCEPT注文確定で獲得 - WITHDRAW_ORDER_CANCEL注文キャンセルで払い戻しを獲得 - USE_ADMIN管理者が差し引く - USUM_ATE_ADMIN管理者として獲得使用済み - EXPIRED 期限切れ"
      },
      "PointAccumulateDetailResponseDto": {
        "type": "object",
        "required": [
          "id",
          "expiredAtMillis",
          "amount"
        ],
        "properties": {
          "id": {
            "description": "獲得金履歴固有の詳細ID",
            "type": "string"
          },
          "expiredAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "NowUsablePointDto": {
        "type": "object",
        "required": [
          "amount"
        ],
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PromotionAttendedStateDto": {
        "type": "object",
        "required": [
          "attended"
        ],
        "properties": {
          "attended": {
            "type": "boolean"
          }
        }
      },
      "ProductAggregationDto": {
        "type": "object",
        "description": "商品集計",
        "required": [
          "productFeatureGroupAggregationList"
        ],
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "productFeatureGroupAggregationList": {
            "deprecated": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductFeatureGroupAggregationDto"
            }
          },
          "productAggregationGroup": {
            "$ref": "#/components/schemas/ProductAggregationGroupDto"
          }
        }
      },
      "ProductAggregationGroupDto": {
        "type": "object",
        "description": "商品集計情報グループ",
        "required": [
          "productFeatureGroupAggregationList",
          "productCategoryAggregationList",
          "brandAggregationList"
        ],
        "properties": {
          "productFeatureGroupAggregationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductFeatureGroupAggregationDto"
            }
          },
          "productCategoryAggregationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryAggregationDto"
            }
          },
          "brandAggregationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrandAggregationDto"
            }
          }
        }
      },
      "ProductFeatureGroupAggregationDto": {
        "type": "object",
        "description": "groupごとに属性タグの数を降順に下げる",
        "properties": {
          "group": {
            "$ref": "#/components/schemas/ProductFeatureGroupDto"
          },
          "productFeatureAggregation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductFeatureAggregationDto"
            }
          }
        }
      },
      "ProductFeatureAggregationDto": {
        "type": "object",
        "properties": {
          "productFeature": {
            "$ref": "#/components/schemas/ProductFeatureDto"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProductCategoryAggregationDto": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "BrandAggregationDto": {
        "type": "object",
        "properties": {
          "brandName": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProductFeatureListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductFeatureDto"
            }
          }
        }
      },
      "ProductFeatureDto": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "groupTitle": {
            "type": "string"
          }
        }
      },
      "ProductFeatureGroupDto": {
        "type": "object",
        "required": [
          "id",
          "title"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "UserReferralSummaryDto": {
        "type": "object",
        "required": [
          "totalAccrualPoint",
          "totalReferralCount",
          "totalUnopenedBonusBoxCount"
        ],
        "properties": {
          "totalAccrualPoint": {
            "description": "ユーザー推奨総積算額（ボーナス報酬含む）",
            "type": "integer",
            "format": "int64"
          },
          "totalReferralCount": {
            "description": "総ユーザー推奨数",
            "type": "integer",
            "format": "int64"
          },
          "totalUnopenedBonusBoxCount": {
            "description": "まだ開いていないボーナスボックス数",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UserReferralRewardSummaryDto": {
        "type": "object",
        "required": [
          "totalAccrualPoint",
          "totalReferral"
        ],
        "properties": {
          "totalAccrualPoint": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UserReferralBonusBoxOpenResultDto": {
        "type": "object",
        "required": [
          "pointAmount"
        ],
        "properties": {
          "pointAmount": {
            "type": "integer",
            "format": "int64",
            "description": "BonusBoxから得た積立金"
          }
        }
      },
      "UserReferralRewardPolicyDto": {
        "type": "object",
        "required": [
          "totalAccrualLimitByReferral",
          "validDaysByReferral",
          "joinRewardAmountForReferee",
          "bonusBoxPolicies"
        ],
        "properties": {
          "totalAccrualLimitByReferral": {
            "type": "integer",
            "format": "int64"
          },
          "validDaysByReferral": {
            "type": "integer",
            "format": "int32"
          },
          "joinRewardAmountForReferee": {
            "type": "integer",
            "format": "int64"
          },
          "bonusBoxPolicies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BonusBoxPolicyDto"
            }
          }
        }
      },
      "BonusBoxPolicyDto": {
        "type": "object",
        "description": "ボーナスボックスを発行するための方針",
        "required": [
          "bonusRewardType",
          "referralCount"
        ],
        "properties": {
          "bonusRewardType": {
            "$ref": "#/components/schemas/BonusRewardTypeEnum"
          },
          "referralCount": {
            "description": "bonusBoxを受け取るために満たす必要があるreferralの数",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BonusRewardTypeEnum": {
        "oneOf": [
          {
            "const": "REPEAT"
          },
          {
            "const": "ONE_TIME"
          }
        ],
        "description": "ボーナスボックス発行ポリシータイプ：*繰り返し報酬（REPEAT）：referralCountが満たされるたびにボーナスボックス支払い（例：5に設定されている場合は5,10,15,20..ごとに支払われる）*ワンタイム報酬（ONE_TIME）：referralCountが満たされた場合ワンタイム支払い"
      },
      "UserReferralRewardEstimationRequestDto": {
        "type": "object",
        "required": [
          "phoneNumbers"
        ],
        "properties": {
          "phoneNumbers": {
            "type": "array",
            "maxItems": 50,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UserReferralRewardEstimationDto": {
        "type": "object",
        "required": [
          "phoneNumber",
          "pointAmount",
          "rewarded"
        ],
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "pointAmount": {
            "type": "integer",
            "format": "int64",
            "description": "推奨積立金見積額"
          },
          "rewarded": {
            "type": "boolean",
            "description": "既におすすめで報われているかどうか"
          }
        }
      },
      "UserReferralRewardEstimationListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserReferralRewardEstimationDto"
            }
          }
        }
      },
      "CreateUserReferralRequestDto": {
        "type": "object",
        "required": [
          "phoneNumber",
          "referrerName",
          "dynamicLink"
        ],
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "referrerName": {
            "type": "string"
          },
          "dynamicLink": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "CreateUserReferralResponseDto": {
        "type": "object",
        "required": [
          "reward"
        ],
        "properties": {
          "reward": {
            "$ref": "#/components/schemas/ReferralRewardResultDto"
          }
        }
      },
      "CreateProductReferralRequestDto": {
        "type": "object",
        "required": [
          "orderLineId",
          "productId",
          "referralCode"
        ],
        "properties": {
          "orderLineId": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "referralCode": {
            "type": "string"
          }
        }
      },
      "ReferralRewardResultDto": {
        "type": "object",
        "description": "おすすめ報酬情報",
        "required": [
          "pointAmount"
        ],
        "properties": {
          "pointAmount": {
            "type": "integer",
            "format": "int64",
            "description": "獲得金額"
          }
        }
      },
      "JoinReferredUserRequestDto": {
        "type": "object",
        "required": [
          "referralCode"
        ],
        "properties": {
          "referralCode": {
            "type": "string"
          }
        }
      },
      "JoinReferredUserResponseDto": {
        "type": "object",
        "required": [
          "reward"
        ],
        "properties": {
          "reward": {
            "$ref": "#/components/schemas/ReferralRewardResultDto"
          }
        }
      },
      "ActiveGameListResponse": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameDto"
            }
          }
        }
      },
      "GameUserProgressInfoResponse": {
        "type": "object",
        "required": [
          "level",
          "exp",
          "requiredExpToNextLevel",
          "inGameCredit",
          "isGameAchievable",
          "gameAchievedCount"
        ],
        "properties": {
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "exp": {
            "type": "integer",
            "format": "int32"
          },
          "requiredExpToNextLevel": {
            "type": "integer",
            "format": "int32"
          },
          "inGameCredit": {
            "type": "integer",
            "format": "int32"
          },
          "isGameAchievable": {
            "type": "boolean"
          },
          "gameAchievedCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GameUseInGameCreditRequest": {
        "type": "object",
        "required": [
          "useCredit"
        ],
        "properties": {
          "useCredit": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GameDto": {
        "type": "object",
        "required": [
          "gameId",
          "title",
          "rewardTitle"
        ],
        "properties": {
          "gameId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "rewardTitle": {
            "description": "報酬名(ex.コーヒーギフティコン)",
            "type": "string"
          }
        }
      },
      "GameMissionsResponse": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameMissionDto"
            }
          }
        }
      },
      "GameMissionAchieveRequest": {
        "type": "object",
        "required": [
          "missionType"
        ],
        "properties": {
          "missionType": {
            "$ref": "#/components/schemas/GameMissionTypeEnum"
          },
          "referenceId": {
            "description": "ミッションに応じて付加情報を盛り込むためのフィールド（ex.企画展ID）",
            "type": "string"
          }
        }
      },
      "GameMissionRewardReceiveResponse": {
        "type": "object",
        "required": [
          "inGameCredit"
        ],
        "properties": {
          "inGameCredit": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GameMissionDto": {
        "type": "object",
        "required": [
          "id",
          "title",
          "inGameCreditReward",
          "missionType",
          "completeCount",
          "isRewardReceivable"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "inGameCreditReward": {
            "type": "integer",
            "format": "int32"
          },
          "repeatIntervalInMins": {
            "type": "integer",
            "format": "int64"
          },
          "missionType": {
            "$ref": "#/components/schemas/GameMissionTypeEnum"
          },
          "referenceId": {
            "description": "ミッションに応じて付加情報を盛り込むためのフィールド（ex.企画展ID）",
            "type": "string"
          },
          "resetCycleDays": {
            "type": "integer",
            "format": "int32"
          },
          "maxCompleteCount": {
            "type": "integer",
            "format": "int32"
          },
          "lastCompletedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "completeCount": {
            "type": "integer",
            "format": "int32"
          },
          "isRewardReceivable": {
            "type": "boolean"
          }
        }
      },
      "GameAchieveRequest": {
        "type": "object",
        "required": [
          "phoneNumber"
        ],
        "properties": {
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "GameMissionTypeEnum": {
        "oneOf": [
          {
            "const": "PURCHASE_PRODUCT"
          },
          {
            "const": "FE_VALID_ATTENDANCE"
          },
          {
            "const": "FE_VALID_VIEWING_TO_30_SEC_RECOMMENDED"
          },
          {
            "const": "FE_VALID_VIEWING_TO_30_SEC_STYLE_SHOT"
          },
          {
            "const": "FE_VALID_VIEWING_TO_30_SEC_COLLECTION"
          },
          {
            "const": "FE_VALID_VIEWING_TO_30_SEC_NEW_IN_PRODUCT"
          },
          {
            "const": "FE_VALID_VIEWING_TO_30_SEC_BEST"
          },
          {
            "const": "FE_VALID_VIEWING_TO_30_SEC_HOT_DEAL"
          },
          {
            "const": "FE_VALID_VIEWING_TO_30_SEC_SHOPPING_MALL"
          },
          {
            "const": "FE_VALID_VIEWING_TO_30_SEC_DESIGNER"
          }
        ]
      },
      "AutocompleteResponseDto": {
        "type": "object",
        "required": [
          "brands"
        ],
        "properties": {
          "brands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrandAutocompleteCandidateDto"
            }
          }
        }
      },
      "BrandAutocompleteCandidateDto": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ProductCategoryReviewGuideDataDto": {
        "type": "object",
        "required": [
          "textGuides",
          "imageWithTitles",
          "type",
          "gridImage"
        ],
        "properties": {
          "textGuides": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "imageWithTitles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryReviewGuideImageWithTitleDto"
            }
          },
          "type": {
            "$ref": "#/components/schemas/ProductCategoryReviewGuideTypeEnum"
          },
          "gridImage": {
            "type": "string"
          }
        }
      },
      "ProductCategoryReviewGuideTypeEnum": {
        "oneOf": [
          {
            "const": "IMAGE_WITH_TITLE"
          },
          {
            "const": "GRID_IMAGE"
          },
          {
            "const": "NONE"
          }
        ],
        "description": "写真レビューガイドの種類"
      },
      "StyleShotListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StyleShotDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "StyleShotDto": {
        "type": "object",
        "required": [
          "id",
          "styleShotImages",
          "styleCategory",
          "equippedProductItemIds"
        ],
        "properties": {
          "id": {
            "description": "スタイルショットid",
            "type": "string"
          },
          "styleShotImages": {
            "description": "スタイルショット画像URL",
            "type": "array",
            "minItems": 1,
            "maxItems": 4,
            "items": {
              "$ref": "#/components/schemas/StyleShotImageDto"
            }
          },
          "styleShotTags": {
            "description": "スタイルショットタグIDリスト",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "styleCategory": {
            "$ref": "#/components/schemas/StyleCategoryDto"
          },
          "equippedProductItemIds": {
            "description": "着用商品アイテムID、empty listのみ応答(deprecated)",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "text": {
            "type": "string"
          },
          "editor": {
            "type": "string"
          },
          "fashionModelHeightAsCentiMeter": {
            "type": "integer",
            "format": "int32"
          },
          "fashionModelWeightAsKiloGram": {
            "type": "integer",
            "format": "int32"
          },
          "fashionModelShoeSizeAsMilliMeter": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EquippedProductListDto": {
        "type": "object",
        "required": [
          "equippedProducts",
          "favoriteIds",
          "freeReturnTargetProductIds"
        ],
        "properties": {
          "equippedProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EquippedProductDto"
            }
          },
          "freeReturnTargetProductIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "StyleShotImageDto": {
        "required": [
          "id",
          "url_1x",
          "url_2x",
          "url_3x",
          "priority"
        ],
        "properties": {
          "id": {
            "description": "イメージid",
            "type": "string"
          },
          "url_1x": {
            "type": "string"
          },
          "url_2x": {
            "type": "string"
          },
          "url_3x": {
            "type": "string"
          },
          "priority": {
            "description": "画像照会時の順序（1から昇順）",
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "StyleCategoryDto": {
        "type": "object",
        "required": [
          "id",
          "name",
          "priority"
        ],
        "properties": {
          "id": {
            "description": "スタイルカテゴリid",
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "description": "スタイルカテゴリハングル名",
            "type": "string"
          },
          "representative_url_1x": {
            "type": "string"
          },
          "representative_url_2x": {
            "type": "string"
          },
          "representative_url_3x": {
            "type": "string"
          },
          "priority": {
            "description": "スタイルカテゴリの照会時の順序",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "StyleCategoryListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StyleCategoryDto"
            }
          }
        }
      },
      "DeliveryPredictionListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryPredictionDto"
            }
          }
        }
      },
      "DeliveryPredictionDto": {
        "type": "object",
        "required": [
          "kstDeliveryPredictionDate",
          "probability"
        ],
        "properties": {
          "kstDeliveryPredictionDate": {
            "type": "string",
            "description": "ISO-8601フォーマット文字列(uuuu-MM-dd)"
          },
          "probability": {
            "description": "その日付に出荷が完了する確率",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PurchaseMeasurementsStatisticsListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseMeasurementsStatisticsDto"
            }
          }
        }
      },
      "PurchaseMeasurementsStatisticsDto": {
        "type": "object",
        "required": [
          "size",
          "count",
          "ratio"
        ],
        "properties": {
          "size": {
            "description": "商品サイズオプションタイトル",
            "type": "string"
          },
          "count": {
            "description": "購入数",
            "type": "integer",
            "format": "int64"
          },
          "ratio": {
            "description": "購入の総数に対する割合",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PurchaseMeasurementsDto": {
        "type": "object",
        "required": [
          "bodySizeType",
          "isSimilarBodySize",
          "list"
        ],
        "properties": {
          "bodySizeType": {
            "$ref": "#/components/schemas/BodySizeTypeEnum"
          },
          "isSimilarBodySize": {
            "description": "類似体型購入データかどうか",
            "type": "boolean"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaserSizeDto"
            }
          }
        }
      },
      "PurchaserSizeDto": {
        "type": "object",
        "required": [
          "purchaserBodySize",
          "purchaseSizeOptionName"
        ],
        "properties": {
          "purchaserBodySize": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaserBodySizeDto"
            }
          },
          "purchaseSizeOptionName": {
            "description": "購入したサイズオプションタイトル",
            "type": "string"
          }
        }
      },
      "PurchaserBodySizeDto": {
        "type": "object",
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BodySizeTypeEnum"
          },
          "value": {
            "description": "バイヤーのサイズ",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BodySizeTypeEnum": {
        "oneOf": [
          {
            "const": "HEIGHT_AS_CENTI_METER"
          },
          {
            "const": "WEIGHT_AS_KILO_GRAM"
          },
          {
            "const": "TOP_SIZE"
          },
          {
            "const": "BOTTOM_SIZE_AS_INCH"
          },
          {
            "const": "SHOE_SIZE_AS_MILLI_METER"
          }
        ]
      },
      "AttendanceCheckHistoryListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttendanceCheckHistoryDto"
            }
          }
        }
      },
      "AttendanceCheckHistoryDto": {
        "type": "object",
        "required": [
          "days",
          "attended",
          "rewardPolicyType",
          "pointAmount"
        ],
        "properties": {
          "days": {
            "description": "出席チェックn日目",
            "type": "integer",
            "format": "int32"
          },
          "pointAmount": {
            "description": "出席チェック参加時の積立金額",
            "type": "integer",
            "format": "int64"
          },
          "attended": {
            "description": "出席チェックに参加するかどうか",
            "type": "boolean"
          },
          "attendedAt": {
            "description": "出席チェック参加時間 epochMillis (出席しなかった場合 null)",
            "type": "integer",
            "format": "int64"
          },
          "rewardPolicyType": {
            "$ref": "#/components/schemas/AttendanceRewardPolicyTypeEnum"
          }
        }
      },
      "ApiErrorResponse": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string",
            "description": "reason for error"
          },
          "traceId": {
            "type": "string",
            "description": "trace id for debug"
          },
          "code": {
            "oneOf": [
              {
                "const": -999999
              },
              {
                "const": -888888
              },
              {
                "const": 1
              },
              {
                "const": 2
              },
              {
                "const": 3
              },
              {
                "const": 4
              },
              {
                "const": 5
              },
              {
                "const": 6
              },
              {
                "const": 7
              },
              {
                "const": 1001
              },
              {
                "const": 1002
              },
              {
                "const": 1003
              },
              {
                "const": 1004
              },
              {
                "const": 60001
              },
              {
                "const": 60002
              },
              {
                "const": 61001
              },
              {
                "const": 61002
              },
              {
                "const": 61003
              },
              {
                "const": 61004
              },
              {
                "const": 61005
              },
              {
                "const": 62001
              },
              {
                "const": 62002
              },
              {
                "const": 70001
              },
              {
                "const": 70003
              },
              {
                "const": 2001
              },
              {
                "const": 2002
              },
              {
                "const": 3001
              },
              {
                "const": 4001
              },
              {
                "const": 4002
              },
              {
                "const": 5001
              },
              {
                "const": 6001
              },
              {
                "const": 6002
              },
              {
                "const": 6003
              },
              {
                "const": 7001
              },
              {
                "const": 7002
              },
              {
                "const": 7003
              },
              {
                "const": 7004
              },
              {
                "const": 7005
              },
              {
                "const": 7006
              },
              {
                "const": 7007
              },
              {
                "const": 7008
              },
              {
                "const": 7009
              },
              {
                "const": 7010
              },
              {
                "const": 7011
              },
              {
                "const": 8001
              },
              {
                "const": 9001
              }
            ],
            "x-enum-varnames": [
              "INTERNAL_FAILURE",
              "EXTERNAL_FAILURE",
              "ALREADY_EXISTS",
              "NOT_AUTHORIZED",
              "INVALID_VALUE",
              "RESOURCE_NOT_FOUND",
              "LIMITATION_EXCEEDED",
              "LOGIN_REQUIRED",
              "ACCESS_DENIED",
              "ACCESS_TOKEN_EXPIRED",
              "REFRESH_TOKEN_EXPIRED",
              "INVALID_ACCESS_TOKEN",
              "INVALID_REFRESH_TOKEN",
              "COUPON_NOT_ENABLED",
              "COUPON_NOT_CONSUMABLE",
              "COUPON_ISSUE_BEFORE_BEGIN",
              "COUPON_ISSUE_AFTER_END",
              "COUPON_ISSUE_LIMIT_EXCEEDED",
              "COUPON_ISSUE_LIMIT_PER_USER_EXCEEDED",
              "COUPON_ISSUE_NOT_TARGET",
              "COUPON_BOOK_ISSUABLES_NOT_EXIST",
              "DISPLAYING_COUPONS_ISSUABLE_NOT_EXIST",
              "PAYMENT_NOT_FULLY_PAID",
              "MINIMUM_PAYMENT_PRICE_LIMIT_EXCEPTION",
              "REVIEW_REPORTED_BY_SELF",
              "REVIEW_REPORTED_TWICE",
              "VALIDATAION_BANK_ACCOUNT_FAILURE",
              "DUPLICATED_MALL_PRODUCT_CODE",
              "PRODUCT_WITHOUT_POLICY_TARGET",
              "DUPLICATED_BRAND_CODE",
              "SEND_DELIVERY_TRACE_REQUEST_FAILED",
              "RECEIVE_DELIVERY_TRACE_RESULT_FAILED",
              "SEND_DELIVERY_TRACE_RESULT_RESPONSE_FAILED",
              "TICKET_PROCESSING_IS_REQUIRED_TO_CONFIRM_RECEIPT",
              "CAN_ONLY_CONFIRM_RECEIPT_OF_PAID_ORDER_LINE",
              "CANNOT_CONFIRM_RECEIPT_WHEN_DELIVERY_NOT_COMPLETE",
              "CANNOT_REQUEST_REFUND_AFTER_CONFIRM_RECEIPT",
              "LACK_OF_POINT",
              "ORDER_LINE_COUNT_LIMIT_PER_ORDER_EXCEEDED",
              "ORDER_ALREADY_DISPATCHED",
              "CANNOT_CHANGE_DELIVERY_AREA",
              "ORDER_UNAVAILABLE_PRODUCT_ITEM",
              "CANNOT_APPEND_TICKET",
              "CANNOT_EXCEED_ALREADY_REQUESTED_AMOUNT",
              "ATTENDANCE_CHECK_COMPLETED",
              "PRODUCT_NOT_BELONGS_TO_BRAND"
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "damoa-token": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "x-samchon-emended": true
}