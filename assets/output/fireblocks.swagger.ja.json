{
  "openapi": "3.1.0",
  "info": {
    "title": "ファイアブロックAPI",
    "version": "1.0.0",
    "contact": {
      "email": "support@fireblocks.com"
    }
  },
  "servers": [
    {
      "url": "https://api.fireblocks.io/v1"
    }
  ],
  "x-readme": {
    "explorer-enabled": false,
    "samples-languages": [
      "curl",
      "javascript",
      "python"
    ]
  },
  "paths": {
    "/vault/accounts": {
      "get": {
        "summary": "保管庫アカウントの一覧",
        "description": "ワークスペース内のすべての Vault アカウントを取得します.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vault_accounts = fireblocks.get_vault_accounts()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAccounts = await fireblocks.getVaultAccounts();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "query",
            "name": "namePrefix",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nameSuffix",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "minAmountThreshold",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "assetId",
            "required": false,
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "金庫アカウントのリスト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VaultAccount"
                  }
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "新しいVaultアカウントを作成する",
        "description": "要求された名前で新しい Vault アカウントを作成します.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vaultAccount = fireblocks.create_vault_account(name, hiddenOnUI, customer_ref_id, auto_fueling)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAccount = await fireblocks.createVaultAccount(name, hiddenOnUI, customerRefId, autoFueling);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "アカウント名",
                    "type": "string"
                  },
                  "hiddenOnUI": {
                    "description": "オプション - true の場合、作成されたアカウントと関連するすべてのトランザクションは Fireblocks コンソールに表示されません。",
                    "type": "boolean"
                  },
                  "customerRefId": {
                    "description": "オプション - 顧客参照IDを設定します",
                    "type": "string"
                  },
                  "autoFuel": {
                    "description": "オプション - ボールトアカウントの autoFuel プロパティを設定します",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vault アカウント オブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VaultAccount"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts_paged": {
      "get": {
        "summary": "保管庫アカウントの一覧表示（ページ区切り）",
        "description": "ワークスペース内のすべての Vault アカウントを取得します。このエンドポイントは、短い応答時間で限られた数の結果を返します。.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vault_accounts = fireblocks.get_vault_accounts_with_page_info(filters)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAccounts = await fireblocks.getVaultAccountsWithPageInfo(filters);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "query",
            "name": "namePrefix",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nameSuffix",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "minAmountThreshold",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "assetId",
            "required": false,
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "const": "ASC"
                },
                {
                  "const": "DESC"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "before",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "after",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 500,
              "default": 200
            }
          }
        ],
        "responses": {
          "200": {
            "description": "VaultAccountsPagedResponse オブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VaultAccountsPagedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}": {
      "get": {
        "summary": "IDでVaultアカウントを検索する",
        "description": "要求されたVaultアカウントを返します.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vault_account = fireblocks.get_vault_account(vault_account_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAccount = await fireblocks.getVaultAccount(vault_account_id);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "返されるボールトアカウントのID 型: 文字列",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vault アカウント オブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VaultAccount"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "ボールトアカウントの名前を変更する",
        "description": "要求されたVaultアカウントの名前を変更します.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vaultAccount = fireblocks.update_vault_account(vault_account_id, name)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAccount = await fireblocks.updateVaultAccount(vautlAccountId, name);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "編集するボールトアカウントのID",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "アカウント名",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/asset_wallets": {
      "get": {
        "summary": "資産ウォレットの一覧（ページ区切り）",
        "description": "ワークスペース内のすべての Vault アカウントのすべてのアセット ウォレットを取得します。アセット ウォレットは、Vault アカウントのアセットです。このメソッドを使用すると、すべてのアカウント残高を高速にトラバースできます。**注:** - この API エンドポイントは、限られたユーザーのみが利用できます。このエンドポイントに早期アクセスしたい場合は、[Fireblocks サポート](https://support.fireblocks.io/hc/en-us/requests/new?ticket_form_id=36000337220) にお問い合わせください。 - この API 呼び出しには、[レート制限](https://developers.fireblocks.com/reference/rate-limiting) が適用されます。.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vault_accounts = fireblocks.get_asset_wallets(filters)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAccounts = await fireblocks.getAssetWallets(filters);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "query",
            "name": "totalAmountLargerThan",
            "description": "指定すると、合計残高がこの金額より大きい資産ウォレットのみが返されます。.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "assetId",
            "required": false,
            "description": "指定すると、この資産IDを持つVaultアカウント間の資産ウォレットのみが返されます。.",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          },
          {
            "in": "query",
            "name": "before",
            "required": false,
            "description": "この要素の前の次のページ区切りのレスポンスを取得します。この要素はカーソルであり、前のページのレスポンスで返されます。.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "after",
            "required": false,
            "description": "この要素の次のページ区切りのレスポンスを取得します。この要素はカーソルであり、前のページのレスポンスで返されます。.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "1回のレスポンスで扱える資産ウォレットの最大数。デフォルトは200、最大値は1000です。.",
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 1000,
              "default": 200
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PaginatedAssetWalletResponse オブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAssetWalletResponse"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/hide": {
      "post": {
        "summary": "コンソールでVaultアカウントを非表示にする",
        "description": "要求された Vault アカウントを Web コンソール ビューから非表示にします.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vaultAsset = fireblocks.hide_vault_account(vault_account_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAsset = await fireblocks.hideVaultAccount(vaultAccountId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "隠すための金庫アカウント",
            "schema": {
              "type": "string",
              "minimum": 1,
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/unhide": {
      "post": {
        "summary": "コンソールで Vault アカウントを表示する",
        "description": "非表示の Vault アカウントを Web コンソール ビューで表示します.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vaultAsset = fireblocks.unhide_vault_account(vault_account_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAsset = await fireblocks.unhideVaultAccount(vaultAccountId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "非表示を解除するVaultアカウント",
            "schema": {
              "type": "string",
              "minimum": 1,
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/{assetId}/activate": {
      "post": {
        "summary": "金庫アカウントでウォレットを有効化する",
        "description": "金庫アカウントのウォレットのアクティベーションを開始します.",
        "tags": [
          "Vaults"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "返されるボールト アカウントの ID、またはデフォルトのボールト アカウントの場合は「default」",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "資産のID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVaultAssetResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/set_customer_ref_id": {
      "post": {
        "summary": "金庫アカウントのAML/KYT顧客参照IDを設定する",
        "description": "金庫アカウントにAML/KYT顧客参照IDを割り当てます.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vaultAsset = fireblocks.set_vault_account_customer_ref_id(vault_account_id, customer_ref_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAsset = await fireblocks.setCustomerRefIdForVaultAccount(vaultAccountId, customerRefId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "ボールトアカウントID",
            "schema": {
              "type": "string",
              "minimum": 1,
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customerRefId": {
                    "description": "顧客参照ID",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/set_auto_fuel": {
      "post": {
        "summary": "自動給油をオンまたはオフにする",
        "description": "ボールトアカウントの自動燃料供給プロパティを有効または無効に設定します.",
        "tags": [
          "Vaults"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "ボールトアカウントID",
            "schema": {
              "type": "string",
              "minimum": 1,
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "autoFuel": {
                    "description": "自動車燃料",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/{assetId}": {
      "get": {
        "summary": "金庫アカウントの資産残高を取得する",
        "description": "ボールトアカウントの特定の資産のウォレットを返します.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vaultAsset = fireblocks.get_vault_account_asset(vault_account_id, asset_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAsset = await fireblocks.getVaultAccountAsset(vaultAccountId, assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "返されるボールトアカウントのID",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "資産のID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "VaultAsset オブジェクト",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VaultAsset"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "新しいウォレットを作成する",
        "description": "特定の資産用のウォレットをVaultアカウントに作成します.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vaultAsset = fireblocks.create_vault_asset(vault_account_id, asset_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAsset = await fireblocks.createVaultAsset(vaultAccountId, assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "返されるボールト アカウントの ID、またはデフォルトのボールト アカウントの場合は「default」",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "資産のID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "eosAccountName": {
                    "description": "オプション - EOSウォレットを作成するときのアカウント名。指定しない場合はランダムな名前が生成されます",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVaultAssetResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/{assetId}/balance": {
      "post": {
        "summary": "資産残高データの更新",
        "description": "金庫アカウント内の特定の資産の残高を更新します.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vaultAsset = fireblocks.refresh_vault_asset_balance(vault_account_id, asset_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAsset = await fireblocks.refreshVaultAssetBalance(vaultAccountId, assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "返されるボールトアカウントのID",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "資産のID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "*/*": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "VaultAsset オブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VaultAsset"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/{assetId}/addresses": {
      "get": {
        "summary": "資産アドレスを取得する",
        "description": "ボールトアカウントの特定の資産のすべてのアドレスを一覧表示します.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "depositAddresses = fireblocks.get_deposit_addresses(vault_account_id, asset_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const depositAddresses = await fireblocks.getDepositAddresses(vaultAccountId, assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "返されるボールトアカウントのID",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "資産のID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "入金先リスト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VaultWalletAddress"
                  }
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "新しい資産預入アドレスを作成する",
        "description": "金庫アカウントの資産の新しい入金アドレスを作成します.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "address = fireblocks.generate_new_address(vault_account_id, asset_id, description, customer_ref_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const address = await fireblocks.generateNewAddress(vaultAccountId, assetId, description, customerRefId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "description": "（オプション）新しい住所に説明を添付する",
                    "type": "string"
                  },
                  "customerRefId": {
                    "description": "オプション - 顧客参照IDを設定します",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "返されるボールトアカウントのID",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "資産のID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "作成されたアドレス",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAddressResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/{assetId}/max_spendable_amount": {
      "get": {
        "summary": "1回の取引で最大限に使える金額を取得する.",
        "description": "指定された金庫アカウントから、1回のトランザクションで使用できる特定の資産の最大額を取得します（UTXO資産のみ、埋め込まれた入力の数に制限があります）。最大使用可能額を超えて使用したい場合は、複数のトランザクションを送信します。.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "address = fireblocks.set_address_description(vault_account_id, asset_id, address, tag, description)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const address = await fireblocks.setAddressDescription(vaultAccountId, assetId, address, tag, description);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "ボールト アカウントの ID、またはデフォルトのボールト アカウントの場合は「default」",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "資産のID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          },
          {
            "in": "query",
            "name": "manualSignging",
            "required": false,
            "description": "デフォルトではFalseです。入力の最大数は、トランザクションが自動署名者サーバーによって署名されるか、モバイルデバイスで署名されるかによって異なります。.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/{assetId}/addresses/{addressId}": {
      "put": {
        "summary": "住所の説明を更新",
        "description": "ボールトアカウント内の資産の既存のアドレスの説明を更新します.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "address = fireblocks.set_address_description(vault_account_id, asset_id, address, tag, description)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const address = await fireblocks.setAddressDescription(vaultAccountId, assetId, address, tag, description);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "description": "住所の説明",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "ボールトアカウントのID",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "資産のID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          },
          {
            "in": "path",
            "name": "addressId",
            "required": true,
            "description": "説明を追加するアドレス。XRPの場合は、<address> :<tag>その他の資産については、アドレスのみを使用してください",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/{assetId}/addresses/{addressId}/set_customer_ref_id": {
      "post": {
        "summary": "AML顧客参照IDを割り当てる",
        "description": "特定の住所のAML/KYT顧客参照IDを設定します.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vaultAsset = fireblocks.set_customer_ref_id_for_address(vault_account_id, asset_id, address_id, customer_ref_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAsset = await fireblocks.setCustomerRefIdForAddress(vaultAccountId, assetId, addressId, customerRefId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "ボールトアカウントのID",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "資産のID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          },
          {
            "in": "path",
            "name": "addressId",
            "required": true,
            "description": "説明を追加するアドレス。XRPの場合は、<address> :<tag>その他の資産については、アドレスのみを使用してください",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customerRefId": {
                    "description": "顧客参照ID",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/{assetId}/addresses/{addressId}/create_legacy": {
      "post": {
        "summary": "Segwit アドレスをレガシー形式に変換する",
        "description": "既存のsegwitアドレスを従来の形式に変換します.",
        "tags": [
          "Vaults"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "ボールトアカウントのID",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "資産のID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          },
          {
            "in": "path",
            "name": "addressId",
            "required": true,
            "description": "変換するsegwitアドレス",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "作成されたアドレス",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAddressResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/{assetId}/unspent_inputs": {
      "get": {
        "summary": "UTXO未使用入力情報を取得する",
        "description": "ボールトアカウント内の資産の未使用入力情報を返します.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "vaultAsset = fireblocks.get_unspent_inputs(vault_account_id, asset_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const vaultAsset = await fireblocks.getUnspentInputs(vaultAccountId, assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "description": "ボールトアカウントのID",
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "資産のID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "入力ごとの未使用情報のリスト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnspentInputsResponse"
                  }
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/public_key_info/": {
      "get": {
        "summary": "公開鍵情報を取得する",
        "description": "導出パスと署名アルゴリズムに基づいて公開鍵情報を取得します.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "pubKey = fireblocks.get_public_key_info(algorithm, derivation_path, compressed)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const PublicKeyInfoArgs = { algorithm: 'MPC_ECDSA_SECP256K1', derivationPath: '[44,0,0,0,0]' } const pubKey = await fireblocks.getPublicKeyInfo(PublicKeyInfoArgs);\n",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "query",
            "name": "derivationPath",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "algorithm",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "compressed",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "公開鍵情報",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyInformation"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/accounts/{vaultAccountId}/{assetId}/{change}/{addressIndex}/public_key_info": {
      "get": {
        "summary": "ボールトアカウントの公開鍵を取得する",
        "description": "ボールトアカウントの公開鍵情報を取得します.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "pubKey = fireblocks.get_public_key_info_for_vault_account(asset_id, vault_account_id, change, address_index, compressed)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const PublicKeyInfoArgs = { assetId: 'ETH', vaultAccountId: 0, change: 0, addressIndex: 0, compressed: true } const pubKey = await fireblocks.getPublicKeyInfoForVaultAccount(PublicKeyInfoArgs);\n",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "vaultAccountId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "numeric",
              "x-fb-entity": "vault_account"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          },
          {
            "in": "path",
            "name": "change",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "addressIndex",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "compressed",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "公開鍵情報",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyInformation"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/assets": {
      "get": {
        "summary": "選択した資産の資産残高を取得する",
        "description": "すべてのアカウントまたはフィルタリングされたアカウントの資産額の概要を取得します.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "assets_balance = fireblocks.get_vault_assets_balance(accout_name_prefix, account_name_suffix)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const assetsBalance = await fireblocks.getVaultAssetsBalance(accountNamePrefix, accountNameSuffix);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "query",
            "name": "accountNamePrefix",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "accountNameSuffix",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "資産別金額",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VaultAsset"
                  }
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vault/assets/{assetId}": {
      "get": {
        "summary": "資産別に金庫残高を取得する",
        "description": "資産の金庫残高の概要を取得します.",
        "tags": [
          "Vaults"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "assets_balance = fireblocks.get_vault_balance_by_asset(asset_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const assetsBalance = await fireblocks.getVaultBalanceByAsset(assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "資産別の金庫金額",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VaultAsset"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/exchange_accounts": {
      "get": {
        "summary": "交換アカウントの一覧",
        "description": "すべての交換アカウントを返します.",
        "tags": [
          "Exchange accounts"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "exchangeAccounts = fireblocks.get_exchange_accounts()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const exchangeAccounts = await fireblocks.getExchangeAccounts();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "ExchangeAccount オブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExchangeAccount"
                  }
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/exchange_accounts/{exchangeAccountId}": {
      "get": {
        "summary": "特定の取引所のアカウントを探す",
        "description": "IDで交換アカウントを返します.",
        "tags": [
          "Exchange accounts"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "exchangeAccount = fireblocks.get_exchange_account(exchangeAccountId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const exchnageAccount = await fireblocks.get_exchange_account(exchangeAccountId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "exchangeAccountId",
            "required": true,
            "description": "返される交換アカウントのID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ExchangeAccount オブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeAccount"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/exchange_accounts/{exchangeAccountId}/internal_transfer": {
      "post": {
        "summary": "交換口座の内部振替",
        "description": "同じ取引口座内の取引口座間で資金を移動します.",
        "tags": [
          "Exchange accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "exchangeAccountId",
            "required": true,
            "description": "返される交換アカウントのID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "201": {
            "description": "転送に成功しました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "asset": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  },
                  "sourceType": {
                    "$ref": "#/components/schemas/TradingAccountType"
                  },
                  "destType": {
                    "$ref": "#/components/schemas/TradingAccountType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/exchange_accounts/{exchangeAccountId}/convert": {
      "post": {
        "summary": "交換口座の資金をソース資産から宛先資産に変換します。Coinbase（USDからUSDC、USDCからUSD）とBitso（MXNからUSD）がサポートされている変換です。.",
        "tags": [
          "Exchange accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "exchangeAccountId",
            "required": true,
            "description": "取引所アカウントのID。取引所が変換をサポートしていることを確認してください。取引所アカウントのIDを見つけるには、GET/exchange_accountsを使用します。.",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "変換に成功しました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "srcAsset": {
                    "type": "string",
                    "description": "ソース資産の名前（取引所 ID に対応する選択した取引所タイプで変換がサポートされている通貨である必要があります）"
                  },
                  "destAsset": {
                    "type": "string",
                    "description": "宛先資産の名前（交換 ID に対応する選択した交換タイプで変換がサポートされている通貨である必要があります）"
                  },
                  "amount": {
                    "type": "number",
                    "description": "送金する金額（送金元資産の通貨）"
                  }
                },
                "required": [
                  "srcAsset",
                  "destAsset",
                  "amount"
                ]
              }
            }
          }
        }
      }
    },
    "/exchange_accounts/{exchangeAccountId}/{assetId}": {
      "get": {
        "summary": "交換口座の資産を探す",
        "description": "交換口座の資産を返す.",
        "tags": [
          "Exchange accounts"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "exchangeAsset = fireblocks.get_exchange_account_asset(exchangeAccountId, assetId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const exchangeAsset = await fireblocks.getExchangeAsset(exchangeAccountId, assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "exchangeAccountId",
            "required": true,
            "description": "返される交換アカウントのID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "返される資産のID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ExchangeAccountAsset オブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeAsset"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/fiat_accounts": {
      "get": {
        "summary": "法定通貨口座を一覧表示する",
        "description": "すべての法定通貨口座を返す.",
        "tags": [
          "Fiat accounts"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "transactions = fireblocks.get_fiat_accounts()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const transactions = await fireblocks.getFiatAccounts();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "法定通貨アカウントオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FiatAccount"
                  }
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/fiat_accounts/{accountId}": {
      "get": {
        "summary": "特定の法定通貨口座を探す",
        "description": "IDで法定通貨の口座を返します.",
        "tags": [
          "Fiat accounts"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "transactions = fireblocks.get_fiat_account_by_id(account_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const transactions = await fireblocks.getFiatAccountById(accountId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "description": "返される法定通貨口座のID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "法定通貨アカウントオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FiatAccount"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/fiat_accounts/{accountId}/redeem_to_linked_dda": {
      "post": {
        "summary": "DDAへの資金の引き換え",
        "description": "リンクされたDDAに資金を償還する.",
        "tags": [
          "Fiat accounts"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "transactions = fireblocks.redeem_to_linked_dda(account_id, amount)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const transactions = await fireblocks.redeemToLinkedDDA(accountId, amount);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "description": "使用する法定通貨口座のID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "201": {
            "description": "転送に成功しました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "amount": {
                    "type": "number"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fiat_accounts/{accountId}/deposit_from_linked_dda": {
      "post": {
        "summary": "DDAからの入金",
        "description": "リンクされたDDAから資金を入金する.",
        "tags": [
          "Fiat accounts"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "transactions = fireblocks.deposit_from_linked_dda(account_id, amount)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const transactions = await fireblocks.depositFromLinkedDDA(accountId, amount);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "description": "使用する法定通貨口座のID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "201": {
            "description": "転送に成功しました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "amount": {
                    "type": "number"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/network_connections": {
      "get": {
        "summary": "ネットワーク接続を一覧表示する",
        "description": "すべてのネットワーク接続を返します。**注:** この API 呼び出しは、柔軟なルーティング スキームの対象です。ルーティング ポリシーによって、トランザクションのルーティング方法が定義されます。各アセット タイプに対して、以下の 3 つの異なるスキームのいずれかを選択できます。- **なし**; そのアセット タイプに対して、宛先のないプロファイル ルーティングを定義します。`なし` にルーティングされたアセット タイプへの着信トランザクションは失敗します。- **カスタム**; 選択したアカウントにルーティングします。アカウントを削除すると、別のアカウントを選択するまで着信トランザクションは失敗します。- **デフォルト**; 接続が接続されているネットワーク プロファイルで指定されたルーティングを使用します。このスキームは、「プロファイル ルーティング」とも呼ばれます。デフォルトのワークスペース プリセット: - ネットワーク プロファイル暗号 → **カスタム** - ネットワーク プロファイル FIAT → **なし** - ネットワーク接続暗号 → **デフォルト** - ネットワーク接続 FIAT → **デフォルト** - **注**: デフォルトでは、カスタム ルーティング スキームは (`dstId` = `0`、`dstType` = `VAULT`) を使用します。.",
        "tags": [
          "Network connections"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "network_connections = fireblocks.get_network_connections()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const networkConnections = await fireblocks.getNetworkConnections();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "ネットワーク接続のリスト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NetworkConnectionResponse"
                  }
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "新しいネットワーク接続を作成します",
        "description": "新しいネットワーク接続を開始します。**注:** この API 呼び出しは、柔軟なルーティング スキームの対象です。ルーティング ポリシーによって、トランザクションのルーティング方法が定義されます。各アセット タイプに対して、以下に示す 3 つの異なるスキームのいずれかを選択できます。- **なし**; そのアセット タイプに対して、宛先のないプロファイル ルーティングを定義します。`なし` にルーティングされたアセット タイプへの受信トランザクションは失敗します。- **カスタム**; 選択したアカウントにルーティングします。アカウントを削除すると、別のアカウントを選択するまで受信トランザクションは失敗します。- **デフォルト**; 接続先のネットワーク プロファイルで指定されたルーティングを使用します。このスキームは、「プロファイル ルーティング」とも呼ばれます。デフォルトのワークスペース プリセット: - ネットワーク プロファイル 暗号 → **カスタム** - ネットワーク プロファイル FIAT → **なし** - ネットワーク接続 暗号 → **デフォルト** - ネットワーク接続 FIAT → **デフォルト** - **注**: デフォルトでは、カスタム ルーティング スキームは (`dstId` = `0`、`dstType` = `VAULT`) を使用します。.",
        "tags": [
          "Network connections"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkConnection"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ネットワーク接続オブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkConnectionResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/network_connections/{connectionId}/set_routing_policy": {
      "patch": {
        "summary": "ネットワーク接続ルーティングポリシーを更新する.",
        "description": "既存のネットワーク接続のルーティング ポリシーを更新します。**注:** この API 呼び出しは、柔軟なルーティング スキームの対象となります。ルーティング ポリシーによって、トランザクションのルーティング方法が定義されます。各アセット タイプに対して、以下の 3 つの異なるスキームから 1 つを選択できます。- **なし**; そのアセット タイプに対して、宛先のないプロファイル ルーティングを定義します。`なし` にルーティングされたアセット タイプへの受信トランザクションは失敗します。- **カスタム**; 選択したアカウントにルーティングします。アカウントを削除すると、別のアカウントを選択するまで受信トランザクションは失敗します。- **デフォルト**; 接続が接続されているネットワーク プロファイルで指定されたルーティングを使用します。このスキームは、「プロファイル ルーティング」とも呼ばれます。デフォルトのワークスペース プリセット: - ネットワーク プロファイル 暗号 → **カスタム** - ネットワーク プロファイル FIAT → **なし** - ネットワーク接続 暗号 → **デフォルト** - ネットワーク接続 FIAT → **デフォルト** - **注**: デフォルトでは、カスタム ルーティング スキームは (`dstId` = `0`、`dstType` = `VAULT`) を使用します。.",
        "tags": [
          "Network connections"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "connectionId",
            "required": true,
            "description": "ネットワーク接続のID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "routingPolicy": {
                    "$ref": "#/components/schemas/NetworkConnectionRoutingPolicy"
                  }
                },
                "required": [
                  "routingPolicy"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ネットワークID",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/network_connections/{connectionId}/is_third_party_routing/{assetType}": {
      "get": {
        "summary": "資産タイプ別にサードパーティのネットワークルーティング検証を取得する.",
        "description": "Fireblocksネットワークは、入金に関する柔軟性を提供します。受信者は、Fireblocks以外の場所へのネットワーク入金を受け取ることができます。このエンドポイントは、将来のトランザクションが表示された受信者にルーティングされるか、サードパーティにルーティングされるかを検証します。.",
        "tags": [
          "Network connections"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "connectionId",
            "required": true,
            "description": "ネットワーク接続のID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "assetType",
            "required": true,
            "description": "宛先資産タイプ",
            "schema": {
              "oneOf": [
                {
                  "const": "CRYPTO"
                },
                {
                  "const": "SIGNET"
                },
                {
                  "const": "SEN"
                },
                {
                  "const": "SIGNET_TEST"
                },
                {
                  "const": "SEN_TEST"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "検証結果",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "properties": {
                    "isThirdPartyRouting": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/network_connections/{connectionId}": {
      "get": {
        "summary": "ネットワーク接続を取得する",
        "description": "ID でネットワーク接続を取得します。**注:** この API 呼び出しは、柔軟なルーティング スキームの対象です。ルーティング ポリシーによって、トランザクションのルーティング方法が定義されます。各アセット タイプに対して、以下に示す 3 つの異なるスキームのいずれかを選択できます。- **なし**; そのアセット タイプに対して、宛先のないプロファイル ルーティングを定義します。`なし` にルーティングされたアセット タイプへの受信トランザクションは失敗します。- **カスタム**; 選択したアカウントにルーティングします。アカウントを削除すると、別のアカウントを選択するまで受信トランザクションは失敗します。- **デフォルト**; 接続が接続されているネットワーク プロファイルで指定されたルーティングを使用します。このスキームは、「プロファイル ルーティング」とも呼ばれます。デフォルトのワークスペース プリセット: - ネットワーク プロファイル 暗号 → **カスタム** - ネットワーク プロファイル FIAT → **なし** - ネットワーク接続 暗号 → **デフォルト** - ネットワーク接続 FIAT → **デフォルト** - **注**: デフォルトでは、カスタム ルーティング スキームは (`dstId` = `0`、`dstType` = `VAULT`) を使用します。.",
        "tags": [
          "Network connections"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "network_connection = fireblocks.get_network_connection_by_id(connectionId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const network_connection = await fireblocks.getNetworkConnection(connectionId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "connectionId",
            "required": true,
            "description": "接続のID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ネットワーク接続",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkConnectionResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "IDでネットワーク接続を削除します",
        "description": "接続 ID で指定された既存のネットワーク接続を削除します。**注:** この API 呼び出しは、柔軟なルーティング スキームの対象です。ルーティング ポリシーによって、トランザクションのルーティング方法が定義されます。各アセット タイプに対して、以下に示す 3 つの異なるスキームのいずれかを選択できます。- **なし**; そのアセット タイプに対して、宛先のないプロファイル ルーティングを定義します。`なし` にルーティングされたアセット タイプへの受信トランザクションは失敗します。- **カスタム**; 選択したアカウントにルーティングします。アカウントを削除すると、別のアカウントを選択するまで受信トランザクションは失敗します。- **デフォルト**; 接続が接続されているネットワーク プロファイルで指定されたルーティングを使用します。このスキームは、「プロファイル ルーティング」とも呼ばれます。デフォルトのワークスペース プリセット: - ネットワーク プロファイル 暗号 → **カスタム** - ネットワーク プロファイル FIAT → **なし** - ネットワーク接続 暗号 → **デフォルト** - ネットワーク接続 FIAT → **デフォルト** - **注**: デフォルトでは、カスタム ルーティング スキームは (`dstId` = `0`、`dstType` = `VAULT`) を使用します。.",
        "tags": [
          "Network connections"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "connectionId",
            "required": true,
            "description": "削除するネットワーク接続のID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ネットワークID",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/network_ids": {
      "get": {
        "summary": "ローカルIDと検出可能なリモートIDの両方を含むすべてのネットワークIDを返します。",
        "description": "すべてのローカルおよび検出可能なリモート ネットワーク ID のリストを取得します。**注:** この API 呼び出しは、柔軟なルーティング スキームの対象です。ルーティング ポリシーによって、トランザクションのルーティング方法が定義されます。各アセット タイプに対して、以下に示す 3 つの異なるスキームのいずれかを選択できます。- **なし**; そのアセット タイプに対して、宛先のないプロファイル ルーティングを定義します。`なし` にルーティングされたアセット タイプへの受信トランザクションは失敗します。- **カスタム**; 選択したアカウントにルーティングします。アカウントを削除すると、別のアカウントを選択するまで受信トランザクションは失敗します。- **デフォルト**; 接続先のネットワーク プロファイルで指定されたルーティングを使用します。このスキームは、「プロファイル ルーティング」とも呼ばれます。デフォルトのワークスペース プリセット: - ネットワーク プロファイル 暗号 → **カスタム** - ネットワーク プロファイル FIAT → **なし** - ネットワーク接続 暗号 → **デフォルト** - ネットワーク接続 FIAT → **デフォルト** - **注**: デフォルトでは、カスタム ルーティング スキームは (`dstId` = `0`、`dstType` = `VAULT`) を使用します。.",
        "tags": [
          "Network connections"
        ],
        "responses": {
          "200": {
            "description": "ネットワークIDのリスト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "新しいネットワークIDを作成します",
        "description": "新しいネットワーク ID を作成します。**注:** この API 呼び出しは、柔軟なルーティング スキームの対象です。ルーティング ポリシーによって、トランザクションのルーティング方法が定義されます。各アセット タイプに対して、以下に示す 3 つの異なるスキームのいずれかを選択できます。- **なし**; そのアセット タイプに対して、宛先のないプロファイル ルーティングを定義します。`なし` にルーティングされたアセット タイプへの受信トランザクションは失敗します。- **カスタム**; 選択したアカウントにルーティングします。アカウントを削除すると、別のアカウントを選択するまで受信トランザクションは失敗します。- **デフォルト**; 接続先のネットワーク プロファイルで指定されたルーティングを使用します。このスキームは、「プロファイル ルーティング」とも呼ばれます。デフォルトのワークスペース プリセット: - ネットワーク プロファイル 暗号 → **カスタム** - ネットワーク プロファイル FIAT → **なし** - ネットワーク接続 暗号 → **デフォルト** - ネットワーク接続 FIAT → **デフォルト** - **注**: デフォルトでは、カスタム ルーティング スキームは (`dstId` = `0`、`dstType` = `VAULT`) を使用します。.",
        "tags": [
          "Network connections"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "routingPolicy": {
                    "$ref": "#/components/schemas/NetworkIdRoutingPolicy"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ワークスペース内の新しいネットワークIDを返します",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkIdResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/network_ids/{networkId}": {
      "get": {
        "summary": "特定のネットワークIDを返します.",
        "description": "ID でネットワークを取得します。**注:** この API 呼び出しは、柔軟なルーティング スキームの対象です。ルーティング ポリシーによって、トランザクションのルーティング方法が定義されます。各アセット タイプに対して、以下の 3 つの異なるスキームから 1 つを選択できます。- **なし**; そのアセット タイプに対して、宛先のないプロファイル ルーティングを定義します。`なし` にルーティングされたアセット タイプへの受信トランザクションは失敗します。- **カスタム**; 選択したアカウントにルーティングします。アカウントを削除すると、別のアカウントを選択するまで受信トランザクションは失敗します。- **デフォルト**; 接続先のネットワーク プロファイルで指定されたルーティングを使用します。このスキームは、「プロファイル ルーティング」とも呼ばれます。デフォルトのワークスペース プリセット: - ネットワーク プロファイル 暗号 → **カスタム** - ネットワーク プロファイル FIAT → **なし** - ネットワーク接続 暗号 → **デフォルト** - ネットワーク接続 FIAT → **デフォルト** - **注**: デフォルトでは、カスタム ルーティング スキームは (`dstId` = `0`、`dstType` = `VAULT`) を使用します。.",
        "tags": [
          "Network connections"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "networkId",
            "required": true,
            "description": "ネットワークのID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ネットワークID",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkIdResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "特定のネットワークIDを削除します.",
        "description": "ID でネットワークを削除します。**注:** この API 呼び出しは、柔軟なルーティング スキームの対象です。ルーティング ポリシーによって、トランザクションのルーティング方法が決まります。各アセット タイプに対して、以下の 3 つの異なるスキームから 1 つを選択できます。- **なし**; そのアセット タイプに対して、宛先のないプロファイル ルーティングを定義します。`なし` にルーティングされたアセット タイプへの受信トランザクションは失敗します。- **カスタム**; 選択したアカウントにルーティングします。アカウントを削除すると、別のアカウントを選択するまで受信トランザクションは失敗します。- **デフォルト**; 接続先のネットワーク プロファイルで指定されたルーティングを使用します。このスキームは、「プロファイル ルーティング」とも呼ばれます。デフォルトのワークスペース プリセット: - ネットワーク プロファイル 暗号 → **カスタム** - ネットワーク プロファイル FIAT → **なし** - ネットワーク接続 暗号 → **デフォルト** - ネットワーク接続 FIAT → **デフォルト** - **注**: デフォルトでは、カスタム ルーティング スキームは (`dstId` = `0`、`dstType` = `VAULT`) を使用します。.",
        "tags": [
          "Network connections"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "networkId",
            "required": true,
            "description": "ネットワークのID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ネットワークID",
            "content": {
              "*/*": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/network_ids/{networkId}/set_routing_policy": {
      "patch": {
        "summary": "ネットワーク ID ルーティング ポリシーを更新する.",
        "description": "指定されたネットワーク ID のルーティング ポリシーを更新します。**注:** この API 呼び出しは、柔軟なルーティング スキームの対象です。ルーティング ポリシーによって、トランザクションのルーティング方法が定義されます。各アセット タイプに対して、以下に示す 3 つの異なるスキームのいずれかを選択できます。- **なし**; そのアセット タイプに対して、宛先のないプロファイル ルーティングを定義します。`なし` にルーティングされたアセット タイプへの受信トランザクションは失敗します。- **カスタム**; 選択したアカウントにルーティングします。アカウントを削除すると、別のアカウントを選択するまで受信トランザクションは失敗します。- **デフォルト**; 接続先のネットワーク プロファイルで指定されたルーティングを使用します。このスキームは、「プロファイル ルーティング」とも呼ばれます。デフォルトのワークスペース プリセット: - ネットワーク プロファイル 暗号 → **カスタム** - ネットワーク プロファイル FIAT → **なし** - ネットワーク接続 暗号 → **デフォルト** - ネットワーク接続 FIAT → **デフォルト** - **注**: デフォルトでは、カスタム ルーティング スキームは (`dstId` = `0`、`dstType` = `VAULT`) を使用します。.",
        "tags": [
          "Network connections"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "networkId",
            "required": true,
            "description": "ネットワークのID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "routingPolicy": {
                    "$ref": "#/components/schemas/NetworkIdRoutingPolicy"
                  }
                },
                "required": [
                  "routingPolicy"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ネットワークID",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/network_ids/{networkId}/set_discoverability": {
      "patch": {
        "summary": "ネットワークIDの検出可能性を更新する.",
        "description": "ネットワーク ID が他のユーザーによって検出可能かどうかを更新します。**注:** この API 呼び出しは、柔軟なルーティング スキームの対象です。ルーティング ポリシーによって、トランザクションのルーティング方法が定義されます。各アセット タイプに対して、以下に示す 3 つの異なるスキームのいずれかを選択できます。- **なし**; そのアセット タイプに対して、宛先のないプロファイル ルーティングを定義します。`なし` にルーティングされたアセット タイプへの受信トランザクションは失敗します。- **カスタム**; 選択したアカウントにルーティングします。アカウントを削除すると、別のアカウントを選択するまで受信トランザクションは失敗します。- **デフォルト**; 接続先のネットワーク プロファイルで指定されたルーティングを使用します。このスキームは、「プロファイル ルーティング」とも呼ばれます。デフォルトのワークスペース プリセット: - ネットワーク プロファイル 暗号 → **カスタム** - ネットワーク プロファイル FIAT → **なし** - ネットワーク接続 暗号 → **デフォルト** - ネットワーク接続 FIAT → **デフォルト** - **注**: デフォルトでは、カスタム ルーティング スキームは (`dstId` = `0`、`dstType` = `VAULT`) を使用します。.",
        "tags": [
          "Network connections"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "networkId",
            "required": true,
            "description": "ネットワークのID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "isDiscoverable": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "isDiscoverable"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ネットワークID",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/network_ids/{networkId}/set_name": {
      "patch": {
        "summary": "ネットワークIDの名前を更新.",
        "description": "指定されたネットワーク ID の名前を更新します。**注:** この API 呼び出しは、柔軟なルーティング スキームの対象です。ルーティング ポリシーによって、トランザクションのルーティング方法が決まります。各アセット タイプに対して、以下の 3 つの異なるスキームから 1 つを選択できます。- **なし**; そのアセット タイプに対して、宛先のないプロファイル ルーティングを定義します。`なし` にルーティングされたアセット タイプへの受信トランザクションは失敗します。- **カスタム**; 選択したアカウントにルーティングします。アカウントを削除すると、別のアカウントを選択するまで受信トランザクションは失敗します。- **デフォルト**; 接続先のネットワーク プロファイルで指定されたルーティングを使用します。このスキームは、「プロファイル ルーティング」とも呼ばれます。デフォルトのワークスペース プリセット: - ネットワーク プロファイル 暗号 → **カスタム** - ネットワーク プロファイル FIAT → **なし** - ネットワーク接続 暗号 → **デフォルト** - ネットワーク接続 FIAT → **デフォルト** - **注**: デフォルトでは、カスタム ルーティング スキームは (`dstId` = `0`、`dstType` = `VAULT`) を使用します。.",
        "tags": [
          "Network connections"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "networkId",
            "required": true,
            "description": "ネットワークのID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ネットワークID",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/internal_wallets": {
      "get": {
        "summary": "内部ウォレットを一覧表示する",
        "tags": [
          "Internal wallets"
        ],
        "description": "内部ウォレットのリストを取得します。**注意**: ホワイトリストに登録されたアドレスに属する BTC ベースの資産は、サードパーティ プロバイダーの Blockchair がこの 60 秒間利用できないため、毎日 00:00 UTC から 00:01 UTC の間取得できません。BTC ベースの資産を取得するには、次の 1 分までお待ちください。.",
        "responses": {
          "200": {
            "description": "内部ウォレットのリスト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnmanagedWallet"
                  }
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "内部ウォレットを作成する",
        "tags": [
          "Internal wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "internalWallet = fireblocks.create_internal_wallet(name, customer_ref_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const internalWallet = await fireblocks.createInternalWallet(name, customerRefId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "description": "要求された名前で新しい内部ウォレットを作成します.",
        "responses": {
          "200": {
            "description": "新しいウォレットオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UnmanagedWallet"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "ウォレットの表示名"
                  },
                  "customerRefId": {
                    "description": "オプション - 顧客参照IDを設定します",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/internal_wallets/{walletId}": {
      "get": {
        "summary": "内部ウォレットの資産を取得する",
        "tags": [
          "Internal wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "internalWallet = fireblocks.get_internal_wallet(walletId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.getInternalWallet(walletId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "description": "内部ウォレット内のすべての資産をIDで返します.",
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "返されるウォレットのID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ウォレットオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UnmanagedWallet"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "内部ウォレットを削除する",
        "tags": [
          "Internal wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = firebocks.delete_internal_wallet(walletId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.deleteInternalWallet(walletId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "description": "IDで内部ウォレットを削除します.",
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "削除するウォレットのID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "201": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/internal_wallets/{walletId}/set_customer_ref_id": {
      "post": {
        "summary": "内部ウォレットのAML/KYT顧客参照IDを設定する",
        "tags": [
          "Internal wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = firebocks.set_customer_ref_id_for_internal_wallet(wallet_id, customer_ref_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.setCustomerRefIdForInternalWallet(walletId, customerRefId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "description": "特定の内部ウォレットのAML/KYT顧客参照IDを設定します.",
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "ウォレットID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customerRefId": {
                    "description": "顧客参照ID",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/internal_wallets/{walletId}/{assetId}": {
      "get": {
        "summary": "内部ウォレットから資産を取得する",
        "tags": [
          "Internal wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "internalWalletAsset = fireblocks.get_internal_wallet_asset(walletId, assetId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const internalWalletAsset = fireblocks.getInternalWalletAsset(walletId, assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "description": "内部ウォレット内の資産の情報を返します.",
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "ウォレットのID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "返される資産のID",
            "schema": {
              "type": "string",
              "minimum": 1,
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ウォレットアセットオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WalletAsset"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "内部ウォレットに資産を追加する",
        "tags": [
          "Internal wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "internalWalletAsset = fireblocks.create_internal_wallet_asset(walletId, assetId, address, tag)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const internalWalletAsset = await fireblocks.createInternalWalletAsset(walletContainerId, assetId, address, tag);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "description": "既存の内部ウォレットに資産を追加します.",
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "ウォレットのID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "追加するアセットのID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ウォレットアセットオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WalletAsset"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "ウォレットのアドレス、またはEOSウォレットの場合はアカウント名"
                  },
                  "tag": {
                    "type": "string",
                    "description": "XRPウォレットの場合は宛先タグ、EOSの場合はメモ、法定通貨プロバイダー（BCBグループのBLINC）の場合は銀行振込の説明"
                  }
                },
                "required": [
                  "address"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "内部ウォレットからホワイトリストに登録されたアドレスを削除する",
        "tags": [
          "Internal wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = fireblocks.delete_internal_wallet_asset(walletId, assetId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.deleteInternalWalletAsset(walletId, assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "description": "内部ウォレットからホワイトリストに登録されたアドレス（資産用）を削除します.",
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "ウォレットのID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "削除するアセットのID",
            "schema": {
              "type": "string",
              "minimum": 1,
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/external_wallets": {
      "get": {
        "summary": "外部ウォレットを一覧表示する",
        "description": "ワークスペースの外部ウォレットのリストを取得します.",
        "tags": [
          "External wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "externalWallets = fireblocks.get_external_wallets()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const externalWallets = await fireblocks.getExternalWallets();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "外部ウォレットのリスト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnmanagedWallet"
                  }
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "外部ウォレットを作成する",
        "description": "要求された名前で新しい外部ウォレットを作成します.",
        "tags": [
          "External wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "externalWallet = fireblocks.create_external_wallet(name, customer_ref_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const externalWallet = await fireblocks.createExternalWallet(name, customerRefId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "ウォレットオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UnmanagedWallet"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "ウォレットの表示名"
                  },
                  "customerRefId": {
                    "description": "オプション - 顧客参照IDを設定します",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/external_wallets/{walletId}": {
      "get": {
        "summary": "外部ウォレットを探す",
        "description": "IDで外部ウォレットを返します.",
        "tags": [
          "External wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "externalWallet = fireblocks.get_external_wallet(walletId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const externalWallet = await fireblocks.getExternalWallet(walletId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "返されるウォレットのID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ウォレットオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UnmanagedWallet"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "外部ウォレットを削除する",
        "description": "IDで外部ウォレットを削除します.",
        "tags": [
          "External wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = firebocks.delete_external_wallet(walletId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.deleteExternalWallet(walletId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "削除するウォレットのID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "201": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/external_wallets/{walletId}/set_customer_ref_id": {
      "post": {
        "summary": "外部ウォレットのAML顧客参照IDを設定する",
        "description": "特定の外部ウォレットのAML/KYT顧客参照IDを設定します.",
        "tags": [
          "External wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = firebocks.set_customer_ref_id_for_external_wallet(wallet_id, customer_ref_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.setCustomerRefIdForExternalWallet(walletId, customerRefId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "ウォレットID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customerRefId": {
                    "description": "顧客参照ID",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/external_wallets/{walletId}/{assetId}": {
      "get": {
        "summary": "外部ウォレットから資産を取得する",
        "description": "ウォレットIDとアセットIDで外部ウォレットを返します.",
        "tags": [
          "External wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "externalWalletAsset = fireblocks.get_external_wallet_asset(walletId, assetId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const externalWalletAsset = fireblocks.getExternalWalletAsset(walletId, assetId)",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "ウォレットのID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "返される資産のID",
            "schema": {
              "type": "string",
              "minimum": 1,
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ウォレットアセットオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalWalletAsset"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "外部ウォレットに資産を追加する.",
        "description": "既存の外部ウォレットに資産を追加する.",
        "tags": [
          "External wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "externalWalletAsset = fireblocks.create_external_wallet_asset(walletId, assetId, address, tag)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const externalWalletAsset = await fireblocks.createExternalWalletAsset(walletContainerId, assetId, address, tag);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "ウォレットのID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "追加するアセットのID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ウォレットアセットオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalWalletAsset"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "ウォレットのアドレス（またはxpub）"
                      },
                      "tag": {
                        "type": "string",
                        "description": "XRPウォレットの場合は宛先タグ、EOS/XLMの場合はメモ、法定通貨プロバイダー（BCBグループのBLINC）の場合は銀行振込の説明"
                      }
                    },
                    "required": [
                      "address"
                    ]
                  },
                  {
                    "properties": {
                      "additionalInfo": {
                        "type": "object",
                        "oneOf": [
                          {
                            "properties": {
                              "accountHolderGivenName": {
                                "type": "string"
                              },
                              "accountHolderSurname": {
                                "type": "string"
                              },
                              "accountHolderCity": {
                                "type": "string"
                              },
                              "accountHolderCountry": {
                                "type": "string"
                              },
                              "accountHolderAddress1": {
                                "type": "string"
                              },
                              "accountHolderAddress2": {
                                "type": "string"
                              },
                              "accountHolderDistrict": {
                                "type": "string"
                              },
                              "accountHolderPostalCode": {
                                "type": "string"
                              },
                              "iban": {
                                "type": "string"
                              },
                              "ibanCity": {
                                "type": "string"
                              },
                              "ibanCountry": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "accountHolderGivenName",
                              "accountHolderCity",
                              "accountHolderCountry",
                              "accountHolderAddress1",
                              "accountHolderPostalCode",
                              "iban",
                              "ibanCity",
                              "ibanCountry"
                            ]
                          },
                          {
                            "properties": {
                              "accountHolderGivenName": {
                                "type": "string"
                              },
                              "accountHolderSurname": {
                                "type": "string"
                              },
                              "accountHolderCity": {
                                "type": "string"
                              },
                              "accountHolderCountry": {
                                "type": "string"
                              },
                              "accountHolderAddress1": {
                                "type": "string"
                              },
                              "accountHolderAddress2": {
                                "type": "string"
                              },
                              "accountHolderDistrict": {
                                "type": "string"
                              },
                              "accountHolderPostalCode": {
                                "type": "string"
                              },
                              "abaRoutingNumber": {
                                "type": "string"
                              },
                              "abaAccountNumber": {
                                "type": "string"
                              },
                              "abaCountry": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "accountHolderGivenName",
                              "accountHolderCity",
                              "accountHolderCountry",
                              "accountHolderAddress1",
                              "accountHolderPostalCode",
                              "abaRoutingNumber",
                              "abaAccountNumber",
                              "abaCountry"
                            ]
                          },
                          {
                            "properties": {
                              "speiClabe": {
                                "type": "string"
                              },
                              "speiName": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "speiClabe"
                            ]
                          }
                        ]
                      }
                    },
                    "required": [
                      "additionalInfo"
                    ]
                  }
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "外部ウォレットから資産を削除する",
        "description": "IDで外部ウォレット資産を削除します.",
        "tags": [
          "External wallets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = fireblocks.delete_external_wallet_asset(walletId, assetId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.deleteExternalWalletAsset(walletId, assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "walletId",
            "required": true,
            "description": "ウォレットのID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "削除するアセットのID",
            "schema": {
              "type": "string",
              "minimum": 1,
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contracts": {
      "get": {
        "summary": "契約の一覧",
        "description": "契約のリストを取得します.",
        "tags": [
          "Contracts"
        ],
        "responses": {
          "200": {
            "description": "契約リスト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnmanagedWallet"
                  }
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "契約書を作成する",
        "description": "新しい契約を作成します.",
        "tags": [
          "Contracts"
        ],
        "responses": {
          "200": {
            "description": "ウォレットオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UnmanagedWallet"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "契約の表示名"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{contractId}": {
      "get": {
        "summary": "特定の契約を探す",
        "description": "IDで契約を返します.",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contractId",
            "required": true,
            "description": "返される契約のID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ウォレットオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UnmanagedWallet"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "契約を削除する",
        "description": "IDで契約を削除します.",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contractId",
            "required": true,
            "description": "削除する契約のID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "201": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{contractId}/{assetId}": {
      "get": {
        "summary": "契約資産を探す",
        "description": "IDで契約資産を返します.",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contractId",
            "required": true,
            "description": "契約のID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "返される資産のID",
            "schema": {
              "type": "string",
              "minimum": 1,
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ウォレットアセットオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalWalletAsset"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "契約に資産を追加する",
        "description": "既存の契約に資産を追加します.",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contractId",
            "required": true,
            "description": "契約のID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "追加するアセットのID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ウォレットアセットオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalWalletAsset"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "ウォレットの契約アドレス（またはxpub）"
                  },
                  "tag": {
                    "type": "string",
                    "description": "XRPウォレットの宛先タグ"
                  }
                },
                "required": [
                  "address"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "契約資産を削除する",
        "description": "IDで契約資産を削除します.",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contractId",
            "required": true,
            "description": "契約のID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "削除するアセットのID",
            "schema": {
              "type": "string",
              "minimum": 1,
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/supported_assets": {
      "get": {
        "summary": "Fireblocks でサポートされているすべてのアセット タイプを一覧表示します",
        "description": "Fireblocks でサポートされているすべてのアセット タイプを返します.",
        "tags": [
          "Blockchains & assets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "supportedAssets = fireblocks.get_supported_assets()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const supportedAssets = await fireblocks.getSupportedAssets();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "トランザクションオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetTypeResponse"
                  }
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/estimate_network_fee": {
      "get": {
        "summary": "資産に必要な手数料を見積もる",
        "description": "資産に必要な手数料の見積もりを取得します。UTXOベースの資産の場合、応答にはバイトあたりの推奨手数料、ETH/ETCベースの資産の場合は推奨ガス価格、XRP/XLMの場合はトランザクション手数料が含まれます。.",
        "tags": [
          "Blockchains & assets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "fee_result = fireblocks.get_fee_for_asset(asset_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const feeResult = await fireblocks.getFeeForAsset(assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "query",
            "name": "assetId",
            "description": "手数料を見積もる資産",
            "required": true,
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "推定料金の回答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EstimatedNetworkFeeResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/validate_address/{assetId}/{address}": {
      "get": {
        "summary": "宛先アドレスを検証する",
        "description": "アドレスが有効かどうかを確認します（XRP、DOT、XLM、EOS の場合）.",
        "tags": [
          "Blockchains & assets"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "const result = await fireblocks.validate_address(assetID, address)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.validateAddress(assetID, address)",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "アドレスの資産",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          },
          {
            "in": "path",
            "name": "address",
            "required": true,
            "description": "検証するアドレス",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "トランザクションオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateAddressResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "summary": "取引履歴の一覧",
        "description": "ワークスペースの取引履歴を一覧表示します.",
        "tags": [
          "Transactions"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "transactions = fireblocks.get_transactions(status, after)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const transactions = await fireblocks.getTransactions({\n status: args.status,\nafter: from });\n",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "query",
            "name": "before",
            "description": "ミリ秒単位の Unix タイムスタンプ。指定された日付より前に作成されたトランザクションのみを返します。",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "after",
            "description": "ミリ秒単位の Unix タイムスタンプ。指定された日付以降に作成されたトランザクションのみを返します。",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "いずれかのステータスでフィルタリングできます.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "結果を並べ替えるフィールド **注**: createdAt ではないフィールドで並べ替えると、次のページまたは前のページの結果を要求するときに更新を受け取るトランザクションが発生し、それらのトランザクションが欠落する可能性があります。.",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "const": "createdAt"
                },
                {
                  "const": "lastUpdated"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "結果を並べ替える方向",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "const": "ASC"
                },
                {
                  "const": "DESC"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "結果の数を制限します。指定しない場合は、200 の制限が使用されます。最大許容制限は 500 です。",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 200
            }
          },
          {
            "in": "query",
            "name": "sourceType",
            "description": "取引のソースタイプ",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "const": "VAULT_ACCOUNT"
                },
                {
                  "const": "EXCHANGE_ACCOUNT"
                },
                {
                  "const": "INTERNAL_WALLET"
                },
                {
                  "const": "EXTERNAL_WALLET"
                },
                {
                  "const": "FIAT_ACCOUNT"
                },
                {
                  "const": "NETWORK_CONNECTION"
                },
                {
                  "const": "COMPOUND"
                },
                {
                  "const": "UNKNOWN"
                },
                {
                  "const": "GAS_STATION"
                },
                {
                  "const": "END_USER_WALLET"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "sourceId",
            "description": "トランザクションのソースID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "destType",
            "description": "トランザクションの宛先タイプ",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "const": "VAULT_ACCOUNT"
                },
                {
                  "const": "EXCHANGE_ACCOUNT"
                },
                {
                  "const": "INTERNAL_WALLET"
                },
                {
                  "const": "EXTERNAL_WALLET"
                },
                {
                  "const": "FIAT_ACCOUNT"
                },
                {
                  "const": "NETWORK_CONNECTION"
                },
                {
                  "const": "COMPOUND"
                },
                {
                  "const": "ONE_TIME_ADDRESS"
                },
                {
                  "const": "END_USER_WALLET"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "destId",
            "description": "トランザクションの宛先ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "assets",
            "description": "フィルタリングする資産のリスト（カンマで区切る）",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "txHash",
            "description": "指定されたtxHashを持つ結果のみを返します",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sourceWalletId",
            "description": "ソースが特定のエンドユーザーウォレットである結果のみを返します",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "destWalletId",
            "description": "宛先が特定のエンドユーザーウォレットである結果のみを返します",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "取引リスト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              },
              "next-page": {
                "schema": {
                  "type": "string"
                },
                "description": "次の結果ページを受け取るためにこの API エンドポイントに新しいリクエストを表す URL.",
                "in": "header"
              },
              "prev-page": {
                "schema": {
                  "type": "string"
                },
                "description": "前のページの結果を受け取るためにこの API エンドポイントに新しいリクエストを表す URL.",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionResponse"
                  }
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "新しい取引を作成する",
        "description": "新しいトランザクションを作成します.",
        "tags": [
          "Transactions"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-End-User-Wallet-Id",
            "schema": {
              "$ref": "#/components/headers/X-End-User-Wallet-Id"
            }
          }
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "tx_result = client.create_transaction( asset_id=\"BTC\", amount=\"50\", source=TransferPeerPath(VAULT_ACCOUNT, from_vault_account_id), destination=DestinationTransferPeerPath(VAULT_ACCOUNT, to_vault_account_id) )\n",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const payload: TransactionArguments = { assetId: asset, source: { type: sourceType, id: sourceId || 0 }, destination: { type: destinationType, id: String(destinationId) }, amount: String(amount), fee: String(fee), note: \"Created by fireblocks SDK\" }; const result = await fireblocks.createTransaction(payload);\n",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "トランザクションオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequest"
              }
            }
          }
        }
      }
    },
    "/transactions/estimate_fee": {
      "post": {
        "summary": "取引手数料の見積もり",
        "description": "トランザクションリクエストのトランザクション手数料を見積もります。 * 注: ZCash (ZEC) を除くすべての Fireblocks アセットをサポートします。.",
        "tags": [
          "Transactions"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "estimated_fee = client.estimate_fee_for_transaction( asset_id=\"BTC\", amount=\"50\", source=TransferPeerPath(VAULT_ACCOUNT, from_vault_account_id), destination=DestinationTransferPeerPath(VAULT_ACCOUNT, to_vault_account_id) )\n",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const payload: TransactionArguments = { assetId: asset, source: { type: sourceType, id: sourceId || 0 }, destination: { type: destinationType, id: String(destinationId) }, amount: Number(amount) }; const estimatedFee = await fireblocks.estimateFeeForTransaction(payload);\n",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "推定料金の回答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EstimatedTransactionFeeResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{txId}": {
      "get": {
        "summary": "Fireblocks トランザクション ID で特定のトランザクションを検索する",
        "description": "IDでトランザクションを返します.",
        "tags": [
          "Transactions"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "tx = fireblocks.get_transaction_by_id(txId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const tx = await fireblocks.getTransactionById(txId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "txId",
            "required": true,
            "example": "00000000-0000-0000-0000-000000000000",
            "description": "返されるトランザクションのID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "トランザクションオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/external_tx_id/{externalTxId}/": {
      "get": {
        "summary": "外部トランザクションIDで特定のトランザクションを検索する",
        "description": "外部トランザクションIDでトランザクションを返します.",
        "tags": [
          "Transactions"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "tx = fireblocks.get_transaction_by_external_tx_id(externalTxId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const tx = await fireblocks.getTransactionByExternalTxId(externalTxId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "externalTxId",
            "example": "00000000-0000-0000-0000-000000000000",
            "required": true,
            "description": "返されるトランザクションの外部ID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "トランザクションオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{txId}/set_confirmation_threshold": {
      "post": {
        "summary": "トランザクションIDによる確認しきい値の設定",
        "description": "トランザクションIDによってトランザクション完了に必要な確認回数を上書きします.",
        "tags": [
          "Transactions"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "set_conf_threshold = client.set_confirmation_threshold_by_tx_id(body)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const setConfThreshold = await fireblocks.setConfirmationThresholdByTxId(body);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetConfirmationsThresholdRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "txId",
            "required": true,
            "description": "取引のID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "正常に設定されました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SetConfirmationsThresholdResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{txId}/drop": {
      "post": {
        "summary": "IDによるETHトランザクションのドロップ",
        "description": "スタックしたETHトランザクションを削除し、代わりのトランザクションを作成します.",
        "tags": [
          "Transactions"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = fireblocks.drop_transaction(txId, fee_level)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.dropTransaction(txId, feeLevel);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DropTransactionRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "X-End-User-Wallet-Id",
            "schema": {
              "$ref": "#/components/headers/X-End-User-Wallet-Id"
            }
          },
          {
            "in": "path",
            "name": "txId",
            "required": true,
            "description": "取引のID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "正常に作成されました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DropTransactionResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{txId}/cancel": {
      "post": {
        "summary": "取引をキャンセルする",
        "description": "IDで取引をキャンセルする.",
        "tags": [
          "Transactions"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = fireblocks.cancel_transaction_by_id(txId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.cancelTransactionById(txId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "header",
            "name": "X-End-User-Wallet-Id",
            "schema": {
              "$ref": "#/components/headers/X-End-User-Wallet-Id"
            }
          },
          {
            "in": "path",
            "name": "txId",
            "required": true,
            "description": "キャンセルするトランザクションのID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "トランザクションオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CancelTransactionResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{txId}/freeze": {
      "post": {
        "summary": "取引を凍結する",
        "description": "IDで取引を凍結する.",
        "tags": [
          "Transactions"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = fireblocks.freeze_transaction(txId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.freezeTransaction(txId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "header",
            "name": "X-End-User-Wallet-Id",
            "schema": {
              "$ref": "#/components/headers/X-End-User-Wallet-Id"
            }
          },
          {
            "in": "path",
            "name": "txId",
            "required": true,
            "description": "凍結するトランザクションのID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "フリーズ反応",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FreezeTransactionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{txId}/unfreeze": {
      "post": {
        "summary": "取引の凍結を解除する",
        "description": "ID によってトランザクションを凍結解除し、トランザクションを再び利用できるようにします。.",
        "tags": [
          "Transactions"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = fireblocks.unfreeze_transaction(txId)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.unfreezeTransaction(txId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "header",
            "name": "X-End-User-Wallet-Id",
            "schema": {
              "$ref": "#/components/headers/X-End-User-Wallet-Id"
            }
          },
          {
            "in": "path",
            "name": "txId",
            "required": true,
            "description": "凍結解除するトランザクションのID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "応答を解凍する",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UnfreezeTransactionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/txHash/{txHash}/set_confirmation_threshold": {
      "post": {
        "summary": "トランザクションハッシュによる確認しきい値を設定する",
        "description": "トランザクションハッシュによるトランザクション完了に必要な確認回数を上書きする.",
        "tags": [
          "Transactions"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "set_conf_threshold = client.set_confirmation_threshold_by_tx_hash(body)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const setConfThreshold = await fireblocks.setConfirmationThresholdByTxHash(body);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetConfirmationsThresholdRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "txHash",
            "required": true,
            "description": "TxHash は",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "変更の影響を受ける取引のリスト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SetConfirmationsThresholdResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payments/xb-settlements/configs": {
      "post": {
        "tags": [
          "Payments - cross-border settlement"
        ],
        "summary": "新しい越境決済構成を作成する",
        "description": "<u><b>新しい国境を越えた決済構成を作成します。</b></u></br>構成では、国境を越えた決済に使用するデフォルトの資産、オンランプ、オフランプを定義します。</br>構成には、少なくとも `ON_RAMP` と `VAULT_ACCOUNT` の 2 つのステップが含まれている必要があります。</br>その他のすべてのステップ (例: `OFF_RAMP`、`FIAT_DESTINATION` など) はオプションです。</br>各ステップには、使用する `accountId` を含める必要がありますが、`inputAssetId` と `outputAssetId` はオプションです。これらが指定されていない場合は、Corridor Settings のデフォルト値が使用されます。</br>いずれかのオブジェクトに inputAssetId または outputAssetId が指定されている場合、オブジェクト内のすべての資産は一致している必要があります。たとえば、ON_RAMP の出力資産が XLM_USDC_5F3T の場合、VAULT_ACCOUNT の入力資産も XLM_USDC_5F3T である必要があります。</br>設定に応じてスリッページ量を設定できます。スリッページはベーシス ポイント (bps) で定義されます。この値は実行時にオーバーロードされる可能性があります。スリッページ量を設定しない場合は、デフォルトのスリッページ 10000 bps (10%) が使用されます。</br> **注:** このセクションの参照コンテンツは、Payments Engine エンドポイントについて説明しています。Payments Engine エンドポイントには、アカウントで Payments Engine が有効になっている顧客のみが利用できる API が含まれています。これらのエンドポイントは現在ベータ版であり、変更される可能性があります。Fireblocks Payments Engine について詳しく知りたい場合は、Fireblocks カスタマー サクセス マネージャーに問い合わせるか、CSM@fireblocks.com にメールを送信してください。.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/XBSettlementConfigCreationRequestBody"
              },
              "example": {
                "name": "Flow Config Example",
                "corridorId": "CO_US",
                "steps": {
                  "ON_RAMP": {
                    "accountId": "3b7a1451-3453-4c96-a6a5-683cc8971d04"
                  },
                  "VAULT_ACCOUNT": {
                    "accountId": "2"
                  },
                  "OFF_RAMP": {
                    "accountId": "f2f74204-93ec-4614-870a-4ea2ad13aa0b"
                  }
                },
                "conversionSlippageBasisPoints": 75
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "国境を越えた決済設定が正常に作成されました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XBSettlementConfigCreationResponse"
                },
                "example": {
                  "configId": "074791cc-ef32-4920-8373-95efbeea66c5",
                  "corridorId": "CO_US",
                  "name": "Flow Config Example",
                  "steps": {
                    "ON_RAMP": {
                      "accountId": "3b7a1451-3453-4c96-a6a5-683cc8971d04",
                      "inputAssetId": "COP",
                      "outputAssetId": "USD"
                    },
                    "VAULT_ACCOUNT": {
                      "accountId": "2",
                      "inputAssetId": "XLM_USDC_5F3T",
                      "outputAssetId": "XLM_USDC_5F3T"
                    },
                    "OFF_RAMP": {
                      "accountId": "f2f74204-93ec-4614-870a-4ea2ad13aa0b",
                      "inputAssetId": "XLM_USDC_5F3T",
                      "outputAssetId": "XLM_USDC_5F3T"
                    }
                  },
                  "conversionSlippageBasisPoints": 75,
                  "createdAt": 1680625226267
                }
              }
            }
          },
          "400": {
            "description": "国境を越えたリクエストの作成中にエラーが発生しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "許可されていません。Authorization ヘッダーに JWT トークンが見つからないか無効です.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "内部エラー.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Payments - cross-border settlement"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "国境を越えた決済設定をすべて取得",
        "description": "すべての国境を越えた決済構成を取得します。</br> **注:** このセクションの参照コンテンツは、Payments Engine エンドポイントについて説明しています。Payments Engine エンドポイントには、アカウントで Payments Engine が有効になっている顧客のみが利用できる API が含まれています。これらのエンドポイントは現在ベータ版であり、変更される可能性があります。Fireblocks Payments Engine について詳しく知りたい場合は、Fireblocks カスタマー サクセス マネージャーに問い合わせるか、CSM@fireblocks.com にメールを送信してください。.",
        "responses": {
          "200": {
            "description": "すべての国境を越えた決済設定を返します",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XBSettlementGetAllConfigsResponse"
                },
                "example": {
                  "configurations": [
                    {
                      "configId": "074791cc-ef32-4920-8373-95efbeea66c5",
                      "corridorId": "CO_US",
                      "name": "Flow Config Example",
                      "steps": {
                        "ON_RAMP": {
                          "accountId": "3b7a1451-3453-4c96-a6a5-683cc8971d04",
                          "inputAssetId": "COP",
                          "outputAssetId": "USD"
                        },
                        "VAULT_ACCOUNT": {
                          "accountId": "2",
                          "inputAssetId": "XLM_USDC_5F3T",
                          "outputAssetId": "XLM_USDC_5F3T"
                        },
                        "OFF_RAMP": {
                          "accountId": "f2f74204-93ec-4614-870a-4ea2ad13aa0b",
                          "inputAssetId": "XLM_USDC_5F3T",
                          "outputAssetId": "XLM_USDC_5F3T"
                        }
                      },
                      "conversionSlippageBasisPoints": 75,
                      "createdAt": 1680625226267
                    },
                    {
                      "configId": "a4b0a706-4578-4467-bd5b-a852761dd2aa",
                      "corridorId": "MX_US",
                      "name": "MX to US flow",
                      "steps": {
                        "ON_RAMP": {
                          "accountId": "3d6241ad-879b-4a11-842f-4cee9cd7fbba",
                          "inputAssetId": "MXN",
                          "outputAssetId": "USD"
                        },
                        "VAULT_ACCOUNT": {
                          "accountId": "1",
                          "inputAssetId": "XLM_USDC_5F3T",
                          "outputAssetId": "XLM_USDC_5F3T"
                        },
                        "OFF_RAMP": {
                          "accountId": "1cf7f750-117f-4c36-b4ef-14c420d118ce",
                          "inputAssetId": "XLM_USDC_5F3T",
                          "outputAssetId": "XLM_USDC_5F3T"
                        }
                      },
                      "conversionSlippageBasisPoints": 10,
                      "createdAt": 1665166171134
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "許可されていません。Authorization ヘッダーに JWT トークンが見つからないか無効です.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "内部エラー.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payments/xb-settlements/configs/{configId}": {
      "get": {
        "tags": [
          "Payments - cross-border settlement"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "特定の越境決済構成を取得する",
        "description": "特定の国境を越えた決済構成を取得します。</br> **注:** このセクションの参照コンテンツは、Payments Engine エンドポイントについて説明しています。Payments Engine エンドポイントには、アカウントで Payments Engine が有効になっている顧客のみが利用できる API が含まれています。これらのエンドポイントは現在ベータ版であり、変更される可能性があります。Fireblocks Payments Engine について詳しく知りたい場合は、Fireblocks カスタマー サクセス マネージャーに問い合わせるか、CSM@fireblocks.com にメールを送信してください。.",
        "parameters": [
          {
            "in": "path",
            "name": "configId",
            "required": true,
            "description": "国境を越えた決済設定ID.",
            "schema": {
              "type": "string"
            },
            "example": "074791cc-ef32-4920-8373-95efbeea66c5"
          }
        ],
        "responses": {
          "200": {
            "description": "要求された国境を越えた決済設定を返します",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XBSettlementGetConfigResponse"
                },
                "example": {
                  "configId": "074791cc-ef32-4920-8373-95efbeea66c5",
                  "corridorId": "CO_US",
                  "name": "Flow Config Example",
                  "steps": {
                    "ON_RAMP": {
                      "accountId": "3b7a1451-3453-4c96-a6a5-683cc8971d04",
                      "inputAssetId": "COP",
                      "outputAssetId": "USD"
                    },
                    "VAULT_ACCOUNT": {
                      "accountId": "2",
                      "inputAssetId": "XLM_USDC_5F3T",
                      "outputAssetId": "XLM_USDC_5F3T"
                    },
                    "OFF_RAMP": {
                      "accountId": "f2f74204-93ec-4614-870a-4ea2ad13aa0b",
                      "inputAssetId": "XLM_USDC_5F3T",
                      "outputAssetId": "XLM_USDC_5F3T"
                    }
                  },
                  "conversionSlippageBasisPoints": 75,
                  "createdAt": 1680625226267
                }
              }
            }
          },
          "401": {
            "description": "許可されていません。Authorization ヘッダーに JWT トークンが見つからないか無効です.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "提供されたIDでは国境を越えた決済設定は存在しません.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "内部エラー.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Payments - cross-border settlement"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "国境を越えた決済設定を編集する",
        "description": "国境を越えた決済の設定を編集します。設定を編集しても、その設定を使用して以前に実行されたフローには影響しません。**注:** このセクションの参照コンテンツは、支払いエンジン エンドポイントについて説明しています。支払いエンジン エンドポイントには、アカウントで支払いエンジンが有効になっている顧客のみが利用できる API が含まれています。これらのエンドポイントは現在ベータ版であり、変更される可能性があります。Fireblocks 支払いエンジンについて詳しく知りたい場合は、Fireblocks カスタマー サクセス マネージャーに問い合わせるか、CSM@fireblocks.com にメールを送信してください。.",
        "parameters": [
          {
            "in": "path",
            "name": "configId",
            "required": true,
            "description": "国境を越えた決済設定ID.",
            "schema": {
              "type": "string"
            },
            "example": "074791cc-ef32-4920-8373-95efbeea66c5"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/XBSettlementConfigEditRequestBody"
              },
              "example": {
                "name": "Flow Config Example - Edited",
                "steps": {
                  "ON_RAMP": {
                    "accountId": "e9dec04a-3c57-4052-a89a-288c545f6430"
                  },
                  "VAULT_ACCOUNT": {
                    "accountId": "2"
                  },
                  "OFF_RAMP": {
                    "accountId": "f2f74204-93ec-4614-870a-4ea2ad13aa0b"
                  }
                },
                "corridorId": "CO_US",
                "conversionSlippageBasisPoints": 30
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "国境を越えた決済の設定が正常に編集されました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XBSettlementConfigEditResponse"
                },
                "example": {
                  "configId": "074791cc-ef32-4920-8373-95efbeea66c5",
                  "corridorId": "CO_US",
                  "name": "Flow Config Example - Edited",
                  "steps": {
                    "ON_RAMP": {
                      "accountId": "e9dec04a-3c57-4052-a89a-288c545f6430",
                      "inputAssetId": "COP",
                      "outputAssetId": "USD"
                    },
                    "VAULT_ACCOUNT": {
                      "accountId": "2",
                      "inputAssetId": "XLM_USDC_5F3T",
                      "outputAssetId": "XLM_USDC_5F3T"
                    },
                    "OFF_RAMP": {
                      "accountId": "f2f74204-93ec-4614-870a-4ea2ad13aa0b",
                      "inputAssetId": "XLM_USDC_5F3T",
                      "outputAssetId": "XLM_USDC_5F3T"
                    }
                  },
                  "conversionSlippageBasisPoints": 30,
                  "createdAt": 1680625226267
                }
              }
            }
          },
          "400": {
            "description": "国境を越えたリクエストの作成中にエラーが発生しました。構成は変更されていません.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "許可されていません。Authorization ヘッダーに JWT トークンが見つからないか無効です.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "提供されたIDでは国境を越えた決済設定は存在しません.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "内部エラー.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Payments - cross-border settlement"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "configId",
            "required": true,
            "description": "国境を越えた決済設定ID.",
            "schema": {
              "type": "string"
            },
            "example": "074791cc-ef32-4920-8373-95efbeea66c5"
          }
        ],
        "summary": "国境を越えた決済設定を削除する",
        "description": "国境を越えた決済設定を削除します。この設定を使用して以前に実行されたフローは削除されません。**注:** このセクションの参照コンテンツは、支払いエンジン エンドポイントについて説明しています。支払いエンジン エンドポイントには、アカウントで支払いエンジンが有効になっている顧客のみが利用できる API が含まれています。これらのエンドポイントは現在ベータ版であり、変更される可能性があります。Fireblocks 支払いエンジンについて詳しく知りたい場合は、Fireblocks カスタマー サクセス マネージャーに問い合わせるか、CSM@fireblocks.com にメールを送信してください。.",
        "responses": {
          "200": {
            "description": "国境を越えた決済設定が正常に削除されました。削除された設定を返します.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XBSettlementConfigDeletionResponse"
                },
                "example": {
                  "configId": "074791cc-ef32-4920-8373-95efbeea66c5",
                  "corridorId": "CO_US",
                  "name": "Flow Config Example - Edited",
                  "steps": {
                    "ON_RAMP": {
                      "accountId": "e9dec04a-3c57-4052-a89a-288c545f6430",
                      "inputAssetId": "COP",
                      "outputAssetId": "USD"
                    },
                    "VAULT_ACCOUNT": {
                      "accountId": "2",
                      "inputAssetId": "XLM_USDC_5F3T",
                      "outputAssetId": "XLM_USDC_5F3T"
                    },
                    "OFF_RAMP": {
                      "accountId": "f2f74204-93ec-4614-870a-4ea2ad13aa0b",
                      "inputAssetId": "XLM_USDC_5F3T",
                      "outputAssetId": "XLM_USDC_5F3T"
                    }
                  },
                  "conversionSlippageBasisPoints": 30,
                  "createdAt": 1680625226267
                }
              }
            }
          },
          "401": {
            "description": "許可されていません。Authorization ヘッダーに JWT トークンが見つからないか無効です.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "提供されたIDでは国境を越えた決済設定は存在しません.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "内部エラー.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payments/xb-settlements/flows": {
      "post": {
        "tags": [
          "Payments - cross-border settlement"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "新たな越境決済フローの構築",
        "description": "送金する金額を指定して、クロスボーダーフロー（クロスボーダー設定に基づく）を作成します。assetId はクロスボーダー設定によって定義されます。フローを作成すると、指定された金額に基づいて、FX レート、時間、手数料などのフロー推定値の計算がトリガーされます。クロスボーダーフローを作成しても、フローは実行されません。**注:** このセクションの参照コンテンツは、支払いエンジンエンドポイントについて説明しています。支払いエンジンエンドポイントには、アカウントで支払いエンジンが有効になっている顧客のみが利用できる API が含まれています。これらのエンドポイントは現在ベータ版であり、変更される可能性があります。Fireblocks 支払いエンジンについて詳しく知りたい場合は、Fireblocks カスタマー サクセス マネージャーに問い合わせるか、CSM@fireblocks.com にメールを送信してください。.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/XBSettlementCreateFlowRequestBody"
              },
              "example": {
                "configId": "a4b0a706-4578-4467-bd5b-a852761dd2aa",
                "amount": "100"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "国境を越えた決済フローの構築に成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XBSettlementCreateFlowResponse"
                },
                "example": {
                  "flowId": "98fb5a8b-65ff-4f15-b89c-80910aedbfb3",
                  "configId": "a4b0a706-4578-4467-bd5b-a852761dd2aa",
                  "conversionRate": "0.05481268",
                  "inputAmount": {
                    "amount": "100",
                    "assetId": "MXN"
                  },
                  "estimatedOutputAmount": {
                    "amount": "5.461268",
                    "assetId": "XLM_USDC_5F3T"
                  },
                  "totalEstimatedFee": {
                    "amount": "0.063503",
                    "assetId": "XLM_USDC_5F3T"
                  },
                  "steps": {
                    "ON_RAMP": {
                      "accountId": "3d6241ad-879b-4a11-842f-4cee9cd7fbba",
                      "inputAmount": {
                        "amount": "100",
                        "assetId": "MXN"
                      },
                      "outputAmount": {
                        "amount": "5.48126865",
                        "assetId": "USD"
                      },
                      "estimatedFeeAmount": {
                        "amount": "0.043503",
                        "assetId": "USD"
                      },
                      "estimatedTime": 10,
                      "isSignRequired": false
                    },
                    "VAULT_ACCOUNT": {
                      "accountId": "1",
                      "inputAmount": {
                        "amount": "5.48126865",
                        "assetId": "USD"
                      },
                      "outputAmount": {
                        "amount": "5.471268",
                        "assetId": "XLM_USDC_5F3T"
                      },
                      "estimatedFeeAmount": {
                        "amount": "0.01",
                        "assetId": "XLM_USDC_5F3T"
                      },
                      "estimatedTime": 63,
                      "isSignRequired": true
                    },
                    "OFF_RAMP": {
                      "accountId": "1cf7f750-117f-4c36-b4ef-14c420d118ce",
                      "inputAmount": {
                        "amount": "5.471268",
                        "assetId": "XLM_USDC_5F3T"
                      },
                      "outputAmount": {
                        "amount": "5.461268",
                        "assetId": "XLM_USDC_5F3T"
                      },
                      "estimatedFeeAmount": {
                        "amount": "0.01",
                        "assetId": "XLM_USDC_5F3T"
                      },
                      "estimatedTime": 95,
                      "isSignRequired": true
                    }
                  },
                  "totalEstimatedTime": 696
                }
              }
            }
          },
          "400": {
            "description": "国境を越えたフローを作成できません。構成 ID が無効です.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "許可されていません。Authorization ヘッダーに JWT トークンが見つからないか無効です.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "内部エラー.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payments/xb-settlements/flows/{flowId}": {
      "get": {
        "tags": [
          "Payments - cross-border settlement"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "flowId",
            "required": true,
            "description": "クロスボーダー決済フローID.",
            "schema": {
              "type": "string"
            },
            "example": "98fb5a8b-65ff-4f15-b89c-80910aedbfb3"
          }
        ],
        "summary": "国境を越えた決済フローの詳細を取得する",
        "description": "特定のクロスボーダー決済フローの詳細を取得します **注:** このセクションの参照コンテンツは、支払いエンジンエンドポイントについて説明しています。支払いエンジンエンドポイントには、アカウントで支払いエンジンが有効になっている顧客のみが利用できる API が含まれています。これらのエンドポイントは現在ベータ版であり、変更される可能性があります。Fireblocks 支払いエンジンについて詳しく知りたい場合は、Fireblocks カスタマー サクセス マネージャーに問い合わせるか、CSM@fireblocks.com にメールを送信してください。.",
        "responses": {
          "200": {
            "description": "国境を越えた決済フローの詳細を返します。実行されていないフローについては、プレビュー オブジェクトが返され、推定時間、金額、手数料が表示されます。このデータ構造は、フローの進行に応じて、合計手数料 (累積)、状態、手順など、更新されることに注意してください。.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XBSettlementGetFlowResponse"
                },
                "examples": {
                  "not executed": {
                    "value": {
                      "preview": {
                        "flowId": "98fb5a8b-65ff-4f15-b89c-80910aedbfb3",
                        "configId": "a4b0a706-4578-4467-bd5b-a852761dd2aa",
                        "conversionRate": "0.055369",
                        "inputAmount": {
                          "amount": "32",
                          "assetId": "MXN"
                        },
                        "estimatedOutputAmount": {
                          "amount": "1.741824",
                          "assetId": "XLM_USDC_5F3T"
                        },
                        "totalEstimatedFee": {
                          "amount": "0.044063",
                          "assetId": "XLM_USDC_5F3T"
                        },
                        "totalEstimatedTime": 831,
                        "steps": {
                          "ON_RAMP": {
                            "accountId": "3d6241ad-879b-4a11-842f-4cee9cd7fbba",
                            "inputAmount": {
                              "amount": "32",
                              "assetId": "MXN"
                            },
                            "outputAmount": {
                              "amount": "1.77182407",
                              "assetId": "USD"
                            },
                            "estimatedFeeAmount": {
                              "amount": "0.014063",
                              "assetId": "USD"
                            },
                            "estimatedTime": 10,
                            "isSignRequired": false
                          },
                          "VAULT_ACCOUNT": {
                            "accountId": "1",
                            "inputAmount": {
                              "amount": "1.77182407",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "outputAmount": {
                              "amount": "1.761824",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "estimatedFeeAmount": {
                              "amount": "0.01",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "estimatedTime": 111,
                            "isSignRequired": true
                          },
                          "OFF_RAMP": {
                            "accountId": "1cf7f750-117f-4c36-b4ef-14c420d118ce",
                            "inputAmount": {
                              "amount": "1.761824",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "outputAmount": {
                              "amount": "1.751824",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "estimatedFeeAmount": {
                              "amount": "0.01",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "estimatedTime": 293,
                            "isSignRequired": true
                          }
                        }
                      }
                    }
                  },
                  "in progress": {
                    "value": {
                      "execution": {
                        "flowId": "98fb5a8b-65ff-4f15-b89c-80910aedbfb3",
                        "configId": "a4b0a706-4578-4467-bd5b-a852761dd2aa",
                        "inputAmount": {
                          "amount": "32",
                          "assetId": "MXN"
                        },
                        "outputAmount": {
                          "amount": "1.471824",
                          "assetId": "XLM_USDC_5F3T"
                        },
                        "totalFee": {
                          "amount": "0.004415",
                          "assetId": "XLM_USDC_5F3T"
                        },
                        "initiatedAt": 1684919822759,
                        "initiatedBy": "a92e87a0-5231-531e-a624-fb29c1283764",
                        "state": "PROCESSING",
                        "selectedConversionSlippage": {
                          "basisPoints": 10,
                          "reason": "FLOW"
                        },
                        "steps": {
                          "ON_RAMP": {
                            "id": "c1863abf-e7fa-4f3a-908a-bcd6381f7eb4",
                            "accountId": "3d6241ad-879b-4a11-842f-4cee9cd7fbba",
                            "status": "COMPLETED",
                            "inputAmount": {
                              "amount": "32",
                              "assetId": "MXN"
                            },
                            "outputAmount": {
                              "amount": "1.77182407",
                              "assetId": "USD"
                            },
                            "fee": {
                              "amount": "0.014063",
                              "assetId": "USD"
                            },
                            "startedAt": 1684919823052,
                            "completedAt": 1684919830456,
                            "isSignRequired": false
                          },
                          "VAULT_ACCOUNT": {
                            "id": "2aa2634d-2bab-44ac-9b4e-36e2e4db5d49",
                            "accountId": "1",
                            "status": "COMPLETED",
                            "inputAmount": {
                              "amount": "1.77182407",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "outputAmount": {
                              "amount": "1.761824",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "fee": {
                              "amount": "0.01",
                              "assetId": "XLM"
                            },
                            "startedAt": 1684919831385,
                            "completedAt": 1684920680227,
                            "isSignRequired": true
                          },
                          "OFF_RAMP": {
                            "id": "b221ed63-a05c-4e78-b2f2-205dcffeabda",
                            "accountId": "1cf7f750-117f-4c36-b4ef-14c420d118ce",
                            "status": "PROCESSING",
                            "inputAmount": {
                              "amount": "1.761824",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "startedAt": 1684920681088,
                            "isSignRequired": true
                          }
                        }
                      }
                    }
                  },
                  "completed": {
                    "value": {
                      "execution": {
                        "flowId": "98fb5a8b-65ff-4f15-b89c-80910aedbfb3",
                        "configId": "a4b0a706-4578-4467-bd5b-a852761dd2aa",
                        "inputAmount": {
                          "amount": "32",
                          "assetId": "MXN"
                        },
                        "outputAmount": {
                          "amount": "1.471824",
                          "assetId": "XLM_USDC_5F3T"
                        },
                        "totalFee": {
                          "amount": "0.004415",
                          "assetId": "XLM_USDC_5F3T"
                        },
                        "initiatedAt": 1684919822759,
                        "initiatedBy": "a92e87a0-5231-531e-a624-fb29c1283764",
                        "state": "COMPLETED",
                        "selectedConversionSlippage": {
                          "basisPoints": 10,
                          "reason": "FLOW"
                        },
                        "steps": {
                          "ON_RAMP": {
                            "id": "b1bec144-c4dd-4ff8-80ed-4204c83dd422",
                            "accountId": "3d6241ad-879b-4a11-842f-4cee9cd7fbba",
                            "status": "COMPLETED",
                            "inputAmount": {
                              "amount": "32",
                              "assetId": "MXN"
                            },
                            "outputAmount": {
                              "amount": "1.77182407",
                              "assetId": "USD"
                            },
                            "fee": {
                              "amount": "0.014063",
                              "assetId": "USD"
                            },
                            "startedAt": 1684919823052,
                            "completedAt": 1684919830456,
                            "isSignRequired": false
                          },
                          "VAULT_ACCOUNT": {
                            "id": "df7e0103-04cf-4508-9654-aa5e4b90dd50",
                            "accountId": "1",
                            "status": "COMPLETED",
                            "inputAmount": {
                              "amount": "1.77182407",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "outputAmount": {
                              "amount": "1.761824",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "fee": {
                              "amount": "0.01",
                              "assetId": "XLM"
                            },
                            "startedAt": 1684919831385,
                            "completedAt": 1684920680227,
                            "isSignRequired": true
                          },
                          "OFF_RAMP": {
                            "id": "34c2d597-271a-4c11-937a-3c246f5d39c2",
                            "accountId": "1cf7f750-117f-4c36-b4ef-14c420d118ce",
                            "status": "COMPLETED",
                            "inputAmount": {
                              "amount": "1.761824",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "outputAmount": {
                              "amount": "1.761823",
                              "assetId": "XLM_USDC_5F3T"
                            },
                            "fee": {
                              "amount": "0.00001",
                              "assetId": "XLM"
                            },
                            "startedAt": 1684920681088,
                            "completedAt": 1684921261453,
                            "isSignRequired": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "許可されていません。Authorization ヘッダーに JWT トークンが見つからないか無効です.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "無効なフローID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "内部エラー.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payments/xb-settlements/flows/{flowId}/actions/execute": {
      "post": {
        "tags": [
          "Payments - cross-border settlement"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "flowId",
            "required": true,
            "description": "クロスボーダー決済フローID.",
            "schema": {
              "type": "string"
            },
            "example": "98fb5a8b-65ff-4f15-b89c-80910aedbfb3"
          }
        ],
        "summary": "クロスボーダー決済フローの実行",
        "description": "実行のために「flowId」を含む支払いフローを送信します。この実行にフロー構成で構成されているものと異なるスリッページ構成が必要な場合は、リクエスト本文でこの実行に必要なスリッページ構成を定義する必要があります。**注:** このセクションの参照コンテンツは、支払いエンジン エンドポイントについて説明しています。支払いエンジン エンドポイントには、アカウントで支払いエンジンが有効になっている顧客のみが利用できる API が含まれています。これらのエンドポイントは現在ベータ版であり、変更される可能性があります。Fireblocks 支払いエンジンについて詳しく知りたい場合は、Fireblocks カスタマー サクセス マネージャーに問い合わせるか、CSM@fireblocks.com にメールを送信してください。.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/XBSettlementFlowExecutionRequestBody"
              },
              "example": {
                "conversionSlippageBasisPoints": 10
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "国境を越えた決済フローが正常に実行され始めました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XBSettlementFlowExecutionResponse"
                },
                "example": {
                  "flowId": "98fb5a8b-65ff-4f15-b89c-80910aedbfb3",
                  "configId": "a4b0a706-4578-4467-bd5b-a852761dd2aa",
                  "inputAmount": {
                    "amount": "32",
                    "assetId": "MXN"
                  },
                  "outputAmount": {
                    "amount": "1.471824",
                    "assetId": "XLM_USDC_5F3T"
                  },
                  "totalFee": {
                    "amount": "0.004415",
                    "assetId": "XLM_USDC_5F3T"
                  },
                  "initiatedAt": 1684919822759,
                  "initiatedBy": "a92e87a0-5231-531e-a624-fb29c1283764",
                  "state": "PROCESSING",
                  "selectedConversionSlippage": {
                    "basisPoints": 10,
                    "reason": "FLOW"
                  },
                  "steps": {
                    "ON_RAMP": {
                      "id": "c1863abf-e7fa-4f3a-908a-bcd6381f7eb4",
                      "accountId": "3d6241ad-879b-4a11-842f-4cee9cd7fbba",
                      "status": "COMPLETED",
                      "inputAmount": {
                        "amount": "32",
                        "assetId": "MXN"
                      },
                      "outputAmount": {
                        "amount": "1.77182407",
                        "assetId": "USD"
                      },
                      "fee": {
                        "amount": "0.014063",
                        "assetId": "USD"
                      },
                      "startedAt": 1684919823052,
                      "completedAt": 1684919830456,
                      "isSignRequired": false
                    },
                    "VAULT_ACCOUNT": {
                      "id": "2aa2634d-2bab-44ac-9b4e-36e2e4db5d49",
                      "accountId": "1",
                      "status": "PROCESSING",
                      "inputAmount": {
                        "amount": "1.77182407",
                        "assetId": "XLM_USDC_5F3T"
                      },
                      "outputAmount": {
                        "amount": "1.761824",
                        "assetId": "XLM_USDC_5F3T"
                      },
                      "fee": {
                        "amount": "0.01",
                        "assetId": "XLM"
                      },
                      "startedAt": 1684919831385,
                      "isSignRequired": true
                    },
                    "OFF_RAMP": {
                      "id": "b221ed63-a05c-4e78-b2f2-205dcffeabda",
                      "accountId": "1cf7f750-117f-4c36-b4ef-14c420d118ce",
                      "status": "NOT_STARTED",
                      "inputAmount": {
                        "amount": "1.761824",
                        "assetId": "XLM_USDC_5F3T"
                      },
                      "isSignRequired": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "国境を越えたフローを実行中にエラーが発生しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "許可されていません。Authorization ヘッダーに JWT トークンが見つからないか無効です.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "無効なフローID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "内部エラー.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payments/payout": {
      "post": {
        "tags": [
          "Payments - Payout"
        ],
        "description": "**注:** このセクションの参照コンテンツでは、支払いエンジン エンドポイントについて説明します。支払いエンジン エンドポイントには、アカウントで支払いエンジンが有効になっている顧客のみが利用できる API が含まれます。</br></br>これらのエンドポイントは現在ベータ版であり、変更される可能性があります。</br></br> Fireblocks Payments Engine について詳しく知りたい場合は、Fireblocks カスタマー サクセス マネージャーにお問い合わせいただくか、CSM@fireblocks.com までメールでお問い合わせください。</br></br><b u>支払い指示セットを作成します。</b></br>支払い指示セットは、単一の支払いアカウントから受取人アカウントのリストに支払いを分配するための一連の指示です。</br>命令セットは以下を定義します。</br><ul><li>支払い口座とその口座タイプ（金庫、取引所、法定通貨）。</li><li>各受取人アカウントのアカウントタイプ（金庫アカウント、交換アカウント、ホワイトリストアドレス、ネットワーク接続、法定通貨アカウント、または販売者アカウント）、金額、および支払い資産。</li></ul>",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "支払い指示セットを作成する",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePayoutRequest"
              },
              "example": {
                "paymentAccount": {
                  "id": "EX_SUB3",
                  "type": "EXCHANGE_ACCOUNT"
                },
                "instructionSet": [
                  {
                    "payeeAccount": {
                      "id": "bef85a1c-b605-4b2e-bdb5-2d400f4d0bf3",
                      "type": "EXTERNAL_WALLET"
                    },
                    "amount": {
                      "amount": "43",
                      "assetId": "USDC"
                    }
                  },
                  {
                    "payeeAccount": {
                      "id": "3adc1f92-e791-44a8-9aee-7f31c2108b78",
                      "type": "NETWORK_CONNECTION"
                    },
                    "amount": {
                      "amount": "4423",
                      "assetId": "USDC"
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "支払い命令セットの作成が成功し、一意の支払いIDを持つ生成された命令セットが返されます。支払いIDは支払いの実行と支払いステータスの確認に使用されます。.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                },
                "example": {
                  "payoutId": "1fe3b61f-7e1f-4a19-aff0-4f0a524d44d7",
                  "paymentAccount": {
                    "id": "EX_SUB3",
                    "type": "EXCHANGE_ACCOUNT"
                  },
                  "createdAt": 1645365800,
                  "state": "REQUESTED",
                  "status": "REGISTERED",
                  "initMethod": "API",
                  "instructionSet": [
                    {
                      "id": "6ea4a016-536b-49af-b1a0-40b343ccf879",
                      "name": "payee-wallet-name",
                      "payeeAccount": {
                        "id": "bef85a1c-b605-4b2e-bdb5-2d400f4d0bf3",
                        "type": "EXTERNAL_WALLET"
                      },
                      "amount": {
                        "amount": "43",
                        "assetId": "USDC"
                      },
                      "state": "NOT_STARTED",
                      "transactions": []
                    },
                    {
                      "id": "e783a79b-6acc-4d18-885d-ed533cad8eeb",
                      "name": "payee-by-network",
                      "payeeAccount": {
                        "id": "3adc1f92-e791-44a8-9aee-7f31c2108b78",
                        "type": "NETWORK_CONNECTION"
                      },
                      "amount": {
                        "amount": "4423.23",
                        "assetId": "USDC"
                      },
                      "state": "NOT_STARTED",
                      "transactions": []
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "要求の形式が正しくありません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "許可されていません。Authorization ヘッダーに JWT トークンが見つからないか無効です.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "内部エラー.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payments/payout/{payoutId}/actions/execute": {
      "post": {
        "tags": [
          "Payments - Payout"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "支払い命令セットを実行する",
        "description": "**注:** このセクションの参照コンテンツでは、支払いエンジン エンドポイントについて説明します。支払いエンジン エンドポイントには、アカウントで支払いエンジンが有効になっている顧客のみが利用できる API が含まれます。</br></br>これらのエンドポイントは現在ベータ版であり、変更される可能性があります。</br></br> Fireblocks Payments Engine について詳しく知りたい場合は、Fireblocks カスタマー サクセス マネージャーにお問い合わせいただくか、CSM@fireblocks.com までメールでお問い合わせください。</br></br><b u>支払い命令セットを実行します。</b></br></br>命令セットが検証され実行されます。</br><b><u>ソースロック</u></b></br>すでにアクティブな支払いがある支払いアカウントから支払い指示セットを実行する場合、新しい支払い指示セットを実行する前にアクティブな支払いが完了します。</br>同じ支払い命令セットを複数回実行することはできません.",
        "parameters": [
          {
            "name": "payoutId",
            "description": "支払い指示セットの作成から受け取った支払いID",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "1fe3b61f-7e1f-4a19-aff0-4f0a524d44d7"
          }
        ],
        "responses": {
          "200": {
            "description": "支払い命令セットを実行しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DispatchPayoutResponse"
                },
                "example": {
                  "payoutId": "1fe3b61f-7e1f-4a19-aff0-4f0a524d44d7"
                }
              }
            }
          },
          "400": {
            "description": "要求の形式が正しくありません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "許可されていません。Authorization ヘッダーに JWT トークンが見つからないか無効です.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "内部エラー.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payments/payout/{payoutId}": {
      "get": {
        "tags": [
          "Payments - Payout"
        ],
        "summary": "支払い指示セットのステータスを取得する",
        "description": "**注:** このセクションの参照コンテンツでは、支払いエンジン エンドポイントについて説明します。支払いエンジン エンドポイントには、アカウントで支払いエンジンが有効になっている顧客のみが利用できる API が含まれます。</br></br>これらのエンドポイントは現在ベータ版であり、変更される可能性があります。</br></br> Fireblocks Payments Engine について詳しく知りたい場合は、Fireblocks カスタマー サクセス マネージャーにお問い合わせいただくか、CSM@fireblocks.com までメールでお問い合わせください。</br>",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "payoutId",
            "description": "支払い指示セットの作成から受け取った支払いID",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "1fe3b61f-7e1f-4a19-aff0-4f0a524d44d7"
          }
        ],
        "responses": {
          "200": {
            "description": "各支払い指示のステータスとプロセスで作成されたトランザクションを含む、支払い指示セットの現在のステータスを返します。.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                },
                "example": {
                  "payoutId": "1fe3b61f-7e1f-4a19-aff0-4f0a524d44d7",
                  "paymentAccount": {
                    "id": "EX_SUB3",
                    "type": "EXCHANGE_ACCOUNT"
                  },
                  "createdAt": 1645365800,
                  "state": "FINALIZED",
                  "status": "DONE",
                  "initMethod": "API",
                  "instructionSet": [
                    {
                      "id": "6ea4a016-536b-49af-b1a0-40b343ccf879",
                      "name": "payee-wallet-name",
                      "payeeAccount": {
                        "id": "bef85a1c-b605-4b2e-bdb5-2d400f4d0bf3",
                        "type": "EXTERNAL_WALLET"
                      },
                      "amount": {
                        "amount": "4312",
                        "assetId": "USDC"
                      },
                      "state": "COMPLETED",
                      "transactions": [
                        {
                          "id": "35a4b10c-1f83-4f0b-ba2a-da0e73be2d6e",
                          "state": "COMPLETED",
                          "timestamp": 1645367429
                        }
                      ]
                    },
                    {
                      "id": "e783a79b-6acc-4d18-885d-ed533cad8eeb",
                      "name": "payee-by-network",
                      "payeeAccount": {
                        "id": "3adc1f92-e791-44a8-9aee-7f31c2108b78",
                        "type": "NETWORK_CONNECTION"
                      },
                      "amount": {
                        "amount": "4423.23",
                        "assetId": "USDC"
                      },
                      "state": "COMPLETED",
                      "transactions": [
                        {
                          "id": "4505e7d9-bfc7-41bc-9750-54311fcbbf26",
                          "state": "COMPLETED",
                          "timestamp": 1645367449
                        }
                      ]
                    }
                  ],
                  "reportUrl": "https://some-url.com/reports/cc5777c1-75a9-4337-aebd-f1f5a40a9391"
                }
              }
            }
          },
          "401": {
            "description": "許可されていません。Authorization ヘッダーに JWT トークンが見つからないか無効です.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "指定された支払いIDの支払いは存在しません.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "内部エラー.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gas_station": {
      "get": {
        "summary": "ガソリンスタンドの設定を取得する",
        "description": "ガソリンスタンドの設定とETH残高を返します.",
        "tags": [
          "Gas stations"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "gas_station_info = fireblocks.get_gas_station_info()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const gasStationInfo = await fireblocks.gasStationInfo();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "ガソリンスタンドの物件",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GasStationPropertiesResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/gas_station/{assetId}": {
      "get": {
        "summary": "アセット別にガソリンスタンドの設定を取得する",
        "description": "要求された資産のガソリンスタンドの設定と残高を返します.",
        "tags": [
          "Gas stations"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "gas_station_info = fireblocks.get_gas_station_info(asset_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const gasStationInfo = await fireblocks.gasStationInfo(assetId);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "assetId",
            "description": "資産のID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ガソリンスタンドの物件",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GasStationPropertiesResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/gas_station/configuration": {
      "put": {
        "summary": "ガソリンスタンドの設定を編集する",
        "description": "ETHのガソリンスタンドの設定を構成する.",
        "tags": [
          "Gas stations"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "gas_station = fireblocks.set_gas_station_configuration(gas_threshold, gas_cap, max_gas_price, asset_id)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const gasStation = await fireblocks.setGasStationConfiguration(gasThreshold, gasCap, maxGasPrice)",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GasStationConfiguration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/gas_station/configuration/{assetId}": {
      "put": {
        "summary": "アセットのガソリンスタンド設定を編集する",
        "description": "要求された資産のガソリンスタンド設定を構成する.",
        "tags": [
          "Gas stations"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "assetId",
            "description": "資産のID",
            "schema": {
              "type": "string",
              "x-fb-entity": "asset"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GasStationConfiguration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "ユーザーを一覧表示する",
        "description": "ワークスペースのすべてのユーザーを一覧表示します。このエンドポイントは、管理者権限を持つ API キーでのみ使用可能です。.",
        "tags": [
          "Users"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "users = fireblocks.get_users()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const users = await fireblocks.getUsers();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "ユーザーリスト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/audits": {
      "get": {
        "summary": "監査ログを取得する",
        "tags": [
          "Audit Logs"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "timePeriod",
            "required": true,
            "description": "監査ログを取得する最終期間",
            "schema": {
              "oneOf": [
                {
                  "const": "DAY"
                },
                {
                  "const": "WEEK"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "要求された期間の監査ログ",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/off_exchange/add": {
      "post": {
        "summary": "担保を追加する",
        "description": "担保を追加し、入金リクエストを作成する",
        "tags": [
          "Off exchanges"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCollateralRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "トランザクションオブジェクト",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/off_exchange/remove": {
      "post": {
        "summary": "担保を取り除く",
        "description": "担保を削除し、引き出しリクエストを作成する",
        "tags": [
          "Off exchanges"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveCollateralRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "トランザクションオブジェクト",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/off_exchange/settlements/trader": {
      "post": {
        "summary": "トレーダーの決済を作成する",
        "description": "トレーダーの決済を作成する",
        "tags": [
          "Off exchanges"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettlementRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "集落オブジェクト",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SettlementResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/off_exchange/settlements/transactions": {
      "get": {
        "summary": "取引所から決済取引を取得する",
        "description": "取引所から決済取引を取得する",
        "tags": [
          "Off exchanges"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "mainExchangeAccountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "決済取引",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetSettlementResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/off_exchange/collateral_accounts/{mainExchangeAccountId}": {
      "get": {
        "summary": "特定の担保交換口座を探す",
        "description": "mainExchangeAccountIdで担保アカウントを返します.",
        "tags": [
          "Off exchanges"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mainExchangeAccountId",
            "required": true,
            "description": "要求された担保口座が関連付けられているメインの取引所口座のID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ExchangeAccount オブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeAccount"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/resend": {
      "post": {
        "summary": "失敗したWebhookを再送信する",
        "description": "失敗したすべてのWebhook通知を再送信します.",
        "tags": [
          "Webhooks"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = fireblocks.resend_webhooks()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.resendWebhooks();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResendWebhooksResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/resend/{txId}": {
      "post": {
        "summary": "ID によるトランザクションの失敗した Webhook を再送信する",
        "description": "ID によるトランザクションの失敗した Webhook 通知を再送信します.",
        "tags": [
          "Webhooks"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "result = fireblocks.resend_transaction_webhooks_by_id(txId, resend_created, resend_status_updated)",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const result = await fireblocks.resendTransactionWebhooksById(txId, resendCreated, resendStatusUpdated);",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "parameters": [
          {
            "in": "path",
            "name": "txId",
            "required": true,
            "description": "WebhookのトランザクションID",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "resendCreated": {
                    "type": "boolean"
                  },
                  "resendStatusUpdated": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "わかりました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/nfts/ownership/tokens": {
      "put": {
        "operationId": "refreshNFTOwnershipByVault",
        "summary": "ボールトアカウントトークンを更新する",
        "description": "ブロックチェーンと Vault アカウントごとにすべてのトークンと残高を更新します。**注**: このエンドポイントは現在ベータ版であり、現時点では一般公開されていません。ベータ版に登録してこのエンドポイントを有効にするには、Fireblocks カスタマー サクセス マネージャーに連絡するか、[CSM@fireblocks.com](mailto:CSM@fireblocks.com) までご連絡ください。.",
        "parameters": [
          {
            "name": "blockchainDescriptor",
            "required": true,
            "in": "query",
            "description": "ブロックチェーン記述子フィルター",
            "schema": {
              "oneOf": [
                {
                  "const": "ETH"
                },
                {
                  "const": "ETH_TEST3"
                },
                {
                  "const": "POLYGON"
                },
                {
                  "const": "POLYGON_TEST_MUMBAI"
                }
              ]
            }
          },
          {
            "name": "vaultAccountId",
            "required": true,
            "in": "query",
            "description": "Vault アカウント フィルター",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          }
        },
        "tags": [
          "NFTs (Beta)"
        ]
      },
      "get": {
        "operationId": "getOwnedNFTs",
        "summary": "所有しているすべてのトークンを一覧表示します（ページ区切り）",
        "description": "ワークスペース内のすべてのトークンとそのデータを返します。**注**: このエンドポイントは現在ベータ版であり、現時点では一般公開されていません。ベータ版に登録してこのエンドポイントを有効にするには、Fireblocks カスタマー サクセス マネージャーに連絡するか、[CSM@fireblocks.com](mailto:CSM@fireblocks.com) までご連絡ください。.",
        "parameters": [
          {
            "name": "blockchainDescriptor",
            "required": false,
            "in": "query",
            "description": "ブロックチェーン記述子フィルター",
            "schema": {
              "oneOf": [
                {
                  "const": "ETH"
                },
                {
                  "const": "ETH_TEST3"
                },
                {
                  "const": "POLYGON"
                },
                {
                  "const": "POLYGON_TEST_MUMBAI"
                }
              ]
            }
          },
          {
            "name": "vaultAccountIds",
            "required": false,
            "in": "query",
            "description": "Vault アカウント ID のコンマ区切りリスト。1 回のリクエストで最大 100 個まで許可されます。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "description": "NFT ID のコンマ区切りリスト。1 回のリクエストで最大 100 個まで許可されます。.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collectionIds",
            "required": false,
            "in": "query",
            "description": "コレクション ID のカンマ区切りリスト。1 回のリクエストで最大 100 個まで許可されます。.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageCursor",
            "required": false,
            "in": "query",
            "description": "取得するページカーソル",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "1 ページあたりの項目数 (最大 100)",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "パラメータで並べ替えます。1 つのパラメータ、またはカンマで区切られたパラメータのリストを指定できます。",
            "schema": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "const": "ownershipLastUpdateTime"
                  },
                  {
                    "const": "name"
                  },
                  {
                    "const": "collection.name"
                  },
                  {
                    "const": "blockchainDescriptor"
                  }
                ]
              }
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "description": "順序の方向。昇順の場合は「ASC」、降順の場合は「DESC」になります。",
            "schema": {
              "oneOf": [
                {
                  "const": "DESC"
                },
                {
                  "const": "ASC"
                }
              ]
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "トークンの所有権ステータス",
            "schema": {
              "oneOf": [
                {
                  "const": "LISTED"
                },
                {
                  "const": "ARCHIVED"
                }
              ]
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "所有トークンとそのコレクションを検索します。検索の可能な基準: コントラクト/コレクション内のトークン名とID、コレクション名、ブロックチェーン記述子と名前.",
            "schema": {
              "maximum": 100,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "paging": {
                      "$ref": "#/components/schemas/Paging"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TokenOwnershipResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "NFTs (Beta)"
        ]
      }
    },
    "/nfts/ownership/collections": {
      "get": {
        "operationId": "listOwnedCollections",
        "summary": "所有コレクションの一覧（ページ区切り）",
        "description": "ワークスペース内のすべてのコレクションを返します **注**: このエンドポイントは現在ベータ版であり、現時点では一般公開されていません。ベータ版に登録してこのエンドポイントを有効にするには、Fireblocks カスタマー サクセス マネージャーに連絡するか、[CSM@fireblocks.com](mailto:CSM@fireblocks.com) までご連絡ください。.",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "所有コレクションを検索します。検索の可能な条件: コレクション名、コレクション契約アドレス.",
            "schema": {
              "maximum": 100,
              "type": "string"
            }
          },
          {
            "name": "pageCursor",
            "required": false,
            "in": "query",
            "description": "取得するページカーソル",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "1 ページあたりの項目数 (最大 100)",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "パラメータで並べ替えます。1 つのパラメータ、またはカンマで区切られたパラメータのリストを指定できます。",
            "schema": {
              "type": "array",
              "items": {
                "const": "name"
              }
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "description": "順序の方向。昇順の場合は「ASC」、降順の場合は「DESC」になります。",
            "schema": {
              "oneOf": [
                {
                  "const": "DESC"
                },
                {
                  "const": "ASC"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "paging": {
                      "$ref": "#/components/schemas/Paging"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CollectionOwnershipResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "NFTs (Beta)"
        ]
      }
    },
    "/nfts/tokens/{id}": {
      "put": {
        "operationId": "refreshNFTMetadata",
        "summary": "リフレッシュトークンのメタデータ",
        "description": "最新のトークン メタデータを更新します。**注**: このエンドポイントは現在ベータ版であり、現時点では一般公開されていません。ベータ版に登録してこのエンドポイントを有効にするには、Fireblocks カスタマー サクセス マネージャーに連絡するか、[CSM@fireblocks.com](mailto:CSM@fireblocks.com) までご連絡ください。.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "NFT ID",
            "example": "NFT-abcdefabcdefabcdefabcdefabcdefabcdefabcd",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          }
        },
        "tags": [
          "NFTs (Beta)"
        ]
      },
      "get": {
        "operationId": "getNFT",
        "summary": "ID別にトークンデータを一覧表示する",
        "description": "要求されたトークン データを返します。**注**: このエンドポイントは現在ベータ版であり、現時点では一般公開されていません。ベータ版に登録してこのエンドポイントを有効にするには、Fireblocks カスタマー サクセス マネージャーに連絡するか、[CSM@fireblocks.com](mailto:CSM@fireblocks.com) までご連絡ください。.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "NFT ID",
            "example": "NFT-abcdefabcdefabcdefabcdefabcdefabcdefabcd",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        },
        "tags": [
          "NFTs (Beta)"
        ]
      }
    },
    "/nfts/tokens": {
      "get": {
        "operationId": "getNFTs",
        "summary": "ID別にトークンを一覧表示する",
        "description": "要求されたトークン データを返します **注**: このエンドポイントは現在ベータ版であり、現時点では一般公開されていません。ベータ版に登録してこのエンドポイントを有効にするには、Fireblocks カスタマー サクセス マネージャーに連絡するか、[CSM@fireblocks.com](mailto:CSM@fireblocks.com) までご連絡ください。.",
        "parameters": [
          {
            "name": "ids",
            "required": true,
            "in": "query",
            "description": "NFT ID のコンマ区切りリスト。1 回のリクエストで最大 100 個まで許可されます。.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageCursor",
            "required": false,
            "in": "query",
            "description": "取得するページカーソル",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "1 ページあたりの項目数 (最大 100)",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "パラメータで並べ替えます。1 つのパラメータ、またはカンマで区切られたパラメータのリストを指定できます。",
            "schema": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "const": "collection.name"
                  },
                  {
                    "const": "name"
                  },
                  {
                    "const": "blockchainDescriptor"
                  }
                ]
              }
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "description": "順序の方向。昇順の場合は「ASC」、降順の場合は「DESC」になります。",
            "schema": {
              "oneOf": [
                {
                  "const": "DESC"
                },
                {
                  "const": "ASC"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "paging": {
                      "$ref": "#/components/schemas/Paging"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TokenResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "NFTs (Beta)"
        ]
      }
    },
    "/nfts/ownership/tokens/{id}/status": {
      "put": {
        "operationId": "updateTokenOwnershipStatus",
        "summary": "トークンの所有権ステータスを更新する",
        "description": "すべてのテナント ボールトで、テナントのトークン所有権ステータスを更新します。**注**: このエンドポイントは現在ベータ版であり、現時点では一般公開されていません。ベータ版に登録してこのエンドポイントを有効にするには、Fireblocks カスタマー サクセス マネージャーに連絡するか、[CSM@fireblocks.com](mailto:CSM@fireblocks.com) までご連絡ください。.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "NFT ID",
            "example": "NFT-abcdefabcdefabcdefabcdefabcdefabcdefabcd",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTokenOwnershipStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          }
        },
        "tags": [
          "NFTs (Beta)"
        ]
      }
    },
    "/connections": {
      "get": {
        "operationId": "get",
        "summary": "開いているすべてのWeb3接続を一覧表示する.",
        "description": "オープンなWeb3接続を取得する.",
        "parameters": [
          {
            "name": "order",
            "required": false,
            "in": "query",
            "description": "リストの順序（昇順または降順）.",
            "schema": {
              "oneOf": [
                {
                  "const": "ASC"
                },
                {
                  "const": "DESC"
                }
              ]
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "解析されたフィルタオブジェクト",
            "examples": {
              "object": {
                "summary": "フィルターオブジェクト",
                "description": "",
                "value": {
                  "id": "string",
                  "userId": "string",
                  "vaultAccountId": "number",
                  "connectionMethod": "string",
                  "feeLevel": "string",
                  "appUrl": "string",
                  "appName": "string"
                }
              },
              "stringified": {
                "summary": "文字列化された解析オブジェクト",
                "description": "文字列化された解析オブジェクトについて: * 各キーと値のペアは &#39;=&#39; で区切られ、各ペアは &#39;,&#39; で区切られます (これには [`qs`](https://www.npmjs.com/package/qs) パッケージを使用できます)",
                "value": "id=string,userId=string,vaultAccountId=number,connectionMethod=string,feeLevel=string,appUrl=string,appName=string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                },
                "vaultAccountId": {
                  "type": "number"
                },
                "connectionMethod": {
                  "type": "string"
                },
                "feeLevel": {
                  "type": "string"
                },
                "appUrl": {
                  "type": "string"
                },
                "appName": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Web3接続を並べ替えるプロパティ.",
            "schema": {
              "oneOf": [
                {
                  "const": "id"
                },
                {
                  "const": "userId"
                },
                {
                  "const": "vaultAccountId"
                },
                {
                  "const": "createdAt"
                },
                {
                  "const": "feeLevel"
                },
                {
                  "const": "appUrl"
                },
                {
                  "const": "appName"
                }
              ]
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "次のページで返される結果の数.",
            "schema": {
              "type": "number",
              "default": 10,
              "maximum": 50
            }
          },
          {
            "name": "next",
            "required": false,
            "in": "query",
            "description": "次のページにカーソルを移動",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConnectionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "クエリパラメータが無効です",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "500": {
            "description": "問題が発生しました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          }
        },
        "tags": [
          "Web3 connections"
        ]
      }
    },
    "/connections/wc": {
      "post": {
        "operationId": "create",
        "summary": "新しいWeb3接続を作成する.",
        "description": "新しい Web3 接続を開始します。 * 注: これが成功したら、新しい Web3 接続を承認または拒否するために、`PUT /v1/connections/wc/{id}` (以下) にリクエストを送信します。.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConnectionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Web3接続が正常に開始されました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateConnectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "無効なデータが送信されました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "500": {
            "description": "問題が発生しました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          }
        },
        "tags": [
          "Web3 connections"
        ]
      }
    },
    "/connections/wc/{id}": {
      "put": {
        "operationId": "submit",
        "summary": "保留中のWeb3接続要求に応答する.",
        "description": "開始された Web3 接続を *承認* または *拒否* する応答を送信します。 * 注: この呼び出しは、`POST /v1/connections/wc/` 要求を完了するために使用されます。これが成功すると、新しい Web3 接続が作成され、機能します。.",
        "parameters": [
          {
            "name": "id",
            "description": "承認する開始されたWeb3接続のID.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RespondToConnectionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "接続が正常に送信されました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "400": {
            "description": "無効なデータが送信されました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "404": {
            "description": "接続が見つかりません",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "500": {
            "description": "問題が発生しました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          }
        },
        "tags": [
          "Web3 connections"
        ]
      },
      "delete": {
        "operationId": "remove",
        "summary": "既存のWeb3接続を削除する.",
        "description": "Web3接続を削除する",
        "parameters": [
          {
            "name": "id",
            "description": "削除する既存のWeb3接続のID.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "接続が正常に削除されました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "404": {
            "description": "接続が見つかりません",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          },
          "500": {
            "description": "問題が発生しました",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            }
          }
        },
        "tags": [
          "Web3 connections"
        ]
      }
    },
    "/screening/travel_rule/transaction/validate": {
      "post": {
        "operationId": "TravelRuleApiController_validate",
        "summary": "トラベルルールトランザクションの検証",
        "description": "トラベル ルール トランザクションを検証します。管轄区域と受益者の管轄区域で必要な受益者 VASP の詳細を確認します。**注:** このセクションの参照コンテンツは、トラベル ルール ベータ エンドポイントについて説明しています。ベータ エンドポイントには、現在プレビュー段階にあり、まだ一般には利用できない API が含まれています。ベータに登録してこのエンドポイントを有効にするには、Fireblocks カスタマー サクセス マネージャーに連絡するか、[CSM@fireblocks.com](mailto:CSM@fireblocks.com) にメールを送信してください。.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TravelRuleValidateTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "取引が正常に検証されました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelRuleValidateTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "リクエスト本文が無効です"
          },
          "500": {
            "description": "内部サーバーエラー"
          }
        },
        "tags": [
          "Travel Rule (Beta)"
        ]
      }
    },
    "/screening/travel_rule/transaction/validate/full": {
      "post": {
        "operationId": "TravelRuleApiController_validateFull",
        "summary": "完全なトラベルルールトランザクションを検証する",
        "description": "完全なトラベル ルール トランザクションを検証します。発信者と受益者の VASP に関するすべての必要な情報を確認します。**注:** このセクションの参照コンテンツは、トラベル ルール ベータ エンドポイントについて説明しています。ベータ エンドポイントには、現在プレビュー段階にあり、まだ一般には利用できない API が含まれています。ベータに登録してこのエンドポイントを有効にするには、Fireblocks カスタマー サクセス マネージャーに連絡するか、[CSM@fireblocks.com](mailto:CSM@fireblocks.com) にメールを送信してください。.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TravelRuleValidateFullTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "取引が正常に検証されました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelRuleValidateTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "リクエスト本文が無効です"
          },
          "500": {
            "description": "内部サーバーエラー"
          }
        },
        "tags": [
          "Travel Rule (Beta)"
        ]
      }
    },
    "/screening/travel_rule/vasp/{did}": {
      "get": {
        "operationId": "TravelRuleApiController_findVasp",
        "summary": "VASPの詳細を見る",
        "description": "VASP の詳細を取得します。指定された DID を持つ VASP に関する情報を返します。**注:** このセクションの参照コンテンツは、Travel Rule ベータ エンドポイントについて説明しています。ベータ エンドポイントには、現在プレビュー段階にあり、まだ一般には利用できない API が含まれています。ベータに登録してこのエンドポイントを有効にするには、Fireblocks カスタマー サクセス マネージャーに連絡するか、[CSM@fireblocks.com](mailto:CSM@fireblocks.com) にメールを送信してください。.",
        "parameters": [
          {
            "name": "did",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "返されるフィールドの CSV (すべて、空白、または以下のすべてのフィールド名のリストを参照)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "取引が正常に検証されました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelRuleVASP"
                }
              }
            }
          },
          "400": {
            "description": "リクエスト本文が無効です"
          },
          "500": {
            "description": "内部サーバーエラー"
          }
        },
        "tags": [
          "Travel Rule (Beta)"
        ]
      }
    },
    "/screening/travel_rule/vasp": {
      "get": {
        "operationId": "TravelRuleApiController_findAllVasp",
        "summary": "すべてのVASPを取得",
        "description": "すべての VASP を取得します。VASP のリストを返します。VASP は検索および並べ替えが可能で、結果はページ分けされます。**注:** このセクションの参照コンテンツは、Travel Rule ベータ エンドポイントについて説明しています。ベータ エンドポイントには、現在プレビュー段階にあり、まだ一般には利用できない API が含まれています。ベータに登録してこのエンドポイントを有効にするには、Fireblocks カスタマー サクセス マネージャーに連絡するか、[CSM@fireblocks.com](mailto:CSM@fireblocks.com) にメールを送信してください。.",
        "parameters": [
          {
            "name": "order",
            "required": false,
            "in": "query",
            "description": "並べ替えの基準となるフィールド",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "description": "ページあたりのレコード数",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "ページ番号",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "返されるフィールドの CSV (すべて、空白、または以下のすべてのフィールド名のリストを参照)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "すべてのVASPを取得する",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelRuleGetAllVASPsResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Travel Rule (Beta)"
        ]
      }
    },
    "/screeening/travel_rule/vasp/update": {
      "put": {
        "operationId": "TravelRuleApiController_updateVasp",
        "summary": "VASPの詳細にjsonDidKeyを追加する",
        "description": "VASP の詳細を更新します。指定されたパラメータを使用して VASP を更新します。このエンドポイントを使用して、Notabene によって生成された公開 jsonDIDkey を追加します。**注:** このセクションの参照コンテンツは、Travel Rule ベータ エンドポイントについて説明しています。ベータ エンドポイントには、現在プレビュー中でまだ一般には利用できない API が含まれています。ベータに登録してこのエンドポイントを有効にするには、Fireblocks カスタマー サクセス マネージャーに連絡するか、[CSM@fireblocks.com](mailto:CSM@fireblocks.com) にメールを送信してください。.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TravelRuleUpdateVASPDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "VASP が正常に更新されました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelRuleUpdateVASPDetails"
                }
              }
            }
          },
          "400": {
            "description": "リクエスト本文が無効です"
          },
          "500": {
            "description": "内部サーバーエラー"
          }
        },
        "tags": [
          "Travel Rule (Beta)"
        ]
      }
    },
    "/tap/active_policy": {
      "get": {
        "summary": "アクティブなポリシーとその検証を取得する",
        "description": "アクティブなポリシーとその検証を返します。</br> **注:** これらのエンドポイントは現在ベータ版であり、変更される可能性があります。Fireblocks TAP に参加して詳細を知りたい場合は、Fireblocks カスタマー サクセス マネージャーに連絡するか、CSM@fireblocks.com にメールを送信してください。.",
        "tags": [
          "Policy Editor (Beta)"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "policy = fireblocks.get_active_policy()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const policy = await fireblocks.getActivePolicy();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "ポリシーオブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyAndValidationResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tap/draft": {
      "get": {
        "summary": "アクティブなドラフトを取得する",
        "description": "アクティブなドラフトとその検証を返します。</br> **注:** これらのエンドポイントは現在ベータ版であり、変更される可能性があります。Fireblocks TAP に参加して詳細を知りたい場合は、Fireblocks カスタマー サクセス マネージャーに連絡するか、CSM@fireblocks.com にメールを送信してください。.",
        "tags": [
          "Policy Editor (Beta)"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "policy = fireblocks.get_draft()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const policy = await fireblocks.getDraft();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "ドラフト検証応答オブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DraftReviewAndValidationResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "新しいルールセットでドラフトを更新する",
        "description": "ドラフトを更新し、検証を返します。</br> **注:** これらのエンドポイントは現在ベータ版であり、変更される可能性があります。Fireblocks TAP に参加して詳細を知りたい場合は、Fireblocks カスタマー サクセス マネージャーに連絡するか、CSM@fireblocks.com にメールを送信してください。.",
        "tags": [
          "Policy Editor (Beta)"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "policy = fireblocks.update_draft()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const policy = await fireblocks.updateDraft();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "rules": {
                    "description": "ドラフトを更新するルール",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PolicyRule"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ドラフト検証応答オブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DraftReviewAndValidationResponse"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "特定の下書きIDの公開リクエストを送信する",
        "description": "特定のドラフト ID の公開リクエストを送信し、応答を返します。</br> **注:** これらのエンドポイントは現在ベータ版であり、変更される可能性があります。Fireblocks TAP に参加して詳細を知りたい場合は、Fireblocks カスタマー サクセス マネージャーに連絡するか、CSM@fireblocks.com にメールを送信してください。.",
        "tags": [
          "Policy Editor (Beta)"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "policy = fireblocks.publish_draft()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const policy = await fireblocks.publishDraft();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "draftId": {
                    "description": "ドラフト固有識別子",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ポリシー公開結果オブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PublishResult"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tap/publish": {
      "post": {
        "summary": "ポリシールールセットの公開リクエストを送信する",
        "description": "ポリシー ルール セットの公開要求を送信し、応答を返します。</br> **注:** これらのエンドポイントは現在ベータ版であり、変更される可能性があります。Fireblocks TAP に参加して詳細を知りたい場合は、Fireblocks カスタマー サクセス マネージャーに連絡するか、CSM@fireblocks.com にメールを送信してください。.",
        "tags": [
          "Policy Editor (Beta)"
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "policy = fireblocks.publish_rules()",
              "name": "Fireblocks SDK Python example"
            },
            {
              "language": "javascript",
              "code": "const policy = await fireblocks.publishRules();",
              "name": "Fireblocks SDK Javascript example"
            }
          ]
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "rules": {
                    "description": "公開するポリシールール",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PolicyRule"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ポリシー公開結果オブジェクト",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PublishResult"
                }
              }
            }
          },
          "default": {
            "description": "エラー応答",
            "headers": {
              "X-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "API リクエストに関連付けられた一意の ID。作成するサポート チケットまたは Fireblocks SDK に関連する Github の問題にこの ID を入力してください。",
                "in": "header"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MediaEntityResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "キャッシュされたアクセス可能な URL"
          },
          "contentType": {
            "oneOf": [
              {
                "const": "IMAGE"
              },
              {
                "const": "VIDEO"
              },
              {
                "const": "ANIMATION"
              },
              {
                "const": "THREE_D"
              },
              {
                "const": "TEXT"
              },
              {
                "const": "GIF"
              },
              {
                "const": "UNKNOWN_TYPE"
              },
              {
                "const": "SVG"
              },
              {
                "const": "AUDIO"
              }
            ],
            "description": "メディアタイプ"
          }
        },
        "required": [
          "url",
          "contentType"
        ]
      },
      "TokenCollectionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "symbol"
        ]
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Fireblocks NFTアセットID"
          },
          "tokenId": {
            "type": "string",
            "description": "契約/コレクション内のトークンID"
          },
          "standard": {
            "type": "string",
            "description": "ERC721 / ERC1155"
          },
          "metadataURI": {
            "type": "string",
            "description": "元のトークンのJSONメタデータのURL"
          },
          "cachedMetadataURI": {
            "type": "string",
            "description": "キャッシュされたトークンのJSONメタデータのURL"
          },
          "media": {
            "description": "メタデータJSONから抽出されたメディアアイテム",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaEntityResponse"
            }
          },
          "collection": {
            "description": "親コレクション情報",
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              }
            }
          },
          "blockchainDescriptor": {
            "oneOf": [
              {
                "const": "ETH"
              },
              {
                "const": "ETH_TEST3"
              },
              {
                "const": "POLYGON"
              },
              {
                "const": "POLYGON_TEST_MUMBAI"
              }
            ]
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "tokenId",
          "standard",
          "media",
          "blockchainDescriptor",
          "description",
          "name"
        ]
      },
      "UpdateTokenOwnershipStatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "oneOf": [
              {
                "const": "LISTED"
              },
              {
                "const": "ARCHIVED"
              }
            ]
          }
        },
        "required": [
          "status"
        ]
      },
      "Paging": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "description": "次のページにカーソルを移動"
          }
        },
        "required": [
          "next"
        ]
      },
      "TokenOwnershipResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Fireblocks NFTアセットID"
          },
          "tokenId": {
            "type": "string",
            "description": "契約/コレクション内のトークンID"
          },
          "standard": {
            "type": "string",
            "description": "ERC721 / ERC1155"
          },
          "metadataURI": {
            "type": "string",
            "description": "元のトークンのJSONメタデータのURL"
          },
          "cachedMetadataURI": {
            "type": "string",
            "description": "キャッシュされたトークンのJSONメタデータのURL"
          },
          "media": {
            "description": "メタデータJSONから抽出されたメディアアイテム",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaEntityResponse"
            }
          },
          "collection": {
            "description": "親コレクション情報",
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              }
            }
          },
          "balance": {
            "type": "string"
          },
          "vaultAccountId": {
            "type": "string"
          },
          "ownershipStartTime": {
            "type": "number"
          },
          "ownershipLastUpdateTime": {
            "type": "number"
          },
          "blockchainDescriptor": {
            "oneOf": [
              {
                "const": "ETH"
              },
              {
                "const": "ETH_TEST3"
              },
              {
                "const": "POLYGON"
              },
              {
                "const": "POLYGON_TEST_MUMBAI"
              }
            ]
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "tokenId",
          "standard",
          "media",
          "balance",
          "vaultAccountId",
          "ownershipStartTime",
          "ownershipLastUpdateTime",
          "blockchainDescriptor",
          "description",
          "name"
        ]
      },
      "CollectionOwnershipResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Fireblocks コレクション ID"
          },
          "name": {
            "type": "string",
            "description": "コレクション名"
          },
          "symbol": {
            "type": "string",
            "description": "コレクションシンボル"
          },
          "standard": {
            "type": "string",
            "description": "回収契約基準"
          },
          "blockchainDescriptor": {
            "oneOf": [
              {
                "const": "ETH"
              },
              {
                "const": "ETH_TEST3"
              },
              {
                "const": "POLYGON"
              },
              {
                "const": "POLYGON_TEST_MUMBAI"
              }
            ],
            "description": "コレクションのブロックチェーン"
          },
          "contractAddress": {
            "type": "string",
            "description": "回収契約基準"
          }
        },
        "required": [
          "id",
          "name",
          "symbol",
          "blockchainDescriptor"
        ]
      },
      "WalletAsset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "type": "string"
          },
          "lockedAmount": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ConfigChangeRequestStatus"
          },
          "address": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "activationTime": {
            "type": "string"
          }
        }
      },
      "ExternalWalletAsset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ConfigChangeRequestStatus"
          },
          "address": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "activationTime": {
            "type": "string"
          },
          "additionalInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WalletAssetAdditionalInfo"
            }
          }
        }
      },
      "WalletAssetAdditionalInfo": {
        "type": "object",
        "properties": {
          "accountHolderGivenName": {
            "type": "string"
          },
          "accountHolderSurname": {
            "type": "string"
          },
          "accountHolderCity": {
            "type": "string"
          },
          "accountHolderCountry": {
            "type": "string"
          },
          "accountHolderAddress1": {
            "type": "string"
          },
          "accountHolderAddress2": {
            "type": "string"
          },
          "accountHolderDistrict": {
            "type": "string"
          },
          "accountHolderPostalCode": {
            "type": "string"
          },
          "abaRoutingNumber": {
            "type": "string"
          },
          "abaAccountNumber": {
            "type": "string"
          },
          "abaCountry": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "ibanCity": {
            "type": "string"
          },
          "ibanCountry": {
            "type": "string"
          },
          "speiClabe": {
            "type": "string"
          },
          "speiName": {
            "type": "string"
          }
        }
      },
      "ExchangeAsset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "type": "string"
          },
          "lockedAmount": {
            "type": "string"
          },
          "total": {
            "type": "string"
          },
          "available": {
            "type": "string"
          }
        }
      },
      "ExchangeTradingAccount": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExchangeAsset"
            }
          }
        }
      },
      "FiatAsset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "type": "string"
          }
        }
      },
      "CreateVaultAssetResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "legacyAddress": {
            "type": "string"
          },
          "enterpriseAddress": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "eosAccountName": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "activationTxId": {
            "type": "string"
          }
        }
      },
      "RewardsInfo": {
        "type": "object",
        "properties": {
          "pendingRewards": {
            "description": "報酬保留中の金額",
            "type": "string"
          }
        }
      },
      "VaultAsset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "total": {
            "description": "ウォレットの合計残高。EOSでは、この値にはネットワーク残高、自己ステーキング、保留中の払い戻しが含まれます。他のすべてのコインでは、ブロックチェーンに表示される残高です。.",
            "type": "string"
          },
          "balance": {
            "deprecated": true,
            "description": "非推奨 - 「total」に置き換えられました",
            "type": "string"
          },
          "available": {
            "description": "送金可能な資金。ブロックチェーンの残高からロックされた金額を差し引いた金額に等しい",
            "type": "string"
          },
          "pending": {
            "description": "決済待ちのすべての取引の累積残高",
            "type": "string"
          },
          "frozen": {
            "description": "累積凍結残高",
            "type": "string"
          },
          "lockedAmount": {
            "description": "ネットワークにまだ公開されていない送金取引の資金",
            "type": "string"
          },
          "staked": {
            "description": "賭けられたバランス",
            "type": "string"
          },
          "totalStakedCPU": {
            "type": "number",
            "description": "非推奨"
          },
          "totalStakedNetwork": {
            "type": "string",
            "description": "非推奨"
          },
          "selfStakedCPU": {
            "type": "string",
            "description": "非推奨"
          },
          "selfStakedNetwork": {
            "type": "string",
            "description": "非推奨"
          },
          "pendingRefundCPU": {
            "type": "string",
            "description": "非推奨"
          },
          "pendingRefundNetwork": {
            "type": "string",
            "description": "非推奨"
          },
          "blockHeight": {
            "type": "string"
          },
          "blockHash": {
            "type": "string"
          },
          "rewardsInfo": {
            "$ref": "#/components/schemas/RewardsInfo"
          }
        }
      },
      "VaultWalletAddress": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "x-fb-entity": "asset"
          },
          "address": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "customerRefId": {
            "type": "string"
          },
          "addressFormat": {
            "oneOf": [
              {
                "const": "SEGWIT"
              },
              {
                "const": "LEGACY"
              }
            ]
          },
          "legacyAddress": {
            "type": "string"
          },
          "enterpriseAddress": {
            "type": "string"
          },
          "bip44AddressIndex": {
            "type": "integer"
          },
          "userDefined": {
            "type": "boolean"
          }
        }
      },
      "CreateAddressResponse": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "legacyAddress": {
            "type": "string"
          },
          "enterpriseAddress": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "bip44AddressIndex": {
            "type": "integer"
          }
        }
      },
      "VaultAccountsPagedResponse": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VaultAccount"
            }
          },
          "paging": {
            "type": "object",
            "properties": {
              "before": {
                "type": "string"
              },
              "after": {
                "type": "string"
              }
            }
          },
          "previousUrl": {
            "type": "string"
          },
          "nextUrl": {
            "type": "string"
          }
        }
      },
      "PaginatedAssetWalletResponse": {
        "type": "object",
        "properties": {
          "assetWallets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetWallet"
            }
          },
          "paging": {
            "type": "object",
            "properties": {
              "before": {
                "description": "カーソルを表す文字列。ユーザーは、このAPIエンドポイントへの新しいリクエストでこれを「前」リクエストパラメータとして使用し、前のページの結果を取得できます。.",
                "type": "string"
              },
              "after": {
                "description": "カーソルを表す文字列。ユーザーは、このAPIエンドポイントへの新しいリクエストでこれを「前」リクエストパラメータとして使用し、次の結果ページを取得できます。.",
                "type": "string"
              }
            }
          }
        }
      },
      "AssetWallet": {
        "type": "object",
        "properties": {
          "vaultId": {
            "description": "ボールト アカウントの ID。[この ID でボールト アカウントを取得](https://developers.fireblocks.com/reference/get_vault-accounts-vaultaccountid) して、名前、自動給油、UI で非表示、顧客参照 ID などのボールト プロパティを取得できます。.",
            "type": "string"
          },
          "assetId": {
            "description": "アセットの ID。[サポートされているアセット API](https://developers.fireblocks.com/reference/get_supported-assets) を使用すると、このアセットに関する詳細情報を取得できます。",
            "type": "string"
          },
          "available": {
            "description": "取引に使用できる利用可能残高.",
            "type": "string"
          },
          "total": {
            "description": "ブロックチェーンエクスプローラーに表示される資産ウォレットの合計残高。これには、利用可能な残高と、ロック、凍結、その他の利用できない残高が含まれます。.",
            "type": "string"
          },
          "pending": {
            "description": "保留中の残高.",
            "type": "string"
          },
          "staked": {
            "description": "賭けられたバランス.",
            "type": "string"
          },
          "frozen": {
            "description": "このワークスペースのマネーロンダリング防止ポリシーにより資金が凍結されました.",
            "type": "string"
          },
          "lockedAmount": {
            "description": "ロックされた残高.",
            "type": "string"
          },
          "blockHeight": {
            "description": "バランスのブロックの高さ（数）。空にすることができます.",
            "type": "string"
          },
          "blockHash": {
            "description": "残高のブロックのハッシュ。空でも可.",
            "type": "string"
          },
          "creationTimestamp": {
            "description": "資産ウォレットが作成された時刻の Unix タイムスタンプ.",
            "type": "string"
          }
        }
      },
      "VaultAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VaultAsset"
            }
          },
          "hiddenOnUI": {
            "type": "boolean"
          },
          "customerRefId": {
            "type": "string"
          },
          "autoFuel": {
            "type": "boolean"
          }
        }
      },
      "UnmanagedWallet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "customerRefId": {
            "type": "string"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WalletAsset"
            }
          }
        },
        "required": [
          "id",
          "name",
          "status"
        ]
      },
      "ExchangeAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ExchangeType"
          },
          "name": {
            "type": "string",
            "description": "取引所アカウントの表示名"
          },
          "status": {
            "type": "string"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExchangeAsset"
            }
          },
          "tradingAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExchangeTradingAccount"
            }
          },
          "isSubaccount": {
            "description": "アカウントが取引所のサブアカウントである場合は True",
            "type": "boolean"
          },
          "mainAccountId": {
            "description": "アカウントがサブアカウントの場合、メインアカウントのID",
            "type": "string"
          }
        }
      },
      "FiatAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/FiatAccountType"
          },
          "name": {
            "type": "string",
            "description": "法定通貨アカウントの表示名"
          },
          "address": {
            "type": "string"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FiatAsset"
            }
          }
        }
      },
      "OneTimeAddress": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          }
        },
        "required": [
          "address"
        ]
      },
      "TransferPeerPath": {
        "type": "object",
        "properties": {
          "type": {
            "oneOf": [
              {
                "const": "VAULT_ACCOUNT"
              },
              {
                "const": "EXCHANGE_ACCOUNT"
              },
              {
                "const": "INTERNAL_WALLET"
              },
              {
                "const": "EXTERNAL_WALLET"
              },
              {
                "const": "NETWORK_CONNECTION"
              },
              {
                "const": "FIAT_ACCOUNT"
              },
              {
                "const": "COMPOUND"
              },
              {
                "const": "GAS_STATION"
              },
              {
                "const": "ONE_TIME_ADDRESS"
              },
              {
                "const": "UNKNOWN"
              },
              {
                "const": "END_USER_WALLET"
              }
            ]
          },
          "subType": {
            "oneOf": [
              {
                "const": "BINANCE"
              },
              {
                "const": "BINANCEUS"
              },
              {
                "const": "BITFINEX"
              },
              {
                "const": "BITHUMB"
              },
              {
                "const": "BITMEX"
              },
              {
                "const": "BITSO"
              },
              {
                "const": "BITSTAMP"
              },
              {
                "const": "BITTREX"
              },
              {
                "const": "BLINC"
              },
              {
                "const": "BYBIT"
              },
              {
                "const": "CIRCLE"
              },
              {
                "const": "COINBASEEXCHANGE"
              },
              {
                "const": "COINBASEPRO"
              },
              {
                "const": "COINMETRO"
              },
              {
                "const": "COINSPRO"
              },
              {
                "const": "CRYPTOCOM"
              },
              {
                "const": "DERIBIT"
              },
              {
                "const": "GEMINI"
              },
              {
                "const": "HITBTC"
              },
              {
                "const": "HUOBI"
              },
              {
                "const": "INDEPENDENTRESERVE"
              },
              {
                "const": "KORBIT"
              },
              {
                "const": "KRAKEN"
              },
              {
                "const": "KRAKENINTL"
              },
              {
                "const": "KUCOIN"
              },
              {
                "const": "LIQUID"
              },
              {
                "const": "OKCOIN"
              },
              {
                "const": "OKEX"
              },
              {
                "const": "PAXOS"
              },
              {
                "const": "POLONIEX"
              },
              {
                "const": "External"
              },
              {
                "const": "Internal"
              }
            ]
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "walletId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "type"
        ]
      },
      "DestinationTransferPeerPath": {},
      "CreateTransactionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "取引のID."
          },
          "status": {
            "type": "string",
            "description": "トランザクションの主なステータス。詳細については、[主なトランザクション ステータス] (https://developers.fireblocks.com/reference/primary-transaction-statuses) を参照してください。"
          },
          "systemMessages": {
            "$ref": "#/components/schemas/SystemMessageInfo"
          }
        }
      },
      "SystemMessageInfo": {
        "type": "object",
        "properties": {
          "type": {
            "oneOf": [
              {
                "const": "WARN"
              },
              {
                "const": "BLOCK"
              }
            ]
          },
          "message": {
            "type": "string",
            "description": "Fireblocks からの応答で、実行中のプロセスの健全性に関するメッセージを伝えます。このオブジェクトがデータとともに返された場合、遅延や不完全なトランザクション ステータスが発生する可能性があります。.",
            "example": "Slow transaction processing. Outgoing transactions might be stuck."
          }
        }
      },
      "CancelTransactionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "UnfreezeTransactionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "FreezeTransactionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "AmlScreeningResult": {
        "type": "object",
        "description": "AML検査の結果.",
        "properties": {
          "provider": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          }
        }
      },
      "FeeInfo": {
        "type": "object",
        "description": "取引手数料の詳細.",
        "properties": {
          "networkFee": {
            "description": "ネットワークに支払われる手数料",
            "type": "string"
          },
          "serviceFee": {
            "description": "取引所が実際に請求した金額から差し引いた合計手数料（サービス手数料 = 金額 - 純額）",
            "type": "string"
          },
          "gasPrice": {
            "type": "string"
          }
        }
      },
      "BlockInfo": {
        "type": "object",
        "description": "このトランザクションがマイニングされたブロックのブロックハッシュと高さ。**注**: 送信トランザクションが配列に複数の値を持つ destinations オブジェクトを使用する場合、blockHash は null に設定されます。.",
        "properties": {
          "blockHeight": {
            "type": "string"
          },
          "blockHash": {
            "type": "string"
          }
        }
      },
      "AuthorizationInfo": {
        "type": "object",
        "description": "[トランザクション承認ポリシー (TAP)](https://developers.fireblocks.com/docs/capabilities#transaction-authorization-policy-tap) に関する情報",
        "properties": {
          "allowOperatorAsAuthorizer": {
            "type": "boolean"
          },
          "logic": {
            "oneOf": [
              {
                "const": "AND"
              },
              {
                "const": "OR"
              }
            ]
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthorizationGroups"
            }
          }
        }
      },
      "AuthorizationGroups": {
        "type": "object",
        "properties": {
          "th": {
            "type": "number"
          },
          "users": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [
                {
                  "const": "PENDING_AUTHORIZATION"
                },
                {
                  "const": "APPROVED"
                },
                {
                  "const": "REJECTED"
                },
                {
                  "const": "NA"
                }
              ]
            }
          }
        }
      },
      "AmountInfo": {
        "type": "object",
        "description": "送金希望金額の詳細.",
        "properties": {
          "amount": {
            "description": "送金が取引所からの引き出しである場合、実際に送金を依頼された金額。それ以外の場合は、依頼された金額.",
            "type": "string"
          },
          "requestedAmount": {
            "description": "ユーザーが要求した金額.",
            "type": "string"
          },
          "netAmount": {
            "description": "手数料を差し引いた取引の純額.",
            "type": "string"
          },
          "amountUSD": {
            "description": "要求された金額の米ドル価値.",
            "type": "string"
          }
        }
      },
      "RewardInfo": {
        "type": "object",
        "description": "このフィールドは、Algorand トランザクションにのみ関連します。`srcRewards` と `destRewards` は両方とも Vault 間トランザクションにのみ表示されます。それ以外の場合は、トランザクションの Fireblocks 側のみを受け取ります。.",
        "properties": {
          "srcRewards": {
            "type": "string"
          },
          "destRewards": {
            "type": "string"
          }
        }
      },
      "SourceTransferPeerPathResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "subType": {
            "type": "string",
            "description": "タイプが `EXCHANGE_ACCOUNT` または `FIAT_ACCOUNT` に設定されている場合、特定の取引所ベンダー名または法定通貨ベンダー名。タイプが `INTERNAL_WALLET` または `EXTERNAL_WALLET` に設定されている場合、サブタイプは `Internal` または `External` に設定されます。."
          },
          "id": {
            "type": "string",
            "description": "ピアの ID。各会場オブジェクトの ID は、[Vault アカウントの一覧表示](https://developers.fireblocks.com/reference/get_vault-accounts-paged)、[Exchange アカウントの一覧表示](https://developers.fireblocks.com/reference/get_exchange-accounts)、[法定通貨アカウントの一覧表示](https://developers.fireblocks.com/reference/get_fiat-accounts)、[内部ウォレットの一覧表示](https://developers.fireblocks.com/reference/get_internal-wallets)、[外部ウォレットの一覧表示](https://developers.fireblocks.com/reference/get_external-wallets)、[ネットワーク接続の一覧表示](https://developers.fireblocks.com/reference/get_network-connections) のエンドポイントを使用して取得できます。その他のタイプでは、このパラメータは必要ありません。."
          },
          "name": {
            "type": "string",
            "description": "ピアの名前."
          },
          "walletId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "DestinationTransferPeerPathResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "subType": {
            "type": "string",
            "description": "タイプが `EXCHANGE_ACCOUNT` または `FIAT_ACCOUNT` に設定されている場合、特定の取引所ベンダー名または法定通貨ベンダー名。タイプが `INTERNAL_WALLET` または `EXTERNAL_WALLET` に設定されている場合、サブタイプは `Internal` または `External` に設定されます。."
          },
          "id": {
            "type": "string",
            "description": "ピアの ID。各会場オブジェクトの ID は、[Vault アカウントの一覧表示](https://developers.fireblocks.com/reference/get_vault-accounts-paged)、[Exchange アカウントの一覧表示](https://developers.fireblocks.com/reference/get_exchange-accounts)、[法定通貨アカウントの一覧表示](https://developers.fireblocks.com/reference/get_fiat-accounts)、[内部ウォレットの一覧表示](https://developers.fireblocks.com/reference/get_internal-wallets)、[外部ウォレットの一覧表示](https://developers.fireblocks.com/reference/get_external-wallets)、[ネットワーク接続の一覧表示](https://developers.fireblocks.com/reference/get_network-connections) のエンドポイントを使用して取得できます。その他のタイプでは、このパラメータは必要ありません。."
          },
          "name": {
            "type": "string",
            "description": "ピアの名前."
          },
          "walletId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "TransactionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "取引のID."
          },
          "externalTxId": {
            "type": "string",
            "description": "ユーザーが指定した一意のトランザクション ID。Fireblocks では、同じトランザクションを 2 回送信することを避けるために、作成されるすべてのトランザクションに `externalTxId` を設定することを強くお勧めします。."
          },
          "status": {
            "type": "string",
            "description": "トランザクションの主なステータス。詳細については、[主なトランザクション ステータス](https://developers.fireblocks.com/reference/primary-transaction-statuses) を参照してください。."
          },
          "subStatus": {
            "type": "string",
            "description": "トランザクションサブステータスのリストについては、[トランザクションサブステータス](https://developers.fireblocks.com/reference/transaction-substatuses)を参照してください。."
          },
          "txHash": {
            "type": "string",
            "description": "ブロックチェーン上のトランザクションのハッシュ。 * このパラメータは、次の条件の少なくとも 1 つが満たされている場合に存在します。1. トランザクションのソース タイプが `UNKNOWN`、`WHITELISTED_ADDRESS`、`NETWORK_CONNECTION`、`ONE_TIME_ADDRESS`、`FIAT_ACCOUNT`、または `GAS_STATION` である。2. トランザクションのソース タイプが `VAULT` であり、ステータスが `CONFIRMING`、`COMPLETED`、または `FAILED` または `REJECTED` に変更される前にこれらのステータスのいずれかであった。場合によっては、ステータスが `BROADCASTING` のトランザクションにも txHash が含まれます。 3. トランザクションのソースタイプが `EXCHANGE_ACCOUNT` であり、トランザクションの宛先タイプが `VAULT` であり、ステータスが `CONFIRMING`、`COMPLETED`、または `FAILED` に変更される前にこれらのステータスのいずれかであったこと。 * さらに、次の条件を満たす必要があります。 1. 資産は暗号資産（法定通貨ではない）。 2. トランザクション操作が RAW または `TYPED_MESSAGE` ではない。."
          },
          "operation": {
            "$ref": "#/components/schemas/GetTransactionOperation"
          },
          "note": {
            "type": "string",
            "description": "Fireblocks ワークスペースでのトランザクションを説明する、ブロックチェーンに送信されないカスタム ノート."
          },
          "assetId": {
            "type": "string",
            "description": "`TRANSFER`、`MINT`、`BURN`、`ENABLE_ASSET`、`STAKE`、`UNSTAKE`、または `WITHDRAW` 操作で転送するアセットの ID。[Fireblocks でサポートされているアセットとその ID のリストを参照してください。](https://developers.fireblocks.com/reference/get_supported-assets)",
            "x-fb-entity": "asset"
          },
          "source": {
            "$ref": "#/components/schemas/SourceTransferPeerPathResponse"
          },
          "sourceAddress": {
            "type": "string",
            "description": "アカウントベースの資産のみ、トランザクションの送信元アドレス。**注:** ステータスが「確認中」、「完了」、または「確認中」から「失敗」または「拒否」に移行した場合、このパラメータには送信元アドレスが含まれます。それ以外の場合、このパラメータは空になります。."
          },
          "tag": {
            "type": "string",
            "description": "XRP のソース アドレス タグ。EOS/XLM のメモとして、または法定通貨プロバイダー BLINC (BCB グループ提供) の銀行振込の説明として使用されます。."
          },
          "destination": {
            "$ref": "#/components/schemas/DestinationTransferPeerPathResponse"
          },
          "destinations": {
            "type": "array",
            "description": "トランザクションの送信先。**注:** トランザクションが単一の送信先に送信される場合は、このパラメータの代わりに`destination`パラメータが使用されます。.",
            "items": {
              "$ref": "#/components/schemas/TransactionResponseDestination"
            }
          },
          "destinationAddress": {
            "type": "string",
            "description": "資産が転送されたアドレス。注: - [複数の宛先トランザクション](https://support.fireblocks.io/hc/en-us/articles/360018447980-Multi-destination-transactions)の場合、このパラメータは空になります。この場合、宛先フィールドを参照する必要があります。 - ステータスが `CONFIRMING`、`COMPLETED`、または `CONFIRMING` であった後に `FAILED` または `REJECTED` に移行した場合、このパラメータには宛先アドレスが含まれます。それ以外の場合、このパラメータは空になります。."
          },
          "destinationAddressDescription": {
            "type": "string",
            "description": "住所の説明."
          },
          "destinationTag": {
            "type": "string",
            "description": "XRP の宛先アドレス タグ。EOS/XLM のメモとして、または法定通貨プロバイダー BLINC (BCB グループ提供) の銀行振込の説明として使用されます。."
          },
          "contractCallDecodedData": {
            "description": "`CONTRACT_CALL` 操作のデコードされたデータ。このパラメータの値を設定するには、Fireblocks [開発ライブラリ](https://developers.fireblocks.com/docs/ethereum-development#convenience-libraries) が推奨されます。.",
            "type": "object",
            "properties": {
              "contractName": {
                "type": "string"
              },
              "functionCalls": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "amountInfo": {
            "$ref": "#/components/schemas/AmountInfo"
          },
          "treatAsGrossAmount": {
            "type": "boolean",
            "description": "この Fireblocks ワークスペースを介して開始されたトランザクションの場合、`true` に設定すると、手数料は要求された金額から差し引かれます。**注**: このパラメータは、トランザクションの資産が ETH や MATIC などの基本資産である場合にのみ考慮されます。USDC のように資産がトランザクション手数料に使用できない場合、このパラメータは無視され、手数料はソース アカウントの関連する基本資産ウォレットから差し引かれます。."
          },
          "feeInfo": {
            "$ref": "#/components/schemas/FeeInfo"
          },
          "feeCurrency": {
            "type": "string",
            "description": "取引手数料を支払うために引き出された資産。例えば、EVMベースのブロックチェーンの場合はETH、Tether Omniの場合はBTC."
          },
          "networkRecords": {
            "type": "array",
            "description": "単一のトランザクションが複数の転送を伴う場合（たとえば、契約呼び出しの結果）、このパラメータはブロックチェーン上で行われた各転送を指定します。単一の転送トランザクションの場合、このパラメータは空です。.",
            "items": {
              "$ref": "#/components/schemas/NetworkRecord"
            }
          },
          "createdAt": {
            "type": "number",
            "description": "トランザクションの作成日時（UNIXタイムスタンプ）."
          },
          "lastUpdated": {
            "type": "number",
            "description": "トランザクションの最終更新日時（UNIXタイムスタンプ）."
          },
          "createdBy": {
            "type": "string",
            "description": "トランザクションの開始者のユーザーID."
          },
          "signedBy": {
            "type": "array",
            "description": "トランザクションの署名者のユーザーID.",
            "items": {
              "type": "string"
            }
          },
          "rejectedBy": {
            "type": "string",
            "description": "トランザクションを拒否したユーザーのユーザー ID (拒否された場合)."
          },
          "authorizationInfo": {
            "$ref": "#/components/schemas/AuthorizationInfo"
          },
          "exchangeTxId": {
            "type": "string",
            "description": "取引が取引所から発信された場合、これは取引所におけるこの取引のIDです。."
          },
          "customerRefId": {
            "type": "string",
            "description": "AMLプロバイダーが資金の所有者と取引を関連付けるためのID."
          },
          "amlScreeningResult": {
            "$ref": "#/components/schemas/AmlScreeningResult"
          },
          "extraParameters": {
            "$ref": "#/components/schemas/ExtraParameters"
          },
          "signedMessages": {
            "$ref": "#/components/schemas/SignedMessage"
          },
          "numOfConfirmations": {
            "type": "number",
            "description": "トランザクションの確認数。確認ポリシーに従ってトランザクションが完了したとみなされるまで、この数が増加します。."
          },
          "blockInfo": {
            "$ref": "#/components/schemas/BlockInfo"
          },
          "index": {
            "type": "number",
            "description": "UTXOベースの資産の場合、これはvOutです。Ethereumベースの場合、これは契約呼び出しのイベントのインデックスです。**注:** トランザクションが複数の値を持つ`destinations`オブジェクトを使用する場合、このフィールドは返されません。."
          },
          "rewardInfo": {
            "$ref": "#/components/schemas/RewardInfo"
          },
          "systemMessages": {
            "$ref": "#/components/schemas/SystemMessageInfo"
          },
          "addressType": {
            "oneOf": [
              {
                "const": "WHITELISTED"
              },
              {
                "const": "ONE_TIME"
              }
            ]
          },
          "requestedAmount": {
            "description": "ユーザーが要求した金額。非推奨 - 正確さを保つには `amountInfo` フィールドを使用してください.",
            "type": "number",
            "deprecated": true
          },
          "amount": {
            "description": "送金が取引所からの出金である場合、実際に送金を要求された金額。それ以外の場合は、要求された金額。非推奨 - 正確さのために `amountInfo` フィールドを使用してください。.",
            "type": "number",
            "deprecated": true
          },
          "netAmount": {
            "description": "手数料を差し引いた後の取引の純額。非推奨 - 正確さを保つには `amountInfo` フィールドを使用してください.",
            "type": "number",
            "deprecated": true
          },
          "amountUSD": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "要求された金額の USD 値。非推奨 - 正確さを保つには `amountInfo` フィールドを使用してください."
          },
          "serviceFee": {
            "description": "実際の請求額から取引所によって差し引かれる合計手数料 (`serviceFee` = `amount` - `netAmount`)。非推奨 - 正確性を保つには `feeInfo` フィールドを使用してください。.",
            "type": "number",
            "deprecated": true
          },
          "fee": {
            "description": "非推奨 - 正確さを保つために「feeInfo」フィールドを使用してください.",
            "type": "number",
            "deprecated": true
          },
          "networkFee": {
            "description": "ネットワークに支払われる手数料。非推奨 - 正確さを保つには `feeInfo` フィールドを使用してください.",
            "type": "number",
            "deprecated": true
          }
        }
      },
      "TransactionResponseDestination": {
        "type": "object",
        "properties": {
          "destination": {
            "$ref": "#/components/schemas/DestinationTransferPeerPathResponse"
          },
          "destinationAddress": {
            "description": "資産が移転された住所."
          },
          "destinationAddressDescription": {
            "description": "住所の説明."
          },
          "amount": {
            "type": "string",
            "description": "この宛先に送金する金額."
          },
          "amountUSD": {
            "type": "string",
            "description": "要求された金額の米ドル価値."
          },
          "amlScreeningResult": {
            "$ref": "#/components/schemas/AmlScreeningResult"
          },
          "customerRefId": {
            "description": "AMLプロバイダーが資金の所有者と取引を関連付けるためのID."
          },
          "authorizationInfo": {
            "$ref": "#/components/schemas/AuthorizationInfo"
          }
        }
      },
      "NetworkRecord": {
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/SourceTransferPeerPathResponse"
          },
          "destination": {
            "$ref": "#/components/schemas/DestinationTransferPeerPathResponse"
          },
          "txHash": {
            "type": "string"
          },
          "networkFee": {
            "type": "string"
          },
          "assetId": {
            "type": "string",
            "x-fb-entity": "asset"
          },
          "netAmount": {
            "description": "手数料を差し引いた取引の純額",
            "type": "string"
          },
          "isDropped": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          },
          "destinationAddress": {
            "type": "string"
          },
          "sourceAddress": {
            "type": "string"
          },
          "amountUSD": {
            "type": "string"
          },
          "index": {
            "type": "number"
          },
          "rewardInfo": {
            "$ref": "#/components/schemas/RewardInfo"
          }
        }
      },
      "AssetTypeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "oneOf": [
              {
                "const": "ALGO_ASSET"
              },
              {
                "const": "BASE_ASSET"
              },
              {
                "const": "BEP20"
              },
              {
                "const": "COMPOUND"
              },
              {
                "const": "ERC20"
              },
              {
                "const": "FIAT"
              },
              {
                "const": "SOL_ASSET"
              },
              {
                "const": "TRON_TRC20"
              },
              {
                "const": "XLM_ASSET"
              },
              {
                "const": "XDB_ASSET"
              }
            ]
          },
          "contractAddress": {
            "type": "string"
          },
          "nativeAsset": {
            "type": "string"
          },
          "decimals": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "name",
          "type"
        ]
      },
      "NetworkConnection": {
        "type": "object",
        "properties": {
          "localNetworkId": {
            "type": "string",
            "description": "接続を作成しようとしているプロファイルのネットワーク ID."
          },
          "remoteNetworkId": {
            "type": "string",
            "description": "プロファイルが接続しようとしているネットワーク ID."
          },
          "routingPolicy": {
            "$ref": "#/components/schemas/NetworkConnectionRoutingPolicy"
          }
        },
        "required": [
          "localNetworkId",
          "remoteNetworkId"
        ]
      },
      "NetworkConnectionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "localChannel": {
            "deprecated": true,
            "description": "非推奨 - `localNetworkId` に置き換えられました",
            "type": "object",
            "properties": {
              "networkId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "remoteChannel": {
            "deprecated": true,
            "description": "非推奨 - `remoteNetworkId` に置き換えられました",
            "type": "object",
            "properties": {
              "networkId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "status": {
            "$ref": "#/components/schemas/ConfigChangeRequestStatus"
          },
          "localNetworkId": {
            "$ref": "#/components/schemas/NetworkId"
          },
          "remoteNetworkId": {
            "$ref": "#/components/schemas/NetworkId"
          },
          "routingPolicy": {
            "$ref": "#/components/schemas/NetworkConnectionRoutingPolicy"
          }
        },
        "required": [
          "id",
          "localNetworkId",
          "remoteNetworkId",
          "routingPolicy",
          "status"
        ]
      },
      "EstimatedTransactionFeeResponse": {
        "type": "object",
        "properties": {
          "low": {
            "$ref": "#/components/schemas/TransactionFee"
          },
          "medium": {
            "$ref": "#/components/schemas/TransactionFee"
          },
          "high": {
            "$ref": "#/components/schemas/TransactionFee"
          }
        },
        "required": [
          "low",
          "medium",
          "high"
        ]
      },
      "EstimatedNetworkFeeResponse": {
        "type": "object",
        "properties": {
          "low": {
            "$ref": "#/components/schemas/NetworkFee"
          },
          "medium": {
            "$ref": "#/components/schemas/NetworkFee"
          },
          "high": {
            "$ref": "#/components/schemas/NetworkFee"
          }
        },
        "required": [
          "low",
          "medium",
          "high"
        ]
      },
      "GasStationPropertiesResponse": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "object"
          },
          "configuration": {
            "$ref": "#/components/schemas/GasStationConfiguration"
          }
        },
        "required": [
          "low",
          "medium",
          "high"
        ]
      },
      "TransactionFee": {
        "type": "object",
        "properties": {
          "feePerByte": {
            "type": "string"
          },
          "gasPrice": {
            "type": "string"
          },
          "gasLimit": {
            "type": "string"
          },
          "networkFee": {
            "type": "string"
          },
          "baseFee": {
            "description": "(オプション) EIP-1559 に基づく基本料金 (ETH 資産)",
            "type": "string"
          },
          "priorityFee": {
            "description": "(オプション) EIP-1559 に基づく優先手数料 (ETH 資産)",
            "type": "string"
          }
        }
      },
      "NetworkFee": {
        "type": "object",
        "properties": {
          "feePerByte": {
            "type": "string"
          },
          "gasPrice": {
            "type": "string"
          },
          "networkFee": {
            "type": "string"
          },
          "baseFee": {
            "description": "(オプション) EIP-1559 に基づく基本料金 (ETH 資産)",
            "type": "string"
          },
          "priorityFee": {
            "description": "(オプション) EIP-1559 に基づく優先手数料 (ETH 資産)",
            "type": "string"
          }
        }
      },
      "GasStationConfiguration": {
        "type": "object",
        "properties": {
          "gasThreshold": {
            "type": "string"
          },
          "gasCap": {
            "type": "string"
          },
          "maxGasPrice": {
            "type": "string"
          }
        }
      },
      "NetworkChannel": {
        "deprecated": true,
        "description": "唯一使用される参照 - NetworkConnectionResponse では非推奨です",
        "type": "object",
        "properties": {
          "networkId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "NetworkId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "NetworkIdResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "routingPolicy": {
            "$ref": "#/components/schemas/NetworkIdRoutingPolicy"
          },
          "isDiscoverable": {
            "type": "boolean",
            "description": "特定のネットワークが検出可能."
          }
        }
      },
      "TransactionRequest": {
        "type": "object",
        "properties": {
          "operation": {
            "$ref": "#/components/schemas/TransactionOperation"
          },
          "note": {
            "type": "string",
            "description": "Fireblocks ワークスペースでのトランザクションを説明する、ブロックチェーンに送信されないカスタム ノート.",
            "example": "Ticket 123"
          },
          "externalTxId": {
            "type": "string",
            "description": "オプションですが、強く推奨されるパラメータです。Fireblocks は、同じ ID を持つ将来のトランザクションを拒否します。同じトランザクションを 2 回送信しないようにするには、トランザクションを表す一意の ID に設定する必要があります。これは、トランザクションの送信時にインターネットの中断によりエラー コードが返されるが、トランザクションは実際には送信され、処理されている場合に役立ちます。トランザクションが処理されたかどうかを確認するには、[外部トランザクション ID で特定のトランザクションを検索](https://developers.fireblocks.com/reference/get_transactions-external-tx-id-externaltxid) を実行します。このパラメータには特定の形式は必要ありません。.",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "assetId": {
            "type": "string",
            "description": "`TRANSFER`、`MINT`、または `BURN` 操作で転送するアセットの ID。[Fireblocks でサポートされているアセットとその ID のリストを参照してください。](https://developers.fireblocks.com/reference/get_supported-assets)",
            "x-fb-entity": "asset",
            "example": "ETH"
          },
          "source": {
            "$ref": "#/components/schemas/TransferPeerPath"
          },
          "destination": {
            "$ref": "#/components/schemas/DestinationTransferPeerPath"
          },
          "destinations": {
            "type": "array",
            "description": "UTXOベースのブロックチェーンでは、単一のトランザクションを複数の宛先に送信できます。.",
            "items": {
              "$ref": "#/components/schemas/TransactionRequestDestination"
            }
          },
          "amount": {
            "oneOf": [
              {
                "type": "string",
                "description": "数値文字列（推奨）",
                "example": "0.02"
              },
              {
                "type": "number",
                "description": "番号（非推奨）",
                "example": 0.02
              }
            ],
            "description": "`TRANSFER` 操作の場合、資産単位での転送要求金額。Fireblocks では、精度を上げるために数値文字列の使用を推奨しています。数値入力は存在しますが、非推奨です。."
          },
          "treatAsGrossAmount": {
            "type": "boolean",
            "description": "「`true` に設定すると、手数料は要求された金額から差し引かれます。」**注**: このパラメータは、トランザクションの資産が ETH や MATIC などの基本資産である場合にのみ考慮されます。USDC のように、資産がトランザクション手数料に使用できない場合、このパラメータは無視され、手数料はソース アカウントの関連する基本資産ウォレットから差し引かれます。.",
            "example": false
          },
          "forceSweep": {
            "type": "boolean",
            "description": "Polkadot、Kusama、Westend のトランザクションのみ。true に設定すると、Fireblocks はアセット ウォレットを空にします。**注:** ソース アカウントがちょうど 1 DOT のときに true に設定すると、トランザクションは失敗します。1 DOT より多いまたは少ない金額は成功します。これは Polkadot ブロックチェーンの制限です。.",
            "example": false
          },
          "feeLevel": {
            "oneOf": [
              {
                "const": "LOW"
              },
              {
                "const": "MEDIUM"
              },
              {
                "const": "HIGH"
              }
            ],
            "description": "UTXOまたはEVMベースのブロックチェーンのみ。トランザクションに対して支払われるブロックチェーン手数料レベルを定義します。または、特定の手数料推定パラメータが以下にあります。.",
            "example": "MEDIUM"
          },
          "fee": {
            "oneOf": [
              {
                "type": "string",
                "description": "数値文字列（推奨）"
              },
              {
                "type": "number",
                "description": "番号（非推奨）"
              }
            ],
            "description": "UTXOベースのブロックチェーンの場合、資産の最小単位（Satoshi、Latoshiなど）のバイトあたりの手数料。Rippleの場合、トランザクションの手数料。Fireblocksでは、正確な精度を得るために数値文字列の使用を推奨しています。数値入力は存在しますが、非推奨です。."
          },
          "priorityFee": {
            "oneOf": [
              {
                "type": "string",
                "description": "数値文字列（推奨）",
                "example": "2"
              },
              {
                "type": "number",
                "description": "番号（非推奨）",
                "example": 2
              }
            ],
            "description": "Ethereumベースのブロックチェーンのみ、EIP-1559トランザクション価格設定メカニズムの手数料。値はGwei単位です。Fireblocksでは、正確な精度を得るために数値文字列を使用することをお勧めします。数値入力は存在しますが、非推奨です。."
          },
          "failOnLowFee": {
            "type": "boolean",
            "description": "`true`に設定すると、現在の`MEDIUM`手数料レベルがトランザクションで指定されたものよりも高い場合、トランザクションは失敗し、確認なしで停止するのを回避します。."
          },
          "maxFee": {
            "description": "トランザクションに支払われるべき最大手数料（ガス料金またはバイトあたりの手数料）。要求された `feeLevel` の現在の値が、この要求された最大手数料よりも高い場合。正確な精度のために数値文字列で表されます。.",
            "type": "string",
            "example": "120"
          },
          "gasLimit": {
            "oneOf": [
              {
                "type": "string",
                "description": "数値文字列（推奨）",
                "example": "21000"
              },
              {
                "type": "number",
                "description": "番号（非推奨）",
                "example": 21000
              }
            ],
            "description": "EVM ベースのブロックチェーンのみ。トランザクションの処理に必要なガスの単位。注: 1 つのトランザクションで指定できるのは、3 つの引数のうち 2 つだけです: `gasLimit`、`gasPrice`、`networkFee`。Fireblocks では、精度を上げるために数値文字列の使用を推奨しています。数値入力は存在しますが、非推奨です。."
          },
          "gasPrice": {
            "oneOf": [
              {
                "type": "string",
                "description": "数値文字列（推奨）"
              },
              {
                "type": "number",
                "description": "番号（非推奨）"
              }
            ],
            "description": "EIP-1559 以外の EVM ベースのトランザクションの場合。ガス単位あたりの価格 (Ethereum では Gwei で指定されます)。注: 1 つのトランザクションで指定できるのは、3 つの引数のうち 2 つだけです: `gasLimit`、`gasPrice`、および `networkFee`。Fireblocks では、精度を上げるために数値文字列を使用することをお勧めします。数値入力は存在しますが、非推奨です。."
          },
          "networkFee": {
            "oneOf": [
              {
                "type": "string",
                "description": "数値文字列（推奨）"
              },
              {
                "type": "number",
                "description": "番号（非推奨）"
              }
            ],
            "description": "EVM ベースのブロックチェーンのみ。ブロックチェーンの最大単位の合計トランザクション手数料。注: 1 つのトランザクションで指定できるのは、3 つの引数のうち 2 つだけです: `gasLimit`、`gasPrice`、および `networkFee`。Fireblocks では、精度を上げるために数値文字列を使用することをお勧めします。数値入力は存在しますが、非推奨です。 - トランザクション ブロックチェーン手数料。 - Ethereum の場合、gasPrice、gasLimit、および networkFee をすべて一緒に渡すことはできません。 - 数値表現が必要です."
          },
          "replaceTxByHash": {
            "type": "string",
            "description": "EVMベースのブロックチェーンのみ。トランザクションがスタックした場合、スタックしたトランザクションのハッシュを指定して、手数料の高いこのトランザクションに置き換えるか、手数料がゼロのこのトランザクションに置き換えてブロックチェーンから削除します。.",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "extraParameters": {
            "$ref": "#/components/schemas/ExtraParameters"
          },
          "customerRefId": {
            "type": "string",
            "description": "AMLプロバイダーが資金の所有者と取引を関連付けるためのID.",
            "example": "abcdef"
          },
          "autoStaking": {
            "type": "boolean",
            "description": "この機能はサポートされなくなりました.",
            "deprecated": true
          },
          "networkStaking": {
            "oneOf": [
              {
                "type": "string",
                "description": "数値文字列（推奨）"
              },
              {
                "type": "number",
                "description": "番号（非推奨）"
              }
            ],
            "description": "この機能はサポートされなくなりました."
          },
          "cpuStaking": {
            "oneOf": [
              {
                "type": "string",
                "description": "数値文字列（推奨）"
              },
              {
                "type": "number",
                "description": "番号（非推奨）"
              }
            ],
            "description": "この機能はサポートされなくなりました."
          }
        }
      },
      "TransactionRequestDestination": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "destination": {
            "$ref": "#/components/schemas/DestinationTransferPeerPath"
          }
        }
      },
      "ExchangeType": {
        "oneOf": [
          {
            "const": "BINANCE"
          },
          {
            "const": "BINANCEUS"
          },
          {
            "const": "BITFINEX"
          },
          {
            "const": "BITHUMB"
          },
          {
            "const": "BITMEX"
          },
          {
            "const": "BITSO"
          },
          {
            "const": "BITSTAMP"
          },
          {
            "const": "BITTREX"
          },
          {
            "const": "CIRCLE"
          },
          {
            "const": "COINBASEPRO"
          },
          {
            "const": "COINMETRO"
          },
          {
            "const": "COINSPRO"
          },
          {
            "const": "CRYPTOCOM"
          },
          {
            "const": "DERIBIT"
          },
          {
            "const": "FTX"
          },
          {
            "const": "FIXUS"
          },
          {
            "const": "GEMINI"
          },
          {
            "const": "HITBTC"
          },
          {
            "const": "HUOBI"
          },
          {
            "const": "KORBIT"
          },
          {
            "const": "KRAKEN"
          },
          {
            "const": "LIQUID"
          },
          {
            "const": "POLONIEX"
          },
          {
            "const": "OKCOIN"
          },
          {
            "const": "OKEX"
          },
          {
            "const": "SEEDCX"
          }
        ]
      },
      "FiatAccountType": {
        "const": "BLINC"
      },
      "ConfigChangeRequestStatus": {
        "oneOf": [
          {
            "const": "WAITING_FOR_APPROVAL"
          },
          {
            "const": "APPROVED"
          },
          {
            "const": "CANCELLED"
          },
          {
            "const": "REJECTED"
          },
          {
            "const": "FAILED"
          }
        ]
      },
      "TransactionOperation": {
        "oneOf": [
          {
            "const": "TRANSFER"
          },
          {
            "const": "BURN"
          },
          {
            "const": "CONTRACT_CALL"
          },
          {
            "const": "MINT"
          },
          {
            "const": "RAW"
          },
          {
            "const": "TYPED_MESSAGE"
          }
        ],
        "description": "* `TRANSFER` - 操作のデフォルト値。あるアカウントから別のアカウントに資金を転送します。UTXOブロックチェーンでは、マルチ入力およびマルチ出力の転送が可能です。他のすべてのブロックチェーンでは、1つの送信元アドレスと1つの送信先アドレスでの転送が可能です。 * `MINT` - 新しいトークンを作成します。Stellar、Ripple、EVMベースのブロックチェーンでサポートされています。 * `BURN` - トークンをバーンします。Stellar、Ripple、EVMベースのブロックチェーンでサポートされています。 * `CONTRACT_CALL` - 任意のEVMブロックチェーンでWeb3操作のスマートコントラクトメソッドを呼び出します。コントラクト呼び出しトランザクションの構築には、Fireblocks [開発ライブラリ](https://developers.fireblocks.com/docs/ethereum-development#convenience-libraries)が推奨されます。 * `TYPED_MESSAGE` - Ethereum Personal MessageまたはEIP712形式のオフチェーンメッセージ。実際のトランザクションではない特定の読み取り可能なメッセージに署名するために使用します。 [型付きメッセージの詳細](https://developers.fireblocks.com/docs/typed-message-signing)をご覧ください。 * `RAW` - 事前定義された形式を持たないオフチェーン メッセージ。ブロックチェーンなどのプロトコルや、Fireblocks でネイティブにサポートされていないカスタム トランザクション タイプなど、秘密鍵を使用して任意のメッセージに署名するために使用します。[raw 署名トランザクションの詳細](https://developers.fireblocks.com/docs/raw-message-signing)"
      },
      "GetTransactionOperation": {
        "oneOf": [
          {
            "const": "TRANSFER"
          },
          {
            "const": "BURN"
          },
          {
            "const": "CONTRACT_CALL"
          },
          {
            "const": "MINT"
          },
          {
            "const": "RAW"
          },
          {
            "const": "TYPED_MESSAGE"
          },
          {
            "const": "ENABLE_ASSET"
          },
          {
            "const": "STAKE"
          },
          {
            "const": "UNSTAKE"
          },
          {
            "const": "WITHDRAW"
          },
          {
            "const": "REDEEM_FROM_COMPOUND"
          },
          {
            "const": "SUPPLY_TO_COMPOUND"
          }
        ],
        "description": "* `TRANSFER` - あるアカウントから別のアカウントに資金を転送します。UTXO ブロックチェーンでは、複数入力および複数出力の転送が可能です。他のすべてのブロックチェーンでは、1 つの送信元アドレスと 1 つの送信先アドレスでの転送が可能です。 * `MINT` - 新しいトークンを作成します。Stellar、Ripple、EVM ベースのブロックチェーンでサポートされています。 * `BURN` - トークンをバーンします。Stellar、Ripple、EVM ベースのブロックチェーンでサポートされています。 * `CONTRACT_CALL` - 任意の EVM ブロックチェーンで web3 操作用のスマート コントラクト メソッドを呼び出します。コントラクト呼び出しトランザクションの構築には、Fireblocks [開発ライブラリ](https://developers.fireblocks.com/docs/ethereum-development#convenience-libraries) が推奨されます。 * `TYPED_MESSAGE` - Ethereum Personal Message または EIP712 形式のオフチェーン メッセージ。実際のトランザクションではない特定の読み取り可能なメッセージに署名するために使用します。 [型付きメッセージの詳細](https://developers.fireblocks.com/docs/typed-message-signing)。 * `RAW` - 定義済みの形式がないオフチェーン メッセージ。Fireblocks でネイティブにサポートされていないブロックチェーンやカスタム トランザクション タイプなどのプロトコルを含む、秘密鍵で任意のメッセージに署名するために使用します。[raw 署名トランザクションの詳細](https://developers.fireblocks.com/docs/raw-message-signing) * `ENABLE_ASSET` - Algorand、DigitalBits、Solana、および Stellar では、オンチェーン トランザクションで資産ウォレットを作成し、入金アドレスを有効にする必要があります。このトランザクションは、Vault アカウントでこれらのブロックチェーンに資産を追加すると自動的に作成されます。 * `STAKE` - ステーキング バリデーターによって管理されるステーキング プールに資産を割り当てます。Stellar および EVM ベースのブロックチェーンでサポートされています。このトランザクションは、ステーキング操作を実行すると自動的に作成されます。 * `UNSTAKE` - ステーキングバリデーターによって管理されるステーキングプールから資産を削除します。StellarおよびEVMベースのブロックチェーンでサポートされています。このトランザクションは、ステーキング操作を実行するときに自動的に作成されます。 * `WITHDRAW` - 専用のステーキングボールトアカウントから別のアドレスに資産を転送します。StellarおよびEVMベースのブロックチェーンでサポートされています。このトランザクションは、ステーキング操作を実行するときに自動的に作成されます。 **注：** Fireblocksは、このタイプの名前をまもなく`WITHDRAW`から別のタイプ名に変更します。新しいタイプ名については、7日前に通知されます。 * `SUPPLY_TO_COMPOUND` - 2023年4月1日から非推奨。ワークスペースのユーザーがFireblocksとCompound DeFIプロトコル間の直接統合を使用した場合、古いトランザクションではこれが操作として使用されることがあります。 * `REDEEM_FROM_COMPOUND` - 2023年4月1日以降非推奨。ワークスペースのユーザーがFireblocksとCompound DeFIプロトコルの直接統合を使用している場合、古いトランザクションではこれが操作として使用されることがあります。."
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "number"
          }
        }
      },
      "Term": {
        "type": "object",
        "properties": {
          "networkConnectionId": {
            "type": "string"
          },
          "outgoing": {
            "type": "boolean"
          },
          "asset": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          }
        }
      },
      "SetConfirmationsThresholdRequest": {
        "type": "object",
        "properties": {
          "numOfConfirmations": {
            "type": "number"
          }
        }
      },
      "SetConfirmationsThresholdResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DropTransactionRequest": {
        "type": "object",
        "properties": {
          "txId": {
            "type": "string"
          },
          "feeLevel": {
            "type": "string"
          },
          "gasPrice": {
            "type": "string"
          }
        }
      },
      "DropTransactionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UnsignedMessage": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "bip44addressIndex": {
            "type": "integer"
          },
          "bip44change": {
            "type": "number"
          },
          "derivationPath": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "content"
        ]
      },
      "SignedMessage": {
        "type": "object",
        "description": "生署名のために返された署名済みメッセージのリスト.",
        "properties": {
          "content": {
            "type": "string"
          },
          "algorithm": {
            "oneOf": [
              {
                "const": "MPC_ECDSA_SECP256K1"
              },
              {
                "const": "MPC_EDDSA_ED25519"
              }
            ]
          },
          "derivationPath": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "signature": {
            "type": "object",
            "properties": {
              "fullSig": {
                "type": "string"
              },
              "r": {
                "type": "string"
              },
              "s": {
                "type": "string"
              },
              "v": {
                "type": "number"
              }
            }
          },
          "publicKey": {
            "type": "string"
          }
        }
      },
      "PublicKeyInformation": {
        "type": "object",
        "properties": {
          "algorithm": {
            "type": "string"
          },
          "derivationPath": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "publicKey": {
            "type": "string"
          }
        }
      },
      "TradingAccountType": {
        "oneOf": [
          {
            "const": "COIN_FUTURES"
          },
          {
            "const": "COIN_MARGINED_SWAP"
          },
          {
            "const": "EXCHANGE"
          },
          {
            "const": "FUNDING"
          },
          {
            "const": "FUNDABLE"
          },
          {
            "const": "FUTURES"
          },
          {
            "const": "FUTURES_CROSS"
          },
          {
            "const": "MARGIN"
          },
          {
            "const": "MARGIN_CROSS"
          },
          {
            "const": "OPTIONS"
          },
          {
            "const": "SPOT"
          },
          {
            "const": "USDT_MARGINED_SWAP_CROSS"
          },
          {
            "const": "USDT_FUTURES"
          },
          {
            "const": "UNIFIED"
          }
        ]
      },
      "ValidateAddressResponse": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "requiresTag": {
            "type": "boolean"
          }
        }
      },
      "ResendWebhooksResponse": {
        "type": "object",
        "properties": {
          "messagesCount": {
            "type": "number"
          }
        }
      },
      "UnspentInputsResponse": {
        "type": "object",
        "properties": {
          "input": {
            "$ref": "#/components/schemas/UnspentInput"
          },
          "address": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "confirmations": {
            "type": "number"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "UnspentInput": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string"
          },
          "index": {
            "type": "number"
          }
        }
      },
      "GetUsersResponse": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResponse"
            }
          }
        }
      },
      "ExtraParameters": {
        "type": "object",
        "properties": {},
        "description": "追加のプロトコル/操作固有のキー値パラメータ: UTXO ベースのブロックチェーン入力選択の場合、キー `inputsSelection` を追加し、値を [入力選択構造](https://developers.fireblocks.com/reference/transaction-objects#inputsselection) に設定します。入力は、[未使用の入力の取得エンドポイント](https://developers.fireblocks.com/reference/get_vault-accounts-vaultaccountid-assetid-unspent-inputs) から取得できます。`RAW` 操作の場合、キー `rawMessageData` を追加し、値を [生のメッセージ データ構造](https://developers.fireblocks.com/reference/raw-signing-objects#rawmessagedata) に設定します。`CONTRACT_CALL` 操作の場合、キー `contractCallData` を追加し、値を Ethereum スマート コントラクトのアプリケーション バイナリ インターフェイス (ABI) ペイロードに設定します。 Fireblocks [開発ライブラリ](https://developers.fireblocks.com/docs/ethereum-development#convenience-libraries)は、コントラクト呼び出しトランザクションの構築に推奨されます。."
      },
      "NetworkIdRoutingPolicy": {
        "type": "object",
        "properties": {
          "crypto": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomCryptoRoutingDest"
              },
              {
                "$ref": "#/components/schemas/NoneNetworkRoutingDest"
              }
            ]
          },
          "sen": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomFiatRoutingDest"
              },
              {
                "$ref": "#/components/schemas/NoneNetworkRoutingDest"
              }
            ]
          },
          "signet": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomFiatRoutingDest"
              },
              {
                "$ref": "#/components/schemas/NoneNetworkRoutingDest"
              }
            ]
          },
          "sen_test": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NoneNetworkRoutingDest"
              },
              {
                "$ref": "#/components/schemas/CustomFiatRoutingDest"
              }
            ]
          },
          "signet_test": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NoneNetworkRoutingDest"
              },
              {
                "$ref": "#/components/schemas/CustomFiatRoutingDest"
              }
            ]
          }
        }
      },
      "NetworkConnectionRoutingPolicy": {
        "type": "object",
        "properties": {
          "crypto": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomCryptoRoutingDest"
              },
              {
                "$ref": "#/components/schemas/DefaultNetworkRoutingDest"
              },
              {
                "$ref": "#/components/schemas/NoneNetworkRoutingDest"
              }
            ]
          },
          "sen": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomFiatRoutingDest"
              },
              {
                "$ref": "#/components/schemas/DefaultNetworkRoutingDest"
              },
              {
                "$ref": "#/components/schemas/NoneNetworkRoutingDest"
              }
            ]
          },
          "signet": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DefaultNetworkRoutingDest"
              },
              {
                "$ref": "#/components/schemas/CustomFiatRoutingDest"
              },
              {
                "$ref": "#/components/schemas/NoneNetworkRoutingDest"
              }
            ]
          },
          "sen_test": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DefaultNetworkRoutingDest"
              },
              {
                "$ref": "#/components/schemas/NoneNetworkRoutingDest"
              },
              {
                "$ref": "#/components/schemas/CustomFiatRoutingDest"
              }
            ]
          },
          "signet_test": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NoneNetworkRoutingDest"
              },
              {
                "$ref": "#/components/schemas/CustomFiatRoutingDest"
              },
              {
                "$ref": "#/components/schemas/DefaultNetworkRoutingDest"
              }
            ]
          }
        }
      },
      "CustomFiatRoutingDest": {
        "type": "object",
        "properties": {
          "scheme": {
            "const": "CUSTOM",
            "description": "ネットワークルーティングロジック."
          },
          "dstType": {
            "const": "FIAT_ACCOUNT",
            "description": "資金が送金される法定通貨口座."
          },
          "dstId": {
            "type": "string",
            "description": "資金が送金される法定通貨口座のID."
          }
        },
        "required": [
          "scheme",
          "dstType",
          "dstId"
        ]
      },
      "CustomCryptoRoutingDest": {
        "type": "object",
        "properties": {
          "scheme": {
            "const": "CUSTOM",
            "description": "ネットワークルーティングロジック."
          },
          "dstType": {
            "oneOf": [
              {
                "const": "VAULT"
              },
              {
                "const": "EXCHANGE"
              }
            ],
            "description": "資金が送金される送金先口座の種類."
          },
          "dstId": {
            "type": "string",
            "description": "資金の送金先口座のID."
          }
        },
        "required": [
          "scheme",
          "dstType",
          "dstId"
        ]
      },
      "DefaultNetworkRoutingDest": {
        "type": "object",
        "properties": {
          "scheme": {
            "const": "DEFAULT",
            "description": "ネットワークルーティングロジック."
          }
        },
        "required": [
          "scheme"
        ]
      },
      "NoneNetworkRoutingDest": {
        "type": "object",
        "properties": {
          "scheme": {
            "const": "NONE",
            "description": "ネットワークルーティングロジックなし."
          }
        },
        "required": [
          "scheme"
        ]
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "SessionMetadata": {
        "type": "object",
        "properties": {
          "appUrl": {
            "type": "string"
          },
          "appName": {
            "type": "string"
          },
          "appDescription": {
            "type": "string"
          },
          "appIcon": {
            "type": "string"
          }
        },
        "required": [
          "appUrl"
        ]
      },
      "SessionDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "接続のID",
            "example": "4e9e7051-f3b2-48e9-8ee6-b12492552657"
          },
          "userId": {
            "type": "string",
            "description": "接続を作成したユーザーのID"
          },
          "sessionMetadata": {
            "description": "接続のメタデータ（dappによって提供される）",
            "type": "object",
            "properties": {
              "appUrl": {
                "type": "string"
              },
              "appName": {
                "type": "string"
              },
              "appDescription": {
                "type": "string"
              },
              "appIcon": {
                "type": "string"
              }
            }
          },
          "vaultAccountId": {
            "type": "number",
            "description": "接続する金庫",
            "example": 1
          },
          "feeLevel": {
            "oneOf": [
              {
                "const": "MEDIUM"
              },
              {
                "const": "HIGH"
              }
            ],
            "description": "デフォルトの料金レベル",
            "example": "MEDIUM"
          },
          "chainIds": {
            "description": "接続に承認されたチェーン",
            "example": [
              "ETH",
              "ETH_TEST",
              "SOL"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "connectionType": {
            "const": "WalletConnect",
            "description": "接続の種類",
            "example": "WalletConnect"
          },
          "connectionMethod": {
            "oneOf": [
              {
                "const": "DESKTOP"
              },
              {
                "const": "MOBILE"
              },
              {
                "const": "API"
              }
            ],
            "description": "接続が確立された方法",
            "example": "API"
          },
          "creationDate": {
            "format": "date-time",
            "type": "string",
            "description": "セッション作成のタイムスタンプ"
          }
        },
        "required": [
          "id",
          "userId",
          "sessionMetadata",
          "vaultAccountId",
          "feeLevel",
          "chainIds",
          "connectionType",
          "connectionMethod",
          "creationDate"
        ]
      },
      "GetConnectionsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "description": "要求されたWeb3接続のデータの配列",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionDTO"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/Paging"
          }
        },
        "required": [
          "data"
        ]
      },
      "CreateConnectionRequest": {
        "type": "object",
        "properties": {
          "vaultAccountId": {
            "type": "number",
            "description": "Web3接続に接続するボールトのID.",
            "example": 1
          },
          "feeLevel": {
            "oneOf": [
              {
                "const": "MEDIUM"
              },
              {
                "const": "HIGH"
              }
            ],
            "description": "デフォルトの料金レベル。有効な値は `MEDIUM` と `HIGH` です。.",
            "example": "MEDIUM"
          },
          "uri": {
            "type": "string",
            "description": "dappが提供するWalletConnect uri.",
            "example": "wc:77752975-906f-48f5-b59f-047826ee947e@1?bridge=https%3A%2F%2F0.bridge.walletconnect.org&key=64be99adc6086b7a729b0ec8c7e1f174927ab92e84f5c6f9527050225344a637"
          },
          "chainIds": {
            "description": "Web3接続で使用されるブロックチェーンネットワークのID.",
            "example": [
              "ETH",
              "ETH_TEST"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "vaultAccountId",
          "feeLevel",
          "uri",
          "chainIds"
        ]
      },
      "CreateConnectionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "開始されたWeb3接続のID.",
            "example": "4e9e7051-f3b2-48e9-8ee6-b12492552657"
          },
          "sessionMetadata": {
            "description": "Web3接続のメタデータ（DAppによって提供）.",
            "type": "object",
            "properties": {
              "appUrl": {
                "type": "string"
              },
              "appName": {
                "type": "string"
              },
              "appDescription": {
                "type": "string"
              },
              "appIcon": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "id",
          "sessionMetadata"
        ]
      },
      "RespondToConnectionRequest": {
        "type": "object",
        "properties": {
          "approve": {
            "type": "boolean",
            "description": "開始されたWeb3接続の承認.",
            "example": true
          }
        },
        "required": [
          "approve"
        ]
      },
      "AddCollateralRequestBody": {
        "type": "object",
        "properties": {
          "transactionRequest": {
            "$ref": "#/components/schemas/TransactionRequest"
          },
          "isSrcCollateral": {
            "type": "boolean",
            "description": "オプション"
          }
        }
      },
      "RemoveCollateralRequestBody": {
        "type": "object",
        "properties": {
          "transactionRequest": {
            "$ref": "#/components/schemas/TransactionRequest"
          },
          "isDstCollateral": {
            "type": "boolean",
            "description": "オプション"
          }
        }
      },
      "SettlementRequestBody": {
        "type": "object",
        "properties": {
          "mainExchangeAccountId": {
            "type": "string"
          }
        }
      },
      "SettlementResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "initiator": {
            "type": "string"
          },
          "exchangeReply": {
            "type": "string"
          },
          "fireblocksInitiatedTransactions": {
            "type": "object"
          },
          "exchangeRequestedTransactions": {
            "$ref": "#/components/schemas/SettlementResponse"
          }
        }
      },
      "GetSettlementResponse": {
        "$ref": "#/components/schemas/SettlementResponse"
      },
      "ToExchangeTransaction": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "dstAddress": {
            "type": "string"
          },
          "dstTag": {
            "type": "string",
            "description": "オプション"
          }
        }
      },
      "ToCollateralTransaction": {
        "type": "object",
        "properties": {
          "asset": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "srcAddress": {
            "type": "string"
          },
          "srcTag": {
            "type": "string",
            "description": "オプション"
          },
          "fee": {
            "type": "string",
            "description": "オプション"
          }
        }
      },
      "XBSettlementConfigCreationRequestBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "国境を越えた決済構成の名称"
          },
          "corridorId": {
            "$ref": "#/components/schemas/XBSettlementCorridorId"
          },
          "steps": {
            "$ref": "#/components/schemas/XBSettlementConfigStepsRecord"
          },
          "conversionSlippageBasisPoints": {
            "$ref": "#/components/schemas/XBSettlementConversionSlippageBasisPoints"
          }
        },
        "required": [
          "name",
          "corridorId",
          "steps"
        ]
      },
      "XBSettlementConfigCreationResponse": {
        "$ref": "#/components/schemas/XBSettlementConfigModel"
      },
      "XBSettlementConfigEditRequestBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "国境を越えた決済構成の名称"
          },
          "steps": {
            "$ref": "#/components/schemas/XBSettlementConfigStepsRecord"
          },
          "conversionSlippageBasisPoints": {
            "$ref": "#/components/schemas/XBSettlementConversionSlippageBasisPoints"
          }
        },
        "required": [
          "name",
          "steps"
        ]
      },
      "XBSettlementConfigEditResponse": {
        "$ref": "#/components/schemas/XBSettlementConfigModel"
      },
      "XBSettlementConfigDeletionResponse": {
        "$ref": "#/components/schemas/XBSettlementConfigModel"
      },
      "XBSettlementGetConfigResponse": {
        "$ref": "#/components/schemas/XBSettlementConfigModel"
      },
      "XBSettlementGetAllConfigsResponse": {
        "type": "object",
        "properties": {
          "configurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/XBSettlementConfigModel"
            }
          }
        },
        "required": [
          "configurations"
        ]
      },
      "XBSettlementFlowExecutionRequestBody": {
        "type": "object",
        "properties": {
          "conversionSlippageBasisPoints": {
            "$ref": "#/components/schemas/XBSettlementConversionSlippageBasisPoints"
          }
        }
      },
      "XBSettlementFlowExecutionResponse": {
        "$ref": "#/components/schemas/XBSettlementFlowExecutionModel"
      },
      "XBSettlementFlowExecutionStep": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ステップ実行の一意のID"
          },
          "accountId": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/XBSettlementFlowExecutionStepStatus"
          },
          "inputAmount": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "outputAmount": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "fee": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "startedAt": {
            "type": "number",
            "description": "エポック形式でのステップ実行開始時刻."
          },
          "completedAt": {
            "type": "number",
            "description": "エポック形式でのステップ実行終了時刻."
          },
          "isSignRequired": {
            "type": "boolean",
            "description": "ステップを実行するために署名が必要かどうか."
          }
        },
        "required": [
          "id",
          "accountId",
          "status",
          "inputAmount",
          "isSignRequired"
        ]
      },
      "XBSettlementFlowExecutionStepStatus": {
        "oneOf": [
          {
            "const": "NOT_STARTED"
          },
          {
            "const": "PROCESSING"
          },
          {
            "const": "COMPLETED"
          },
          {
            "const": "FAILED"
          }
        ]
      },
      "XBSettlementFlowExecutionStatus": {
        "oneOf": [
          {
            "const": "NOT_LAUNCHED"
          },
          {
            "const": "PROCESSING"
          },
          {
            "const": "COMPLETED"
          },
          {
            "const": "FAILED"
          }
        ]
      },
      "XBSettlementConfigId": {
        "type": "string",
        "format": "uuid",
        "description": "クロスボーダー構成の固有 ID"
      },
      "XBSettlementConfigModel": {
        "type": "object",
        "properties": {
          "configId": {
            "$ref": "#/components/schemas/XBSettlementConfigId"
          },
          "corridorId": {
            "$ref": "#/components/schemas/XBSettlementCorridorId"
          },
          "name": {
            "type": "string",
            "description": "国境を越えた決済構成の名称"
          },
          "steps": {
            "$ref": "#/components/schemas/XBSettlementConfigStepsRecord"
          },
          "conversionSlippageBasisPoints": {
            "$ref": "#/components/schemas/XBSettlementConversionSlippageBasisPoints"
          },
          "createdAt": {
            "type": "number",
            "description": "エポック形式の作成時間."
          }
        },
        "required": [
          "configId",
          "name",
          "corridorId",
          "steps",
          "conversionSlippageBasisPoints",
          "createdAt"
        ]
      },
      "XBSettlementCorridorId": {
        "oneOf": [
          {
            "const": "MX_US"
          },
          {
            "const": "CO_US"
          },
          {
            "const": "US_MX"
          },
          {
            "const": "US_EU"
          },
          {
            "const": "US_UK"
          }
        ],
        "description": "- MX_US : メキシコ (MXN) から米国 (USD) - CO_US : コロンビア (COP) から米国 (USD) - US_MX : 米国 (USD) からメキシコ (MXN) - US_EU : 米国 (USD) から欧州連合 (EUR) - US_UK : 米国 (USD) から英国 (GBP)"
      },
      "XBSettlementConfigStep": {
        "type": "object",
        "properties": {
          "stepType": {
            "$ref": "#/components/schemas/XBSettlementStepType"
          },
          "accountId": {
            "type": "string"
          }
        },
        "required": [
          "stepType",
          "accountId"
        ]
      },
      "XBSettlementStepType": {
        "oneOf": [
          {
            "const": "ON_RAMP"
          },
          {
            "const": "VAULT_ACCOUNT"
          },
          {
            "const": "OFF_RAMP"
          },
          {
            "const": "FIAT_DESTINATION"
          }
        ],
        "description": "- ON_RAMP: 法定通貨を暗号通貨に交換できるサービス。OnRamp の入力値は常に法定通貨で、出力値は暗号資産になります。 - VAULT_ACCOUNT: Fireblocks Vault アカウント - OFF_RAMP: 暗号通貨を法定通貨に交換できるサービス。OffRamp の入力値は常に暗号資産で、出力値は法定通貨になります。 - FIAT_DESTINATION: 法定通貨アカウント"
      },
      "XBSettlementFlowSetupStep": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "inputAmount": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "outputAmount": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "estimatedFeeAmount": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "estimatedTime": {
            "type": "number",
            "description": "ステップの実行にかかる推定時間."
          },
          "isSignRequired": {
            "type": "boolean",
            "description": "ステップを実行するために署名が必要かどうか."
          }
        },
        "required": [
          "accountId",
          "inputAmount",
          "outputAmount",
          "estimatedFeeAmount",
          "estimatedTime",
          "isSignRequired"
        ]
      },
      "XBSettlementGetFlowResponse": {
        "type": "object",
        "properties": {
          "preview": {
            "$ref": "#/components/schemas/XBSettlementFlowPreviewModel"
          },
          "execution": {
            "$ref": "#/components/schemas/XBSettlementFlowExecutionModel"
          }
        }
      },
      "XBSettlementFlowPreviewModel": {
        "type": "object",
        "properties": {
          "flowId": {
            "type": "string",
            "description": "国境を越えたフローの一意のID."
          },
          "configId": {
            "$ref": "#/components/schemas/XBSettlementConfigId"
          },
          "conversionRate": {
            "type": "string",
            "description": "オンランプまたはオフランプから受け取ったコンバージョン率."
          },
          "inputAmount": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "estimatedOutputAmount": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "totalEstimatedFee": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "totalEstimatedTime": {
            "type": "number",
            "description": "国境を越えたフローを実行するための合計*推定*時間."
          },
          "steps": {
            "$ref": "#/components/schemas/XBSettlementFlowStepsRecord"
          }
        },
        "required": [
          "flowId",
          "configId",
          "steps",
          "inputAmount",
          "estimatedOutputAmount",
          "totalEstimatedFee",
          "totalEstimatedTime",
          "conversionRate"
        ]
      },
      "XBSettlementCreateFlowRequestBody": {
        "type": "object",
        "properties": {
          "configId": {
            "$ref": "#/components/schemas/XBSettlementConfigId"
          },
          "amount": {
            "type": "string",
            "description": "このクロスボーダーフローで転送する金額。資産の種類はクロスボーダー決済設定によって定義されます。."
          }
        },
        "required": [
          "configId",
          "amount"
        ]
      },
      "XBSettlementCreateFlowResponse": {
        "$ref": "#/components/schemas/XBSettlementFlowPreviewModel"
      },
      "XBSettlementFlowExecutionModel": {
        "type": "object",
        "properties": {
          "flowId": {
            "type": "string",
            "description": "国境を越えたフローの一意のID."
          },
          "configId": {
            "$ref": "#/components/schemas/XBSettlementConfigId"
          },
          "inputAmount": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "outputAmount": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "totalFee": {
            "$ref": "#/components/schemas/XBSettlementAsset"
          },
          "initiatedAt": {
            "type": "number",
            "description": "国境を越えたフローが実行された時間をエポック形式で表したもの."
          },
          "initiatedBy": {
            "description": "フローを開始したユーザーのID",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/XBSettlementFlowExecutionStatus"
          },
          "steps": {
            "$ref": "#/components/schemas/XBSettlementFlowStepsExecutionRecord"
          },
          "selectedConversionSlippage": {
            "type": "object",
            "description": "オーバーライドロジックが実行された可能性があるため、フロー中に使用された選択されたスリップを示します。.",
            "properties": {
              "basisPoints": {
                "type": "number"
              },
              "reason": {
                "$ref": "#/components/schemas/XBSettlementFlowSelectedConversionSlippageReason"
              }
            },
            "required": [
              "basisPoints",
              "reason"
            ]
          }
        },
        "required": [
          "flowId",
          "configId",
          "steps",
          "inputAmount",
          "outputAmount",
          "totalFee",
          "initiatedAt",
          "initiatedBy",
          "state",
          "selectedConversionSlippage"
        ]
      },
      "XBSettlementFlowSelectedConversionSlippageReason": {
        "oneOf": [
          {
            "const": "DEFAULT"
          },
          {
            "const": "CONFIG"
          },
          {
            "const": "FLOW"
          }
        ]
      },
      "XBSettlementFlowStepsExecutionRecord": {
        "type": "object",
        "properties": {
          "stepType": {
            "$ref": "#/components/schemas/XBSettlementStepType"
          }
        },
        "additionalProperties": {
          "$ref": "#/components/schemas/XBSettlementFlowExecutionStep"
        }
      },
      "XBSettlementConfigStepsRecord": {
        "type": "object",
        "properties": {
          "stepType": {
            "$ref": "#/components/schemas/XBSettlementStepType"
          }
        },
        "additionalProperties": {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string"
            },
            "inputAssetId": {
              "$ref": "#/components/schemas/XBSettlementAssetID"
            },
            "outputAssetId": {
              "$ref": "#/components/schemas/XBSettlementAssetID"
            }
          },
          "required": [
            "accountId"
          ]
        }
      },
      "XBSettlementConversionSlippageBasisPoints": {
        "type": "integer",
        "minimum": 0,
        "maximum": 10000,
        "default": 10000,
        "description": "スリッページ設定はベーシスポイントで、デフォルト値は10%です。"
      },
      "XBSettlementFlowStepsRecord": {
        "type": "object",
        "properties": {
          "stepType": {
            "$ref": "#/components/schemas/XBSettlementStepType"
          }
        },
        "additionalProperties": {
          "$ref": "#/components/schemas/XBSettlementFlowSetupStep"
        }
      },
      "XBSettlementAsset": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "assetId": {
            "$ref": "#/components/schemas/XBSettlementAssetID"
          }
        },
        "required": [
          "amount"
        ]
      },
      "XBSettlementAssetID": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/XBSettlementFiatAsset"
          },
          {
            "$ref": "#/components/schemas/XBSettlementCryptoAsset"
          }
        ]
      },
      "XBSettlementFiatAsset": {
        "oneOf": [
          {
            "const": "USD"
          },
          {
            "const": "MXN"
          },
          {
            "const": "COP"
          },
          {
            "const": "EUR"
          },
          {
            "const": "GBP"
          }
        ]
      },
      "XBSettlementCryptoAsset": {
        "oneOf": [
          {
            "const": "XLM_USDC_5F3T"
          },
          {
            "const": "XLM"
          }
        ],
        "description": "- XLM_USDC_5F3T : Stellar ネットワーク上の USDC"
      },
      "CreatePayoutRequest": {
        "type": "object",
        "properties": {
          "paymentAccount": {
            "$ref": "#/components/schemas/PaymentAccount"
          },
          "instructionSet": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayoutInstruction"
            }
          }
        },
        "required": [
          "paymentAccount",
          "instructionSet"
        ]
      },
      "PaymentAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/PaymentAccountType"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "PayoutInstruction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "payeeAccount": {
            "$ref": "#/components/schemas/PayeeAccount"
          },
          "amount": {
            "$ref": "#/components/schemas/InstructionAmount"
          }
        },
        "required": [
          "amount",
          "payeeAccount"
        ]
      },
      "PaymentAccountType": {
        "oneOf": [
          {
            "const": "VAULT_ACCOUNT"
          },
          {
            "const": "EXCHANGE_ACCOUNT"
          },
          {
            "const": "FIAT_ACCOUNT"
          }
        ]
      },
      "PayeeAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/PayeeAccountType"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "InstructionAmount": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "assetId": {
            "type": "string"
          }
        },
        "required": [
          "amount",
          "assetId"
        ]
      },
      "PayeeAccountType": {
        "oneOf": [
          {
            "const": "VAULT_ACCOUNT"
          },
          {
            "const": "EXCHANGE_ACCOUNT"
          },
          {
            "const": "INTERNAL_WALLET"
          },
          {
            "const": "EXTERNAL_WALLET"
          },
          {
            "const": "NETWORK_CONNECTION"
          },
          {
            "const": "FIAT_ACCOUNT"
          }
        ],
        "description": "- VAULT_ACCOUNT ネイティブ Fireblocks ボールト アカウント - EXCHANGE_ACCOUNT サードパーティ Exchange アカウント - INTERNAL_WALLET ワークスペース/組織の内部としてマークされたホワイトリスト アドレス - EXTERNAL_WALLET 外部としてマークされたホワイトリスト アドレス - NETWORK_CONNECTION Fireblocks ネットワークのメンバー - FIAT_ACCOUNT 法定銀行のサードパーティ アカウント (署名、BCB など)"
      },
      "PayoutResponse": {
        "type": "object",
        "properties": {
          "payoutId": {
            "type": "string"
          },
          "paymentAccount": {
            "$ref": "#/components/schemas/PaymentAccountResponse"
          },
          "createdAt": {
            "type": "number"
          },
          "state": {
            "$ref": "#/components/schemas/PayoutState"
          },
          "status": {
            "$ref": "#/components/schemas/PayoutStatus"
          },
          "reasonOfFailure": {
            "type": "string",
            "description": "<ul><li>残高不足</li><li>ソース翻訳</li><li>ソースが一意ではない</li><li>ソースが見つかりません</li><li>ソースタイプがサポートされていません</li><li>空のソース</li><li>宛先_翻訳</li><li>宛先が一意ではない</li><li>宛先が見つかりません</li><li>空の宛先</li><li>解析</li><li>未知</li><li>ファイアブロッククライアント</li><li>トランザクション送信</li></ul>"
          },
          "initMethod": {
            "$ref": "#/components/schemas/PayoutInitMethod"
          },
          "instructionSet": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayoutInstructionResponse"
            }
          },
          "reportUrl": {
            "type": "string"
          }
        },
        "required": [
          "payoutId",
          "createdAt",
          "state",
          "status",
          "paymentAccount",
          "instructionSet"
        ]
      },
      "PaymentAccountResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/PaymentAccountType"
          }
        }
      },
      "PayoutState": {
        "oneOf": [
          {
            "const": "CREATED"
          },
          {
            "const": "FILE_FOUND"
          },
          {
            "const": "REQUESTED"
          },
          {
            "const": "TRANSLATED"
          },
          {
            "const": "PROCESSING"
          },
          {
            "const": "SUBMITTED"
          },
          {
            "const": "FINALIZED"
          },
          {
            "const": "INSUFFICIENT_BALANCE"
          },
          {
            "const": "FAILED"
          }
        ],
        "description": "- CREATED - 支払い指示セットとそのすべての詳細が作成されました - FILE_FOUND - FTP で新しいファイルが見つかりました - REQUESTED - 支払いがそのすべての詳細とともに要求されました - TRANSLATED - 支払い指示アカウント ID が識別され、翻訳されました - PROCESSING - 支払い指示セットが実行され、処理中です - SUBMITTED - 支払い指示のために送信されたトランザクション - FINALIZED - 支払い処理が終了し、すべてのトランザクションが正常に処理されました - INSUFFICIENT_BALANCE - 支払いアカウントの残高が不足しています (一時的な状態の場合があります) - FAILED - 1 つ以上の支払い指示が失敗しました"
      },
      "PayoutStatus": {
        "oneOf": [
          {
            "const": "REGISTERED"
          },
          {
            "const": "VERIFYING"
          },
          {
            "const": "IN_PROGRESS"
          },
          {
            "const": "DONE"
          },
          {
            "const": "INSUFFICIENT_BALANCE"
          },
          {
            "const": "FAILED"
          }
        ],
        "description": "- REQUESTED 支払いがすべての詳細とともにリクエストされました - VERIFIED 支払い指示セットの詳細が検証されました - PROCESSING 支払い指示セットが実行され、処理中です - FINALIZED 支払いが完了しました（すべての支払い指示が正常に完了しました） - INSUFFICIENT_BALANCE 支払いアカウントの残高が不足しています（一時的な状態の場合があります） - FAILED 1 つ以上の支払い指示が失敗しました"
      },
      "PayoutInitMethod": {
        "oneOf": [
          {
            "const": "FILE"
          },
          {
            "const": "API"
          }
        ]
      },
      "PayoutInstructionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "payeeAccount": {
            "$ref": "#/components/schemas/PayeeAccountResponse"
          },
          "amount": {
            "$ref": "#/components/schemas/InstructionAmount"
          },
          "state": {
            "$ref": "#/components/schemas/PayoutInstructionState"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          }
        },
        "required": [
          "amount",
          "payeeAccount",
          "state",
          "transactions"
        ]
      },
      "PayeeAccountResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/PayeeAccountType"
          }
        }
      },
      "PayoutInstructionState": {
        "oneOf": [
          {
            "const": "NOT_STARTED"
          },
          {
            "const": "TRANSACTION_SENT"
          },
          {
            "const": "COMPLETED"
          },
          {
            "const": "FAILED"
          },
          {
            "const": "TRANSLATION_ERROR"
          },
          {
            "const": "SKIPPED"
          }
        ],
        "description": "- NOT_STARTED - 開始を待機中 - TRANSACTION_SENT - 基礎となるトランザクションが送信されました - COMPLETED - 正常に完了しました - FAILED - 失敗しました - TRANSLATION_ERROR - 宛先の検索に失敗しました（基礎となるホワイトリストの外部ウォレットの変更などにより） - SKIPPED - この指示に対してトランザクションは作成されていません"
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "state": {
            "oneOf": [
              {
                "const": "SUBMITTED"
              },
              {
                "const": "QUEUED"
              },
              {
                "const": "PENDING_AUTHORIZATION"
              },
              {
                "const": "PENDING_SIGNATURE"
              },
              {
                "const": "BROADCASTING"
              },
              {
                "const": "PENDING_3RD_PARTY_MANUAL_APPROVAL"
              },
              {
                "const": "PENDING_3RD_PARTY"
              },
              {
                "const": "PENDING"
              },
              {
                "const": "CONFIRMING"
              },
              {
                "const": "CONFIRMED"
              },
              {
                "const": "COMPLETED"
              },
              {
                "const": "PARTIALLY_COMPLETED"
              },
              {
                "const": "PENDING_AML_SCREENING"
              },
              {
                "const": "CANCELLING"
              },
              {
                "const": "CANCELLED"
              },
              {
                "const": "REJECTED"
              },
              {
                "const": "BLOCKED"
              },
              {
                "const": "FAILED"
              },
              {
                "const": "TIMEOUT"
              }
            ]
          },
          "timestamp": {
            "type": "number",
            "format": "date-time"
          },
          "instructionId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "state"
        ]
      },
      "DispatchPayoutResponse": {
        "type": "object",
        "properties": {
          "payoutId": {
            "type": "string"
          }
        },
        "required": [
          "payoutId"
        ]
      },
      "TravelRuleAddress": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "example": "1234 Example St",
            "description": "住所"
          },
          "city": {
            "type": "string",
            "example": "New York",
            "description": "市"
          },
          "state": {
            "type": "string",
            "example": "NY",
            "description": "州または県"
          },
          "postalCode": {
            "type": "string",
            "example": "10001",
            "description": "郵便番号"
          }
        },
        "required": [
          "street",
          "city",
          "state",
          "postalCode"
        ]
      },
      "TravelRuleValidateTransactionRequest": {
        "type": "object",
        "properties": {
          "transactionAsset": {
            "type": "string",
            "example": "BTC",
            "description": "取引資産シンボル BTC、ETH)"
          },
          "destination": {
            "type": "string",
            "example": "bc1qxy2kgdygjrsqtzq2n0yrf1234p83kkfjhx0wlh",
            "description": "取引先アドレス"
          },
          "transactionAmount": {
            "type": "string",
            "example": "10",
            "description": "取引資産の取引金額"
          },
          "originatorVASPdid": {
            "type": "string",
            "example": "did:ethr:0x44957e75d6ce4a5bf37aae117da86422c848f7c2",
            "description": "これはVASPに割り当てられた識別子です"
          },
          "originatorEqualsBeneficiary": {
            "type": "boolean",
            "example": false,
            "description": "送金者と受取人が同一人物で、情報を収集する必要がない場合は「はい」。第三者送金の場合は「いいえ」。."
          },
          "travelRuleBehavior": {
            "type": "boolean",
            "example": true,
            "description": "これにより、取引が受益者VASPの管轄区域におけるTRAVEL_RULEであるかどうかも確認されます。"
          },
          "beneficiaryVASPdid": {
            "type": "string",
            "example": "did:ethr:0x46a7ed5813ce735387df2bfb245bd7722e0de992",
            "description": "これは資金が送られるVASPに割り当てられた識別子です"
          },
          "beneficiaryVASPname": {
            "type": "string",
            "example": "HelloCrypto",
            "description": "受益者VASP名"
          },
          "beneficiaryName": {
            "type": "string",
            "example": "John Doe",
            "description": "受取人名"
          },
          "beneficiaryAccountNumber": {
            "type": "string",
            "example": "1234-1234-1234-12234",
            "description": "受取人名"
          },
          "beneficiaryAddress": {
            "example": "{\"addressLine: [Wayne Manor, Gotham City, New York, USA]\"}",
            "description": "受取人名",
            "type": "object",
            "properties": {
              "street": {
                "type": "string",
                "example": "1234 Example St",
                "description": "住所"
              },
              "city": {
                "type": "string",
                "example": "New York",
                "description": "市"
              },
              "state": {
                "type": "string",
                "example": "NY",
                "description": "州または県"
              },
              "postalCode": {
                "type": "string",
                "example": "10001",
                "description": "郵便番号"
              }
            }
          }
        },
        "required": [
          "transactionAsset",
          "destination",
          "transactionAmount",
          "originatorVASPdid",
          "originatorEqualsBeneficiary",
          "travelRuleBehavior",
          "beneficiaryVASPdid",
          "beneficiaryVASPname",
          "beneficiaryName",
          "beneficiaryAccountNumber",
          "beneficiaryAddress"
        ]
      },
      "TravelRuleValidateTransactionResponse": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean",
            "description": "「isValid」は、旅行ルールデータ転送に必要なすべての情報を収集したかどうかを示します。このフィールドが「true」になると、フロントエンド情報をバックエンドに転送し、旅行ルールトランザクションの作成を実行する次のステップに進むことができます。",
            "example": true
          },
          "type": {
            "type": "string",
            "description": "「type」は、出金リクエストの仮想資産価値を法定通貨価値に変換した値が、管轄区域のしきい値を超えている（=TRAVELRULE）か、下回っている（=BELOW_THRESHOLD）かを示します。トラベルルール情報を送信する必要がなく、収集のみが必要な非ホスト型ウォレットの場合は、NON_CUSTODIALと表示されます。.",
            "example": "TRAVELRULE"
          },
          "beneficiaryAddressType": {
            "type": "string",
            "description": "「beneficiaryAddressType」は、ブロックチェーン分析プロバイダーまたは内部アドレス帳がウォレットアドレスを識別できたかどうかを示します。.",
            "example": "UNKNOWN"
          },
          "addressSource": {
            "type": "string",
            "description": "「addressSource」は、アドレスが内部アドレス帳で見つかったか、ブロックチェーン分析プロバイダーによって識別されたかを示します。.",
            "example": "UNKNOWN"
          },
          "beneficiaryVASPdid": {
            "type": "string",
            "description": "受益者VASPのVASP DID",
            "example": "did:ethr:0x46a7ed5813ce735387df2bfb245bd7722e0de992"
          },
          "beneficiaryVASPname": {
            "type": "string",
            "description": "「beneficiaryVASPname」は、ウォレットアドレスの所有者として識別されたVASPの名前を示します。この名前は、その後の呼び出しでDIDを取得するために使用されます。.",
            "example": "Fireblocks"
          },
          "warnings": {
            "description": "「エラー/警告」は、送信者から受取人に関するどのような情報を収集する必要があるかを示します。.",
            "example": [
              "optional-beneficiaryAccountNumber"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "isValid",
          "type",
          "beneficiaryAddressType",
          "addressSource",
          "beneficiaryVASPdid",
          "beneficiaryVASPname",
          "warnings"
        ]
      },
      "TravelRuleTransactionBlockchainInfo": {
        "type": "object",
        "properties": {
          "txHash": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          }
        },
        "required": [
          "txHash",
          "origin",
          "destination"
        ]
      },
      "TravelRulePiiIVMS": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "placeOfBirth": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "identificationNumber": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "countryOfResidence": {
            "type": "string"
          },
          "taxIdentificationNumber": {
            "type": "string"
          },
          "customerNumber": {
            "type": "string"
          }
        },
        "required": [
          "fullName",
          "dateOfBirth",
          "placeOfBirth",
          "address",
          "identificationNumber",
          "nationality",
          "countryOfResidence",
          "taxIdentificationNumber",
          "customerNumber"
        ]
      },
      "TravelRuleOwnershipProof": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "passport",
            "description": "所有権証明の種類"
          },
          "id": {
            "type": "string",
            "example": "123456789",
            "description": "識別番号"
          },
          "name": {
            "type": "string",
            "example": "Alice",
            "description": "所有者名"
          },
          "country": {
            "type": "string",
            "example": "US",
            "description": "発行国"
          },
          "issueDate": {
            "type": "string",
            "example": "2022-01-01",
            "description": "発行日"
          },
          "issuer": {
            "type": "string",
            "example": "US Government",
            "description": "発行機関名"
          }
        },
        "required": [
          "type",
          "id",
          "name",
          "country",
          "issueDate",
          "issuer"
        ]
      },
      "TravelRuleValidateFullTransactionRequest": {
        "type": "object",
        "properties": {
          "transactionAsset": {
            "type": "string",
            "description": "取引に関係する資産"
          },
          "transactionAmount": {
            "type": "string",
            "description": "取引金額"
          },
          "originatorDid": {
            "type": "string",
            "description": "取引発信者のDID"
          },
          "beneficiaryDid": {
            "type": "string",
            "description": "取引受益者のDID"
          },
          "originatorVASPdid": {
            "type": "string",
            "description": "取引発信者のVASP ID"
          },
          "beneficiaryVASPdid": {
            "type": "string",
            "description": "取引受益者のVASP ID"
          },
          "beneficiaryVASPname": {
            "type": "string",
            "description": "受益者となるVASPの名前"
          },
          "transactionBlockchainInfo": {
            "description": "ブロックチェーン取引に関する情報",
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string"
              },
              "origin": {
                "type": "string"
              },
              "destination": {
                "type": "string"
              }
            }
          },
          "originator": {
            "description": "取引の発信者に関する情報",
            "type": "object",
            "properties": {
              "fullName": {
                "type": "string"
              },
              "dateOfBirth": {
                "type": "string"
              },
              "placeOfBirth": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "identificationNumber": {
                "type": "string"
              },
              "nationality": {
                "type": "string"
              },
              "countryOfResidence": {
                "type": "string"
              },
              "taxIdentificationNumber": {
                "type": "string"
              },
              "customerNumber": {
                "type": "string"
              }
            }
          },
          "beneficiary": {
            "description": "取引の受益者に関する情報",
            "type": "object",
            "properties": {
              "fullName": {
                "type": "string"
              },
              "dateOfBirth": {
                "type": "string"
              },
              "placeOfBirth": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "identificationNumber": {
                "type": "string"
              },
              "nationality": {
                "type": "string"
              },
              "countryOfResidence": {
                "type": "string"
              },
              "taxIdentificationNumber": {
                "type": "string"
              },
              "customerNumber": {
                "type": "string"
              }
            }
          },
          "encrypted": {
            "type": "string",
            "description": "取引に関連する暗号化されたデータ"
          },
          "protocol": {
            "type": "string",
            "description": "トラベルルールを実行するために使用されるプロトコル"
          },
          "notificationEmail": {
            "type": "string",
            "description": "旅行ルールの完了時に通知を送信するメールアドレス"
          },
          "skipBeneficiaryDataValidation": {
            "type": "boolean",
            "description": "受益者データの検証をスキップするかどうか"
          },
          "travelRuleBehavior": {
            "type": "boolean",
            "description": "取引が受益者VASPの管轄区域内のTRAVEL_RULEであるかどうかを確認するかどうか"
          },
          "originatorProof": {
            "description": "取引の発信者に関連する所有権証明",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "passport",
                "description": "所有権証明の種類"
              },
              "id": {
                "type": "string",
                "example": "123456789",
                "description": "識別番号"
              },
              "name": {
                "type": "string",
                "example": "Alice",
                "description": "所有者名"
              },
              "country": {
                "type": "string",
                "example": "US",
                "description": "発行国"
              },
              "issueDate": {
                "type": "string",
                "example": "2022-01-01",
                "description": "発行日"
              },
              "issuer": {
                "type": "string",
                "example": "US Government",
                "description": "発行機関名"
              }
            }
          },
          "beneficiaryProof": {
            "description": "取引の受益者に関する所有権証明",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "passport",
                "description": "所有権証明の種類"
              },
              "id": {
                "type": "string",
                "example": "123456789",
                "description": "識別番号"
              },
              "name": {
                "type": "string",
                "example": "Alice",
                "description": "所有者名"
              },
              "country": {
                "type": "string",
                "example": "US",
                "description": "発行国"
              },
              "issueDate": {
                "type": "string",
                "example": "2022-01-01",
                "description": "発行日"
              },
              "issuer": {
                "type": "string",
                "example": "US Government",
                "description": "発行機関名"
              }
            }
          },
          "pii": {
            "description": "取引に関連する個人識別情報",
            "type": "object",
            "properties": {
              "fullName": {
                "type": "string"
              },
              "dateOfBirth": {
                "type": "string"
              },
              "placeOfBirth": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "identificationNumber": {
                "type": "string"
              },
              "nationality": {
                "type": "string"
              },
              "countryOfResidence": {
                "type": "string"
              },
              "taxIdentificationNumber": {
                "type": "string"
              },
              "customerNumber": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "transactionAsset",
          "transactionAmount",
          "originatorDid",
          "beneficiaryDid",
          "originatorVASPdid",
          "beneficiaryVASPdid",
          "beneficiaryVASPname",
          "transactionBlockchainInfo",
          "originator",
          "beneficiary",
          "encrypted",
          "protocol",
          "notificationEmail",
          "skipBeneficiaryDataValidation",
          "travelRuleBehavior",
          "originatorProof",
          "beneficiaryProof",
          "pii"
        ]
      },
      "TravelRuleIssuer": {
        "type": "object",
        "properties": {
          "issuerDid": {
            "type": "string"
          }
        },
        "required": [
          "issuerDid"
        ]
      },
      "TravelRuleIssuers": {
        "type": "object",
        "properties": {
          "yearFounded": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "isRegulated": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "regulatoryAuthorities": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "name": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "logo": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "website": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "legalName": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "legalStructure": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "incorporationCountry": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "businessNumber": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "addressLine1": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "city": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "country": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          },
          "description": {
            "$ref": "#/components/schemas/TravelRuleIssuer"
          }
        },
        "required": [
          "yearFounded",
          "isRegulated",
          "regulatoryAuthorities",
          "name",
          "logo",
          "website",
          "legalName",
          "legalStructure",
          "incorporationCountry",
          "businessNumber",
          "addressLine1",
          "city",
          "country",
          "description"
        ]
      },
      "TravelRuleVASP": {
        "type": "object",
        "properties": {
          "did": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "verificationStatus": {
            "type": "string"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "emailDomains": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "legalStructure": {
            "type": "string"
          },
          "legalName": {
            "type": "string"
          },
          "yearFounded": {
            "type": "string"
          },
          "incorporationCountry": {
            "type": "string"
          },
          "isRegulated": {
            "type": "string"
          },
          "otherNames": {
            "type": "string"
          },
          "identificationType": {
            "type": "string"
          },
          "identificationCountry": {
            "type": "string"
          },
          "businessNumber": {
            "type": "string"
          },
          "regulatoryAuthorities": {
            "type": "string"
          },
          "jurisdictions": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "certificates": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "travelRule_OPENVASP": {
            "type": "string"
          },
          "travelRule_SYGNA": {
            "type": "string"
          },
          "travelRule_TRISA": {
            "type": "string"
          },
          "travelRule_TRLIGHT": {
            "type": "string"
          },
          "travelRule_EMAIL": {
            "type": "string"
          },
          "travelRule_TRP": {
            "type": "string"
          },
          "travelRule_SHYFT": {
            "type": "string"
          },
          "travelRule_USTRAVELRULEWG": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "lastSentDate": {
            "type": "string"
          },
          "lastReceivedDate": {
            "type": "string"
          },
          "documents": {
            "type": "string"
          },
          "hasAdmin": {
            "type": "boolean"
          },
          "isNotifiable": {
            "type": "boolean"
          },
          "issuers": {
            "$ref": "#/components/schemas/TravelRuleIssuers"
          }
        },
        "required": [
          "did",
          "name",
          "verificationStatus",
          "addressLine1",
          "addressLine2",
          "city",
          "country",
          "emailDomains",
          "website",
          "logo",
          "legalStructure",
          "legalName",
          "yearFounded",
          "incorporationCountry",
          "isRegulated",
          "otherNames",
          "identificationType",
          "identificationCountry",
          "businessNumber",
          "regulatoryAuthorities",
          "jurisdictions",
          "street",
          "number",
          "unit",
          "postCode",
          "state",
          "certificates",
          "description",
          "travelRule_OPENVASP",
          "travelRule_SYGNA",
          "travelRule_TRISA",
          "travelRule_TRLIGHT",
          "travelRule_EMAIL",
          "travelRule_TRP",
          "travelRule_SHYFT",
          "travelRule_USTRAVELRULEWG",
          "createdAt",
          "createdBy",
          "updatedAt",
          "updatedBy",
          "lastSentDate",
          "lastReceivedDate",
          "documents",
          "hasAdmin",
          "isNotifiable",
          "issuers"
        ]
      },
      "TravelRuleGetAllVASPsResponse": {
        "type": "object",
        "properties": {
          "vasps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TravelRuleVASP"
            }
          }
        },
        "required": [
          "vasps"
        ]
      },
      "TravelRuleUpdateVASPDetails": {
        "type": "object",
        "properties": {
          "did": {
            "type": "string",
            "example": "did:ethr:0x44957e75d6ce4a5bf37aae117da86422c848f7c2",
            "description": "VASPの分散識別子"
          },
          "pii_didkey": {
            "type": "string",
            "example": "did:key:z6Mks5CZRaiooKYhq5TwtXQC1gWhwiZnmiKfFrMnYY62MhYf",
            "description": "VASPのPII DIDキー"
          }
        },
        "required": [
          "did",
          "pii_didkey"
        ]
      },
      "PolicySrcOrDestType": {
        "oneOf": [
          {
            "const": "EXCHANGE"
          },
          {
            "const": "UNMANAGED"
          },
          {
            "const": "VAULT"
          },
          {
            "const": "NETWORK_CONNECTION"
          },
          {
            "const": "COMPOUND"
          },
          {
            "const": "FIAT_ACCOUNT"
          },
          {
            "const": "ONE_TIME_ADDRESS"
          },
          {
            "const": "*"
          }
        ],
        "description": "* EXCHANGE - ワークスペースに接続されたサードパーティの取引所アカウント * UNMANAGED - Fireblocks ワークスペース外の管理されていないウォレット * VAULT - Fireblocks Vault 内のアカウント * NETWORK_CONNECTION - Fireblocks ネットワーク内の接続 * COMPOUND - (非推奨) Compound DeFI プロトコルを使用して取得された資産 * FIAT_ACCOUNT - ワークスペースに接続されたサードパーティの法定通貨アカウント * ONE_TIME_ADDRESS - Fireblocks ワークスペースからのホワイトリストに登録されていない資産 * &quot;*&quot; - すべてのタイプ"
      },
      "PolicySrcOrDestSubType": {
        "oneOf": [
          {
            "const": "EXTERNAL"
          },
          {
            "const": "INTERNAL"
          },
          {
            "const": "CONTRACT"
          },
          {
            "const": "EXCHANGETEST"
          },
          {
            "const": "*"
          }
        ],
        "description": "* EXTERNAL - 外部として割り当てられたホワイトリストウォレットは、通常、クライアントや取引相手が管理するアドレスに使用されます。 * INTERNAL - 内部として割り当てられたホワイトリストウォレットは、通常、Fireblocksワークスペースの外部で管理するアドレスに使用されます。 * CONTRACT - コントラクトとして割り当てられたホワイトリストウォレットは、外部スマートコントラクトを識別および管理するためのものです。 * EXCHANGETEST - テストネット資産のみで動作する取引所。 * &quot;*&quot; - すべてのサブタイプ"
      },
      "PolicySrcOrDestId": {
        "type": "string",
        "description": "アカウントIDを定義します。オプションは* &quot;*&quot; - すべてのアカウント * 特定のアカウントID"
      },
      "AmountAggregationTimePeriodMethod": {
        "oneOf": [
          {
            "const": "PER_SINGLE_MATCH"
          },
          {
            "const": "ACROSS_ALL_MATCHES"
          }
        ],
        "description": "* PER_SINGLE_MATCH - リストされた各エンティティに制限を適用します * ACROSS_ALL_MATCHES - リストされたすべてのエンティティの合計に制限を適用します"
      },
      "PolicyRule": {
        "type": "object",
        "description": "トランザクションに適用されるポリシールール",
        "properties": {
          "operator": {
            "type": "string",
            "description": "(非推奨 - 「演算子」に置き換えられました) | ルールが適用されるトランザクションの種類を開始できるユーザーを定義します。オプションは次のとおりです * 「*」 - すべてのユーザーが許可されます * 特定のユーザー ID",
            "deprecated": true
          },
          "operators": {
            "type": "object",
            "description": "ルールが適用されるトランザクションの種類を開始できるユーザー/グループを定義します.",
            "properties": {
              "wildcard": {
                "const": "*",
                "description": "使用する場合、このプロパティは唯一の子プロパティとして表示されます * &quot;*&quot; - すべてのユーザーが許可されます"
              },
              "users": {
                "type": "array",
                "description": "ユーザーIDのセット",
                "items": {
                  "type": "string"
                }
              },
              "usersGroups": {
                "type": "array",
                "description": "グループIDのセット",
                "items": {
                  "type": "string"
                }
              },
              "services": {
                "type": "array",
                "description": "トランザクションを開始するためのサービスのセット",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "transactionType": {
            "oneOf": [
              {
                "const": "TRANSFER"
              },
              {
                "const": "CONTRACT_CALL"
              },
              {
                "const": "APPROVE"
              },
              {
                "const": "MINT"
              },
              {
                "const": "BURN"
              },
              {
                "const": "SUPPLY"
              },
              {
                "const": "REDEEM"
              },
              {
                "const": "STAKE"
              },
              {
                "const": "RAW"
              },
              {
                "const": "TYPED_MESSAGE"
              }
            ],
            "description": "ルールが適用されるトランザクションのタイプを定義します。 * TRANSFER - デフォルト。あるアカウントから別のアカウントに資金を転送します。 * CONTRACT_CALL - 主に DeFi 操作のためにスマート コントラクトを呼び出します。 * APPROVE - スマート コントラクトが指定されたウォレットから引き出しできるようにします。 * MINT - サポートされているトークンに対してミント操作 (供給の増加) を実行します。 * BURN - サポートされているトークンに対してバーン操作 (供給の削減) を実行します。 * SUPPLY - DeFi で資産を貸し出すために使用します。 * REDEEM - DeFi で貸し出しを取り戻すために使用します。 * STAKE - ステーキング報酬を獲得するために特定の資産を割り当ててロックできるようにします。 * RAW - 事前定義された形式のないオフチェーン メッセージ。秘密鍵を使用して任意のメッセージに署名するために使用します。 * TYPED_MESSAGE - 事前定義された形式に従うオフチェーン メッセージ タイプ。実際のトランザクションではない特定のメッセージに署名するために使用されます。."
          },
          "designatedSigner": {
            "type": "string",
            "description": "(非推奨 - 「designatedSigners」に置き換えられました) 特定のルールに一致するトランザクションに署名するユーザーを表す ID",
            "deprecated": true
          },
          "designatedSigners": {
            "type": "object",
            "description": "特定のルールに一致するトランザクションに署名するユーザーを表す ID のセット",
            "properties": {
              "users": {
                "type": "array",
                "description": "ユーザーIDのセット",
                "items": {
                  "type": "string"
                }
              },
              "usersGroups": {
                "type": "array",
                "description": "グループIDのセット",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "type": {
            "const": "TRANSFER",
            "description": "ポリシールールの種類"
          },
          "action": {
            "oneOf": [
              {
                "const": "ALLOW"
              },
              {
                "const": "BLOCK"
              },
              {
                "const": "2-TIER"
              }
            ],
            "description": "トランザクションがルールの基準を満たした場合に何が起こるかを定義します * ALLOW - トランザクションは通過し、追加の承認を必要とせずに署名できます * BLOCK - トランザクションは自動的にブロックされます * 2-TIER - これらのユーザーまたはユーザーグループのみが承認できます 必要な承認しきい値が満たされる前にそれらのいずれかがトランザクションを拒否した場合、トランザクションは通過しません 設定されるエンティティのリストは「authorizationGroups」フィールドです"
          },
          "asset": {
            "type": "string",
            "description": "取引される資産の種類を定義します。オプションは * &quot;*&quot; - すべての資産 * 特定の資産"
          },
          "srcType": {
            "description": "(非推奨 - 「src」に置き換えられました) ソース アカウント タイプ"
          },
          "srcSubType": {
            "description": "(非推奨 - 「src」に置き換えられました) ソースサブアカウントタイプ"
          },
          "srcId": {
            "description": "(非推奨 - 「src」に置き換えられました) ソース アカウント ID"
          },
          "src": {
            "type": "object",
            "description": "ルールが転送元を許可するソースアカウントを定義します",
            "properties": {
              "ids": {
                "type": "array",
                "description": "IDのセット",
                "items": {
                  "type": "array",
                  "description": "タプル形式のIDのセット",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PolicySrcOrDestId"
                      },
                      {
                        "$ref": "#/components/schemas/PolicySrcOrDestType"
                      },
                      {
                        "$ref": "#/components/schemas/PolicySrcOrDestSubType"
                      }
                    ]
                  },
                  "minItems": 1,
                  "maxItems": 3
                }
              }
            }
          },
          "dstType": {
            "description": "(非推奨 - 「dst」に置き換えられました) 送信先アカウントの種類"
          },
          "dstSubType": {
            "description": "(非推奨 - 「dst」に置き換えられました) 送信先サブアカウント タイプ"
          },
          "dstId": {
            "description": "(非推奨 - 「dst」に置き換えられました) 宛先アカウント ID"
          },
          "dst": {
            "type": "object",
            "description": "ルールが転送を許可する宛先口座を定義します",
            "properties": {
              "ids": {
                "type": "array",
                "description": "IDのセット",
                "items": {
                  "type": "array",
                  "description": "タプル形式のIDのセット",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PolicySrcOrDestId"
                      },
                      {
                        "$ref": "#/components/schemas/PolicySrcOrDestType"
                      },
                      {
                        "$ref": "#/components/schemas/PolicySrcOrDestSubType"
                      }
                    ]
                  },
                  "minItems": 1,
                  "maxItems": 3
                }
              }
            }
          },
          "dstAddressType": {
            "oneOf": [
              {
                "const": "WHITELISTED"
              },
              {
                "const": "ONE_TIME"
              },
              {
                "const": "*"
              }
            ],
            "description": "資金の送金先がホワイトリストに登録されている必要があるか、ホワイトリストに登録されていない外部アドレスへの 1 回限りの送金を許可するか、またはその両方かを定義します。デフォルトでは、ホワイトリストに登録された外部アドレスにのみ送金できます。 * WHITELISTED - ホワイトリストに登録されたアドレスにのみ送信できます。 * ONE_TIME - ホワイトリストに登録されていない外部アドレスにのみ送信できます。 * &quot;*&quot; - ホワイトリストに登録されたアドレスまたはホワイトリストに登録されていない外部アドレスに送信できます。"
          },
          "amountCurrency": {
            "oneOf": [
              {
                "const": "USD"
              },
              {
                "const": "EUR"
              },
              {
                "const": "NATIVE"
              }
            ],
            "description": "* USD - ユーザーが転送できる資産の量を、資産の USD 相当額に基づいて制限します。 * EUR - ユーザーが転送できる資産の量を、資産の EUR 相当額に基づいて制限します。 * NATIVE - 特定の資産を使用するときにユーザーが転送できる資産の量を制限します。."
          },
          "amountScope": {
            "oneOf": [
              {
                "const": "SINGLE_TX"
              },
              {
                "const": "TIMEFRAME"
              }
            ],
            "description": "* SINGLE_TX - 制限は単一のトランザクションに適用されます * TIMEFRAME - 制限は定義された期間内のすべてのトランザクションに適用されます"
          },
          "amount": {
            "type": "number",
            "description": "ルールを適用するために取引が超過する必要がある値を定義します（amountCurrency フィールドに従って）"
          },
          "periodSec": {
            "type": "number",
            "description": "amountScope フィールドによって、ルールに一致するトランザクションの転送額を累積するために適用される秒単位の時間。合計が Minimum で指定した値を超えるまで累積されます。指定した金額がその期間内に 1 回のトランザクションまたは複数のトランザクションによって達した場合、その期間内のそれ以降のトランザクションは失敗するか、追加の承認が必要になります。."
          },
          "authorizers": {
            "type": "array",
            "description": "(非推奨 - 「authorizationGroups」に置き換えられました) トランザクションを承認できる許可されたエンティティ",
            "deprecated": true,
            "items": {
              "type": "string"
            }
          },
          "authorizersCount": {
            "type": "number",
            "description": "(非推奨 - 「authorizationGroups」に置き換えられました) トランザクションを承認するために必要なエンティティの最小数",
            "deprecated": true
          },
          "authorizationGroups": {
            "type": "object",
            "description": "取引承認条件を定義する",
            "properties": {
              "logic": {
                "oneOf": [
                  {
                    "const": "AND"
                  },
                  {
                    "const": "OR"
                  }
                ],
                "description": "* AND - すべての承認グループの承認が必要 * OR - 少なくとも 1 つの承認グループの承認が必要"
              },
              "allowOperatorAsAuthorizer": {
                "type": "boolean",
                "description": "トランザクションを開始したユーザーが自分のトランザクションを承認し、そのトランザクションの承認しきい値にカウントできるかどうかを定義します。"
              },
              "groups": {
                "type": "array",
                "description": "取引を承認できるエンティティのグループ",
                "items": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "description": "ユーザーID",
                      "items": {
                        "type": "string"
                      }
                    },
                    "usersGroups": {
                      "type": "array",
                      "description": "グループID",
                      "items": {
                        "type": "string"
                      }
                    },
                    "th": {
                      "type": "number",
                      "description": "トランザクションを承認するために必要なエンティティの最小数を表します。デフォルトは 1 です。."
                    }
                  }
                }
              }
            }
          },
          "amountAggregation": {
            "type": "object",
            "description": "ポリシー エンジンが累積を計算する方法を定義します。イニシエータ、ソース、および宛先を使用して、期間の期間の最小値に対する累積を計算します。.",
            "properties": {
              "operators": {
                "$ref": "#/components/schemas/AmountAggregationTimePeriodMethod"
              },
              "srcTransferPeers": {
                "$ref": "#/components/schemas/AmountAggregationTimePeriodMethod"
              },
              "dstTransferPeers": {
                "$ref": "#/components/schemas/AmountAggregationTimePeriodMethod"
              }
            }
          },
          "rawMessageSigning": {
            "type": "object",
            "description": "生のメッセージ署名設定",
            "properties": {
              "algorithm": {
                "type": "string"
              },
              "derivationPath": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "applyForApprove": {
            "type": "boolean",
            "description": "このルールを APPROVE タイプのトランザクションに適用します (ルールのトランザクション タイプが TRANSFER の場合にのみ有効にできます)"
          },
          "applyForTypedMessage": {
            "type": "boolean",
            "description": "このルールを TYPED_MESSAGE タイプのトランザクションに適用します (ルールのトランザクション タイプが CONTRACT_CALL の場合にのみ有効にできます)"
          },
          "externalDescriptor": {
            "type": "string",
            "description": "ルールを識別する一意のID"
          }
        },
        "required": [
          "type",
          "action",
          "asset",
          "amountCurrency",
          "amountScope",
          "amount",
          "periodSec",
          "externalDescriptor"
        ]
      },
      "PublishResult": {
        "type": "object",
        "description": "公開ポリシー操作の応答オブジェクト",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/PolicyStatus"
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyRule"
            }
          },
          "checkResult": {
            "$ref": "#/components/schemas/PolicyCheckResult"
          },
          "metadata": {
            "$ref": "#/components/schemas/PolicyMetadata"
          }
        },
        "required": [
          "status",
          "rules",
          "checkResult",
          "metadata"
        ]
      },
      "PolicyStatus": {
        "oneOf": [
          {
            "const": "SUCCESS"
          },
          {
            "const": "UNVALIDATED"
          },
          {
            "const": "INVALID_CONFIGURATION"
          },
          {
            "const": "PENDING"
          },
          {
            "const": "PENDING_CONSOLE_APPROVAL"
          },
          {
            "const": "AWAITING_QUORUM"
          },
          {
            "const": "UNHANDLED_ERROR"
          }
        ],
        "description": "* SUCCESS - 成功 * UNVALIDATED - まだ検証されていません * INVALID_CONFIGURATION - 少なくとも 1 つのルールが無効です * PENDING - 承認待ち * PENDING_CONSOLE_APPROVAL - コンソール アプリからの承認待ち * AWAITING_QUORUM - クォーラム承認待ち * UNHANDLED_ERROR - 未処理のエラー"
      },
      "PolicyMetadata": {
        "type": "object",
        "description": "ポリシー関連のメタデータ",
        "properties": {
          "editedBy": {
            "type": "string",
            "description": "ポリシーを最後に編集したユーザーのユーザーID"
          },
          "editedAt": {
            "type": "string",
            "description": "ポリシーの最終編集のタイムスタンプ"
          },
          "publishedBy": {
            "type": "string",
            "description": "最後にポリシーを公開したユーザーのユーザーID"
          },
          "publishedAt": {
            "type": "string",
            "description": "ポリシーの最終公開のタイムスタンプ"
          }
        }
      },
      "PolicyCheckResult": {
        "type": "object",
        "description": "ポリシールールの検証結果",
        "properties": {
          "errors": {
            "type": "number",
            "description": "エラー数"
          },
          "result": {
            "type": "array",
            "description": "検証結果のセット",
            "items": {
              "$ref": "#/components/schemas/PolicyRuleCheckResult"
            }
          }
        },
        "required": [
          "errors",
          "result"
        ]
      },
      "PolicyRuleCheckResult": {
        "type": "object",
        "description": "ルール検証結果",
        "properties": {
          "index": {
            "type": "number",
            "description": "ポリシー内のルールインデックス番号"
          },
          "status": {
            "oneOf": [
              {
                "const": "ok"
              },
              {
                "const": "failure"
              }
            ],
            "description": "検証ステータス"
          },
          "errors": {
            "type": "array",
            "description": "ルール検証エラーオブジェクトのセット",
            "items": {
              "$ref": "#/components/schemas/PolicyRuleError"
            }
          }
        },
        "required": [
          "index",
          "status",
          "errors"
        ]
      },
      "PolicyRuleError": {
        "type": "object",
        "description": "ルール検証結果エラー",
        "properties": {
          "errorMessage": {
            "type": "string",
            "description": "エラーメッセージ"
          },
          "errorCode": {
            "type": "number",
            "description": "エラーコード"
          },
          "errorCodeName": {
            "type": "string",
            "description": "エラーコード名"
          },
          "errorField": {
            "oneOf": [
              {
                "const": "operator"
              },
              {
                "const": "operators"
              },
              {
                "const": "authorizationGroups"
              },
              {
                "const": "designatedSigner"
              },
              {
                "const": "designatedSigners"
              },
              {
                "const": "contractMethods"
              },
              {
                "const": "amountAggregation"
              },
              {
                "const": "src"
              },
              {
                "const": "dst"
              }
            ],
            "description": "エラーが関係するフィールド * operator - トランザクション イニシエーター * operators - トランザクション イニシエーター * authorizationGroups - トランザクション 承認者グループ * designatedSigner - トランザクション署名者 * designatedSigners - トランザクション署名者 * contractMethods - 契約方法 * amountAggregation - トランザクション金額集計設定 * src - トランザクション ソース資産設定 * dst - トランザクション デスティネーション資産設定"
          }
        },
        "required": [
          "errorMessage",
          "errorCode",
          "errorCodeName",
          "errorField"
        ]
      },
      "DraftReviewAndValidationResponse": {
        "type": "object",
        "description": "ドラフト検証",
        "properties": {
          "draftResponse": {
            "$ref": "#/components/schemas/DraftResponse"
          },
          "validation": {
            "$ref": "#/components/schemas/PolicyValidation"
          }
        },
        "required": [
          "draftResponse",
          "validation"
        ]
      },
      "PolicyAndValidationResponse": {
        "type": "object",
        "description": "ポリシーの検証",
        "properties": {
          "policy": {
            "$ref": "#/components/schemas/PolicyResponse"
          },
          "validation": {
            "$ref": "#/components/schemas/PolicyValidation"
          }
        },
        "required": [
          "policy",
          "validation"
        ]
      },
      "DraftResponse": {
        "type": "object",
        "description": "ドラフト操作のレスポンスオブジェクト",
        "properties": {
          "status": {
            "type": "string",
            "description": "操作状況"
          },
          "rules": {
            "type": "array",
            "description": "ドラフトルール",
            "items": {
              "$ref": "#/components/schemas/PolicyRule"
            }
          },
          "draftId": {
            "type": "string",
            "description": "ドラフトの固有ID"
          },
          "metadata": {
            "$ref": "#/components/schemas/PolicyMetadata"
          }
        },
        "required": [
          "draftId",
          "status",
          "rules",
          "metadata"
        ]
      },
      "PolicyResponse": {
        "type": "object",
        "description": "ポリシー操作の応答オブジェクト",
        "properties": {
          "rules": {
            "type": "array",
            "description": "一連のポリシールール",
            "items": {
              "$ref": "#/components/schemas/PolicyRule"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/PolicyMetadata"
          }
        },
        "required": [
          "rules",
          "metadata"
        ]
      },
      "PolicyValidation": {
        "type": "object",
        "description": "ポリシー検証オブジェクト",
        "properties": {
          "status": {
            "type": "string",
            "description": "検証ステータス"
          },
          "checkResult": {
            "$ref": "#/components/schemas/PolicyCheckResult"
          }
        },
        "required": [
          "status",
          "checkResult"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "type": {
                "oneOf": [
                  {
                    "const": "INTERNAL"
                  },
                  {
                    "const": "AUTHENTICATION"
                  },
                  {
                    "const": "AUTHORIZATION"
                  },
                  {
                    "const": "VALIDATION"
                  },
                  {
                    "const": "NOT_FOUND"
                  },
                  {
                    "const": "UNPROCESSABLE_ENTITY"
                  },
                  {
                    "const": "FORBIDDEN"
                  }
                ]
              },
              "message": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "message"
            ]
          }
        },
        "required": [
          "error"
        ]
      }
    },
    "securitySchemes": {
      "bearerTokenAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  },
  "x-samchon-emended": true
}